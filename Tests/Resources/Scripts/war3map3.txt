globals
//globals from FearSystem:
constant boolean LIBRARY_FearSystem=true
        //There will be check every FPS second.
constant real FearSystem__FPS= 0.031250000
        //Feared units will change direction every EACH_CHANGE FPS.
constant integer FearSystem__EACH_CHANGE= 8
        //Feared units will go maximum in a circle of 150 around them each time they change direction.
constant real FearSystem__AROUND= 300.
        //The rawcode of the attack disable. Be sure it is the same in the Object Editor.
constant integer FearSystem__DISABLE_ATTACK= 'A0CF'
        //The rawcode of the morph. Be sure it is the same in the Object Editor.
constant integer FearSystem__MORPH_ID= 'AEme'
        //The rawcode of the bear form. Be sure it is the same in the Object Editor.
constant integer FearSystem__BEAR_ID= 'Abrf'
hashtable FearSystem__ht= InitHashtable()
//endglobals from FearSystem
//globals from II:
constant boolean LIBRARY_II=true
trigger II__t= CreateTrigger()
integer II__C= 0
timer II__l= CreateTimer()
//endglobals from II
//globals from IsTerrainWalkable:
constant boolean LIBRARY_IsTerrainWalkable=true
	
        // this value is how far from a point the item may end up for the point to be considered pathable
constant real IsTerrainWalkable__MAX_RANGE=10.
		
        // the following two variables are set to the position of the item after each pathing check
        // that way, if a point isn't pathable, these will be the coordinates of the nearest point that is
real IsTerrainWalkable_X=0.
real IsTerrainWalkable_Y=0.
rect IsTerrainWalkable__r
item IsTerrainWalkable__check
item array IsTerrainWalkable__hidden
integer IsTerrainWalkable__hiddenMax=0
//endglobals from IsTerrainWalkable
//globals from ItemSet:
constant boolean LIBRARY_ItemSet=true
       
        
constant integer ITEM_SET_BONUS_TYPE_ABILITY=5
constant integer ITEM_SET_BONUS_TYPE_ITEM_POWER=7
constant integer ITEM_SET_BONUS_TYPE_BONUS=9
       
        
constant boolean ItemSet__ADD_SPECIAL_EFFECT_TARGET= true

//endglobals from ItemSet
//globals from LineSegmentEnumeration:
constant boolean LIBRARY_LineSegmentEnumeration=true
//endglobals from LineSegmentEnumeration
//globals from NewBonus:
constant boolean LIBRARY_NewBonus=true
        //The bonus types
constant integer BONUS_DAMAGE= 1
constant integer BONUS_ARMOR= 2
constant integer BONUS_AGILITY= 3
constant integer BONUS_STRENGTH= 4
constant integer BONUS_INTELLIGENCE= 5
constant integer BONUS_HEALTH= 6
constant integer BONUS_MANA= 7
constant integer BONUS_MOVEMENT_SPEED= 8
constant integer BONUS_SIGHT_RANGE= 9
constant integer BONUS_HEALTH_REGEN= 10
constant integer BONUS_MANA_REGEN= 11
constant integer BONUS_ATTACK_SPEED= 12
constant integer BONUS_MAGIC_RESISTANCE= 13
constant integer BONUS_EVASION_CHANCE= 14
constant integer BONUS_CRITICAL_CHANCE= 15
constant integer BONUS_CRITICAL_DAMAGE= 16
constant integer BONUS_LIFE_STEAL= 17
    
        //The abilities codes for each bonus
        //When pasting the abilities over to your map
        //their raw code should match the bonus here
constant integer NewBonus__DAMAGE_ABILITY= 'Z001'
constant integer NewBonus__ARMOR_ABILITY= 'Z002'
constant integer NewBonus__STATS_ABILITY= 'Z003'
constant integer NewBonus__HEALTH_ABILITY= 'Z004'
constant integer NewBonus__MANA_ABILITY= 'Z005'
constant integer NewBonus__HEALTHREGEN_ABILITY= 'Z006'
constant integer NewBonus__MANAREGEN_ABILITY= 'Z007'
constant integer NewBonus__ATTACKSPEED_ABILITY= 'Z008'
constant integer NewBonus__MOVEMENTSPEED_ABILITY= 'Z009'
constant integer NewBonus__SIGHT_RANGE_ABILITY= 'Z00A'
constant integer NewBonus__MAGIC_RESISTANCE_ABILITY= 'Z00B'
constant integer NewBonus__CRITICAL_STRIKE_ABILITY= 'Z00C'
constant integer NewBonus__EVASION_ABILITY= 'Z00D'
constant integer NewBonus__LIFE_STEAL_ABILITY= 'Z00E'
    
        //The abilities fields that are modified. For the sake of readability
constant abilityintegerlevelfield NewBonus__DAMAGE_FIELD= ABILITY_ILF_ATTACK_BONUS
constant abilityintegerlevelfield NewBonus__ARMOR_FIELD= ABILITY_ILF_DEFENSE_BONUS_IDEF
constant abilityintegerlevelfield NewBonus__AGILITY_FIELD= ABILITY_ILF_AGILITY_BONUS
constant abilityintegerlevelfield NewBonus__STRENGTH_FIELD= ABILITY_ILF_STRENGTH_BONUS_ISTR
constant abilityintegerlevelfield NewBonus__INTELLIGENCE_FIELD= ABILITY_ILF_INTELLIGENCE_BONUS
constant abilityintegerlevelfield NewBonus__HEALTH_FIELD= ABILITY_ILF_MAX_LIFE_GAINED
constant abilityintegerlevelfield NewBonus__MANA_FIELD= ABILITY_ILF_MAX_MANA_GAINED
constant abilityintegerlevelfield NewBonus__MOVEMENTSPEED_FIELD= ABILITY_ILF_MOVEMENT_SPEED_BONUS
constant abilityintegerlevelfield NewBonus__SIGHT_RANGE_FIELD= ABILITY_ILF_SIGHT_RANGE_BONUS
constant abilityreallevelfield NewBonus__HEALTHREGEN_FIELD= ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED
constant abilityreallevelfield NewBonus__MANAREGEN_FIELD= ABILITY_RLF_AMOUNT_REGENERATED
constant abilityreallevelfield NewBonus__ATTACKSPEED_FIELD= ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1
constant abilityreallevelfield NewBonus__MAGIC_RESISTANCE_FIELD= ABILITY_RLF_DAMAGE_REDUCTION_ISR2
constant abilityreallevelfield NewBonus__CRITICAL_CHANCE_FIELD= ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE
constant abilityreallevelfield NewBonus__CRITICAL_DAMAGE_FIELD= ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2
constant abilityreallevelfield NewBonus__EVASION_FIELD= ABILITY_RLF_CHANCE_TO_EVADE_EEV1
constant abilityreallevelfield NewBonus__LIFE_STEAL_FIELD= ABILITY_RLF_LIFE_STOLEN_PER_ATTACK
//endglobals from NewBonus
//globals from Rects:
constant boolean LIBRARY_Rects=true
//endglobals from Rects
//globals from RegisterPlayerUnitEvent:
constant boolean LIBRARY_RegisterPlayerUnitEvent=true
trigger array RegisterPlayerUnitEvent__t
//endglobals from RegisterPlayerUnitEvent
//globals from SetPathing:
constant boolean LIBRARY_SetPathing=true
trigger SetPathing_AggroTrigger
group PATHING_GROUP= CreateGroup()
        //private triggercondition AggroTriggerCondition
group SetPathing__swap=CreateGroup()
group SetPathing__temp
//endglobals from SetPathing
//globals from TimedLightnings:
constant boolean LIBRARY_TimedLightnings=true
constant real TimedLightnings__TO= 0.03125000
        
integer TimedLightnings__CT= 0
timer TimedLightnings__TMR= CreateTimer()
location TimedLightnings__loc= Location(0, 0)
//endglobals from TimedLightnings
//globals from TimerUtils:
constant boolean LIBRARY_TimerUtils=true
        //How to tweak timer utils:
        // USE_HASH_TABLE = true  (new blue)
        //  * SAFEST
        //  * SLOWEST (though hash tables are kind of fast)
        //
        // USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = true  (orange)
        //  * kinda safe (except there is a limit in the number of timers)
        //  * ALMOST FAST
        //
        // USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = false (red)
        //  * THE FASTEST (though is only  faster than the previous method
        //                  after using the optimizer on the map)
        //  * THE LEAST SAFE ( you may have to tweak OFSSET manually for it to
        //                     work)
        //
constant boolean TimerUtils___USE_HASH_TABLE= true
constant boolean TimerUtils___USE_FLEXIBLE_OFFSET= false

constant integer TimerUtils___OFFSET= 0x100000
integer TimerUtils___VOFFSET= TimerUtils___OFFSET
              
        //Timers to preload at map init:
constant integer TimerUtils___QUANTITY= 2048
        
        //Changing this  to something big will allow you to keep recycling
        // timers even when there are already AN INCREDIBLE AMOUNT of timers in
        // the stack. But it will make things far slower so that's probably a bad idea...
constant integer TimerUtils___ARRAY_SIZE= 8190

// processed:         integer array TimerUtils___data[TimerUtils___ARRAY_SIZE]
hashtable TimerUtils___ht
// processed:         timer array TimerUtils___tT[TimerUtils___ARRAY_SIZE]
integer TimerUtils___tN= 0
constant integer TimerUtils___HELD=0x28829022
        //use a totally random number here, the more improbable someone uses it, the better.
        
boolean TimerUtils___didinit= false
//endglobals from TimerUtils
//globals from Z:
constant boolean LIBRARY_Z=true
location Z__l= Location(0.00, 0.00)
//endglobals from Z
//globals from FearStacks:
constant boolean LIBRARY_FearStacks=true
integer array FearCounter
integer array FearCountExtra
integer array FearStacking
constant integer Schadenfreude_BUFF_ID= 'A0CJ'
constant integer Schadenfreude_UNIT_ID= 'U004'
constant string Schadenfreude_EFFECT= "war3mapImported\\Grin Curse.mdx"
constant string Schadenfreude_ATTACH= "chest"
//endglobals from FearStacks
//globals from Income:
constant boolean LIBRARY_Income=true
timerdialog IncomeDialog
//endglobals from Income
//globals from NewBonusUtils:
constant boolean LIBRARY_NewBonusUtils=true
//endglobals from NewBonusUtils
//globals from ProgressBars:
constant boolean LIBRARY_ProgressBars=true
constant integer ProgressBars__PROGRESS_BAR_DUMMY= 'e00B'
constant player ProgressBars__PROGRESS_BAR_OWNER= Player(PLAYER_NEUTRAL_PASSIVE)
constant real ProgressBars__UPDATE_POSITION_PERIOD= 0.03
//endglobals from ProgressBars
//globals from ShopSystem:
constant boolean LIBRARY_ShopSystem=true
hashtable ShopSystem__ShopTable= InitHashtable()
hashtable ShopSystem__WhichShop= InitHashtable()
hashtable ShopSystem__MainShop= InitHashtable()
unit array ShopSystem__DummyShop
boolean array ShopSystem__CanShop
        // The next constant is required in order to avoid conflict when more than one player 
        // is buying from the same shop
constant integer ShopSystem__DUMMY_SHOP_ID= 'n01G'
hashtable ShopSystem__ItemHash= InitHashtable()
//endglobals from ShopSystem
//globals from SpellEffectEvent:
constant boolean LIBRARY_SpellEffectEvent=true
//endglobals from SpellEffectEvent
//globals from SpiderPoison:
constant boolean LIBRARY_SpiderPoison=true
//endglobals from SpiderPoison
//globals from Roflcopter:
constant boolean LIBRARY_Roflcopter=true
constant integer Roflcopter__SPELL_RAW= 'A000'
constant string Roflcopter__EXPLOSION_EFFECT= "Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl"
constant real Roflcopter__HEIGHT= 350.0
constant real Roflcopter__SPIN_PERIOD= 0.16
constant attacktype Roflcopter__ATTACK_TYPE= ATTACK_TYPE_CHAOS
constant damagetype Roflcopter__DAMAGE_TYPE= DAMAGE_TYPE_UNIVERSAL
constant weapontype Roflcopter__WEAPON_TYPE= WEAPON_TYPE_WHOKNOWS
constant string Roflcopter__R1= "                          ___\n                       /       /`\n                    /\t/  . . -_\\\n                 ,( ( : '      /`\n                    \\\\' '. _\\                     __\n     __/\t/          \\\\      /`    _____/ / --\n   --o  -----_^/\t/        \\^^     ---'\n`----^---- ' ( ._____(  /--\n                      \\\\_,____\\ \\/__,\n                        \\^/         \\-^-/"
constant string Roflcopter__R2= "                                                    __\n     __/\t/                        _____/ /--\n   --o  -----_^^^^^^^^^^  ---'\n`----^----'  ( \\ \\         /( /--\n                     \\/\t/ _\\,_\\\\/__,\n                     /\t/,'  /     \\-^-/\n                   `(( : ,    _ \\,\n                     \\\\  ' '     /\n                        \\___\\\n"
constant string Roflcopter__R3= "                             ___\n                           '\\       \\\n                           /_-. .  \\\\\n                           '\\     '   : )).\n        __                  /_ .''/\t/\n             \\ \\_____ '\\   /\t/         \\\\__\n             `---  ^^/       \\\\^_-----   o--\n                    --\\ )_____. )`----^----'\n                ,__\\/\t/____,_/\t/\n                \\-^-/             \\^/"
constant string Roflcopter__R4= "__\n   --\\\\_____                         \\\\__\n       `---        ^^^^^^^^^^_-----  o--\n                        --\\ )\\   /\t/ (`----^----'\n                  ,__\\/\t/_,_ \\\\/\n                 \\-^-/     \\  `,\\\\\n                         ,/_    , : ))'\n                          \\    ' '  /\t/\n                          /___/\n                        '"
constant real Roflcopter__DEVIATION= 100.0
//endglobals from Roflcopter
//globals from Sample:
constant boolean LIBRARY_Sample=true
//endglobals from Sample
    // Generated
trigger gg_trg_II= null
trigger gg_trg_Z= null
trigger gg_trg_Roflcopter= null
trigger gg_trg_Chaos_Magic= null
trigger gg_trg_Chaos_Rift= null
trigger gg_trg_MapMetaData= null
trigger gg_trg_LineAimer= null
trigger gg_trg_LineAimer_Register= null
trigger gg_trg_UnitEventsEx= null
trigger gg_trg_onUnitEventsEx= null
trigger gg_trg_UnitInRect= null
trigger gg_trg_FearSystem= null
trigger gg_trg_MouseUtils= null
trigger gg_trg_Actually_Working_MouseUtils= null
trigger gg_trg_ProgressBars_v2_1= null
trigger gg_trg_TimedLightning= null
trigger gg_trg_RegisterNativeEvent= null
trigger gg_trg_RegisterUnitEvent= null
trigger gg_trg_RegisterPlayerUnitEvent= null
trigger gg_trg_RegisterPlayerUnitEvent_Copy= null
trigger gg_trg_SpellEffectEvent= null
trigger gg_trg_Init_Some_Stuff= null
trigger gg_trg_Is_Terrain_Walkable= null
trigger gg_trg_NewBonus= null
trigger gg_trg_NewBonusUtils= null
trigger gg_trg_LSE_vJASS= null
trigger gg_trg_Item_Set= null
trigger gg_trg_Restored_Triggers= null
trigger gg_trg_TimerUtils= null
trigger gg_trg_Archdruid_Preload= null
trigger gg_trg_Autopool_Off= null
trigger gg_trg_Autopool= null
trigger gg_trg_TerrainPathability= null
trigger gg_trg_Untitled_Trigger_001= null
trigger gg_trg_Well_Of_Sorrow= null
trigger gg_trg_HurlBoulder= null
trigger gg_trg_Pred_Ulti_Cleave_Checker= null
trigger gg_trg_Old_Decay= null
trigger gg_trg_IsUnitInGroup= null
trigger gg_trg_Test_Trigger= null
trigger gg_trg_SecretCodeLadyVashj= null
trigger gg_trg_Rat_Ranger= null
trigger gg_trg_Army_Ranger= null
trigger gg_trg_Useless_Ranger= null
trigger gg_trg_Rat_Thief= null
trigger gg_trg_Nzoth_Citadel_Copy= null
trigger gg_trg_ChomoAM= null
trigger gg_trg_QueenTyrael= null
trigger gg_trg_GrakeTank= null
trigger gg_trg_Custom_Skin_Illusions= null
trigger gg_trg_SecretCodeFallenOneDrop= null
trigger gg_trg_SecretCodeFallenOne= null
trigger gg_trg_SecretCodeLadyVashjDrop= null
trigger gg_trg_Ratty_Rage= null
trigger gg_trg_CustomFallenOne= null
trigger gg_trg_CustomBard= null
trigger gg_trg_CustomSkaar= null
trigger gg_trg_Mecha_Spikes= null
trigger gg_trg_Useless_Skaar= null
trigger gg_trg_Eye_of_the_Rat= null
trigger gg_trg_Tank_Grake_Learn= null
trigger gg_trg_Unit_Cleanup= null
trigger gg_trg_Flag_Leaver= null
trigger gg_trg_Protect_Items= null
trigger gg_trg_Display_Index= null
trigger gg_trg_Fountain_Guardians= null
trigger gg_trg_Hero_Dummies= null
trigger gg_trg_Death_Zone= null
trigger gg_trg_Starting_Income= null
trigger gg_trg_Income= null
trigger gg_trg_Autopool_Waffle= null
trigger gg_trg_Pick_Aether_Construct= null
trigger gg_trg_Pick_Firelord= null
trigger gg_trg_Pick_Tritus= null
trigger gg_trg_Pick_Moloch= null
trigger gg_trg_Summon_Courier= null
trigger gg_trg_UnitCleanup= null
trigger gg_trg_Corruption= null
trigger gg_trg_Shopsystem= null
trigger gg_trg_ExampleTrigger= null
trigger gg_trg_Evasion_Mastery= null
trigger gg_trg_Combat_MasteryEvasion= null
trigger gg_trg_Glythides= null
trigger gg_trg_Charge= null
trigger gg_trg_Triple_Strike= null
trigger gg_trg_Nuclear_Option= null
trigger gg_trg_Spider_Poison= null
trigger gg_trg_Creep_Evasion_80= null
trigger gg_trg_Creep_Evasion_15= null
trigger gg_trg_Curse_Miss= null
trigger gg_trg_Always_Berserk= null
trigger gg_trg_SetPathing= null
trigger gg_trg_Leap= null
trigger gg_trg_Always_Leap= null
trigger gg_trg_Always_Leap_DD= null
trigger gg_trg_Rain_of_Fire= null
trigger gg_trg_TankUnstuck= null
trigger gg_trg_Always_Deathbolt= null
trigger gg_trg_Forest_Call= null
trigger gg_trg_Ranged_Damage_Reduction= null
trigger gg_trg_Ranged_Damage_Reduction_80= null
trigger gg_trg_Fel_Bolt= null
trigger gg_trg_Tree_AI= null
trigger gg_trg_Summon_Blood_Priestiss= null
trigger gg_trg_Blood_Berserk_Summon_Totem= null
trigger gg_trg_Corruptor_Fear= null
trigger gg_trg_FlyingEvasion= null
trigger gg_trg_Item_Evasion_25= null
trigger gg_trg_Item_Evasion_35= null
trigger gg_trg_Item_Evasion_40= null
trigger gg_trg_Item_Evasion_50= null
trigger gg_trg_Item_Evasion_75= null
trigger gg_trg_Demonic_Seed_Corruption= null
trigger gg_trg_Demonic_Heart_Corruption_Copy= null
trigger gg_trg_Demonic_Hand_Corruption_Copy_Copy= null
trigger gg_trg_Demonic_Carapace_Corruption_Copy_Copy= null
trigger gg_trg_Demonic_Mutilatore_Corruption_Copy_Copy_Copy= null
trigger gg_trg_Demonic_Vessel_Corruption_Copy_Copy_Copy= null
trigger gg_trg_Demon_Eye_Corruption= null
trigger gg_trg_Demon_EyeStick_Corruption_Copy= null
trigger gg_trg_Indulgence_Corruption_Copy= null
trigger gg_trg_Losing_Demonic_Heart_Corruption_Copy= null
trigger gg_trg_Losing_Demonic_hand_Corruption_Copy_Copy= null
trigger gg_trg_Losing_Demonic_MutilatorCorruption_Copy_Copy_Copy= null
trigger gg_trg_Losing_Demonic_Seed_Corruption= null
trigger gg_trg_Losing_Indulgnece_Corr= null
trigger gg_trg_Losing_Demonic_eyeCorruption_Cy= null
trigger gg_trg_Losing_Demonic_eyestickCorruption_Cy_Copy= null
trigger gg_trg_Losing_Demonic_CarapaceCorruption_Cy_Copy= null
trigger gg_trg_Losing_Demonic_VesselCorruption_Cy_Copy_Copy= null
trigger gg_trg_Excess_Lose_Corr= null
trigger gg_trg_Faustian_Demon_Health_Restoration= null
trigger gg_trg_DemonicHandEyeLoseCOrr= null
trigger gg_trg_DemonicMutilatorLoseCor= null
trigger gg_trg_TrueMutilator= null
trigger gg_trg_DemonicMutilatorLoseCorr= null
trigger gg_trg_DemonicEyeStickCOrr_Copy= null
trigger gg_trg_DemonicEyeStickSwordBowLoseCOrr_Copy= null
trigger gg_trg_Demon_Carapace_Demonic_Offering= null
trigger gg_trg_Demon_Vessel_Demonic_Offering_Copy= null
trigger gg_trg_Item_Sets= null
trigger gg_trg_The_Witchs_Tithe= null
trigger gg_trg_Witchs_Tithe_Paid= null
trigger gg_trg_Eternitys_End= null
trigger gg_trg_Ragnaros= null
trigger gg_trg_Fear_Item= null
trigger gg_trg_AntiMagicCharges= null
trigger gg_trg_Prides_Downfall= null
trigger gg_trg_Wand_Courier_Punishment= null
trigger gg_trg_Losing_Item_Ragnas= null
trigger gg_trg_Losing_Item_Ragnarok= null
trigger gg_trg_Ragnarok= null
trigger gg_trg_CrucibleHeal= null
trigger gg_trg_SinisterJar= null
trigger gg_trg_NinjaRope= null
trigger gg_trg_Pacify= null
trigger gg_trg_Wrath= null
trigger gg_trg_Defend= null
trigger gg_trg_IndulgenceActive= null
trigger gg_trg_Indulgence_OnSummon= null
trigger gg_trg_Indulgence= null
trigger gg_trg_For_the_Cause= null
trigger gg_trg_LASEERRRRSSSSS= null
trigger gg_trg_ENDLASERCAST= null
trigger gg_trg_Soulreaver= null
trigger gg_trg_Rains_Of_Castamere= null
trigger gg_trg_Rainbow= null
trigger gg_trg_SavageStrikes= null
trigger gg_trg_Starlight_Sphere_Int_Gain= null
trigger gg_trg_Double_Strike= null
trigger gg_trg_Wargodbleed= null
trigger gg_trg_Skewer= null
trigger gg_trg_Searing_Aegis= null
trigger gg_trg_MalVladis_Pantheon= null
trigger gg_trg_MalVladis_Revelry= null
trigger gg_trg_Barbarism_Stacks= null
trigger gg_trg_Searing_Aegis_Buff= null
trigger gg_trg_Thunderous_Leap= null
trigger gg_trg_Eldritch_Touch= null
trigger gg_trg_Demonic_Lightning= null
trigger gg_trg_Felreaving= null
trigger gg_trg_Eldritch_Curse= null
trigger gg_trg_Chaos_Overwhelming= null
trigger gg_trg_Chaos_Overhelming_Bounty= null
trigger gg_trg_Moloch_AI= null
trigger gg_trg_Diablerie_Stacks= null
trigger gg_trg_Vacuum_Burst= null
trigger gg_trg_Deaths_Favor= null
trigger gg_trg_Death_Bolt= null
trigger gg_trg_Combat_MasteryEvasionSkeles= null
trigger gg_trg_Evasion_Mastery_Skeles= null
trigger gg_trg_Display_Death_Stacks= null
trigger gg_trg_Nexus_Damage_Bonus= null
trigger gg_trg_Bard_Self_Grace= null
trigger gg_trg_Unnerviing_Symphony= null
trigger gg_trg_Flame_Turbine= null
trigger gg_trg_Everlasting_Flame= null
trigger gg_trg_Mark_of_Baal= null
trigger gg_trg_Mark_of_Baal_Manual= null
trigger gg_trg_Mark_of_Baal_Auto= null
trigger gg_trg_Mark_of_Ball_Learn= null
trigger gg_trg_Molten_Wave_Init= null
trigger gg_trg_Molten_Wave_Actions= null
trigger gg_trg_All_Shall_Burn= null
trigger gg_trg_Burning_Puddles= null
trigger gg_trg_FLAMELASER= null
trigger gg_trg_Display_Fervor_Stacks= null
trigger gg_trg_Poison= null
trigger gg_trg_Enchant_Weapons= null
trigger gg_trg_CalltoArmsTaunt= null
trigger gg_trg_CalltoArms= null
trigger gg_trg_Enforce_Taxes= null
trigger gg_trg_Combat_Tactics= null
trigger gg_trg_Pierce_The_Veil= null
trigger gg_trg_Shattered_Veil_On_Kill= null
trigger gg_trg_Shattered_Veil_On_Summon= null
trigger gg_trg_Display_Aether_Stacks= null
trigger gg_trg_Aether_Core_On_Hit= null
trigger gg_trg_Aether_Bolt= null
trigger gg_trg_Aether_Infusion= null
trigger gg_trg_Aether_Flare= null
trigger gg_trg_Aethereal_Mastery_Active= null
trigger gg_trg_Discharge_Aether= null
trigger gg_trg_Aether_Core= null
trigger gg_trg_Aethereal_Mastery= null
trigger gg_trg_SplashingPuddles= null
trigger gg_trg_Drown= null
trigger gg_trg_GluttonyPAS= null
trigger gg_trg_TemperancePAS= null
trigger gg_trg_TemperanceACT= null
trigger gg_trg_GluttyACT= null
trigger gg_trg_Execute_Old= null
trigger gg_trg_Execute_Old_Copy= null
trigger gg_trg_Execute_New= null
trigger gg_trg_Voracity= null
trigger gg_trg_Happy_Hour= null
trigger gg_trg_Hallucinations= null
trigger gg_trg_Silent_Scream= null
trigger gg_trg_Spell_Steal_Prep= null
trigger gg_trg_Spell_Steal= null
trigger gg_trg_Thief_Collision= null
trigger gg_trg_Venom= null
trigger gg_trg_Sinful_Sinphony= null
trigger gg_trg_swag= null
trigger gg_trg_Undying_Flame= null
trigger gg_trg_Bloodbath= null
trigger gg_trg_Blood_Hydrant= null
trigger gg_trg_NissaBinding= null
trigger gg_trg_Mass_Charm_Empath= null
trigger gg_trg_Wild_Haunt= null
trigger gg_trg_AoE_DoT= null
trigger gg_trg_FearGuyUlti= null
trigger gg_trg_FearStacks= null
trigger gg_trg_FearUlti4Illusion= null
trigger gg_trg_AoEFearSpell= null
trigger gg_trg_Chatadruslight= null
trigger gg_trg_Righteous_Wrath_Cleave= null
trigger gg_trg_Skaar_Ulti_V2= null
trigger gg_trg_Decay= null
trigger gg_trg_Soldiers_of_Fortune_GoldCheck= null
trigger gg_trg_Soldiers_of_Fortune= null
trigger gg_trg_ArcaneDrain= null
trigger gg_trg_LuckyShot= null
trigger gg_trg_Lightningbolt= null
trigger gg_trg_Draw_A_Bead= null
trigger gg_trg_Paladin_Taunt= null
trigger gg_trg_Eternal_Battlethirst_Active= null
trigger gg_trg_MercPaladinHeal= null
trigger gg_trg_Apple_of_Eden= null
trigger gg_trg_Faustian_Bargain= null
trigger gg_trg_Reckless_Greed= null
trigger gg_trg_Sinister_Creed= null
trigger gg_trg_Sanctified_Armor= null
trigger gg_trg_Eternal_BattlethirstPassive= null
trigger gg_trg_Recklessness_Taunt= null
trigger gg_trg_DesolationFear= null
trigger gg_trg_TerrorCrush= null
trigger gg_trg_Void_Tendrils= null
trigger gg_trg_Desolation_MOVE_TO_PORTAL= null
trigger gg_trg_Pick_Up_Items_Terror= null
trigger gg_trg_Bless= null
trigger gg_trg_Blood_Dance_Damage_Bonus= null
trigger gg_trg_Earthsplitter= null
trigger gg_trg_PulverizeCDR= null
trigger gg_trg_DemonSpawners= null
trigger gg_trg_Reign_of_Death= null
trigger gg_trg_Vicious_Vice= null
trigger gg_trg_Infernal_Martyr= null
trigger gg_trg_Sword_of_the_Legion= null
trigger gg_trg_Impenetrable_Fortress_SFX= null
real array CitadelSpawnX
real array CitadelSpawnY
unit array ToxiaShielder
unit array CabaShielder
boolean array IsFirelordAttack
real array MouseX
real array MouseY
constant integer CalloftheHaunted___ABIL_ID= 'A0AA'
constant integer CalloftheHaunted___ABIL_ID2= 'A0A9'
constant integer CalloftheHaunted___NOSTACK_ID= 'A0AB'
constant integer CalloftheHaunted___INV_ID= 'AInv'
constant integer CalloftheHaunted___TIMED_LIFE_ID= 'BTLF'
constant integer CalloftheHaunted___SUPER_HP= 'I021'
constant integer CalloftheHaunted___SUPER_DMG= 'I022'
constant integer CalloftheHaunted___HEALTH_TOME_1= 'I021'
constant integer CalloftheHaunted___HEALTH_TOME_2= 'I021'
constant integer CalloftheHaunted___HEALTH_TOME_3= 'I021'
constant integer CalloftheHaunted___HEALTH_TOME_4= 'I021'
constant integer CalloftheHaunted___DAMAGE_TOME_1= 'I022'
constant integer CalloftheHaunted___DAMAGE_TOME_2= 'I022'
constant integer CalloftheHaunted___DAMAGE_TOME_3= 'I022'
constant integer CalloftheHaunted___DAMAGE_TOME_4= 'I022'
constant integer CalloftheHaunted___UNIT1= 'uske'
constant integer CalloftheHaunted___UNIT2= 'uskm'
constant integer CalloftheHaunted___UNIT3= 'nskm'
constant integer CalloftheHaunted___UNIT4= 'nskf'
constant integer CalloftheHaunted___UNIT1_INDEX= 9
constant integer CalloftheHaunted___UNIT2_INDEX= 6
constant integer CalloftheHaunted___UNIT3_INDEX= 7
constant integer CalloftheHaunted___UNIT4_INDEX= 7
constant integer CalloftheHaunted___UNIT1_ABILITY1= 'A0A0'
constant integer CalloftheHaunted___UNIT1_ABILITY2= 'A0A1'
constant integer CalloftheHaunted___UNIT2_ABILITY1= 'A0A6'
constant integer CalloftheHaunted___UNIT2_ABILITY2= 'A0K5'
constant integer CalloftheHaunted___UNIT3_ABILITY1= 'A09Z'
constant integer CalloftheHaunted___UNIT3_ABILITY2= 'A09W'
constant integer CalloftheHaunted___UNIT4_ABILITY1= 'A09Z'
constant integer CalloftheHaunted___UNIT4_ABILITY2= 'A09Z'
constant integer CalloftheHaunted___SUPER_UNIT= 'nsko'
constant integer CalloftheHaunted___SUPER_UNIT_ABILITY1= 'A0A4'
constant integer CalloftheHaunted___SUPER_UNIT_ABILITY2= 'A0A5'
constant integer CalloftheHaunted___SUPER_UNIT_ABILITY3= 'A0A2'
constant integer CalloftheHaunted___SUPER_BIRTH_INDEX= 9
constant string CalloftheHaunted___EFFECT= "Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl"
constant string CalloftheHaunted___SUPER_EFFECT= "Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl"
constant string CalloftheHaunted___ATTACH= "war3mapImported\\Soul Aura.mdx"
constant string CalloftheHaunted___ATTACH_POINT= "origin"
        
constant integer CalloftheHaunted___SUPER_UNIT_DAMAGE_PER_TOME= 16
constant integer CalloftheHaunted___SUPER_UNIT_HP_PER_TOME= 25
        
constant integer CalloftheHaunted___UNIT1_DAMAGE_PER_TOME= 16
constant integer CalloftheHaunted___UNIT2_DAMAGE_PER_TOME= 16
constant integer CalloftheHaunted___UNIT3_DAMAGE_PER_TOME= 16
constant integer CalloftheHaunted___UNIT4_DAMAGE_PER_TOME= 16
        
constant integer CalloftheHaunted___UNIT1_HP_PER_TOME= 25
constant integer CalloftheHaunted___UNIT2_HP_PER_TOME= 25
constant integer CalloftheHaunted___UNIT3_HP_PER_TOME= 25
constant integer CalloftheHaunted___UNIT4_HP_PER_TOME= 25
    
constant boolean CalloftheHaunted___USE_UPGRADE_ABILITY= true

constant integer Chernobyliss__ABIL_ID= 'A03E'
constant integer Chernobyliss__SLOW_ID= 'A09U'
constant string Chernobyliss__EFFECT1= "war3mapImported\\Acid Ex.mdx"
constant string Chernobyliss__EFFECT2= "war3mapImported\\VenomousGaleV2_Portrait.mdx"
constant string Chernobyliss__EFFECT3= "Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl"
constant string Chernobyliss__ATTACH= "chest"
constant string Chernobyliss__ATTACH2= "chest"
constant string Chernobyliss__KB_SFX= ""
constant real Chernobyliss__TIMER_INTERVAL= 1.
constant real Chernobyliss__KB_DURATION= .6

constant boolean Chernobyliss__CHANGE_VERTEX_COLOR= true
        
constant attacktype Chernobyliss__ATTACK_TYPE= ATTACK_TYPE_NORMAL
constant damagetype Chernobyliss__DAMAGE_TYPE= DAMAGE_TYPE_LIGHTNING
        
constant real Chernobyliss__TREE_AOE= 0.0
constant boolean Chernobyliss__ALLOW_MOVE= false
constant boolean Chernobyliss__CHECK_PATHING= false

constant group Chernobyliss__GROUP= CreateGroup()
unit Chernobyliss__CASTER
real Chernobyliss__SPELL_X
real Chernobyliss__SPELL_Y

constant integer si__Chernobyliss__Cbliss=419
integer si__Chernobyliss__Cbliss_F=0
integer si__Chernobyliss__Cbliss_I=0
integer array si__Chernobyliss__Cbliss_V
unit array s__Chernobyliss__Cbliss_cast
unit array s__Chernobyliss__Cbliss_t
real array s__Chernobyliss__Cbliss_x
real array s__Chernobyliss__Cbliss_y
real array s__Chernobyliss__Cbliss_dur
integer array s__Chernobyliss__Cbliss_lvl
effect array s__Chernobyliss__Cbliss_attach

constant integer si__CalloftheHaunted___CotH=420
integer si__CalloftheHaunted___CotH_F=0
integer si__CalloftheHaunted___CotH_I=0
integer array si__CalloftheHaunted___CotH_V
unit array s__CalloftheHaunted___CotH_cast
real array s__CalloftheHaunted___CotH_x
real array s__CalloftheHaunted___CotH_y
integer array s__CalloftheHaunted___CotH_lvl
integer array s__CalloftheHaunted___CotH_lvl2
effect array s__CalloftheHaunted___CotH_attach

constant integer si__DeathCall___DCall=421
integer si__DeathCall___DCall_F=0
integer si__DeathCall___DCall_I=0
integer array si__DeathCall___DCall_V
unit array s__DeathCall___DCall_cast
unit array s__DeathCall___DCall_t
effect array s__DeathCall___DCall_attach

constant integer si__ReviveSafe___revivec=422
integer si__ReviveSafe___revivec_F=0
integer si__ReviveSafe___revivec_I=0
integer array si__ReviveSafe___revivec_V
integer array s__ReviveSafe___revivec_i

unit V
boolean E=true
integer X=1
boolean O=true
real R=2.
boolean I=true
boolean A=true
boolean BRTON=false
boolean TRUEENFOS=false
boolean ALLRANDOM=false
boolean NOOBM=false
boolean GAMEM=true
boolean LWMON=false
boolean FLAGREMATCH=true
boolean array LICHS
boolean array TIPST
string N="Sound\\Interface\\Error.wav"
unit array B
unit array C
item array D
item array F
item array G
real array H
integer J=0
integer K=0
timer L=CreateTimer()
destructable M
effect P
hashtable Q=InitHashtable()
integer S=0
integer T=0
integer array U
boolean array W
item array Y
integer Z=0
integer VV=0
real EV=.0
real XV=.0
real OV=.0
real RV=.0
rect IV=null
unit AV=null
item NV=null
timer BV=null
boolexpr CV=null
timer array DV
trigger array FV
integer array GV
integer array HV
triggercondition array JV
boolexpr array KV
integer array LV
integer array MV
integer array PV
integer QV=0
integer array SV
integer TV=1
integer array UV
triggercondition array WV
boolexpr array YV
boolean array ZV
integer VE=0
integer EE=- 1
integer XE
integer OE
integer RE
integer IE
conditionfunc AE
conditionfunc NE
conditionfunc BE
integer array CE
boolexpr array DE
trigger array FE
integer GE=0
trigger array HE
integer array JE
integer KE
trigger LE
integer ME
integer PE
trigger QE
group SE=null
item TE=null
location UE=null
location HeroCreateLocation=null
location RandomCreateLocation=null
boolexpr WE=null
location YE=Location(.0, .0)
constant timer ZE=CreateTimer()
location VX=null
location EX=null
constant integer XX=255
constant integer OX=255
constant integer RX=255
constant integer IX=175
sound AX
integer NX=0
trigger BX=CreateTrigger()
hashtable CX
//hashtable FX
//integer GX=0
//constant integer HX=679645218
integer JX=0
integer array KX
integer LX=0
timer MX=CreateTimer()
integer PX=0
integer array QX
integer SX=0
timer TX=CreateTimer()
timer UX=CreateTimer()
integer WX=0
unit array YX
integer array ZX
integer array VO
integer EO=0
integer XO=0
integer array OO
integer RO=0
timer IO=CreateTimer()
integer array AO
integer NO=0
integer array BO
integer CO=0
integer DO=0
integer array FO
unit array GO
trigger HO=CreateTrigger()
trigger JO=CreateTrigger()
trigger KO=CreateTrigger()
integer MO
integer QO=0
integer SO=0
group array TO
boolexpr WO=null
boolexpr YO=null
hashtable ZO=InitHashtable()
boolean VR=false
group ER=null
group array XR
integer OR=0
real RR=.0
real IR=.0
real AR=.0
hashtable NR=InitHashtable()
unit BR
unit CR
unit DR
integer FR
rect GR=null
group JR=CreateGroup()
//group PATHING_GROUP = CreateGroup()
real KR
real LR
real MR
real PR
hashtable QR=InitHashtable()
constant real SR=200. * 200.
constant trigger TR=CreateTrigger()
integer UR
integer WR
integer YR
string array ZR
integer VI=0
hashtable EI=InitHashtable()
integer XI=0
timer OI
timer RI
integer II
boolean AI=true
integer NI=0
damagetype array BI
boolean array CI
real array DI
unit array FI
integer GI=0
timer HI=CreateTimer()
real JI
unit KI
unit LI
real MI
trigger QI=null
trigger SI=null
group TI=null
group UI=null
unit WI=null
unit YI=null
real ZI=.0
real VA=1410065408.
real XA=VA
real OA=.0
real RA=.0
real IA=.0
destructable AA=null
item NA=null
unit BA
real CA
real DA
real FA
real GA
real HA
constant player JA=Player(PLAYER_NEUTRAL_PASSIVE)
integer KA=0
integer LA=0
integer MA=0
integer PA=0
integer QA=0
real TA=.0
real UA=.0
real WA=.0
real YA=.0
hashtable ZA=null
hashtable VN=null
real XN=.0
real ON=.0
real RN=.0
real IN=.0
real AN=.0
location NN=null
constant real BN=- 5000
location CN=Location(.0, .0)
real array DN
real array FN
integer array GN
location HN=Location(.0, .0)
constant attacktype JN=ATTACK_TYPE_CHAOS
constant real KN=- .061875
constant damagetype LN=DAMAGE_TYPE_FORCE
integer MN=0
integer PN=0
unit QN=null
unit SN=null
real TN=.0
integer array UN
location WN=Location(.0, .0)
location YN=Location(.0, .0)
constant integer ZN=20
location VB=Location(.0, .0)
location EB=Location(.0, .0)
location XB=Location(.0, .0)
constant group OB=CreateGroup()
unit RB
location IB=Location(.0, .0)
constant group AB=CreateGroup()
unit NB
location BB=Location(.0, .0)
location CB=Location(.0, .0)
location DB=Location(.0, .0)
location FB=Location(.0, .0)
location GB=Location(.0, .0)
location HB=Location(.0, .0)
location JB=Location(.0, .0)
constant group KB=CreateGroup()
unit LB
real MB
location PB=Location(.0, .0)
location QB=Location(.0, .0)
location SB=Location(.0, .0)
location TB=Location(.0, .0)
trigger UB=null
location WB=Location(.0, .0)
unit YB
location ZB=Location(.0, .0)
location VC=Location(.0, .0)
location EC=Location(.0, .0)
location XC=Location(.0, .0)
unit OC
boolean array RC
integer array IC
integer array AC
boolean array NC
integer array BC
integer array CC
boolean array DC
integer array FC
integer array GC
constant real HC=2 * bj_PI
integer JC
group KC=CreateGroup()
group RANDOMGROUP=CreateGroup()
unit array LC
integer array MC
integer PC=0
integer QC=0
integer SC=0
integer TC=0
unit array UC
integer WC=0
dialog YC=null
button array ZC
integer array VD
real ED=0
timer array XD
boolean array OD
dialog RD=null
button array ID
integer array AD
integer ND=0
integer array BD
boolean DD=false
unit FD=null
rect array GD
boolean HD=false
boolean array KD
leaderboard LD=null
location array MD
location array PD
boolean array QD
group SD=null
integer array TD
string array UD
real WD=0
real YD=0
location NF=null
location BF=null
location CF=null
location DF=null
hashtable FF=null
integer GF=0
real HF=0
location JF=null
unit KF=null
integer LF=0
unit array MF
location array PF
integer array QF
integer array SF
real array TF
unit UF=null
group array WF
sound array YF
integer ZF=0
group VG=null
location EG=null
location XG=null
unit OG=null
location RG=null
group IG=null
integer AG=0
real NG=0
integer array BG
location array CG
unit DG=null
real array FG
location GG=null
real array HG
real array JG
real KG=0
unit array LG
real array MG
string array PG
string QG=""
string array SG
string TG=""
boolean array UG
boolean WG=false
real array YG
real ZG=0
real VH=0
group EH=null
real array XH
real array OH
boolean RH=false
location IH=null
group AH=null
integer NH=0
unit array BH
unit array CH
location array DH
location array FH
real array GH
real array HH
integer array JH
real array KH
real array LH
integer MH=0
group PH=null
integer QH=0
unit array SH
location array TH
integer array UH
real array WH
location array YH
real array ZH
real array VJ
integer EJ=0
group array XJ
group OJ=null
integer RJ=0
integer IJ=0
unit array AJ
location array NJ
real array BJ
real array CJ
real array DJ
group array FJ
integer GJ=0
location array HJ
integer JJ=0
unit array KJ
real array LJ
real array MJ
real PJ=0
real QJ=0
real SJ=0
location array TJ
unit array UJ
integer WJ=0
group array YJ
group ZJ=null
real VK=0
integer EK=0
location XK=null
location OK=null
location RK=null
location IK=null
group AK=null
group NK=null
group BK=null
group CK=null
location DK=null
location FK=null
group GK=null
integer HK=0
integer JK=0
integer KK=0
location LK=null
location MK=null
integer array PK
group QK=null
group SK=null
group TK=null
group UK=null
group WK=null
location YK=null
location ZK=null
location TempLocation=null
location TempLocation2=null
unit array VL
location EL=null
group XL=null
integer OL=0
unit RL=null
location IL=null
location AL=null
integer NL=0
unit BL=null
location CL=null
real DL=0
real FL=0
group GL=null
location HL=null
location JL=null
group KL=null
location LL=null
location ML=null
unit array PL
location QL=null
effect array SL
location TL=null

real ZL=0

boolean array EM
unit XM=null
unit OM=null
location array RM
integer array IM
real array AM
group NM=null
lightning BM=null
group CM=null
location DM=null
unit array FM
player GM=null
location array HM
integer array JM
boolean array KM
real array LM
real array MM
real array PM
unit array QM
unit array SM
group TM=null
effect array UM
effect array WM
effect array YM
effect array ZM
location array VP
location array EP
real array XP
real array OP
real array RP
real array IP
unit array AP
unit array NP
unit array BP
unit array CP
unit array DP
unit array FP
unit array GP
unit array HP
unit array JP
real array KP
real array LP
integer array MP
integer array PP
real array QP
location array SP
location array TP
location array UP
location array WP
location array YP
location array ZP
unit VQ=null
unit SpeedyGonzalez=null
location EQ=null
force XQ=null
real OQ=0
location RQ=null
location IQ=null
location AQ=null
location NQ=null
force BQ=null
real array CQ
integer array DQ
integer array FQ
integer array GQ
integer array HQ
integer array JQ
integer array KQ
integer array LQ
unit array MQ
string PQ=""
integer array QQ
string array SQ
integer TQ=0
integer array UQ
string WQ=""
string YQ=""
string ZQ=""
force array VS
force ES=null
string array XS
integer OS=0
string RS=""
integer array IS
multiboard array AS
leaderboard array NS
string array BS
integer CS=0
boolean DS=false
integer FS=0
real array GS
integer array HS
integer array JS
integer array KS
integer LS=0
force MS=null
integer PS=0
integer array QS
string array SS
integer array TS
integer array US
integer array WS
integer YS=0
real array ZS
integer array VT
integer array ET
integer XT=0
integer OT=0
string RT=""
real array IT
real array AT
string array NT
integer array BT
integer array CT
string array DT
integer array FT
integer array GT
integer array HT
boolean array JT
real array KT
integer array LT
integer array MT
integer array PT
integer array QT
boolean ST=false
boolean array TT
location UT=null
boolean array WT
location YT=null
integer ZT=0
integer VU=0
boolean array EU
unit array XU
real array OU
real array RU
integer IU=0
location AU=null
location NU=null
effect array BU
timer array CU
trigger DU=null
location FU=null
rect GU=null
rect HU=null
rect JU=null
rect KU=null
rect LU=null
rect MU=null
rect PU=null
rect QU=null
rect SU=null
rect TU=null
rect UU=null
rect WU=null
rect YU=null
rect ZU=null
rect VW=null
rect EW=null
rect XW=null
rect OW=null
rect RW=null
rect IW=null
rect AW=null
rect NW=null
rect BW=null
rect CW=null
rect DW=null
rect FW=null
rect GW=null
rect HW=null
rect JW=null
rect KW=null
rect LW=null
rect MW=null
rect PW=null
rect QW=null
rect SW=null
rect TW=null
rect UW=null
rect WW=null
rect YW=null
rect ZW=null
rect VY=null
rect EY=null
rect XY=null
rect OY=null
rect RY=null
rect IY=null
rect AY=null
rect NY=null
rect BY=null
rect CY=null
camerasetup DY=null
camerasetup FY=null
sound GY=null
sound HY=null
sound JY=null
sound KY=null
sound LY=null
sound MY=null
sound PY=null
sound QY=null
sound SY=null
sound TY=null
trigger UY=null
trigger WY=null
trigger YY=null
trigger ZY=null
trigger VZ=null
trigger EZ=null
trigger XZ=null
trigger OZ=null
trigger RZ=null
trigger IZ=null
trigger AZ=null
trigger NZ=null
trigger BZ=null
trigger CZ=null
trigger DZ=null
trigger FZ=null
trigger GZ=null
trigger HZ=null
trigger JZ=null
trigger KZ=null
trigger LZ=null
trigger MZ=null
trigger PZ=null
trigger QZ=null
trigger SZ=null
trigger TZ=null
trigger UZ=null
trigger WZ=null
trigger YZ=null
trigger ZZ=null
trigger V0=null
trigger E0=null
trigger X0=null
trigger O0=null
trigger R0=null
trigger I0=null
trigger A0=null
trigger N0=null
trigger B0=null
trigger C0=null
trigger D0=null
trigger F0=null
trigger G0=null
trigger H0=null
trigger J0=null
trigger J00=null
trigger K0=null
trigger K00=null
trigger K000=null
trigger L0=null
trigger M0=null
trigger P0=null
trigger Q0=null
trigger S0=null
trigger T0=null
trigger U0=null
trigger W0=null
trigger Y0=null
trigger Z0=null
trigger V1=null
trigger E1=null
trigger X1=null
trigger O1=null
trigger R1=null
trigger I1=null
trigger A1=null
trigger N1=null
trigger B1=null
trigger C1=null
trigger D1=null
trigger F1=null
trigger G1=null
trigger H1=null
trigger J1=null
trigger K1=null
trigger L1=null
trigger M1=null
trigger P1=null
trigger Q1=null
trigger S1=null
trigger T1=null
trigger RANDOMOVE=null
//trigger U1=null
trigger W1=null
trigger Y1=null
//trigger Z1=null
trigger V2=null
//trigger E2=null
trigger X2=null
trigger O2=null
trigger R2=null
trigger I2=null
trigger A2=null
trigger N2=null
trigger B2=null
trigger C2=null
trigger D2=null
trigger F2=null
//trigger G2=null
trigger H2=null
trigger J2=null
trigger K2=null
trigger L2=null
trigger M2=null
trigger P2=null
trigger Q2=null
trigger S2=null
trigger T2=null
trigger U2=null
trigger W2=null
trigger Y2=null
trigger Z2=null
trigger V3=null
trigger E3=null
trigger X3=null
//trigger O3=null
trigger R3=null
trigger I3=null
trigger A3=null
trigger N3=null
//trigger B3=null
trigger C3=null
trigger D3=null
trigger F3=null
//trigger G3=null
trigger H3=null
trigger J3=null
trigger K3=null
//trigger L3=null
trigger M3=null
trigger P3=null
trigger Q3=null
trigger S3=null
trigger T3=null
trigger U3=null
trigger W3=null
trigger Y3=null
trigger Z3=null
trigger V4=null
trigger E4=null
trigger X4=null
trigger O4=null
trigger R4=null
trigger I4=null
trigger A4=null
trigger N4=null
trigger B4=null
trigger C4=null
trigger D4=null
trigger F4=null
trigger G4=null
trigger H4=null
trigger J4=null
trigger K4=null
trigger L4=null
trigger M4=null
trigger P4=null
trigger Q4=null
trigger S4=null
trigger T4=null
trigger U4=null
trigger W4=null
trigger Y4=null
trigger Z4=null
trigger V5=null
trigger E5=null
trigger X5=null
trigger O5=null
trigger R5=null
trigger I5=null
trigger A5=null
trigger N5=null
trigger B5=null
trigger C5=null
trigger D5=null
trigger F5=null
trigger G5=null
trigger H5=null
trigger J5=null
trigger K5=null
trigger L5=null
trigger M5=null
trigger P5=null
trigger Q5=null
trigger S5=null
trigger T5=null
trigger U5=null
trigger W5=null
trigger Y5=null
trigger Z5=null
trigger V6=null
trigger E6=null
trigger X6=null
trigger O6=null
trigger R6=null
trigger I6=null
trigger A6=null
trigger N6=null
trigger B6=null
trigger C6=null
trigger D6=null
trigger F6=null
trigger G6=null
trigger H6=null
trigger J6=null
trigger K6=null
trigger L6=null
trigger M6=null
trigger P6=null
trigger Q6=null
trigger S6=null
trigger T6=null
trigger U6=null
//trigger W6=null
trigger Y6=null
trigger Z6=null
trigger V7=null
trigger E7=null
trigger X7=null
trigger O7=null
trigger R7=null
trigger I7=null
trigger A7=null
trigger N7=null
trigger B7=null
trigger C7=null
trigger D7=null
trigger F7=null
trigger G7=null
trigger H7=null
trigger J7=null
trigger K7=null
trigger L7=null
trigger M7=null
trigger P7=null
trigger Q7=null
trigger S7=null
trigger T7=null
trigger U7=null
trigger W7=null
trigger Z7=null
trigger V8=null
trigger E8=null
trigger X8=null
trigger O8=null
trigger R8=null
trigger I8=null
trigger A8=null
trigger N8=null
trigger B8=null
trigger C8=null
trigger D8=null
trigger F8=null
trigger G8=null
trigger H8=null
trigger J8=null
trigger K8=null
trigger L8=null
trigger M8=null
trigger P8=null
trigger Q8=null
trigger S8=null
trigger T8=null
trigger U8=null
trigger W8=null
trigger Y8=null
trigger Z8=null
trigger VVV=null
trigger VEV=null
trigger VXV=null
trigger VOV=null
trigger VRV=null
trigger VIV=null
trigger VAV=null
trigger VNV=null
trigger VBV=null
trigger VCV=null
trigger VDV=null
trigger QoBT=null
trigger PeHT=null
trigger VFV=null
trigger VGV=null
trigger VHV=null
trigger VJV=null
trigger VKV=null
trigger VLV=null
trigger VMV=null
trigger VPV=null
trigger VQV=null
trigger VSV=null
trigger VTV=null
trigger VUV=null
trigger VWV=null
trigger VYV=null
trigger VZV=null
trigger V_V=null
trigger V0V=null
trigger V1V=null
trigger V2V=null
trigger V3V=null
trigger V4V=null
trigger V5V=null
trigger V6V=null
trigger V7V=null
trigger V8V=null
trigger V9V=null
trigger EVV=null
trigger EEV=null
trigger EXV=null
trigger EOV=null
trigger ERV=null
trigger EIV=null
trigger EAV=null
trigger ENV=null
trigger EBV=null
trigger ECV=null
trigger EDV=null
trigger EFV=null
trigger EGV=null
trigger EHV=null
trigger EJV=null
trigger EKV=null
trigger ELV=null
trigger EMV=null
trigger EPV=null
trigger EQV=null
trigger ESV=null
trigger ETV=null
trigger EUV=null
//trigger EWV=null
//trigger EYV=null
trigger EZV=null
trigger E_V=null
trigger E0V=null
//trigger Z_Y= null
trigger P_9=null
//trigger Q_8=null
//trigger Q_7=null
//trigger Q_6=null
trigger Q_5=null
trigger Q_4=null
trigger Q_3=null
unit E1V=null
unit E2V=null
unit E3V=null
unit E4V=null
unit E5V=null
unit E6V=null
unit E7V=null
unit E8V=null
unit E9V=null
unit XVV=null
unit XEV=null
unit XXV=null
unit XOV=null
unit XRV=null
unit XIV=null
unit XAV=null
unit QoBC=null
unit XNV=null
unit XBV=null
unit XCV=null
unit XDV=null
unit XFV=null
unit XGV=null
unit XHV=null
unit XJV=null
unit XKV=null
unit XLV=null
unit XMV=null
unit XPV=null
unit XQV=null
unit XSV=null
unit XTV=null
unit XUV=null
unit XWV=null
unit XYV=null
unit XZV=null
unit X_V=null
unit X0V=null
unit X1V=null
unit X2V=null
unit X3V=null
unit X4V=null
unit X5V=null
unit X6V=null
unit X7V=null
unit X8V=null
unit X9V=null
unit OVV=null
unit OEV=null
unit OXV=null
unit OOV=null
unit PeHC=null
unit FIRELORDCIRCLE=null
unit TRITUSCIRCLE=null
unit MOLOCHCIRCLE=null
constant group ORV=CreateGroup()
unit OIV
constant group OAV=CreateGroup()
unit ONV
unit OBV
//constant group OCV=CreateGroup()
//unit ODV
constant real OFV=- 420.
rect OGV=null
trigger OHV
integer OJV
location OKV=Location(.0, .0)
location OLV=Location(.0, .0)
location OMV=Location(.0, .0)
constant group OPV=CreateGroup()
group OQV
unit OSV
integer OTV
location OUV=Location(0, 0)
group OWV=CreateGroup()
hashtable OYV
sound OZV
real array O_V
real array O0V
real array O1V
real array O2V
constant real O3V=175
constant group O4V=CreateGroup()
unit O5V
constant integer O6V=127
integer O7V
integer array O8V
constant group O9V=CreateGroup()
unit RVV
constant group REV=CreateGroup()
unit RXV
constant group ROV=CreateGroup()
unit RRV
constant group RIV=CreateGroup()
unit RAV
constant group RNV=CreateGroup()
group UNIT_SPAWNERS_GROUP=CreateGroup()
unit RBV
unit RCV
integer RDV=0
integer array RFV
integer RGV=0
timer RHV=CreateTimer()
integer array RJV
integer RKV=0
integer array RLV
integer RMV=0
integer RPV=0
integer array RQV
trigger array RSV
integer array RTV
integer array RUV
trigger RWV
integer RYV=0
integer RZV=0
integer array R_V
unit array R0V
real array R1V
real array R2V
real array R3V
real array R4V
real array R5V
integer array R6V
effect array R7V
boolean array R8V
boolean array R9V
boolean array IVV
boolean array IEV
integer IXV=0
integer IOV=0
integer array IRV
integer array IIV
integer array IAV
real array INV
real array IBV
real array ICV
real array IDV
real array IFV
real array IGV
real array IHV
real array IJV
real array IKV
boolean array ILV
boolean array IMV
boolean array IPV
real array IQV
real array ISV
real array ITV
boolean array IUV
boolean array IWV
boolean array IYV
integer IZV=1
integer I_V=0
integer I0V=0
integer array I1V
integer I2V=0
integer I3V=0
integer array I4V
unit array I5V
real array I6V
real array I7V
integer array I8V
integer I9V=0
integer AVV=0
integer array AEV
unit array AXV
real array AOV
real array ARV
integer array AIV
integer AAV=0
integer ANV=0
integer array ABV
unit array ACV
real array ADV
real array AFV
real array AGV
real array AHV
location array AJV
integer array AKV
integer ALV=0
integer AMV=0
integer array APV
integer array AQV
real array ASV
real array ATV
unit array AUV
timer AWV=CreateTimer()
integer AYV=0
boolean array AZV
boolean array A_V
integer A0V=0
integer A1V=0
integer array A2V
unit array A3V
real array A4V
real array A5V
real array A6V
real array A7V
real array A8V
real array A9V
real array NVV
real array NEV
integer array NXV
integer array NOV
integer array NRV
integer array NIV
boolean array NAV
boolean array NNV
integer NBV=1
timer NCV=CreateTimer()
integer NDV=0
integer NFV=0
integer array NGV
unit array NHV
real array NJV
real array NKV
real array NMV
real array NPV
real array NQV
real array NSV
real array NTV
real array NUV
integer array NWV
timer NYV=CreateTimer()
integer NZV=0
boolean array N_V
boolean array N0V
integer N1V=0
integer N2V=0
integer array N3V
unit array N4V
unit array N5V
unit array N6V
real array N7V
real array N8V
real array N9V
string array BVV
integer array BEV
timer BXV=CreateTimer()
integer BOV=0
boolean array BRV
boolean array BIV
integer BAV=0
integer BNV=0
integer array BBV
unit array BCV
unit array BDV
real array BFV
real array BGV
real array BHV
real array BJV
real array BKV
real array BLV
real array BMV
real array BPV
string array BQV
integer array BSV
timer BTV=CreateTimer()
integer BUV=0
boolean array BWV
boolean array BYV
integer BZV=0
integer B_V=0
integer array B0V
integer array B1V
trigger array B2V
trigger array B3V
trigger array B4V
trigger array B5V
trigger array B6V
real array B7V
real array B8V
unit array B9V
real array CVV
real array CEV
integer array CXV
integer array COV
real array CRV
real array CIV
real array CAV
real array CNV
boolean array CBV
real array CCV
string array CDV
player array CFV
real array CGV
boolean array CHV
real array CJV
attacktype array CKV
damagetype array CLV
real CMV
real CPV
integer CQV
integer CSV
integer CTV
unit CUV
integer array CWV
integer array CYV
integer CZV=0
integer C_V=0
integer array C0V
constant integer C1V=10
integer array C2V
integer C3V=0
integer C4V=0
integer array C5V
constant integer C6V=10
integer array C7V
integer C8V=0
integer C9V=0
integer array DVV
integer array DEV
integer array DXV
integer array DOV
integer array DRV
string array DIV
string array DAV
boolean array DNV
boolean array DBV
integer DCV
unit array DDV
real array DFV
integer DGV=0
integer DHV=0
integer DJV=0
integer DKV=0
integer array DLV
integer array DMV
unit array DPV
effect array DQV
real array DSV
integer array DTV
integer array DUV
integer array DWV
integer array DYV
integer array DZV
boolean array D_V
conditionfunc D0V
trigger array D1V
real array D2V
real array D3V
boolean array D4V
boolean array D5V
real array D6V
real array D7V
boolean array D8V
integer D9V=0
integer FVV=0
integer array FEV
integer array FXV
trigger array FOV
trigger array FRV
trigger array FIV
trigger array FAV
trigger array FNV
trigger array FBV
trigger array FCV
trigger array FDV
trigger array FFV
trigger array FGV
integer array FHV
string array FJV
integer array FKV
integer array FLV
integer array FMV
integer array FPV
real array FQV
real array FSV
real array FTV
real array FUV
real array FWV
unit array FYV
group array FZV
boolean array F_V
boolean array F0V
boolean array F1V
boolean array F2V
boolean array F3V
boolean array F4V
boolean array F5V
integer F6V=0
integer F7V=1
timer F8V=CreateTimer()
rect F9V
integer GVV
trigger GEV=CreateTrigger()
boolean GXV=true
boolexpr array GOV
boolean array GRV
boolean array GIV
boolean array GAV
boolean array GBV
boolean array GCV
integer array GDV
integer GFV=0
integer GGV=0
integer array GHV
unit array GJV
real array GKV
integer array GLV
integer array GMV
integer GPV=0
integer GQV=0
integer array GSV
integer array GTV
integer array GUV
integer array GWV
boolean array GYV
unit array GZV
player array G_V
real array G0V
real array G1V
real array G2V
real array G3V
real array G4V
real array G5V
real array G6V
boolean array G7V
boolean array G8V
boolean array G9V
boolean array HVV
boolean array HEV
boolean array HXV
boolean array HOV
integer array HRV
integer array HIV
integer array HAV
integer array HNV
integer array HBV
integer array HCV
integer array HDV
unit array HFV
real array HGV
real array HHV
real array HJV
real array HKV
real array HLV
real array HMV
real array HPV
real array HQV
real array HSV
real array HTV
real array HUV
real array HWV
real array HYV
unit array HZV
effect array H_V
string array H0V
boolean array H1V
boolean array H2V
boolean array H3V
real array H4V
real array H5V
real array H6V
real array H7V
real array H8V
real array H9V
group array JVV
rect JEV=null
group JXV=null
boolexpr JOV=null
boolexpr JRV=null
integer JIV=0
image array JAV
real array JNV
boolean array JBV
real array JCV
real array JDV
boolean array JFV
integer array JGV
integer array JHV
integer array JJV
integer array JKV
integer array JLV
integer array JMV
integer JPV=0
integer JQV=0
integer JSV=0
integer array JTV
integer array JUV
group array JWV
string array JYV
real array JZV
real array J_V
real array J0V
real array J1V
real array J2V
real array J3V
boolean array J4V
boolean array J5V
integer J6V=0
integer J7V=0
integer array J8V
lightning array J9V
unit array KVV
unit array KEV
real array KXV
real array KOV
boolean array KRV
real array KIV
integer KAV=1
timer KNV=CreateTimer()
integer array KBV
integer array KCV
unit array KDV
real array KFV
real array KGV
real array KHV
string array KJV
string array KKV
integer array KLV
boolean array KMV
boolean array KPV
boolean array KQV
unit array KSV
unit KTV=null
unit KUV=null
integer KWV=0
group KYV=CreateGroup()
integer KZV=0
integer K_V=0
integer K0V=0
integer array K1V
real array K2V
real array K3V
integer K4V=0
integer K5V=0
integer array K6V
real array K7V
real array K8V
unit array K9V
real array LVV
real array LEV
real array LXV
integer array LOV
integer LRV=0
integer LIV=0
integer array LAV
real array LNV
real array LBV
unit array LCV
real array LDV
real array LFV
real array LGV
integer array LHV
integer LJV=0
integer LKV=0
integer array LLV
unit array LMV
effect array LPV
integer LQV=0
integer LSV=0
integer array LTV
unit array LUV
effect array LWV
integer array LYV
real array LZV
integer L_V=0
integer L0V=0
integer array L1V
unit array L2V
real array L3V
integer array L4V
integer array L5V
integer L6V=0
integer L7V=0
integer array L8V
unit array L9V
unit array MVV
effect array MEV
real array MXV
real array MOV
real array MRV
real array MIV
real array MAV
integer array MNV
integer array MBV
integer array MCV
integer MDV=0
integer MFV=0
integer array MGV
boolean array MHV
boolean array MJV
boolean array MKV
boolean array MLV
boolean array MMV
boolean array MPV
boolean array MQV
boolean array MSV
boolean array MTV
damagetype array MUV
attacktype array MWV
weapontype array MYV
integer array MZV
boolean array M_V
real array M0V
boolean array M1V
unittype array M2V
boolean array M3V
unittype array M4V
unittype array M5V
integer array M6V
real array M7V
integer array M8V
integer array M9V
integer array PVV
integer array PEV
real array PXV
integer array POV
integer array PRV
boolean array PIV
string array PAV
string array PNV
damagetype PBV=null
attacktype PCV=null
integer PDV=0
integer PFV=0
boolean PGV=false
integer PHV
integer array PJV
unit array PKV
real array PLV
real array PMV
real array PPV
real array PQV
boolexpr PSV
boolexpr PTV
group PUV
rect PWV
integer PYV=0
integer PZV=0
integer array P_V
unit array P0V
unit array P1V
real array P2V
integer array P3V
integer array P4V
integer P5V=0
integer P6V=0
integer array P7V
unit array P8V
integer array P9V
integer array QVV
integer array QEV
integer array QXV
integer QOV=0
integer QRV=0
integer array QIV
unit array QAV
unit array QNV
real array QBV
integer array QCV
integer array QDV
integer QFV=0
integer QGV=0
integer array QHV
unit array QJV
integer array QKV
integer array QLV
integer array QMV
integer array QPV
integer QQV=0
integer QSV=0
integer array QTV
unit array QUV
unit array QWV
real array QYV
integer array QZV
integer array Q_V
integer Q0V=0
integer Q1V=0
integer array Q2V
unit array Q3V
integer array Q4V
integer array Q5V
integer array Q6V
integer array Q7V
integer Q8V=0
integer Q9V=0
integer array SVV
unit array SEV
unit array SXV
real array SOV
integer array SRV
integer array SIV
integer array SAV
integer array SNV
integer SBV=0
integer SCV=0
integer array SDV
unit array SFV
effect array SGV
real array SHV
integer array SJV
integer array SKV
integer SLV=0
integer SMV=0
integer array SPV
unit array SQV
unit array SSV
unit array STV
integer array SUV
integer array SWV
integer array SYV
boolean array SZV
integer array S_V
boolean array S0V
integer array S1V
boolean array S2V
integer array S3V
real array S4V
integer array S5V
real array S6V
integer array S7V
real array S8V
integer array S9V
real array TVV
boolean array TEV
integer array TXV
timer array TOV
integer array TRV
integer array TIV
integer TAV
integer TNV=0
integer TBV=0
integer array TCV
unit array TDV
integer TFV=0
integer TGV=0
integer array THV
unit array TJV
real array TKV
real array TLV
real array TMV
real array TPV
real array TQV
real array TSV
real array TTV
real array TUV
effect array TWV
integer TYV=0
integer TZV=0
integer array T_V
unit array T0V
integer array T1V
effect array T2V
integer T3V=0
integer T4V=0
integer array T5V
unit array T6V
effect array T7V
integer T8V=0
integer T9V=0
integer array UVV
unit array UEV
real array UXV
real array UOV
real array URV
integer UIV=0
integer UAV=0
integer array UNV
unit array UBV
unit array UCV
real array UDV
integer UFV=0
integer UGV=0
integer array UHV
unit array UJV
integer UKV=0
integer ULV=0
integer array UMV
unit array UPV
unit array UQV
integer array USV
integer UTV=0
integer UUV=0
integer array UWV
unit array UYV
unit array UZV
real array U_V
real array U0V
integer U1V=0
integer U2V=0
integer array U3V
unit array U4V
unit array U5V
effect array U6V
integer array U7V
integer U8V=0
integer U9V=0
integer array WVV
timer WEV=CreateTimer()
integer WXV=0
unit array WOV
real array WRV
real array WIV
integer WAV=0
integer WNV=0
integer array WBV
unit array WCV
unit array WDV
effect array WFV
lightning array WGV
real array WHV
real array WJV
real array WKV
real array WLV
real array WMV
real array WPV
real array WQV
real array WSV
integer array WTV
timer WUV=CreateTimer()
integer WWV=0
boolean array WYV
boolean array WZV
integer W_V=0
integer W0V=0
integer array W1V
unit array W2V
effect array W3V
lightning array W4V
real array W5V
real array W6V
real array W7V
real array W8V
real array W9V
real array YVV
real array YEV
real array YXV
timer YOV=CreateTimer()
integer YRV=0
boolean array YIV
boolean array YAV
integer YNV=0
integer YBV=0
integer array YCV
real array YDV
real array YFV
real array YGV
real array YHV
unit array YJV
unit array YKV
effect array YLV
lightning array YMV
timer YPV=CreateTimer()
integer YQV=0
boolean array YSV
boolean array YTV
real array YUV
real array YWV
integer array YYV
integer YZV=0
integer Y_V=0
integer array Y0V
unit array Y1V
unit array Y2V
player array Y3V
lightning array Y4V
integer array Y5V
real array Y6V
integer array Y7V
real array Y8V
integer array Y9V
real array ZVV
integer array ZEV
real array ZXV
integer array ZOV
unit array ZRV
unit array ZIV
real array ZAV
real array ZNV
real array ZBV
real array ZCV
real array ZDV
real array ZFV
real array ZGV
real array ZHV
real array ZJV
real array ZKV
real array ZLV
effect array ZMV
effect array ZPV
integer array ZQV
real array ZSV
real array ZTV
integer ZUV=0
integer ZWV=0
integer array ZYV
unit array ZZV
unit array Z_V
player array Z0V
lightning array Z1V
integer array Z2V
real array Z3V
integer array Z4V
real array Z5V
integer array Z6V
real array Z7V
integer array Z8V
real array Z9V
integer array VVE
unit array VEE
unit array VXE
real array VOE
real array VRE
real array VIE
real array VAE
real array VNE
real array VBE
real array VCE
real array VDE
real array VFE
real array VGE
real array VHE
effect array VJE
effect array VKE
integer array VLE
real array VME
real array VPE
integer VQE=0
integer VSE=0
integer array VTE
unit array VUE
unit array VWE
player array VYE
lightning array VZE
integer array V_E
real array V0E
integer array V1E
real array V2E
integer array V3E
real array V4E
integer array V5E
real array V6E
integer array V7E
unit array V8E
unit array V9E
real array EVE
real array EEE
real array EXE
real array EOE
real array ERE
real array EIE
real array EAE
real array ENE
real array EBE
real array ECE
real array EDE
effect array EFE
effect array EGE
integer array EHE
real array EJE
real array EKE
integer ELE=0
integer EME=0
integer array EPE
unit array EQE
unit array ESE
integer array ETE
integer array EUE
real array EWE
group array EYE
integer EZE=0
integer E_E=0
integer array E0E
unit array E1E
real array E2E
real array E3E
integer array E4E
effect array E5E
integer E6E=0
integer E7E=0
integer array E8E
unit array E9E
unit array XVE
unit array XEE
real array XXE
timer array XOE
effect array XRE
boolean array XIE
integer XAE=0
integer XNE=0
integer array XBE
real array XCE
real array XDE
real array XFE
integer array XGE
integer array XHE
integer array XJE
unit array XKE
unit array XLE
integer array XME
timer array XPE
integer XQE=0
integer XSE=0
integer array XTE
unit array XUE
integer array XWE
integer XYE=0
integer XZE=0
integer array X_E
unit array X0E
real array X1E
real array X2E
real array X3E
real array X4E
real array X5E
real array X6E
real array X7E
real array X8E
real array X9E
real array OVE
real array OEE
real array OXE
real array OOE
real array ORE
effect array OIE
effect array OAE
effect array ONE
effect array OBE
effect array OCE
effect array ODE
effect array OFE
real array OGE
integer OHE=0
integer OJE=0
integer array OKE
unit array OLE
unit array OME
effect array OPE
real array OQE
integer OSE=0
integer OTE=0
integer array OUE
real array OWE
unit array OYE
integer array OZE
integer O_E=0
integer O0E=0
integer array O1E
unit array O2E
unit array O3E
real array O4E
real array O5E
integer O6E=0
integer O7E=0
integer array O8E
unit array O9E
unit array RVE
integer array REE
effect array RXE
integer ROE=0
integer RRE=0
integer array RIE
unit array RAE
unit array RNE
effect array RBE
effect array RCE
integer RDE=0
integer RFE=0
integer array RGE
unit array RHE
integer RJE=0
integer RKE=0
integer array RLE
integer array RME
unit array RPE
effect array RQE
integer RSE=0
integer RTE=0
integer array RUE
unit array RWE
integer array RYE
integer RZE=0
integer R_E=0
integer array R0E
unit array R1E
real array R2E
real array R3E
integer array R4E
real array R5E
integer R6E=0
integer R7E=0
integer array R8E
unit array R9E
integer array IVE
integer IEE=0
integer IXE=0
integer array IOE
unit array IRE
integer IIE=0
integer IAE=0
integer array INE
unit array IBE
integer array ICE
integer IDE=0
integer IFE=0
integer array IGE
unit array IHE
integer array IJE
integer IKE=0
integer ILE=0
integer array IME
unit array IPE
unit array IQE
real array ISE
integer ITE=0
integer IUE=0
integer array IWE
unit array IYE
unit array IZE
real array I_E
real array I0E
integer I1E=0
integer I2E=0
integer array I3E
unit array I4E
unit array I5E
integer array I6E
integer I7E=0
integer I8E=0
integer array I9E
real array AVE
real array AEE
unit array AXE
integer AOE=0
integer ARE=0
integer array AIE
unit array AAE
timerdialog array ANE
integer ABE=0
integer ACE=0
integer array ADE
unit array AFE
integer array AGE
real array AHE
real array AJE
real array AKE
real array ALE
real array AME
effect array APE
integer AQE
integer ASE
integer ATE
integer AUE
integer AWE
integer AWEQQ
integer AWEQ1
integer AWEQ11
integer AWEQ2
integer AWEQ3
integer AWEQ4
integer AWEQ5
integer AWEQ6
integer array AYE
integer array AZE
//timer array A_E
integer array A0E
timer array A1E
boolexpr array A2E
unit array A3E
unit array A4E
real array A5E
real array A6E
integer array A7E
integer array A8E
integer array A9E
integer array NVE
integer array NEE
integer array NXE
integer array NOE
integer array NRE
integer array NIE
trigger array NAE
trigger array NNE
integer array NBE
trigger array NCE
trigger NDE
trigger NFE
trigger NGE
trigger NHE
trigger NJE
trigger NKE
trigger NLE
trigger NME
trigger NPE
trigger NQE
trigger NSE
trigger NTE
trigger NUE
trigger NWE
trigger NYE
trigger NZE
trigger N_E
trigger N0E
trigger N1E
trigger N2E
trigger N3E
trigger N4E
trigger N5E
trigger N6E
trigger N7E
trigger N8E
trigger N9E
trigger BVE
trigger BEE
trigger BXE
trigger BOE
trigger BRE
trigger BIE
trigger BAE
trigger BNE
trigger BBE
trigger BCE
trigger BDE
trigger BFE
trigger BGE
trigger array BHE
trigger array BJE
trigger array BKE
trigger array BLE
trigger array BME
trigger array BPE
trigger array BQE
real BSE
trigger array BTE
real BUE
real BWE
unit BYE
destructable BZE
integer B_E
trigger B0E
boolexpr B1E
group B2E
integer B3E
boolean B4E
integer B5E
timer B6E=null
real B8E=.0
real B9E=.0
group CVE=null
force CEE=null
boolexpr CXE=null
group RAINBOW_GROUP=CreateGroup()

constant group MOONBLADEGROUP= CreateGroup()
unit MOONBLADECASTER

timerdialog GameModeDialog
integer array CommanderCount
constant group DandDecay__GROUP= CreateGroup()
integer DandDecay__Level
constant group DEMONIC_SINGULARITY_GROUP= CreateGroup()
unit DEMONIC_SINGULARITY_CASTER
real DEMONIC_SINGULARITY_DAMAGE
boolean array IsRangerRat
boolean array IsRangerGreen
boolean array IsRangerUseless
boolean array IsThiefRat
boolean array IsCitGod
boolean array IsAMChonk
boolean array IsQoBTyrael
boolean array IsGrakeTank
constant integer RattyRage__SPELL_ID= 'A0DX'
boolean array IsFallenOne
boolean array IsBardCustom
boolean array IsMechaSkaar
boolean array IsSkaarUseless
boolean array IsEyeRat
constant integer TankGrakeLearn__SPELL_ID= 'A0BS'
constant integer TankGrakeLearn__SPELL_ID2= 'A0K7'
unit FountainGuardWest
unit FountainGuardEast
rect NO_MANS_LAND
rect NO_MANS_LAND2
rect NO_MANS_LAND3
integer StartingIncomeVar=30
integer array Income
boolean array AutopoolOn
boolean array AutopoolOn2
unit array SummonCourier__Courier

integer array CorruptAmount
//integer array CorruptionRaised
integer array EvasionMastery__values
constant group Charge__GROUP= CreateGroup()
group Charge__GROUP2
integer Charge__DATA
unit Charge__CASTER
real Charge__DAMAGE
real Charge__ANGLE
constant integer Charge__SPELL_ID= 'A0O1'
constant string Charge__EFFECT= "Abilities\\Spells\\Orc\\FeralSpirit\\feralspirittarget.mdl"
constant string Charge__ATTACH_POINT= "chest"
constant integer TripleStrike__SPELL_ID= 'A0O4'
constant integer TripleStrike__SPELL_ID2= 'A0MI'

integer array TripleStrike
constant integer NuclearOption__SPELL_ID= 'A0KR'
unit Leapy__CASTER
real Leapy__DAMAGE
real Leapy__XX
real Leapy__YY
constant group Leapy__GROUP= CreateGroup()
constant integer RainOfFireWave21__SPELL_ID= 'A023'

constant integer ForestCall__AID= 'A034'
constant string ForestCall__ANIMATION= "attack"
constant integer ForestCall__MAX_TYPES= 3
constant integer ForestCall__MAX_LEVELS= 3
constant integer ForestCall__ARRAY_SIZE= 4
    //    private constant integer FOREST_AURA = 'A004'
group ForestCall__TreeInvocationCasters
hashtable ForestCall__activeTable
        
integer array ForestCall__treeChances
integer array ForestCall__treeType
unitpool array ForestCall__TREE_POOLS
constant integer FelBolt__ABIL_ID= 'A0KK'
constant integer SummonBloodPriestess__SPELL_ID= 'A0KW'
constant string CorruptorFear__PATH= "war3mapImported\\Poltergeist.mdx"
constant string CorruptorFear__ATTACH= "head"
integer array CorruptorFear__fearstacks
constant integer DemonicOffering__SPELL_ID= 'A0LT'

constant integer DemonicOfferingVessel__SPELL_ID= 'A0M3'

constant integer TheWitchsTithe__SPELL_ID= 'A0L9'
constant integer EternitysEnd__SPELL_ID= 'A0DI'
constant group EternitysEnd__GROUP= CreateGroup()
unit EternitysEnd__CASTER
real EternitysEnd__AMOUNT
constant integer Ragnaros__ABIL_ID= 'A0C9'
constant integer Ragnaros__ITEM_ID= 'I030'
constant integer Ragnaros__DUMMY_ID= 'h00Z'
constant integer Ragnaros__DBUFF_ID= 'A0C7'
constant group Ragnaros__GROUP= CreateGroup()
unit Ragnaros__CASTER
constant string FearItem__PATH= "war3mapImported\\Poltergeist.mdx"
constant string FearItem__ATTACH= "head"
constant integer Ragnarok__ABIL_ID= 'A0C8'
constant integer Ragnarok__ITEM_ID= 'I02V'
constant integer Ragnarok__DUMMY_ID= 'h00Z'
constant integer Ragnarok__DBUFF_ID= 'A0CA'
constant group Ragnarok__GROUP= CreateGroup()
unit Ragnarok__CASTER
real array NinjaRope__ROPE_STABLELENGTH
real array NinjaRope__ROPE_ATTACHHEIGHT
real array NinjaRope__ANGLE_INITIALVELOCITY
                                                  //so the caster will have greater Energy the further the spell 
                                                  //target location is from the caster
constant boolean NinjaRope__SPELL_CONFLICT_ON=true
integer array NinjaRope__SPELL_CONFLICT_IDS
constant integer NinjaRope__SPELL_CONFLICT_NUMBER=3
constant real NinjaRope__GRAVITY_ACCELERATION=- 981.
constant real NinjaRope__ANGLE_VELOCITYFRICTION=0.10
constant real NinjaRope__OWL_STABILISATIONTIME=1.
constant real NinjaRope__UNIT_COLLISIONRADIUS=10.
constant real NinjaRope__BOUNCE_ANGLEVELOCITYGAIN=0.1
                                                           //since our caster likes to bounce
constant real NinjaRope__UNIT_ATTACHHEIGHT=70.
constant real NinjaRope__BOUNCE_SAMPLERADIUS=4.
constant real NinjaRope__FALLINGBOLT_STEP=960. * .03125
                                                                //when it disappears
constant string NinjaRope__LIGHTNING_TYPE="ROPE"
constant integer NinjaRope__ABILITY_ID='A0DL'
constant integer NinjaRope__ABILITY_STOPID='A0DO'
constant integer NinjaRope__UNIT_ID='n00E'
location NinjaRope__LocationZ=Location(0., 0.)
real NinjaRope__z1
real NinjaRope__z2
real NinjaRope__z3
real NinjaRope__z4
        //static data
trigger NinjaRope__trg

real NinjaRope__bound_L
real NinjaRope__bound_R
real NinjaRope__bound_U
real NinjaRope__bound_B
real NinjaRope__temp
real WrathActive__DAMAGE
unit WrathActive__CASTER
group WrathActive__GROUP= CreateGroup()
unit ForTheCause__CASTER
group ForTheCause__GROUP= CreateGroup()
constant integer LAsers__SPELL_ID= 'A0M4'
boolean array IsChannelingRedLaser

location LAsers__LOC= Location(0, 0)
constant integer Soulrend__SPELL_ID= 'B062'
constant integer Soulrend__SPELL_ID2= 'B063'
boolean array RainsOn
boolean array RainbowOn
constant integer DoubleStrike__SPELL_ID= 'A0MJ'
constant integer DoubleStrike__SPELL_ID2= 'A0MI'
trigger WARGODBLEED
integer array BleedStacks
constant integer BleedingSpears__SPELL_ID= 'A0MJ'
constant integer BleedingSpears__SPELL_ID2= 'A0MK'
constant group SkewerA__GROUP= CreateGroup()
group SkewerA__GROUP2
boolean array skewered
boolean array isimpaled
unit SkewerA__CASTER
real SkewerA__DAMAGE
real SkewerA__DAMAGE2
real SkewerA__ANGLE
constant integer SkewerA__SPELL_ID= 'A0MG'
constant integer SkewerA__SPELL_ID2= 'A0MP'
constant string SkewerA__EFFECT= "Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl"
constant string SkewerA__ATTACH_POINT= "chest"
constant integer SearingAegis__SPELL_ID= 'A0ML'
constant integer SearingAegis__SPELL_ID2= 'A0MM'

constant group SearingAegis__GROUP= CreateGroup()
unit SearingAegis__CASTER
real SearingAegis__DAMAGE
real SearingAegis__CASTX
real SearingAegis__CASTY

real SearingAegis__ANGLE
constant integer MalVladisPantheon__SPELL_ID= 'A0MO'
constant integer MalVladisPantheon__UNIT_ID= 'n03Y'


constant integer MalVladisRevelry__SPELL_ID= 'A0MN'
integer array Revelry

integer array Barbarism

constant integer SearingAegisActive__ABIL_ID= 'A0ML'
unit WSLeapy__CASTER
real WSLeapy__DAMAGE
real WSLeapy__XX
real WSLeapy__YY
constant group WSLeapy__GROUP= CreateGroup()
constant integer EldritchCurse__SPELL_ID= 'A0N4'
constant integer EldritchCurse__SPELL_ID2= 'A0N3'

constant integer DemonicLightning__UNIT_ID= 'E020'
location DemonicLightning__LOC= Location(0, 0)

constant integer Felreaving__SPELL_ID= 'A0N5'
constant group Felreaving__GROUP= CreateGroup()
unit Felreaving__CASTER
real Felreaving__ANGLE
integer Felreaving__LEVEL
real Felreaving__CASTX
real Felreaving__CASTY
constant integer Felreaving__SPELL_ID2= 'A0N3'
constant integer EldCurse__SPELL_ID= 'A0N1'
constant integer EldCurse__BUFF_ID= 'B064'
integer array Diablerie
constant integer ChaosOverwhelming__SPELL_ID= 'A0ND'
constant integer ChaosOverwhelming__BUFF_ID= 'A0N9'
integer array OriginalPlayerOwner
            
constant integer VacuumBurst__SPELL_ID= 'A0L2'
            
constant integer VacuumBurst__DUM_ID= 'e001'
            
constant integer VacuumBurst__LINES= 9
            
constant integer VacuumBurst__LINES_LVL= 0
            
constant real VacuumBurst__DAMAGE= 50.0
            
constant real VacuumBurst__DAMAGE_LVL= 5.0
            
constant real VacuumBurst__DAMAGE_AOE= 100.0
            
constant real VacuumBurst__DISTANCE= 850.0
            
constant real VacuumBurst__SPEED_FORTH= 20.0
            
constant real VacuumBurst__SPEED_BACK= 35.0
            
constant real VacuumBurst__SUMMON_DIST= 50.0
            
constant real VacuumBurst__VACUUM_SPEED= 40.0
            
constant real VacuumBurst__VACUUM_Z= 350.0
            
constant attacktype VacuumBurst__A_TYPE= ATTACK_TYPE_NORMAL
            
constant damagetype VacuumBurst__D_TYPE= DAMAGE_TYPE_MAGIC
            
constant player VacuumBurst__DUM_OWNER= Player(PLAYER_NEUTRAL_PASSIVE)
            
constant string VacuumBurst__ATTACH= "origin"
            
constant string VacuumBurst__MODEL= "Abilities\\Spells\\Other\\Tornado\\TornadoElemental"
            
constant string VacuumBurst__TARGETFX= "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl"
constant real VacuumBurst__periodic=0.031250
constant group VacuumBurst__grp=CreateGroup()
constant timer VacuumBurst__tmr=CreateTimer()
integer VacuumBurst__ix=0
integer array VacuumBurst__ic
integer VacuumBurst__link=0
            
constant timer VacuumBurst__vtmr=CreateTimer()
integer VacuumBurst__vix=0
integer array VacuumBurst__vic
integer array DeathStacks
constant integer DeathBolt__ABIL_ID= 'A0K5'
integer array EvasionMasterySkeleton__values
constant integer NexusDamageBonus__SPELL_ID= 'A02J'
constant integer BardSelfGrace__SPELL_ID= 'A03F'
constant integer UnnervingSymphony__SPELL_ID= 'A0BX'
constant group UnnervingSymphony__GROUP= CreateGroup()
integer array UnnervingSymphony__EffectCount
unit UnnervingSymphony__CASTER
real UnnervingSymphony__DURATION

constant integer FlameTurbine__SPELL_ID= 'A0JU'
group FlameTurbine__GROUP= CreateGroup()
unit FlameTurbine__CASTER
location FlameTurbine__LOC= Location(0., 0.)
boolean array HasRecentlyBeenHit
constant integer EverlastingFlame__SPELL_ID= 'A0K3'
constant integer EverlastingFlame__UNIT_ID= 'h01T'
group EverlastingFlame__GROUP= CreateGroup()
unit EverlastingFlame__CASTER
boolean array IsChannelingEverlasting
constant integer MarkofBaal__SPELL_ID= 'A0JX'
unit array firerune
location MarkofBaal__LOC= Location(0., 0.)
integer array runecount
constant integer FlameRuneManual__SPELL_ID= 'A0K0'
constant integer FlameRuneManual__SPELL_ID2= 'A0JX'
group FlameRuneManual__GROUP= CreateGroup()
unit FlameRuneManual__CASTER
constant integer FlameRuneAuto__SPELL_ID= 'A0K1'
constant integer FlameRuneAuto__SPELL_ID2= 'A0JX'
group FlameRuneAuto__GROUP= CreateGroup()
unit FlameRuneAuto__CASTER
constant integer MarkofBaalLearn__SPELL_ID= 'A0JX'
constant integer MarkofBaalLearn__SPELL_ID2= 'A0K1'
constant integer MoltenWaveCast__SPELL_ID= 'A0JV'
constant integer MoltenWaveCast__SPELL_ID2= 'A0JW'

trigger MOLTENWAVE
constant integer MoltenWaveActions__SPELL_ID= 'A0JV'
trigger FIRELORDBURN
integer array FirelordBurnStacks
integer array Fervor
boolean array HasExploded
group ALLSHALLBURN__GROUP= CreateGroup()
unit ALLSHALLBURN__CASTER
real ALLSHALLBURN__DAMAGE
trigger PUDDLEBURNING
trigger FLAMELASER
trigger TOXIAPOISON
integer array ToxiaPoisonStacks
constant integer EnchantWeapons__SPELL_ID= 'A0NL'
location EnchantWeapons__LOC= Location(0, 0)
constant integer CalltoArms__SPELL_ID= 'A0JI'

constant integer EnforceTaxes__SPELL_ID= 'A0JB'
constant integer EnforcerStrengthBuff__SPELL_ID= 'A0C5'
unit array ShatteredVeil
constant integer PiercetheVeil__SPELL_ID= 'A0FI'
constant integer PiercetheVeil__DEBUFF_ID= 'A0FP'
constant string PiercetheVeil__SFX_AOE= "war3mapImported\\DarkChakraExplosion.mdx"

group PiercetheVeil__GROUP= CreateGroup()
unit PiercetheVeil__CASTER
real PiercetheVeil__DAMAGE= 0
constant integer AetherShot__ABIL_ID= 'A0EN'
constant integer AetherShot__ABIL_ID2= 'A0EO'
constant integer ManaBolt__SPELL_ID= 'A0EW'
integer array AETHER_BUFF_LVL
constant integer AetherInfusion__SPELL_ID= 'A0ES'
constant integer AetherInfusion__SPELL_ID2= 'A0ER'
constant integer AetherFlare__SPELL_ID= 'A0EX'
constant string AetherFlare__SFX_AOE= "war3mapImported\\LightningNova.mdx"
constant string AetherFlare__SFX_LASER= "war3mapImported\\LaserStrikeSingle.mdx"

group AetherFlare__GROUP= CreateGroup()
unit AetherFlare__CASTER
real AetherFlare__DAMAGE= 0
constant integer AetherealActive__CAST_ID= 'A0EY'
constant integer AetherealActive__SPELL_ID= 'A0EK'
constant integer AetherealActive__SPELL_ID2= 'A0EN'
constant integer AetherealActive__SPELL_ID3= 'A0EO'
constant integer AetherealActive__SPELL_ID4= 'A0EP'
constant string AetherealActive__SFX_PATH= "war3mapImported\\AncientExplodeBlue.mdx"

real array DE_AOE
real array DE_BaseVelocity
real array DE_CurrentDeathTimer
real array DE_CurrentDuration
effect array DE_CurrentEffect
real array DE_CurrentShardDelay
real array DE_CurrentZ
real array DE_Duration
group DE_GravitatedShard= CreateGroup()
real array DE_HealthDamage
integer DE_LastNode
real array DE_ManaDamage
real DE_MapMaxX
real DE_MapMaxY
real DE_MapMinX
real DE_MapMinY
real array DE_Mass
integer array DE_NextNode
integer DE_NodeNumber
unit array DE_OriginalCaster
unit array DE_Portal
real array DE_PortalHeight
real array DE_PortalX
real array DE_PortalY
real array DE_PortalZ
integer array DE_PrevNode
real array DE_Radius
integer array DE_RecycleNodes
integer DE_RecycleableNodes
real array DE_ShardAOE
real array DE_ShardScale
real array DE_SpawnRate
integer DE_SpellCounter
integer array DE_StageID
group DE_TempGroup= CreateGroup()
unit array DE_Unit
real array DE_XVelocity
real array DE_YVelocity
location DE_ZLoc
real array DE_ZVelocity
integer array CORE_LVL
constant integer Ascension__SPELL_ID= 'A0EK'
constant integer Ascension__SPELL_ID2= 'A0EN'
 
constant integer Ascension__SPELL_ID3= 'A0EO'
constant integer Ascension__SPELL_ID4= 'A0EP'
constant integer AetherealMastery__SPELL_ID= 'A0EY'
constant integer AetherealMastery__SPELL_ID1= 'A0EW'
constant integer AetherealMastery__SPELL_ID2= 'A0ES'
constant integer AetherealMastery__SPELL_ID3= 'A0EX'
integer AetherealMastery__CASTS
group AetherealMastery__GROUP= CreateGroup()
unit AetherealMastery__CASTER
unit array AetherealMastery__RANDOMU
integer AetherealMastery__RANDOMI= 0
trigger PUDDLESPLASHING
real array Drown__DE_AOE
real array Drown__DE_BaseVelocity
real array Drown__DE_CurrentDeathTimer
real array Drown__DE_CurrentDuration
effect array Drown__DE_CurrentEffect
real array Drown__DE_CurrentShardDelay
real array Drown__DE_CurrentZ
real array Drown__DE_Duration
group Drown__DE_GravitatedShard= CreateGroup()
real array Drown__DE_HealthDamage
integer Drown__DE_LastNode
real array Drown__DE_ManaDamage
real Drown__DE_MapMaxX
real Drown__DE_MapMaxY
real Drown__DE_MapMinX
real Drown__DE_MapMinY
real array Drown__DE_Mass
integer array Drown__DE_NextNode
integer Drown__DE_NodeNumber
unit array Drown__DE_OriginalCaster
unit array Drown__DE_Portal
real array Drown__DE_PortalHeight
real array Drown__DE_PortalX
real array Drown__DE_PortalY
real array Drown__DE_PortalZ
integer array Drown__DE_PrevNode
real array Drown__DE_Radius
integer array Drown__DE_RecycleNodes
integer Drown__DE_RecycleableNodes
real array Drown__DE_ShardAOE
real array Drown__DE_ShardScale
real array Drown__DE_SpawnRate
integer Drown__DE_SpellCounter
integer array Drown__DE_StageID
group Drown__DE_TempGroup= CreateGroup()
unit array Drown__DE_Unit
real array Drown__DE_XVelocity
real array Drown__DE_YVelocity
location Drown__DE_ZLoc
real array Drown__DE_ZVelocity
constant integer GluttonyPas__SPELL_ID= 'A0BQ'
constant integer TemperancePas__SPELL_ID= 'A0BP'
constant group TemperanceA__GROUP= CreateGroup()
group TemperanceA__GROUP2
unit TemperanceA__CASTER
real TemperanceA__DAMAGE
constant integer TemperanceA__SPELL_ID= 'A0BP'
constant integer TemperanceA__OTHER_ID= 'A0BQ'
constant integer TemperanceA__RESET_ID= 'A0B5'
constant string TemperanceA__EFFECT= "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
constant string TemperanceA__ATTACH_POINT= "chest"
constant group GluttonyA__GROUP= CreateGroup()
group GluttonyA__GROUP2
unit GluttonyA__CASTER
real GluttonyA__DAMAGE
constant integer GluttonyA__SPELL_ID= 'A0BQ'
constant integer GluttonyA__OTHER_ID= 'A0BP'
constant integer GluttonyA__RESET_ID= 'A0B5'
constant string GluttonyA__EFFECT= "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
constant string GluttonyA__ATTACH_POINT= "chest"
constant integer Execute__SPELL_ID= 'A0BV'
constant integer Execute__STUN_ID= 'A06P'
group Execute__GROUP= CreateGroup()
unit Execute__CASTER
integer array VoracityInt
constant integer Voracity__SPELL_ID= 'A0B5'
constant integer Voracity__SPELL_ID2= 'A0D4'
constant integer Voracity__ARM_ID= 'A0B5'
constant integer HappyHour__SPELL_ID= 'A0GI'

constant group HappyHour__GROUP= CreateGroup()
unit HappyHour__CASTER
real HappyHour__HEAL
trigger HALLUCINATIONDAMAGE

integer array SpellStealCounter
integer array SpellStealID

constant integer SpellSteal__SPELL_ID= 'A0MV'

constant integer ThiefIllusVenom__SPELL_ID= 'A0DG'
unit ThiefIllusVenom__CASTER
unit ThiefIllusVenom__HIT
real array THIEFSWAG
constant integer UndyingFlame__SPELL_ID= 'A0IW'
constant integer Bloodbath__SPELL_ID= 'A03H'

constant group Bloodbath__GROUP= CreateGroup()
unit Bloodbath__CASTER
real Bloodbath__DMG
constant integer BloodHydrant__SPELL_ID= 'A0N2'
boolean array BloodHydrant__NoStack
unit BLOODHYDRANTCASTER
unit BLOODHYDRANTTARGET
constant integer NissaBinding__SPELL_ID= 'A0CY'
constant integer NissaBinding__SPELL_ID2= 'A08H'

constant group NissaBinding__GROUP= CreateGroup()
unit NissaBinding__CASTER
constant integer MassCharm__SPELL_ID= 'A0HC'

constant group MassCharm__GROUP= CreateGroup()
unit MassCharm__CASTER
        //Spell rawcode, change if needed
constant integer ShadowImageBlink__SPELL_ID=   'A0CU'
        //
constant integer ShadowImageBlink__SPOOKED_ID= 'A0CI'
        
constant integer ShadowImageBlink__DSPELL_ID=   'A001'
        //Dummy unit rawcode (Bolt model) change if needed
constant integer ShadowImageBlink__DUMMY_BOLT=   'e000'
        //Dummy caster rawcode, change if needed
constant integer ShadowImageBlink__CASTER_DUMMY=   'h007'
        //Crow Form ability
constant integer ShadowImageBlink__CROW_FORM=   'Amrf'
        
        //Animation play when the caster casting this spell
constant string ShadowImageBlink__ANIMATION=   "spell"
        //Effect of spell
constant string ShadowImageBlink__BLINK_CAST=   "war3mapImported\\WarpDarkTarget.mdx"
        //Effect of spell when begin & end spell
constant string ShadowImageBlink__BLINK_END=   ".mdl"
        //Attachment of the caster when spell end (Using BLINK_END effect) 
constant string ShadowImageBlink__ATTACHMENT=   "chest"
        //Order id of dummy caster casting the dummy ability
constant string ShadowImageBlink__ORDER_ID=   "thunderbolt"
        //Dummy owner
constant player ShadowImageBlink__DUMMY_OWNER= Player(15)
        //******************************DAMAGE DATA SETTINGS******************************
constant attacktype ShadowImageBlink__ATTACK_TYPE=   ATTACK_TYPE_HERO
constant damagetype ShadowImageBlink__DAMAGE_TYPE=   DAMAGE_TYPE_DEATH
constant weapontype ShadowImageBlink__WEAPON_TYPE=   WEAPON_TYPE_CLAW_HEAVY_SLICE
        //********************************************************************************
        
        //Damage radius
constant real ShadowImageBlink__DAMAGE_RADIUS=   300.
        //Damage base of this spell
constant real ShadowImageBlink__DAMAGE_BASE=   50.
        //Animation speed of the caster unit when this spell is used
constant real ShadowImageBlink__ANIMATION_SPEED=   0.43
        //Spell period
constant real ShadowImageBlink__PERIODIC=   .031250000
        //Virtual caster speed separator
constant real ShadowImageBlink__SPERATION_SPEED=   20.
        //Max height of the ball power
constant real ShadowImageBlink__MAX_HEIGHT=   1000.
        
                                
constant integer ShadowImageBlink__FADE_COUNT=   10
constant integer ShadowImageBlink__FADE_FLASH=   85
constant integer ShadowImageBlink__FADE_SPEED=   10
        //********************************************************
        
        //***************************Non - Configurable*****************************
        
constant group ShadowImageBlink__G=   CreateGroup()
        
integer ShadowImageBlink__MUI=   - 1
        
integer array ShadowImageBlink__StructData
        
constant timer ShadowImageBlink__TIMER=   CreateTimer()
        //**************************************************************************
unit ShadowImageBlink__Dummy
        //**************************************************************************
        
constant integer AoEFearDoT__SPELL_ID= 'A0CK'
constant integer AoEFearDoT__SPOOKED_ID= 'A0CI'
constant integer AoEFearDoT__SFX_ID= 'A0CG'
constant string AoEFearDoT__SFX= "war3mapImported\\MindRipper.mdx"
 //private constant integer IAS_ID = 'A05W'
constant string AoEFearDoT__SFX_PATH= "war3mapImported\\Desecrate.mdx"
constant string AoEFearDoT__SFX_PATH2= "war3mapImported\\Doomsday.mdx"

constant group AoEFearDoT__GROUP= CreateGroup()
unit AoEFearDoT__CASTER
constant integer FearUltimate__SPELL_ID= 'A0CQ'
constant string FearUltimate__PATHM= "war3mapImported\\GatherSouls.mdx"
constant string FearUltimate__PERIODIC_P= "war3mapImported\\Curse.mdx"
constant string FearUltimate__ATTACHM= "origin"
constant string FearUltimate__PATH= "war3mapImported\\Poltergeist.mdx"
constant string FearUltimate__ATTACH= "overhead"
unit array FearUltimate__RANDOMU
integer FearUltimate__RANDOMI= 0
constant group FearUltimate__GROUP= CreateGroup()
unit FearUltimate__CASTER
        //Spell rawcode, change if needed
constant integer FearUlti4Illusion__SPELL_ID=   'A0AH'
        
constant integer FearUlti4Illusion__SPELL_ID_ORIG=   'A0CQ'
        
constant integer FearUlti4Illusion__SPOOKED_ID= 'A0CI'
        //
constant integer FearUlti4Illusion__UNIT_ID=   'h011'
        
constant integer FearUlti4Illusion__DSPELL_ID=   'A001'
        //Dummy unit rawcode (Bolt model) change if needed
constant integer FearUlti4Illusion__DUMMY_BOLT=   'e000'
        //Dummy caster rawcode, change if needed
constant integer FearUlti4Illusion__CASTER_DUMMY=   'e001'
        //Crow Form ability
constant integer FearUlti4Illusion__CROW_FORM=   'Amrf'
        
        //Animation play when the caster casting this spell
constant string FearUlti4Illusion__ANIMATION=   "attack"
        //Effect of spell
constant string FearUlti4Illusion__BLINK_CAST=   "war3mapImported\\WarpDarkTarget.mdx"
        //Effect of spell when begin & end spell
constant string FearUlti4Illusion__BLINK_END=   ".mdl"
        //Attachment of the caster when spell end (Using BLINK_END effect) 
constant string FearUlti4Illusion__ATTACHMENT=   "chest"
        //Order id of dummy caster casting the dummy ability
constant string FearUlti4Illusion__ORDER_ID=   "thunderbolt"
        //Dummy owner
constant player FearUlti4Illusion__DUMMY_OWNER= Player(15)
        //******************************DAMAGE DATA SETTINGS******************************
constant attacktype FearUlti4Illusion__ATTACK_TYPE=   ATTACK_TYPE_HERO
constant damagetype FearUlti4Illusion__DAMAGE_TYPE=   DAMAGE_TYPE_DEATH
constant weapontype FearUlti4Illusion__WEAPON_TYPE=   WEAPON_TYPE_METAL_HEAVY_SLICE
        //********************************************************************************
        
        //Damage radius
constant real FearUlti4Illusion__DAMAGE_RADIUS=   300.
        //Damage base of this spell
constant real FearUlti4Illusion__DAMAGE_BASE=   50.
        //Animation speed of the caster unit when this spell is used
constant real FearUlti4Illusion__ANIMATION_SPEED=   0.43
        //Spell period
constant real FearUlti4Illusion__PERIODIC=   .031250000
        //Virtual caster speed separator
constant real FearUlti4Illusion__SPERATION_SPEED=   20.
        //Max height of the ball power
constant real FearUlti4Illusion__MAX_HEIGHT=   1000.
        
                                
constant integer FearUlti4Illusion__FADE_COUNT=   10
constant integer FearUlti4Illusion__FADE_FLASH=   85
constant integer FearUlti4Illusion__FADE_SPEED=   20
        //********************************************************
        
        //***************************Non - Configurable*****************************
        
constant group FearUlti4Illusion__G=   CreateGroup()
        
integer FearUlti4Illusion__MUI=   - 1
        
integer array FearUlti4Illusion__StructData
        
constant timer FearUlti4Illusion__TIMER=   CreateTimer()
        //**************************************************************************
unit FearUlti4Illusion__Dummy
        //**************************************************************************
        
constant integer AoEFearSpell__SPELL_ID= 'A0CL'
constant integer AoEFearSpell__SPOOKED_ID= 'A0CI'
constant string AoEFearSpell__PATH= "war3mapImported\\Poltergeist.mdx"
constant string AoEFearSpell__PATH_2= "war3mapImported\\CallOfAggression.mdx"
constant string AoEFearSpell__ATTACH= "head"
constant integer ChatatadrusLight__SPELL_ID= 'A0OA'
integer array ChatatadrusLight__StackCount
constant integer RighteousWrath___SPELL_ID= 'A05N'
integer array RWStacks
constant integer Devastate___SPELL_ID= 'A0FS'
location Devastate___loc= Location(0., 0.)
constant group Devastate___GROUP= CreateGroup()
unit Devastate___CASTER
real Devastate___X
real Devastate___Y
constant real Decay___FPS= 0.0312500
constant integer Decay___SPELL_ID= 'A061'
group Decay___GROUP=CreateGroup()
group Decay___SWAP=CreateGroup()
group Decay___TEMP
integer array Decay___STACKS
constant integer SoldiersofFortune___ABIL_ID= 'A0GX'
constant integer SoldiersofFortune___UNIT_1= 'o007'
constant integer SoldiersofFortune___UNIT_2= 'h01E'
 
constant integer SoldiersofFortune___UNIT_3= 'h01B'
constant integer SoldiersofFortune___UNIT_4= 'h01D'
real array SoldiersofFortune_ThunderboltDmg
constant integer ArcaneDrain___ABIL_ID= 'A0GJ'
constant integer LuckyShot___ABIL_ID= 'A0GN'
constant integer LightningBolt___ABIL_ID= 'A0GO'
constant integer DrawABead___SPELL_ID= 'A0H1'
constant integer PaladinTaunt___SPELL_ID= 'A0GT'

constant group PaladinTaunt___GROUP= CreateGroup()
unit PaladinTaunt___CASTER
constant integer EternalBattlethirstActive___ABIL_ID= 'A0GW'
constant integer PaladinHeal___ABIL_ID= 'A0GS'
constant integer AppleofEden___ABIL_ID= 'A0GR'
integer array EffectCount
constant integer FaustianBargain___ABIL_ID= 'A0GY'
constant integer FaustianBargain___NOSTACK_ID= 'A0GF'
constant integer RecklessGreed___ABIL_ID= 'A0GZ'
integer array SinisterCInt
boolean array SinisterCreed_TraderResBonus
constant integer SinisterCreed___SPELL_ID= 'A0GD'
constant integer SinisterCreed___SPELL_ID2= 'A0GC'
constant integer SanctifiedArmor___ABIL_ID= 'A0GQ'
constant integer EternalBattlethirstPas___BUFF_ID= 'B04X'
constant integer RecklessnessTaunt___SPELL_ID= 'A0GU'

constant group RecklessnessTaunt___GROUP= CreateGroup()
unit RecklessnessTaunt___CASTER
constant integer TestFear___SPELL_ID= 'A00M'
constant string TestFear___PATH= "war3mapImported\\ScaredSkullMissile.mdx"
constant string TestFear___PATH_2= ".mdl"
constant string TestFear___ATTACH= "overhead"
constant integer TerrorCrush___SPELL_ID= 'A0NO'
constant group TerrorCrush___GROUP= CreateGroup()
unit TerrorCrush___CASTER
constant integer VoidShackles___SPELL_ID= 'A0HR'
constant integer VoidShackles___SPELL_ID2= 'A0HQ'
constant group VoidShackles___GROUP= CreateGroup()
unit VoidShackles___CASTER
location VoidShackles___loc= Location(0, 0)
rect TEMP_RECT= Rect(0, 0, 0, 0)
constant integer TerrorPickUpItems___SPELL_ID= 'A0HD'
unit TerrorPickUpItems___CASTER
constant integer Bless___SPELL_ID= 'A0IG'
integer array BlessEffectCount
constant group Bless___GROUP= CreateGroup()
unit Bless___CASTER
constant integer BloodDanceDamageBonus___SPELL_ID= 'A09A'
constant integer Earthsplitter___SPELL_ID= 'A0NZ'
group Earthsplitter___GROUP= CreateGroup()
unit Earthsplitter___CASTER

constant integer PulverizeCDR___SPELL_ID= 'A04C'
constant integer PulverizeCDR___SPELL_ID2= 'A0DA'
constant integer PulverizeCDR___SPELL_ID3= 'A0NZ'
constant integer PulverizeCDR___SPELL_ID4= 'A027'
constant integer DemonSpawn___SPELL_ID= 'A0HY'

constant integer ReignofDeath___SPELL_ID= 'A0IC'
constant group ReignofDeath___GROUP= CreateGroup()
unit ReignofDeath___CASTER
real ReignofDeath___DAMAGE= 0.
constant integer ViciousVice___SPELL_ID= 'A0I8'
constant integer InfernalMartyr___SPELL_ID= 'A0I2'

constant group InfernalMartyr___GROUP= CreateGroup()
unit InfernalMartyr___CASTER
constant group FallingSword___GROUP= CreateGroup()
unit FallingSword___CASTER
constant integer FallingSword___SPELL_ID= 'A0HX'
real FallingSword___DAMAGE= 0.
constant integer ImpenetrableFortress___SPELL_ID= 'A0IB'

trigger l__library_init

//JASSHelper struct globals:
constant integer si__Fear=1
unit array s__Fear_targ
string array s__Fear_path
string array s__Fear_attach
effect array s__Fear_e
boolean array s__Fear_b
integer array s__Fear_steps
integer array s__Fear_startat
timer s__Fear_period
integer s__Fear_dindex
integer array s__Fear_data
integer s__Fear_instanceCount
integer s__Fear_recycle
integer array s__Fear_recycleNext
constant integer si__ItemSet__ItemSetBonus=2
integer s__ItemSet__ItemSetBonus_alloc= 0
integer array s__ItemSet__ItemSetBonus_requiredItems
integer array s__ItemSet__ItemSetBonus_bonus
integer array s__ItemSet__ItemSetBonus_bonusType
real array s__ItemSet__ItemSetBonus_itemPowerAmount
integer array s__ItemSet__ItemSetBonus_bonusAmount
constant integer si__ItemSet=3
constant integer s__ItemSet_COMPLETE= 0
constant integer s__ItemSet_INCOMPLETE= 1
unit s__ItemSet_triggerUnit= null
integer s__ItemSet_triggerEventId= - 1
integer s__ItemSet_triggerItemSet= 0
integer s__ItemSet_alloc= 0
string array s__ItemSet_name
integer array s__ItemSet_bonuses
integer array s__ItemSet_maxItemCount
string array s__ItemSet_sfx
string array s__ItemSet_point
hashtable s__ItemSet_hash= InitHashtable()
trigger s__ItemSet_incompleted= CreateTrigger()
trigger s__ItemSet_completed= CreateTrigger()
constant integer s__ItemSet_BUFF_BUFF_ID_OFFSET= 20000
constant integer s__ItemSet_BUFF_ABILITY_ID_OFFSET= 10000
constant integer si__LineSegment=4
constant real s__LineSegment_MAX_UNIT_COLLISION= 197.00
constant rect s__LineSegment_RECT= Rect(0, 0, 0, 0)
constant group s__LineSegment_GROUP= CreateGroup()
real s__LineSegment_ox
real s__LineSegment_oy
real s__LineSegment_dx
real s__LineSegment_dy
real s__LineSegment_da
real s__LineSegment_db
real s__LineSegment_ui
real s__LineSegment_uj
real s__LineSegment_wdx
real s__LineSegment_wdy
integer s__LineSegment_DestructableCounter= - 1
destructable array s__LineSegment_Destructable
integer s__LineSegment_ItemCounter= - 1
item array s__LineSegment_Item
constant integer si__NewBonus=5
integer si__NewBonus_F=0
integer si__NewBonus_I=0
integer array si__NewBonus_V
constant integer si__TimedL=6
lightning array s__TimedL_l
real array s__TimedL_av
real array s__TimedL_da
real array s__TimedL_x1
real array s__TimedL_x2
real array s__TimedL_y1
real array s__TimedL_y2
real array s__TimedL_z1
real array s__TimedL_z2
real array s__TimedL_dx1
real array s__TimedL_dy1
real array s__TimedL_dz1
real array s__TimedL_dx2
real array s__TimedL_dy2
real array s__TimedL_dz2
unit array s__TimedL_s
unit array s__TimedL_t
integer array s__TimedL_time
integer array s__TimedL_next
integer array s__TimedL_prev
boolean array s__TimedL_moves
integer s__TimedL_rlast= 0
integer s__TimedL_first
integer s__TimedL_ic= 0
integer s__TimedL_ir= 0
integer array s__TimedL_rn
integer s__TimedL_dat
integer s__TimedL_dat2
integer s__TimedL_dat3
constant integer si__Schadenfreude=7
integer si__Schadenfreude_F=0
integer si__Schadenfreude_I=0
integer array si__Schadenfreude_V
unit array s__Schadenfreude_u
integer array s__Schadenfreude_i
constant integer si__NewBonusUtils__NewBonusUtils=8
timer s__NewBonusUtils__NewBonusUtils_timer= CreateTimer()
integer s__NewBonusUtils__NewBonusUtils_key= - 1
integer array s__NewBonusUtils__NewBonusUtils_array
integer s__NewBonusUtils__NewBonusUtils_k= - 1
integer array s__NewBonusUtils__NewBonusUtils_items
unit array s__NewBonusUtils__NewBonusUtils_unit
item array s__NewBonusUtils__NewBonusUtils_item
real array s__NewBonusUtils__NewBonusUtils_ticks
integer array s__NewBonusUtils__NewBonusUtils_type
integer array s__NewBonusUtils__NewBonusUtils_buff
real array s__NewBonusUtils__NewBonusUtils_amount
boolean array s__NewBonusUtils__NewBonusUtils_link
constant integer si__ProgressBar=9
integer si__ProgressBar_F=0
integer si__ProgressBar_I=0
integer array si__ProgressBar_V
unit array s__ProgressBar_bar
unit array s__ProgressBar_target
real array s__ProgressBar_xOffset
real array s__ProgressBar_yOffset
timer array s__ProgressBar_timer
timer array s__ProgressBar_timer2
boolean array s__ProgressBar_t_enabled
real array s__ProgressBar_endVal
real array s__ProgressBar_curVal
real array s__ProgressBar_pspeed
boolean array s__ProgressBar_reverse
boolean array s__ProgressBar_done
boolean array s__ProgressBar_recycle
unit array s__ProgressBar_dummy
integer s__ProgressBar_lastDummyIndex= - 1
constant integer si__Shops=10
hashtable s__Shops_items
integer array s__Shops_itemnum
integer s__Shops_instanceCount= 0
integer s__Shops_recycle= 0
integer array s__Shops_recycleNext
constant integer si__MainShops=11
integer s__MainShops_instanceCount= 0
integer s__MainShops_recycle= 0
integer array s__MainShops_recycleNext
integer array s__MainShops_baseItem
constant integer si__SpellEffectEvent__S=12
hashtable s__SpellEffectEvent__S_ht= InitHashtable()
constant integer si__SpiderPoison__SP=13
integer si__SpiderPoison__SP_F=0
integer si__SpiderPoison__SP_I=0
integer array si__SpiderPoison__SP_V
unit array s__SpiderPoison__SP_c
unit array s__SpiderPoison__SP_t
integer array s__SpiderPoison__SP_i
effect array s__SpiderPoison__SP_fx
constant integer si__Roflcopter__instance=14
integer si__Roflcopter__instance_F=0
integer si__Roflcopter__instance_I=0
integer array si__Roflcopter__instance_V
integer array s__Roflcopter__instance_n
unit array s__Roflcopter__instance_u
real array s__Roflcopter__instance_bs
real array s__Roflcopter__instance_rs
real array s__Roflcopter__instance_d
real array s__Roflcopter__instance_a
integer array s__Roflcopter__instance_lv
constant integer si__Roflcopter__roflcopter=15
integer si__Roflcopter__roflcopter_F=0
integer si__Roflcopter__roflcopter_I=0
integer array si__Roflcopter__roflcopter_V
texttag array s__Roflcopter__roflcopter_t
integer array s__Roflcopter__roflcopter_i
real array s__Roflcopter__roflcopter_x
real array s__Roflcopter__roflcopter_y
real array s__Roflcopter__roflcopter_l
real array s__Roflcopter__roflcopter_a
timer array s__Roflcopter__roflcopter_bp
timer array s__Roflcopter__roflcopter_sp
integer array s__Roflcopter__roflcopter_p
integer array s__Roflcopter__roflcopter_II___I
integer s__Roflcopter__roflcopter_II___c= 0
integer array s__Roflcopter__roflcopter_II___i
boolean array s__Roflcopter__roflcopter_II___b
constant integer si__Roflcopter__bomb=16
integer si__Roflcopter__bomb_F=0
integer si__Roflcopter__bomb_I=0
integer array si__Roflcopter__bomb_V
integer s__Roflcopter__bomb_This
group s__Roflcopter__bomb_g= CreateGroup()
texttag array s__Roflcopter__bomb_t
integer array s__Roflcopter__bomb_i
real array s__Roflcopter__bomb_x
real array s__Roflcopter__bomb_y
real array s__Roflcopter__bomb_h
integer array s__Roflcopter__bomb_II___I
integer s__Roflcopter__bomb_II___c= 0
integer array s__Roflcopter__bomb_II___i
boolean array s__Roflcopter__bomb_II___b
constant integer si__RattyRage__RatR=17
integer si__RattyRage__RatR_F=0
integer si__RattyRage__RatR_I=0
integer array si__RattyRage__RatR_V
integer array s__RattyRage__RatR_i
unit array s__RattyRage__RatR_u
boolean array s__RattyRage__RatR_b
constant integer si__Prot=18
integer si__Prot_F=0
integer si__Prot_I=0
integer array si__Prot_V
unit array s__Prot_p
constant integer si__NoMansLand__Noman=19
integer si__NoMansLand__Noman_F=0
integer si__NoMansLand__Noman_I=0
integer array si__NoMansLand__Noman_V
unit array s__NoMansLand__Noman_u
effect array s__NoMansLand__Noman_e
constant integer si__Autopool__AP=20
integer si__Autopool__AP_F=0
integer si__Autopool__AP_I=0
integer array si__Autopool__AP_V
player array s__Autopool__AP_pooler
player array s__Autopool__AP_poolee
constant integer si__GlythidesGift__Glyth=21
integer si__GlythidesGift__Glyth_F=0
integer si__GlythidesGift__Glyth_I=0
integer array si__GlythidesGift__Glyth_V
unit array s__GlythidesGift__Glyth_u
player array s__GlythidesGift__Glyth_p
integer array s__GlythidesGift__Glyth_i
constant integer si__Charge__TempA=22
integer si__Charge__TempA_F=0
integer si__Charge__TempA_I=0
integer array si__Charge__TempA_V
unit array s__Charge__TempA_c
real array s__Charge__TempA_dmg
real array s__Charge__TempA_x
real array s__Charge__TempA_y
real array s__Charge__TempA_a
group array s__Charge__TempA_g
effect array s__Charge__TempA_fx1
integer array s__Charge__TempA_current
constant integer si__Leapy__Leapy=23
integer si__Leapy__Leapy_F=0
integer si__Leapy__Leapy_I=0
integer array si__Leapy__Leapy_V
unit array s__Leapy__Leapy_c
unit array s__Leapy__Leapy_t
real array s__Leapy__Leapy_d
real array s__Leapy__Leapy_h
effect array s__Leapy__Leapy_fx
effect array s__Leapy__Leapy_fx2
integer si__chancesPerTreeType_I=0
integer si__chancesPerTreeType_F=0
real array s__chancesPerTreeType
constant integer s__chancesPerTreeType_size=4
integer array si__chancesPerTreeType_V
constant integer si__ForestCall__MyStruct=25
integer si__ForestCall__MyStruct_F=0
integer si__ForestCall__MyStruct_I=0
integer array si__ForestCall__MyStruct_V
unit array s__ForestCall__MyStruct_caster
integer array s__ForestCall__MyStruct_level
timer array s__ForestCall__MyStruct_cycleTimer
real array s__ForestCall__MyStruct_spellLocX
real array s__ForestCall__MyStruct_spellLocY
group array s__ForestCall__MyStruct_dummyEffects
group array s__ForestCall__MyStruct_trees
constant integer si__FelBolt__LB=26
integer si__FelBolt__LB_F=0
integer si__FelBolt__LB_I=0
integer array si__FelBolt__LB_V
integer array s__FelBolt__LB_cast
effect array s__FelBolt__LB_hl
effect array s__FelBolt__LB_hr
unit array s__FelBolt__LB_u
unit array s__FelBolt__LB_t
real array s__FelBolt__LB_dmg
real array s__FelBolt__LB_time
boolean array s__FelBolt__LB_mob
constant integer si__CorruptorFear__FearIS=27
integer si__CorruptorFear__FearIS_F=0
integer si__CorruptorFear__FearIS_I=0
integer array si__CorruptorFear__FearIS_V
unit array s__CorruptorFear__FearIS_u
unit array s__CorruptorFear__FearIS_c
integer array s__CorruptorFear__FearIS_i
integer array s__CorruptorFear__FearIS_p
constant integer si__Ragnaros__Ragnas2=28
integer si__Ragnaros__Ragnas2_F=0
integer si__Ragnaros__Ragnas2_I=0
integer array si__Ragnaros__Ragnas2_V
unit array s__Ragnaros__Ragnas2_u
constant integer si__Ragnaros__Ragnas=29
integer si__Ragnaros__Ragnas_F=0
integer si__Ragnaros__Ragnas_I=0
integer array si__Ragnaros__Ragnas_V
unit array s__Ragnaros__Ragnas_u
unit array s__Ragnaros__Ragnas_u1
unit array s__Ragnaros__Ragnas_u2
unit array s__Ragnaros__Ragnas_u3
real array s__Ragnaros__Ragnas_a1
real array s__Ragnaros__Ragnas_a2
real array s__Ragnaros__Ragnas_a3
constant integer si__FearItem__FearIS=30
integer si__FearItem__FearIS_F=0
integer si__FearItem__FearIS_I=0
integer array si__FearItem__FearIS_V
unit array s__FearItem__FearIS_u
unit array s__FearItem__FearIS_c
integer array s__FearItem__FearIS_i
integer array s__FearItem__FearIS_p
boolean array s__FearItem__FearIS_revenge
constant integer si__PDown=31
integer si__PDown_F=0
integer si__PDown_I=0
integer array si__PDown_V
unit array s__PDown_u
unit array s__PDown_c
constant integer si__WandCourierPunishment__WandP=32
integer si__WandCourierPunishment__WandP_F=0
integer si__WandCourierPunishment__WandP_I=0
integer array si__WandCourierPunishment__WandP_V
unit array s__WandCourierPunishment__WandP_u
effect array s__WandCourierPunishment__WandP_fx
integer array s__WandCourierPunishment__WandP_i
constant integer si__Ragnarok__Ragnak2=33
integer si__Ragnarok__Ragnak2_F=0
integer si__Ragnarok__Ragnak2_I=0
integer array si__Ragnarok__Ragnak2_V
unit array s__Ragnarok__Ragnak2_u
constant integer si__Ragnarok__Ragnak=34
integer si__Ragnarok__Ragnak_F=0
integer si__Ragnarok__Ragnak_I=0
integer array si__Ragnarok__Ragnak_V
unit array s__Ragnarok__Ragnak_u
unit array s__Ragnarok__Ragnak_u1
unit array s__Ragnarok__Ragnak_u2
unit array s__Ragnarok__Ragnak_u3
unit array s__Ragnarok__Ragnak_u4
real array s__Ragnarok__Ragnak_a1
real array s__Ragnarok__Ragnak_a2
real array s__Ragnarok__Ragnak_a3
real array s__Ragnarok__Ragnak_a4
constant integer si__NinjaRope__SpellData=35
integer si__NinjaRope__SpellData_F=0
integer si__NinjaRope__SpellData_I=0
integer array si__NinjaRope__SpellData_V
integer array s__NinjaRope__SpellData_CasterData
unit array s__NinjaRope__SpellData_Caster
unit array s__NinjaRope__SpellData_AttachPoint
lightning array s__NinjaRope__SpellData_bolt
real array s__NinjaRope__SpellData_tetaP
real array s__NinjaRope__SpellData_tetaV
real array s__NinjaRope__SpellData_tetaA
real array s__NinjaRope__SpellData_utetax
real array s__NinjaRope__SpellData_utetay
real array s__NinjaRope__SpellData_vtetaz
real array s__NinjaRope__SpellData_aposx
real array s__NinjaRope__SpellData_aposy
real array s__NinjaRope__SpellData_aposz
real array s__NinjaRope__SpellData_cvelx
real array s__NinjaRope__SpellData_cvely
real array s__NinjaRope__SpellData_cvelz
real array s__NinjaRope__SpellData_cposx
real array s__NinjaRope__SpellData_cposy
real array s__NinjaRope__SpellData_cposz
integer array s__NinjaRope__SpellData_ticks
real array s__NinjaRope__SpellData_owlspeed
real array s__NinjaRope__SpellData_owlteta
real array s__NinjaRope__SpellData_owld
real array s__NinjaRope__SpellData_owlx
real array s__NinjaRope__SpellData_owly
real array s__NinjaRope__SpellData_owlz
boolean array s__NinjaRope__SpellData_initfall
trigger array s__NinjaRope__SpellData_onDeath
triggercondition array s__NinjaRope__SpellData_onDeathCond
real array s__NinjaRope__SpellData_ropelength
constant integer si__NinjaRope__FallingBolt=36
integer si__NinjaRope__FallingBolt_F=0
integer si__NinjaRope__FallingBolt_I=0
integer array si__NinjaRope__FallingBolt_V
lightning array s__NinjaRope__FallingBolt_bolt
real array s__NinjaRope__FallingBolt_x
real array s__NinjaRope__FallingBolt_y
real array s__NinjaRope__FallingBolt_z
real array s__NinjaRope__FallingBolt_utx
real array s__NinjaRope__FallingBolt_uty
real array s__NinjaRope__FallingBolt_vtz
real array s__NinjaRope__FallingBolt_tP
real array s__NinjaRope__FallingBolt_l
constant integer si__Defend__Dstruct=37
integer si__Defend__Dstruct_F=0
integer si__Defend__Dstruct_I=0
integer array si__Defend__Dstruct_V
unit array s__Defend__Dstruct_u
constant integer si__LAsers__FT=38
integer si__LAsers__FT_F=0
integer si__LAsers__FT_I=0
integer array si__LAsers__FT_V
unit array s__LAsers__FT_c
lightning array s__LAsers__FT_l
integer array s__LAsers__FT_i
real array s__LAsers__FT_x1
real array s__LAsers__FT_x2
real array s__LAsers__FT_y1
real array s__LAsers__FT_y2
real array s__LAsers__FT_z1
real array s__LAsers__FT_z2
real array s__LAsers__FT_a
player array s__LAsers__FT_p
integer array s__LAsers__FT_m
effect array s__LAsers__FT_fx
integer array s__LAsers__FT_id
boolean array s__LAsers__FT_anim
constant integer si__Soulrend__FB2=39
integer si__Soulrend__FB2_F=0
integer si__Soulrend__FB2_I=0
integer array si__Soulrend__FB2_V
unit array s__Soulrend__FB2_u
constant integer si__Rains__AP=40
integer si__Rains__AP_F=0
integer si__Rains__AP_I=0
integer array si__Rains__AP_V
player array s__Rains__AP_playa
constant integer si__BleedingSpears__FB=41
integer si__BleedingSpears__FB_F=0
integer si__BleedingSpears__FB_I=0
integer array si__BleedingSpears__FB_V
unit array s__BleedingSpears__FB_caster
unit array s__BleedingSpears__FB_u
effect array s__BleedingSpears__FB_fx
integer array s__BleedingSpears__FB_i
real array s__BleedingSpears__FB_dmg
constant integer si__BleedingSpears__FB2=42
integer si__BleedingSpears__FB2_F=0
integer si__BleedingSpears__FB2_I=0
integer array si__BleedingSpears__FB2_V
unit array s__BleedingSpears__FB2_caster
unit array s__BleedingSpears__FB2_u
integer array s__BleedingSpears__FB2_i
real array s__BleedingSpears__FB2_a
real array s__BleedingSpears__FB2_x
real array s__BleedingSpears__FB2_y
constant integer si__SkewerA__TempA=43
integer si__SkewerA__TempA_F=0
integer si__SkewerA__TempA_I=0
integer array si__SkewerA__TempA_V
unit array s__SkewerA__TempA_c
real array s__SkewerA__TempA_dmg
real array s__SkewerA__TempA_x
real array s__SkewerA__TempA_y
real array s__SkewerA__TempA_a
group array s__SkewerA__TempA_g
effect array s__SkewerA__TempA_fx1
integer array s__SkewerA__TempA_current
constant integer si__SearingAegis__FB2=44
integer si__SearingAegis__FB2_F=0
integer si__SearingAegis__FB2_I=0
integer array si__SearingAegis__FB2_V
unit array s__SearingAegis__FB2_caster
unit array s__SearingAegis__FB2_u
integer array s__SearingAegis__FB2_i
real array s__SearingAegis__FB2_a
real array s__SearingAegis__FB2_x
real array s__SearingAegis__FB2_y
real array s__SearingAegis__FB2_dmg
constant integer si__MalVladisRevelry__FB=45
integer si__MalVladisRevelry__FB_F=0
integer si__MalVladisRevelry__FB_I=0
integer array si__MalVladisRevelry__FB_V
unit array s__MalVladisRevelry__FB_caster
integer array s__MalVladisRevelry__FB_i
constant integer si__SearingAegisActive__EB=46
integer si__SearingAegisActive__EB_F=0
integer si__SearingAegisActive__EB_I=0
integer array si__SearingAegisActive__EB_V
unit array s__SearingAegisActive__EB_u
constant integer si__WSLeapy__Leapy=47
integer si__WSLeapy__Leapy_F=0
integer si__WSLeapy__Leapy_I=0
integer array si__WSLeapy__Leapy_V
unit array s__WSLeapy__Leapy_c
unit array s__WSLeapy__Leapy_t
real array s__WSLeapy__Leapy_d
real array s__WSLeapy__Leapy_h
effect array s__WSLeapy__Leapy_fx
effect array s__WSLeapy__Leapy_fx2
constant integer si__Felreaving__FT=48
integer si__Felreaving__FT_F=0
integer si__Felreaving__FT_I=0
integer array si__Felreaving__FT_V
unit array s__Felreaving__FT_c
integer array s__Felreaving__FT_i
boolean array s__Felreaving__FT_swing
effect array s__Felreaving__FT_fx
real array s__Felreaving__FT_a
constant integer si__Felreaving__FT2=49
integer si__Felreaving__FT2_F=0
integer si__Felreaving__FT2_I=0
integer array si__Felreaving__FT2_V
unit array s__Felreaving__FT2_c
real array s__Felreaving__FT2_x
real array s__Felreaving__FT2_y
real array s__Felreaving__FT2_a
constant integer si__EldCurse__BB=50
integer si__EldCurse__BB_F=0
integer si__EldCurse__BB_I=0
integer array si__EldCurse__BB_V
unit array s__EldCurse__BB_caster
unit array s__EldCurse__BB_t
real array s__EldCurse__BB_x
real array s__EldCurse__BB_y
integer array s__EldCurse__BB_i
constant integer si__ChaosOverwhelming__BB=51
integer si__ChaosOverwhelming__BB_F=0
integer si__ChaosOverwhelming__BB_I=0
integer array si__ChaosOverwhelming__BB_V
unit array s__ChaosOverwhelming__BB_caster
constant integer si__VacuumBurst__data=52
integer si__VacuumBurst__data_F=0
integer si__VacuumBurst__data_I=0
integer array si__VacuumBurst__data_V
player array s__VacuumBurst__data_owner
unit array s__VacuumBurst__data_caster
unit array s__VacuumBurst__data_dummy
real array s__VacuumBurst__data_angle
real array s__VacuumBurst__data_rate
real array s__VacuumBurst__data_speed
real array s__VacuumBurst__data_dmg
real array s__VacuumBurst__data_dx
real array s__VacuumBurst__data_dy
effect array s__VacuumBurst__data_fx
boolean array s__VacuumBurst__data_b
group array s__VacuumBurst__data_g
constant integer si__VacuumBurst__vacuumdata=53
integer si__VacuumBurst__vacuumdata_F=0
integer si__VacuumBurst__vacuumdata_I=0
integer array si__VacuumBurst__vacuumdata_V
unit array s__VacuumBurst__vacuumdata_u
real array s__VacuumBurst__vacuumdata_d
real array s__VacuumBurst__vacuumdata_r
real array s__VacuumBurst__vacuumdata_z
real array s__VacuumBurst__vacuumdata_bz
real array s__VacuumBurst__vacuumdata_a
constant integer si__DeathBolt__LB=54
integer si__DeathBolt__LB_F=0
integer si__DeathBolt__LB_I=0
integer array si__DeathBolt__LB_V
integer array s__DeathBolt__LB_cast
effect array s__DeathBolt__LB_hl
effect array s__DeathBolt__LB_hr
unit array s__DeathBolt__LB_u
unit array s__DeathBolt__LB_t
real array s__DeathBolt__LB_dmg
real array s__DeathBolt__LB_time
boolean array s__DeathBolt__LB_mob
constant integer si__UnnervingSymphony__US=55
integer si__UnnervingSymphony__US_F=0
integer si__UnnervingSymphony__US_I=0
integer array si__UnnervingSymphony__US_V
unit array s__UnnervingSymphony__US_c
integer array s__UnnervingSymphony__US_r
integer array s__UnnervingSymphony__US_g
integer array s__UnnervingSymphony__US_b
integer array s__UnnervingSymphony__US_a
constant integer si__FlameTurbine__FT=56
integer si__FlameTurbine__FT_F=0
integer si__FlameTurbine__FT_I=0
integer array si__FlameTurbine__FT_V
integer array s__FlameTurbine__FT_i
real array s__FlameTurbine__FT_a
real array s__FlameTurbine__FT_x
real array s__FlameTurbine__FT_y
real array s__FlameTurbine__FT_d
unit array s__FlameTurbine__FT_c
constant integer si__FlameTurbine__FT2=57
integer si__FlameTurbine__FT2_F=0
integer si__FlameTurbine__FT2_I=0
integer array si__FlameTurbine__FT2_V
effect array s__FlameTurbine__FT2_fx
constant integer si__FlameTurbine__FT3=58
integer si__FlameTurbine__FT3_F=0
integer si__FlameTurbine__FT3_I=0
integer array si__FlameTurbine__FT3_V
unit array s__FlameTurbine__FT3_u
constant integer si__EverlastingFlame__FT=59
integer si__EverlastingFlame__FT_F=0
integer si__EverlastingFlame__FT_I=0
integer array si__EverlastingFlame__FT_V
effect array s__EverlastingFlame__FT_fx1
effect array s__EverlastingFlame__FT_fx2
effect array s__EverlastingFlame__FT_fx3
effect array s__EverlastingFlame__FT_fx4
effect array s__EverlastingFlame__FT_fx5
effect array s__EverlastingFlame__FT_fx6
real array s__EverlastingFlame__FT_x1
real array s__EverlastingFlame__FT_x2
real array s__EverlastingFlame__FT_x3
real array s__EverlastingFlame__FT_x4
real array s__EverlastingFlame__FT_x5
real array s__EverlastingFlame__FT_x6
real array s__EverlastingFlame__FT_y1
real array s__EverlastingFlame__FT_y2
real array s__EverlastingFlame__FT_y3
real array s__EverlastingFlame__FT_y4
real array s__EverlastingFlame__FT_y5
real array s__EverlastingFlame__FT_y6
real array s__EverlastingFlame__FT_tx
real array s__EverlastingFlame__FT_ty
effect array s__EverlastingFlame__FT_attach
effect array s__EverlastingFlame__FT_attach2
unit array s__EverlastingFlame__FT_u
unit array s__EverlastingFlame__FT_u2
integer array s__EverlastingFlame__FT_i
integer array s__EverlastingFlame__FT_i2
constant integer si__ALLSHALLBURN__FB=60
integer si__ALLSHALLBURN__FB_F=0
integer si__ALLSHALLBURN__FB_I=0
integer array si__ALLSHALLBURN__FB_V
unit array s__ALLSHALLBURN__FB_caster
unit array s__ALLSHALLBURN__FB_u
integer array s__ALLSHALLBURN__FB_i
real array s__ALLSHALLBURN__FB_dmg
constant integer si__ALLSHALLBURN__FB2=61
integer si__ALLSHALLBURN__FB2_F=0
integer si__ALLSHALLBURN__FB2_I=0
integer array si__ALLSHALLBURN__FB2_V
unit array s__ALLSHALLBURN__FB2_u
effect array s__ALLSHALLBURN__FB2_fx
effect array s__ALLSHALLBURN__FB2_fx2
effect array s__ALLSHALLBURN__FB2_fx3
constant integer si__ToxiaPoison__TP=62
integer si__ToxiaPoison__TP_F=0
integer si__ToxiaPoison__TP_I=0
integer array si__ToxiaPoison__TP_V
unit array s__ToxiaPoison__TP_caster
unit array s__ToxiaPoison__TP_u
integer array s__ToxiaPoison__TP_i
real array s__ToxiaPoison__TP_dmg
constant integer si__EnchantWeapons__EW=63
integer si__EnchantWeapons__EW_F=0
integer si__EnchantWeapons__EW_I=0
integer array si__EnchantWeapons__EW_V
unit array s__EnchantWeapons__EW_caster
unit array s__EnchantWeapons__EW_target
integer array s__EnchantWeapons__EW_level
integer array s__EnchantWeapons__EW_damageincrease
real array s__EnchantWeapons__EW_casterx
real array s__EnchantWeapons__EW_castery
real array s__EnchantWeapons__EW_targetx
real array s__EnchantWeapons__EW_targety
real array s__EnchantWeapons__EW_casterz
real array s__EnchantWeapons__EW_targetz
real array s__EnchantWeapons__EW_lightningx1
real array s__EnchantWeapons__EW_lightningy1
real array s__EnchantWeapons__EW_lightningx2
real array s__EnchantWeapons__EW_lightningy2
real array s__EnchantWeapons__EW_lightningz1
real array s__EnchantWeapons__EW_lightningz2
real array s__EnchantWeapons__EW_a
lightning array s__EnchantWeapons__EW_ll
constant integer si__EnforcerStrengthBuff__EB=64
integer si__EnforcerStrengthBuff__EB_F=0
integer si__EnforcerStrengthBuff__EB_I=0
integer array si__EnforcerStrengthBuff__EB_V
unit array s__EnforcerStrengthBuff__EB_u
constant integer si__PiercetheVeil__PV=65
integer si__PiercetheVeil__PV_F=0
integer si__PiercetheVeil__PV_I=0
integer array si__PiercetheVeil__PV_V
unit array s__PiercetheVeil__PV_u
constant integer si__AetherInfusion__AT=66
integer si__AetherInfusion__AT_F=0
integer si__AetherInfusion__AT_I=0
integer array si__AetherInfusion__AT_V
unit array s__AetherInfusion__AT_u
integer array s__AetherInfusion__AT_lvl
constant integer si__AetherFlare__AF=67
integer si__AetherFlare__AF_F=0
integer si__AetherFlare__AF_I=0
integer array si__AetherFlare__AF_V
unit array s__AetherFlare__AF_u
real array s__AetherFlare__AF_x
real array s__AetherFlare__AF_y
real array s__AetherFlare__AF_time
real array s__AetherFlare__AF_dmg
constant integer si__AetherealMastery__MC=68
integer si__AetherealMastery__MC_F=0
integer si__AetherealMastery__MC_I=0
integer array si__AetherealMastery__MC_V
unit array s__AetherealMastery__MC_u
integer array s__AetherealMastery__MC_cast
integer array s__AetherealMastery__MC_spell_id
integer array s__AetherealMastery__MC_lvl
real array s__AetherealMastery__MC_x
real array s__AetherealMastery__MC_y
unit array s__AetherealMastery__MC_target
constant integer si__TempA=69
integer si__TempA_F=0
integer si__TempA_I=0
integer array si__TempA_V
unit array s__TempA_c
real array s__TempA_dmg
real array s__TempA_x
real array s__TempA_y
real array s__TempA_a
integer array s__TempA_current
group array s__TempA_g
effect array s__TempA_fx1
effect array s__TempA_fx2
effect array s__TempA_fx3
constant integer si__GlutA=70
integer si__GlutA_F=0
integer si__GlutA_I=0
integer array si__GlutA_V
unit array s__GlutA_c
real array s__GlutA_dmg
real array s__GlutA_x
real array s__GlutA_y
real array s__GlutA_a
integer array s__GlutA_current
group array s__GlutA_g
effect array s__GlutA_fx1
effect array s__GlutA_fx2
effect array s__GlutA_fx3
constant integer si__Execute__Exec=71
integer si__Execute__Exec_F=0
integer si__Execute__Exec_I=0
integer array si__Execute__Exec_V
unit array s__Execute__Exec_cast
unit array s__Execute__Exec_t
effect array s__Execute__Exec_fx
effect array s__Execute__Exec_fx2
real array s__Execute__Exec_h
real array s__Execute__Exec_dh
real array s__Execute__Exec_hp
real array s__Execute__Exec_tx
real array s__Execute__Exec_ty
real array s__Execute__Exec_sx
real array s__Execute__Exec_sy
real array s__Execute__Exec_oh
integer array s__Execute__Exec_dur
real array s__Execute__Exec_float
integer array s__Execute__Exec_lvl
effect array s__Execute__Exec_attach
boolean array s__Execute__Exec_positive
constant integer si__Voracity__VA=72
integer si__Voracity__VA_F=0
integer si__Voracity__VA_I=0
integer array si__Voracity__VA_V
unit array s__Voracity__VA_u
constant integer si__SpellStealPrep__ss=73
integer si__SpellStealPrep__ss_F=0
integer si__SpellStealPrep__ss_I=0
integer array si__SpellStealPrep__ss_V
unit array s__SpellStealPrep__ss_u
constant integer si__SpellSteal__ss=74
integer si__SpellSteal__ss_F=0
integer si__SpellSteal__ss_I=0
integer array si__SpellSteal__ss_V
unit array s__SpellSteal__ss_u
integer array s__SpellSteal__ss_x
integer array s__SpellSteal__ss_y
integer array s__SpellSteal__ss_id
integer array s__SpellSteal__ss_id2
player array s__SpellSteal__ss_p
constant integer si__Bloodbath__BB=75
integer si__Bloodbath__BB_F=0
integer si__Bloodbath__BB_I=0
integer array si__Bloodbath__BB_V
unit array s__Bloodbath__BB_caster
real array s__Bloodbath__BB_x
real array s__Bloodbath__BB_y
real array s__Bloodbath__BB_c
constant integer si__Bloodbath__BBfx=76
integer si__Bloodbath__BBfx_F=0
integer si__Bloodbath__BBfx_I=0
integer array si__Bloodbath__BBfx_V
unit array s__Bloodbath__BBfx_caster
integer array s__Bloodbath__BBfx_i
real array s__Bloodbath__BBfx_c
constant integer si__BloodHydrant__BH=77
integer si__BloodHydrant__BH_F=0
integer si__BloodHydrant__BH_I=0
integer array si__BloodHydrant__BH_V
unit array s__BloodHydrant__BH_c
constant integer si__NissaBinding__NBind=78
integer si__NissaBinding__NBind_F=0
integer si__NissaBinding__NBind_I=0
integer array si__NissaBinding__NBind_V
unit array s__NissaBinding__NBind_u
real array s__NissaBinding__NBind_x
real array s__NissaBinding__NBind_y
constant integer si__ShadowImageBlink__ShadowImageBlink=79
integer si__ShadowImageBlink__ShadowImageBlink_F=0
integer si__ShadowImageBlink__ShadowImageBlink_I=0
integer array si__ShadowImageBlink__ShadowImageBlink_V
unit array s__ShadowImageBlink__ShadowImageBlink_caster
unit array s__ShadowImageBlink__ShadowImageBlink_dummy_1
unit array s__ShadowImageBlink__ShadowImageBlink_dummy_2
unit array s__ShadowImageBlink__ShadowImageBlink_dummy_3
unit array s__ShadowImageBlink__ShadowImageBlink_target
integer array s__ShadowImageBlink__ShadowImageBlink_fade
integer array s__ShadowImageBlink__ShadowImageBlink_lvl
integer array s__ShadowImageBlink__ShadowImageBlink_fade_count
integer array s__ShadowImageBlink__ShadowImageBlink_count
boolean array s__ShadowImageBlink__ShadowImageBlink_fade_done
boolean array s__ShadowImageBlink__ShadowImageBlink_subtract
player array s__ShadowImageBlink__ShadowImageBlink_owner
real array s__ShadowImageBlink__ShadowImageBlink_cos
real array s__ShadowImageBlink__ShadowImageBlink_sin
real array s__ShadowImageBlink__ShadowImageBlink_facing
real array s__ShadowImageBlink__ShadowImageBlink_facing2
real array s__ShadowImageBlink__ShadowImageBlink_total
real array s__ShadowImageBlink__ShadowImageBlink_angle
real array s__ShadowImageBlink__ShadowImageBlink_fade_seperation
real array s__ShadowImageBlink__ShadowImageBlink_targetx
real array s__ShadowImageBlink__ShadowImageBlink_targety
real array s__ShadowImageBlink__ShadowImageBlink_speration_speed
real array s__ShadowImageBlink__ShadowImageBlink_height
real array s__ShadowImageBlink__ShadowImageBlink_dmg
constant integer si__AoEFearDoT__Dec=80
integer si__AoEFearDoT__Dec_F=0
integer si__AoEFearDoT__Dec_I=0
integer array si__AoEFearDoT__Dec_V
unit array s__AoEFearDoT__Dec_u
unit array s__AoEFearDoT__Dec_t
integer array s__AoEFearDoT__Dec_i
constant integer si__FearUltimate__DefStomp=81
integer si__FearUltimate__DefStomp_F=0
integer si__FearUltimate__DefStomp_I=0
integer array si__FearUltimate__DefStomp_V
unit array s__FearUltimate__DefStomp_DefU
unit array s__FearUltimate__DefStomp_DefT
integer array s__FearUltimate__DefStomp_DefI
effect array s__FearUltimate__DefStomp_DefE
constant integer si__FearUlti4Illusion__ShadowImageBlink=82
integer si__FearUlti4Illusion__ShadowImageBlink_F=0
integer si__FearUlti4Illusion__ShadowImageBlink_I=0
integer array si__FearUlti4Illusion__ShadowImageBlink_V
unit array s__FearUlti4Illusion__ShadowImageBlink_caster
unit array s__FearUlti4Illusion__ShadowImageBlink_dummy_1
unit array s__FearUlti4Illusion__ShadowImageBlink_dummy_2
unit array s__FearUlti4Illusion__ShadowImageBlink_dummy_3
unit array s__FearUlti4Illusion__ShadowImageBlink_target
integer array s__FearUlti4Illusion__ShadowImageBlink_fade
integer array s__FearUlti4Illusion__ShadowImageBlink_lvl
integer array s__FearUlti4Illusion__ShadowImageBlink_fade_count
integer array s__FearUlti4Illusion__ShadowImageBlink_count
boolean array s__FearUlti4Illusion__ShadowImageBlink_fade_done
boolean array s__FearUlti4Illusion__ShadowImageBlink_subtract
player array s__FearUlti4Illusion__ShadowImageBlink_owner
real array s__FearUlti4Illusion__ShadowImageBlink_cos
real array s__FearUlti4Illusion__ShadowImageBlink_sin
real array s__FearUlti4Illusion__ShadowImageBlink_facing
real array s__FearUlti4Illusion__ShadowImageBlink_facing2
real array s__FearUlti4Illusion__ShadowImageBlink_total
real array s__FearUlti4Illusion__ShadowImageBlink_angle
real array s__FearUlti4Illusion__ShadowImageBlink_fade_seperation
real array s__FearUlti4Illusion__ShadowImageBlink_targetx
real array s__FearUlti4Illusion__ShadowImageBlink_targety
real array s__FearUlti4Illusion__ShadowImageBlink_speration_speed
real array s__FearUlti4Illusion__ShadowImageBlink_height
real array s__FearUlti4Illusion__ShadowImageBlink_dmg
constant integer si__AoEFearSpell__A=83
constant integer si__ChatatadrusLight__NBind=84
integer si__ChatatadrusLight__NBind_F=0
integer si__ChatatadrusLight__NBind_I=0
integer array si__ChatatadrusLight__NBind_V
unit array s__ChatatadrusLight__NBind_u
constant integer si__RighteousWrath___EB=85
integer si__RighteousWrath___EB_F=0
integer si__RighteousWrath___EB_I=0
integer array si__RighteousWrath___EB_V
unit array s__RighteousWrath___EB_u
real array s__RighteousWrath___EB_d
real array s__RighteousWrath___EB_ls
constant integer si__Devastate___DV=86
integer si__Devastate___DV_F=0
integer si__Devastate___DV_I=0
integer array si__Devastate___DV_V
unit array s__Devastate___DV_caster
real array s__Devastate___DV_x
real array s__Devastate___DV_y
constant integer si__Devastate___DVFly=87
integer si__Devastate___DVFly_F=0
integer si__Devastate___DVFly_I=0
integer array si__Devastate___DVFly_V
unit array s__Devastate___DVFly_caster
unit array s__Devastate___DVFly_u
real array s__Devastate___DVFly_h
real array s__Devastate___DVFly_oh
integer array s__Devastate___DVFly_i
constant integer si__Devastate___DVFX=88
integer si__Devastate___DVFX_F=0
integer si__Devastate___DVFX_I=0
integer array si__Devastate___DVFX_V
unit array s__Devastate___DVFX_caster
real array s__Devastate___DVFX_x
real array s__Devastate___DVFX_y
constant integer si__Decay___tempDat=89
integer si__Decay___tempDat_F=0
integer si__Decay___tempDat_I=0
integer array si__Decay___tempDat_V
unit array s__Decay___tempDat_caster
group array s__Decay___tempDat_g
real array s__Decay___tempDat_temp
integer array s__Decay___tempDat_steps
integer s__Decay___tempDat_dindex
timer s__Decay___tempDat_period
integer array s__Decay___tempDat_data
constant integer si__LightningBolt___LB=90
integer si__LightningBolt___LB_F=0
integer si__LightningBolt___LB_I=0
integer array si__LightningBolt___LB_V
integer array s__LightningBolt___LB_cast
effect array s__LightningBolt___LB_hl
effect array s__LightningBolt___LB_hr
unit array s__LightningBolt___LB_u
unit array s__LightningBolt___LB_t
real array s__LightningBolt___LB_dmg
real array s__LightningBolt___LB_time
constant integer si__EternalBattlethirstActive___EB=91
integer si__EternalBattlethirstActive___EB_F=0
integer si__EternalBattlethirstActive___EB_I=0
integer array si__EternalBattlethirstActive___EB_V
unit array s__EternalBattlethirstActive___EB_u
effect array s__EternalBattlethirstActive___EB_fx
constant integer si__AppleofEden___AE=92
integer si__AppleofEden___AE_F=0
integer si__AppleofEden___AE_I=0
integer array si__AppleofEden___AE_V
unit array s__AppleofEden___AE_u
integer array s__AppleofEden___AE_i
constant integer si__FaustianBargain___FB=93
integer si__FaustianBargain___FB_F=0
integer si__FaustianBargain___FB_I=0
integer array si__FaustianBargain___FB_V
unit array s__FaustianBargain___FB_u
player array s__FaustianBargain___FB_p
constant integer si__SinisterCreed___SC=94
integer si__SinisterCreed___SC_F=0
integer si__SinisterCreed___SC_I=0
integer array si__SinisterCreed___SC_V
unit array s__SinisterCreed___SC_u
constant integer si__TestFear___A=95
constant integer si__VoidShackles___VShackle=96
integer si__VoidShackles___VShackle_F=0
integer si__VoidShackles___VShackle_I=0
integer array si__VoidShackles___VShackle_V
unit array s__VoidShackles___VShackle_u
unit array s__VoidShackles___VShackle_u2
unit array s__VoidShackles___VShackle_u3
real array s__VoidShackles___VShackle_d
real array s__VoidShackles___VShackle_lvl
real array s__VoidShackles___VShackle_x
real array s__VoidShackles___VShackle_y
lightning array s__VoidShackles___VShackle_l
constant integer si__Bless___Bls=97
integer si__Bless___Bls_F=0
integer si__Bless___Bls_I=0
integer array si__Bless___Bls_V
unit array s__Bless___Bls_c
real array s__Bless___Bls_dur
constant integer si__Bless___Bls2=98
integer si__Bless___Bls2_F=0
integer si__Bless___Bls2_I=0
integer array si__Bless___Bls2_V
unit array s__Bless___Bls2_u
integer array s__Bless___Bls2_int
integer array s__Bless___Bls2_agi
integer array s__Bless___Bls2_str
real array s__Bless___Bls2_arm
integer array s__Bless___Bls2_dmg
constant integer si__Earthsplitter___FT=99
integer si__Earthsplitter___FT_F=0
integer si__Earthsplitter___FT_I=0
integer array si__Earthsplitter___FT_V
integer array s__Earthsplitter___FT_i
player array s__Earthsplitter___FT_p
real array s__Earthsplitter___FT_a
real array s__Earthsplitter___FT_x
real array s__Earthsplitter___FT_y
real array s__Earthsplitter___FT_x1
real array s__Earthsplitter___FT_y1
real array s__Earthsplitter___FT_d
unit array s__Earthsplitter___FT_c
unit array s__Earthsplitter___FT_d1
unit array s__Earthsplitter___FT_d2
unit array s__Earthsplitter___FT_d3
unit array s__Earthsplitter___FT_d4
unit array s__Earthsplitter___FT_d5
unit array s__Earthsplitter___FT_d6
ubersplat array s__Earthsplitter___FT_u1
ubersplat array s__Earthsplitter___FT_u2
ubersplat array s__Earthsplitter___FT_u3
ubersplat array s__Earthsplitter___FT_u4
ubersplat array s__Earthsplitter___FT_u5
ubersplat array s__Earthsplitter___FT_u6
constant integer si__ReignofDeath___RoD=100
integer si__ReignofDeath___RoD_F=0
integer si__ReignofDeath___RoD_I=0
integer array si__ReignofDeath___RoD_V
unit array s__ReignofDeath___RoD_c
integer array s__ReignofDeath___RoD_dur
constant integer si__ReignofDeath___RoD2=101
integer si__ReignofDeath___RoD2_F=0
integer si__ReignofDeath___RoD2_I=0
integer array si__ReignofDeath___RoD2_V
real array s__ReignofDeath___RoD2_x
real array s__ReignofDeath___RoD2_y
unit array s__ReignofDeath___RoD2_c
constant integer si__ViciousVice___VV=102
integer si__ViciousVice___VV_F=0
integer si__ViciousVice___VV_I=0
integer array si__ViciousVice___VV_V
unit array s__ViciousVice___VV_c
unit array s__ViciousVice___VV_u
real array s__ViciousVice___VV_dmg
real array s__ViciousVice___VV_dur
constant integer si__FallingSword___FelSword=103
integer si__FallingSword___FelSword_F=0
integer si__FallingSword___FelSword_I=0
integer array si__FallingSword___FelSword_V
unit array s__FallingSword___FelSword_caster
real array s__FallingSword___FelSword_x
real array s__FallingSword___FelSword_y
integer array s__FallingSword___FelSword_lvl
constant integer si__ImpenetrableFortress___IFFX=104
integer si__ImpenetrableFortress___IFFX_F=0
integer si__ImpenetrableFortress___IFFX_I=0
integer array si__ImpenetrableFortress___IFFX_V
effect array s__ImpenetrableFortress___IFFX_fx
integer array s__TimerUtils___data
timer array s__TimerUtils___tT
integer array si__NewBonus_type
trigger array st__NewBonus_onDestroy
trigger st__MainShops_selectShop
trigger st__Roflcopter__roflcopter_create
trigger st__Roflcopter__roflcopter_destroy
trigger st__Roflcopter__bomb_create
trigger st__Roflcopter__bomb_destroy
trigger st__ForestCall__MyStruct_onDestroy
trigger st__NinjaRope__SpellData_onDestroy
trigger st__NinjaRope__SpellData_Stop
trigger st__NinjaRope__FallingBolt_onDestroy
trigger array st___prototype4
integer f__arg_integer1
real f__arg_real1
real f__arg_real2
real f__arg_real3
real f__arg_real4
integer f__arg_this
boolean f__result_boolean
integer f__result_integer

endglobals
    native UnitAlive takes unit u returns boolean


//Generated allocator of ImpenetrableFortress___IFFX
function s__ImpenetrableFortress___IFFX__allocate takes nothing returns integer
 local integer this=si__ImpenetrableFortress___IFFX_F
    if (this!=0) then
        set si__ImpenetrableFortress___IFFX_F=si__ImpenetrableFortress___IFFX_V[this]
    else
        set si__ImpenetrableFortress___IFFX_I=si__ImpenetrableFortress___IFFX_I+1
        set this=si__ImpenetrableFortress___IFFX_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ImpenetrableFortress___IFFX_V[this]=-1
 return this
endfunction

//Generated destructor of ImpenetrableFortress___IFFX
function s__ImpenetrableFortress___IFFX_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ImpenetrableFortress___IFFX_V[this]!=-1) then
        return
    endif
    set si__ImpenetrableFortress___IFFX_V[this]=si__ImpenetrableFortress___IFFX_F
    set si__ImpenetrableFortress___IFFX_F=this
endfunction

//Generated allocator of FallingSword___FelSword
function s__FallingSword___FelSword__allocate takes nothing returns integer
 local integer this=si__FallingSword___FelSword_F
    if (this!=0) then
        set si__FallingSword___FelSword_F=si__FallingSword___FelSword_V[this]
    else
        set si__FallingSword___FelSword_I=si__FallingSword___FelSword_I+1
        set this=si__FallingSword___FelSword_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FallingSword___FelSword_V[this]=-1
 return this
endfunction

//Generated destructor of FallingSword___FelSword
function s__FallingSword___FelSword_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FallingSword___FelSword_V[this]!=-1) then
        return
    endif
    set si__FallingSword___FelSword_V[this]=si__FallingSword___FelSword_F
    set si__FallingSword___FelSword_F=this
endfunction

//Generated allocator of ViciousVice___VV
function s__ViciousVice___VV__allocate takes nothing returns integer
 local integer this=si__ViciousVice___VV_F
    if (this!=0) then
        set si__ViciousVice___VV_F=si__ViciousVice___VV_V[this]
    else
        set si__ViciousVice___VV_I=si__ViciousVice___VV_I+1
        set this=si__ViciousVice___VV_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ViciousVice___VV_V[this]=-1
 return this
endfunction

//Generated destructor of ViciousVice___VV
function s__ViciousVice___VV_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ViciousVice___VV_V[this]!=-1) then
        return
    endif
    set si__ViciousVice___VV_V[this]=si__ViciousVice___VV_F
    set si__ViciousVice___VV_F=this
endfunction

//Generated allocator of ReignofDeath___RoD2
function s__ReignofDeath___RoD2__allocate takes nothing returns integer
 local integer this=si__ReignofDeath___RoD2_F
    if (this!=0) then
        set si__ReignofDeath___RoD2_F=si__ReignofDeath___RoD2_V[this]
    else
        set si__ReignofDeath___RoD2_I=si__ReignofDeath___RoD2_I+1
        set this=si__ReignofDeath___RoD2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ReignofDeath___RoD2_V[this]=-1
 return this
endfunction

//Generated destructor of ReignofDeath___RoD2
function s__ReignofDeath___RoD2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ReignofDeath___RoD2_V[this]!=-1) then
        return
    endif
    set si__ReignofDeath___RoD2_V[this]=si__ReignofDeath___RoD2_F
    set si__ReignofDeath___RoD2_F=this
endfunction

//Generated allocator of ReignofDeath___RoD
function s__ReignofDeath___RoD__allocate takes nothing returns integer
 local integer this=si__ReignofDeath___RoD_F
    if (this!=0) then
        set si__ReignofDeath___RoD_F=si__ReignofDeath___RoD_V[this]
    else
        set si__ReignofDeath___RoD_I=si__ReignofDeath___RoD_I+1
        set this=si__ReignofDeath___RoD_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ReignofDeath___RoD_V[this]=-1
 return this
endfunction

//Generated destructor of ReignofDeath___RoD
function s__ReignofDeath___RoD_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ReignofDeath___RoD_V[this]!=-1) then
        return
    endif
    set si__ReignofDeath___RoD_V[this]=si__ReignofDeath___RoD_F
    set si__ReignofDeath___RoD_F=this
endfunction

//Generated allocator of Earthsplitter___FT
function s__Earthsplitter___FT__allocate takes nothing returns integer
 local integer this=si__Earthsplitter___FT_F
    if (this!=0) then
        set si__Earthsplitter___FT_F=si__Earthsplitter___FT_V[this]
    else
        set si__Earthsplitter___FT_I=si__Earthsplitter___FT_I+1
        set this=si__Earthsplitter___FT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Earthsplitter___FT_V[this]=-1
 return this
endfunction

//Generated destructor of Earthsplitter___FT
function s__Earthsplitter___FT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Earthsplitter___FT_V[this]!=-1) then
        return
    endif
    set si__Earthsplitter___FT_V[this]=si__Earthsplitter___FT_F
    set si__Earthsplitter___FT_F=this
endfunction

//Generated allocator of Bless___Bls2
function s__Bless___Bls2__allocate takes nothing returns integer
 local integer this=si__Bless___Bls2_F
    if (this!=0) then
        set si__Bless___Bls2_F=si__Bless___Bls2_V[this]
    else
        set si__Bless___Bls2_I=si__Bless___Bls2_I+1
        set this=si__Bless___Bls2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Bless___Bls2_V[this]=-1
 return this
endfunction

//Generated destructor of Bless___Bls2
function s__Bless___Bls2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Bless___Bls2_V[this]!=-1) then
        return
    endif
    set si__Bless___Bls2_V[this]=si__Bless___Bls2_F
    set si__Bless___Bls2_F=this
endfunction

//Generated allocator of Bless___Bls
function s__Bless___Bls__allocate takes nothing returns integer
 local integer this=si__Bless___Bls_F
    if (this!=0) then
        set si__Bless___Bls_F=si__Bless___Bls_V[this]
    else
        set si__Bless___Bls_I=si__Bless___Bls_I+1
        set this=si__Bless___Bls_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Bless___Bls_V[this]=-1
 return this
endfunction

//Generated destructor of Bless___Bls
function s__Bless___Bls_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Bless___Bls_V[this]!=-1) then
        return
    endif
    set si__Bless___Bls_V[this]=si__Bless___Bls_F
    set si__Bless___Bls_F=this
endfunction

//Generated allocator of VoidShackles___VShackle
function s__VoidShackles___VShackle__allocate takes nothing returns integer
 local integer this=si__VoidShackles___VShackle_F
    if (this!=0) then
        set si__VoidShackles___VShackle_F=si__VoidShackles___VShackle_V[this]
    else
        set si__VoidShackles___VShackle_I=si__VoidShackles___VShackle_I+1
        set this=si__VoidShackles___VShackle_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__VoidShackles___VShackle_V[this]=-1
 return this
endfunction

//Generated destructor of VoidShackles___VShackle
function s__VoidShackles___VShackle_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__VoidShackles___VShackle_V[this]!=-1) then
        return
    endif
    set si__VoidShackles___VShackle_V[this]=si__VoidShackles___VShackle_F
    set si__VoidShackles___VShackle_F=this
endfunction

//Generated allocator of SinisterCreed___SC
function s__SinisterCreed___SC__allocate takes nothing returns integer
 local integer this=si__SinisterCreed___SC_F
    if (this!=0) then
        set si__SinisterCreed___SC_F=si__SinisterCreed___SC_V[this]
    else
        set si__SinisterCreed___SC_I=si__SinisterCreed___SC_I+1
        set this=si__SinisterCreed___SC_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SinisterCreed___SC_V[this]=-1
 return this
endfunction

//Generated destructor of SinisterCreed___SC
function s__SinisterCreed___SC_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SinisterCreed___SC_V[this]!=-1) then
        return
    endif
    set si__SinisterCreed___SC_V[this]=si__SinisterCreed___SC_F
    set si__SinisterCreed___SC_F=this
endfunction

//Generated allocator of FaustianBargain___FB
function s__FaustianBargain___FB__allocate takes nothing returns integer
 local integer this=si__FaustianBargain___FB_F
    if (this!=0) then
        set si__FaustianBargain___FB_F=si__FaustianBargain___FB_V[this]
    else
        set si__FaustianBargain___FB_I=si__FaustianBargain___FB_I+1
        set this=si__FaustianBargain___FB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FaustianBargain___FB_V[this]=-1
 return this
endfunction

//Generated destructor of FaustianBargain___FB
function s__FaustianBargain___FB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FaustianBargain___FB_V[this]!=-1) then
        return
    endif
    set si__FaustianBargain___FB_V[this]=si__FaustianBargain___FB_F
    set si__FaustianBargain___FB_F=this
endfunction

//Generated allocator of AppleofEden___AE
function s__AppleofEden___AE__allocate takes nothing returns integer
 local integer this=si__AppleofEden___AE_F
    if (this!=0) then
        set si__AppleofEden___AE_F=si__AppleofEden___AE_V[this]
    else
        set si__AppleofEden___AE_I=si__AppleofEden___AE_I+1
        set this=si__AppleofEden___AE_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__AppleofEden___AE_V[this]=-1
 return this
endfunction

//Generated destructor of AppleofEden___AE
function s__AppleofEden___AE_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AppleofEden___AE_V[this]!=-1) then
        return
    endif
    set si__AppleofEden___AE_V[this]=si__AppleofEden___AE_F
    set si__AppleofEden___AE_F=this
endfunction

//Generated allocator of EternalBattlethirstActive___EB
function s__EternalBattlethirstActive___EB__allocate takes nothing returns integer
 local integer this=si__EternalBattlethirstActive___EB_F
    if (this!=0) then
        set si__EternalBattlethirstActive___EB_F=si__EternalBattlethirstActive___EB_V[this]
    else
        set si__EternalBattlethirstActive___EB_I=si__EternalBattlethirstActive___EB_I+1
        set this=si__EternalBattlethirstActive___EB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EternalBattlethirstActive___EB_V[this]=-1
 return this
endfunction

//Generated destructor of EternalBattlethirstActive___EB
function s__EternalBattlethirstActive___EB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EternalBattlethirstActive___EB_V[this]!=-1) then
        return
    endif
    set si__EternalBattlethirstActive___EB_V[this]=si__EternalBattlethirstActive___EB_F
    set si__EternalBattlethirstActive___EB_F=this
endfunction

//Generated allocator of LightningBolt___LB
function s__LightningBolt___LB__allocate takes nothing returns integer
 local integer this=si__LightningBolt___LB_F
    if (this!=0) then
        set si__LightningBolt___LB_F=si__LightningBolt___LB_V[this]
    else
        set si__LightningBolt___LB_I=si__LightningBolt___LB_I+1
        set this=si__LightningBolt___LB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__LightningBolt___LB_V[this]=-1
 return this
endfunction

//Generated destructor of LightningBolt___LB
function s__LightningBolt___LB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__LightningBolt___LB_V[this]!=-1) then
        return
    endif
    set si__LightningBolt___LB_V[this]=si__LightningBolt___LB_F
    set si__LightningBolt___LB_F=this
endfunction

//Generated allocator of Decay___tempDat
function s__Decay___tempDat__allocate takes nothing returns integer
 local integer this=si__Decay___tempDat_F
    if (this!=0) then
        set si__Decay___tempDat_F=si__Decay___tempDat_V[this]
    else
        set si__Decay___tempDat_I=si__Decay___tempDat_I+1
        set this=si__Decay___tempDat_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Decay___tempDat_V[this]=-1
 return this
endfunction

//Generated destructor of Decay___tempDat
function s__Decay___tempDat_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Decay___tempDat_V[this]!=-1) then
        return
    endif
    set si__Decay___tempDat_V[this]=si__Decay___tempDat_F
    set si__Decay___tempDat_F=this
endfunction

//Generated allocator of Devastate___DVFX
function s__Devastate___DVFX__allocate takes nothing returns integer
 local integer this=si__Devastate___DVFX_F
    if (this!=0) then
        set si__Devastate___DVFX_F=si__Devastate___DVFX_V[this]
    else
        set si__Devastate___DVFX_I=si__Devastate___DVFX_I+1
        set this=si__Devastate___DVFX_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Devastate___DVFX_V[this]=-1
 return this
endfunction

//Generated destructor of Devastate___DVFX
function s__Devastate___DVFX_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Devastate___DVFX_V[this]!=-1) then
        return
    endif
    set si__Devastate___DVFX_V[this]=si__Devastate___DVFX_F
    set si__Devastate___DVFX_F=this
endfunction

//Generated allocator of Devastate___DVFly
function s__Devastate___DVFly__allocate takes nothing returns integer
 local integer this=si__Devastate___DVFly_F
    if (this!=0) then
        set si__Devastate___DVFly_F=si__Devastate___DVFly_V[this]
    else
        set si__Devastate___DVFly_I=si__Devastate___DVFly_I+1
        set this=si__Devastate___DVFly_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Devastate___DVFly_V[this]=-1
 return this
endfunction

//Generated destructor of Devastate___DVFly
function s__Devastate___DVFly_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Devastate___DVFly_V[this]!=-1) then
        return
    endif
    set si__Devastate___DVFly_V[this]=si__Devastate___DVFly_F
    set si__Devastate___DVFly_F=this
endfunction

//Generated allocator of Devastate___DV
function s__Devastate___DV__allocate takes nothing returns integer
 local integer this=si__Devastate___DV_F
    if (this!=0) then
        set si__Devastate___DV_F=si__Devastate___DV_V[this]
    else
        set si__Devastate___DV_I=si__Devastate___DV_I+1
        set this=si__Devastate___DV_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Devastate___DV_V[this]=-1
 return this
endfunction

//Generated destructor of Devastate___DV
function s__Devastate___DV_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Devastate___DV_V[this]!=-1) then
        return
    endif
    set si__Devastate___DV_V[this]=si__Devastate___DV_F
    set si__Devastate___DV_F=this
endfunction

//Generated allocator of RighteousWrath___EB
function s__RighteousWrath___EB__allocate takes nothing returns integer
 local integer this=si__RighteousWrath___EB_F
    if (this!=0) then
        set si__RighteousWrath___EB_F=si__RighteousWrath___EB_V[this]
    else
        set si__RighteousWrath___EB_I=si__RighteousWrath___EB_I+1
        set this=si__RighteousWrath___EB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__RighteousWrath___EB_V[this]=-1
 return this
endfunction

//Generated destructor of RighteousWrath___EB
function s__RighteousWrath___EB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__RighteousWrath___EB_V[this]!=-1) then
        return
    endif
    set si__RighteousWrath___EB_V[this]=si__RighteousWrath___EB_F
    set si__RighteousWrath___EB_F=this
endfunction

//Generated allocator of ChatatadrusLight__NBind
function s__ChatatadrusLight__NBind__allocate takes nothing returns integer
 local integer this=si__ChatatadrusLight__NBind_F
    if (this!=0) then
        set si__ChatatadrusLight__NBind_F=si__ChatatadrusLight__NBind_V[this]
    else
        set si__ChatatadrusLight__NBind_I=si__ChatatadrusLight__NBind_I+1
        set this=si__ChatatadrusLight__NBind_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ChatatadrusLight__NBind_V[this]=-1
 return this
endfunction

//Generated destructor of ChatatadrusLight__NBind
function s__ChatatadrusLight__NBind_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChatatadrusLight__NBind_V[this]!=-1) then
        return
    endif
    set si__ChatatadrusLight__NBind_V[this]=si__ChatatadrusLight__NBind_F
    set si__ChatatadrusLight__NBind_F=this
endfunction

//Generated allocator of FearUlti4Illusion__ShadowImageBlink
function s__FearUlti4Illusion__ShadowImageBlink__allocate takes nothing returns integer
 local integer this=si__FearUlti4Illusion__ShadowImageBlink_F
    if (this!=0) then
        set si__FearUlti4Illusion__ShadowImageBlink_F=si__FearUlti4Illusion__ShadowImageBlink_V[this]
    else
        set si__FearUlti4Illusion__ShadowImageBlink_I=si__FearUlti4Illusion__ShadowImageBlink_I+1
        set this=si__FearUlti4Illusion__ShadowImageBlink_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__FearUlti4Illusion__ShadowImageBlink_fade[this]= 255
   set s__FearUlti4Illusion__ShadowImageBlink_fade_count[this]= FearUlti4Illusion__FADE_COUNT
   set s__FearUlti4Illusion__ShadowImageBlink_fade_done[this]= true
   set s__FearUlti4Illusion__ShadowImageBlink_subtract[this]= true
   set s__FearUlti4Illusion__ShadowImageBlink_total[this]= - FearUlti4Illusion__SPERATION_SPEED
    set si__FearUlti4Illusion__ShadowImageBlink_V[this]=-1
 return this
endfunction

//Generated destructor of FearUlti4Illusion__ShadowImageBlink
function s__FearUlti4Illusion__ShadowImageBlink_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FearUlti4Illusion__ShadowImageBlink_V[this]!=-1) then
        return
    endif
    set si__FearUlti4Illusion__ShadowImageBlink_V[this]=si__FearUlti4Illusion__ShadowImageBlink_F
    set si__FearUlti4Illusion__ShadowImageBlink_F=this
endfunction

//Generated allocator of FearUltimate__DefStomp
function s__FearUltimate__DefStomp__allocate takes nothing returns integer
 local integer this=si__FearUltimate__DefStomp_F
    if (this!=0) then
        set si__FearUltimate__DefStomp_F=si__FearUltimate__DefStomp_V[this]
    else
        set si__FearUltimate__DefStomp_I=si__FearUltimate__DefStomp_I+1
        set this=si__FearUltimate__DefStomp_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FearUltimate__DefStomp_V[this]=-1
 return this
endfunction

//Generated destructor of FearUltimate__DefStomp
function s__FearUltimate__DefStomp_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FearUltimate__DefStomp_V[this]!=-1) then
        return
    endif
    set si__FearUltimate__DefStomp_V[this]=si__FearUltimate__DefStomp_F
    set si__FearUltimate__DefStomp_F=this
endfunction

//Generated allocator of AoEFearDoT__Dec
function s__AoEFearDoT__Dec__allocate takes nothing returns integer
 local integer this=si__AoEFearDoT__Dec_F
    if (this!=0) then
        set si__AoEFearDoT__Dec_F=si__AoEFearDoT__Dec_V[this]
    else
        set si__AoEFearDoT__Dec_I=si__AoEFearDoT__Dec_I+1
        set this=si__AoEFearDoT__Dec_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__AoEFearDoT__Dec_V[this]=-1
 return this
endfunction

//Generated destructor of AoEFearDoT__Dec
function s__AoEFearDoT__Dec_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AoEFearDoT__Dec_V[this]!=-1) then
        return
    endif
    set si__AoEFearDoT__Dec_V[this]=si__AoEFearDoT__Dec_F
    set si__AoEFearDoT__Dec_F=this
endfunction

//Generated allocator of ShadowImageBlink__ShadowImageBlink
function s__ShadowImageBlink__ShadowImageBlink__allocate takes nothing returns integer
 local integer this=si__ShadowImageBlink__ShadowImageBlink_F
    if (this!=0) then
        set si__ShadowImageBlink__ShadowImageBlink_F=si__ShadowImageBlink__ShadowImageBlink_V[this]
    else
        set si__ShadowImageBlink__ShadowImageBlink_I=si__ShadowImageBlink__ShadowImageBlink_I+1
        set this=si__ShadowImageBlink__ShadowImageBlink_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__ShadowImageBlink__ShadowImageBlink_fade[this]= 255
   set s__ShadowImageBlink__ShadowImageBlink_fade_count[this]= ShadowImageBlink__FADE_COUNT
   set s__ShadowImageBlink__ShadowImageBlink_fade_done[this]= false
   set s__ShadowImageBlink__ShadowImageBlink_subtract[this]= true
   set s__ShadowImageBlink__ShadowImageBlink_total[this]= - ShadowImageBlink__SPERATION_SPEED
    set si__ShadowImageBlink__ShadowImageBlink_V[this]=-1
 return this
endfunction

//Generated destructor of ShadowImageBlink__ShadowImageBlink
function s__ShadowImageBlink__ShadowImageBlink_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ShadowImageBlink__ShadowImageBlink_V[this]!=-1) then
        return
    endif
    set si__ShadowImageBlink__ShadowImageBlink_V[this]=si__ShadowImageBlink__ShadowImageBlink_F
    set si__ShadowImageBlink__ShadowImageBlink_F=this
endfunction

//Generated allocator of NissaBinding__NBind
function s__NissaBinding__NBind__allocate takes nothing returns integer
 local integer this=si__NissaBinding__NBind_F
    if (this!=0) then
        set si__NissaBinding__NBind_F=si__NissaBinding__NBind_V[this]
    else
        set si__NissaBinding__NBind_I=si__NissaBinding__NBind_I+1
        set this=si__NissaBinding__NBind_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__NissaBinding__NBind_V[this]=-1
 return this
endfunction

//Generated destructor of NissaBinding__NBind
function s__NissaBinding__NBind_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NissaBinding__NBind_V[this]!=-1) then
        return
    endif
    set si__NissaBinding__NBind_V[this]=si__NissaBinding__NBind_F
    set si__NissaBinding__NBind_F=this
endfunction

//Generated allocator of BloodHydrant__BH
function s__BloodHydrant__BH__allocate takes nothing returns integer
 local integer this=si__BloodHydrant__BH_F
    if (this!=0) then
        set si__BloodHydrant__BH_F=si__BloodHydrant__BH_V[this]
    else
        set si__BloodHydrant__BH_I=si__BloodHydrant__BH_I+1
        set this=si__BloodHydrant__BH_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__BloodHydrant__BH_V[this]=-1
 return this
endfunction

//Generated destructor of BloodHydrant__BH
function s__BloodHydrant__BH_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__BloodHydrant__BH_V[this]!=-1) then
        return
    endif
    set si__BloodHydrant__BH_V[this]=si__BloodHydrant__BH_F
    set si__BloodHydrant__BH_F=this
endfunction

//Generated allocator of Bloodbath__BBfx
function s__Bloodbath__BBfx__allocate takes nothing returns integer
 local integer this=si__Bloodbath__BBfx_F
    if (this!=0) then
        set si__Bloodbath__BBfx_F=si__Bloodbath__BBfx_V[this]
    else
        set si__Bloodbath__BBfx_I=si__Bloodbath__BBfx_I+1
        set this=si__Bloodbath__BBfx_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Bloodbath__BBfx_V[this]=-1
 return this
endfunction

//Generated destructor of Bloodbath__BBfx
function s__Bloodbath__BBfx_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Bloodbath__BBfx_V[this]!=-1) then
        return
    endif
    set si__Bloodbath__BBfx_V[this]=si__Bloodbath__BBfx_F
    set si__Bloodbath__BBfx_F=this
endfunction

//Generated allocator of Bloodbath__BB
function s__Bloodbath__BB__allocate takes nothing returns integer
 local integer this=si__Bloodbath__BB_F
    if (this!=0) then
        set si__Bloodbath__BB_F=si__Bloodbath__BB_V[this]
    else
        set si__Bloodbath__BB_I=si__Bloodbath__BB_I+1
        set this=si__Bloodbath__BB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Bloodbath__BB_V[this]=-1
 return this
endfunction

//Generated destructor of Bloodbath__BB
function s__Bloodbath__BB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Bloodbath__BB_V[this]!=-1) then
        return
    endif
    set si__Bloodbath__BB_V[this]=si__Bloodbath__BB_F
    set si__Bloodbath__BB_F=this
endfunction

//Generated allocator of SpellSteal__ss
function s__SpellSteal__ss__allocate takes nothing returns integer
 local integer this=si__SpellSteal__ss_F
    if (this!=0) then
        set si__SpellSteal__ss_F=si__SpellSteal__ss_V[this]
    else
        set si__SpellSteal__ss_I=si__SpellSteal__ss_I+1
        set this=si__SpellSteal__ss_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SpellSteal__ss_V[this]=-1
 return this
endfunction

//Generated destructor of SpellSteal__ss
function s__SpellSteal__ss_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SpellSteal__ss_V[this]!=-1) then
        return
    endif
    set si__SpellSteal__ss_V[this]=si__SpellSteal__ss_F
    set si__SpellSteal__ss_F=this
endfunction

//Generated allocator of SpellStealPrep__ss
function s__SpellStealPrep__ss__allocate takes nothing returns integer
 local integer this=si__SpellStealPrep__ss_F
    if (this!=0) then
        set si__SpellStealPrep__ss_F=si__SpellStealPrep__ss_V[this]
    else
        set si__SpellStealPrep__ss_I=si__SpellStealPrep__ss_I+1
        set this=si__SpellStealPrep__ss_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SpellStealPrep__ss_V[this]=-1
 return this
endfunction

//Generated destructor of SpellStealPrep__ss
function s__SpellStealPrep__ss_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SpellStealPrep__ss_V[this]!=-1) then
        return
    endif
    set si__SpellStealPrep__ss_V[this]=si__SpellStealPrep__ss_F
    set si__SpellStealPrep__ss_F=this
endfunction

//Generated allocator of Voracity__VA
function s__Voracity__VA__allocate takes nothing returns integer
 local integer this=si__Voracity__VA_F
    if (this!=0) then
        set si__Voracity__VA_F=si__Voracity__VA_V[this]
    else
        set si__Voracity__VA_I=si__Voracity__VA_I+1
        set this=si__Voracity__VA_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Voracity__VA_V[this]=-1
 return this
endfunction

//Generated destructor of Voracity__VA
function s__Voracity__VA_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Voracity__VA_V[this]!=-1) then
        return
    endif
    set si__Voracity__VA_V[this]=si__Voracity__VA_F
    set si__Voracity__VA_F=this
endfunction

//Generated allocator of Execute__Exec
function s__Execute__Exec__allocate takes nothing returns integer
 local integer this=si__Execute__Exec_F
    if (this!=0) then
        set si__Execute__Exec_F=si__Execute__Exec_V[this]
    else
        set si__Execute__Exec_I=si__Execute__Exec_I+1
        set this=si__Execute__Exec_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Execute__Exec_V[this]=-1
 return this
endfunction

//Generated destructor of Execute__Exec
function s__Execute__Exec_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Execute__Exec_V[this]!=-1) then
        return
    endif
    set si__Execute__Exec_V[this]=si__Execute__Exec_F
    set si__Execute__Exec_F=this
endfunction

//Generated allocator of GlutA
function s__GlutA__allocate takes nothing returns integer
 local integer this=si__GlutA_F
    if (this!=0) then
        set si__GlutA_F=si__GlutA_V[this]
    else
        set si__GlutA_I=si__GlutA_I+1
        set this=si__GlutA_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__GlutA_V[this]=-1
 return this
endfunction

//Generated destructor of GlutA
function s__GlutA_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__GlutA_V[this]!=-1) then
        return
    endif
    set si__GlutA_V[this]=si__GlutA_F
    set si__GlutA_F=this
endfunction

//Generated allocator of TempA
function s__TempA__allocate takes nothing returns integer
 local integer this=si__TempA_F
    if (this!=0) then
        set si__TempA_F=si__TempA_V[this]
    else
        set si__TempA_I=si__TempA_I+1
        set this=si__TempA_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__TempA_V[this]=-1
 return this
endfunction

//Generated destructor of TempA
function s__TempA_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__TempA_V[this]!=-1) then
        return
    endif
    set si__TempA_V[this]=si__TempA_F
    set si__TempA_F=this
endfunction

//Generated allocator of AetherealMastery__MC
function s__AetherealMastery__MC__allocate takes nothing returns integer
 local integer this=si__AetherealMastery__MC_F
    if (this!=0) then
        set si__AetherealMastery__MC_F=si__AetherealMastery__MC_V[this]
    else
        set si__AetherealMastery__MC_I=si__AetherealMastery__MC_I+1
        set this=si__AetherealMastery__MC_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__AetherealMastery__MC_V[this]=-1
 return this
endfunction

//Generated destructor of AetherealMastery__MC
function s__AetherealMastery__MC_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AetherealMastery__MC_V[this]!=-1) then
        return
    endif
    set si__AetherealMastery__MC_V[this]=si__AetherealMastery__MC_F
    set si__AetherealMastery__MC_F=this
endfunction

//Generated allocator of AetherFlare__AF
function s__AetherFlare__AF__allocate takes nothing returns integer
 local integer this=si__AetherFlare__AF_F
    if (this!=0) then
        set si__AetherFlare__AF_F=si__AetherFlare__AF_V[this]
    else
        set si__AetherFlare__AF_I=si__AetherFlare__AF_I+1
        set this=si__AetherFlare__AF_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__AetherFlare__AF_V[this]=-1
 return this
endfunction

//Generated destructor of AetherFlare__AF
function s__AetherFlare__AF_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AetherFlare__AF_V[this]!=-1) then
        return
    endif
    set si__AetherFlare__AF_V[this]=si__AetherFlare__AF_F
    set si__AetherFlare__AF_F=this
endfunction

//Generated allocator of AetherInfusion__AT
function s__AetherInfusion__AT__allocate takes nothing returns integer
 local integer this=si__AetherInfusion__AT_F
    if (this!=0) then
        set si__AetherInfusion__AT_F=si__AetherInfusion__AT_V[this]
    else
        set si__AetherInfusion__AT_I=si__AetherInfusion__AT_I+1
        set this=si__AetherInfusion__AT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__AetherInfusion__AT_V[this]=-1
 return this
endfunction

//Generated destructor of AetherInfusion__AT
function s__AetherInfusion__AT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__AetherInfusion__AT_V[this]!=-1) then
        return
    endif
    set si__AetherInfusion__AT_V[this]=si__AetherInfusion__AT_F
    set si__AetherInfusion__AT_F=this
endfunction

//Generated allocator of PiercetheVeil__PV
function s__PiercetheVeil__PV__allocate takes nothing returns integer
 local integer this=si__PiercetheVeil__PV_F
    if (this!=0) then
        set si__PiercetheVeil__PV_F=si__PiercetheVeil__PV_V[this]
    else
        set si__PiercetheVeil__PV_I=si__PiercetheVeil__PV_I+1
        set this=si__PiercetheVeil__PV_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__PiercetheVeil__PV_V[this]=-1
 return this
endfunction

//Generated destructor of PiercetheVeil__PV
function s__PiercetheVeil__PV_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__PiercetheVeil__PV_V[this]!=-1) then
        return
    endif
    set si__PiercetheVeil__PV_V[this]=si__PiercetheVeil__PV_F
    set si__PiercetheVeil__PV_F=this
endfunction

//Generated allocator of EnforcerStrengthBuff__EB
function s__EnforcerStrengthBuff__EB__allocate takes nothing returns integer
 local integer this=si__EnforcerStrengthBuff__EB_F
    if (this!=0) then
        set si__EnforcerStrengthBuff__EB_F=si__EnforcerStrengthBuff__EB_V[this]
    else
        set si__EnforcerStrengthBuff__EB_I=si__EnforcerStrengthBuff__EB_I+1
        set this=si__EnforcerStrengthBuff__EB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EnforcerStrengthBuff__EB_V[this]=-1
 return this
endfunction

//Generated destructor of EnforcerStrengthBuff__EB
function s__EnforcerStrengthBuff__EB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EnforcerStrengthBuff__EB_V[this]!=-1) then
        return
    endif
    set si__EnforcerStrengthBuff__EB_V[this]=si__EnforcerStrengthBuff__EB_F
    set si__EnforcerStrengthBuff__EB_F=this
endfunction

//Generated allocator of EnchantWeapons__EW
function s__EnchantWeapons__EW__allocate takes nothing returns integer
 local integer this=si__EnchantWeapons__EW_F
    if (this!=0) then
        set si__EnchantWeapons__EW_F=si__EnchantWeapons__EW_V[this]
    else
        set si__EnchantWeapons__EW_I=si__EnchantWeapons__EW_I+1
        set this=si__EnchantWeapons__EW_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EnchantWeapons__EW_V[this]=-1
 return this
endfunction

//Generated destructor of EnchantWeapons__EW
function s__EnchantWeapons__EW_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EnchantWeapons__EW_V[this]!=-1) then
        return
    endif
    set si__EnchantWeapons__EW_V[this]=si__EnchantWeapons__EW_F
    set si__EnchantWeapons__EW_F=this
endfunction

//Generated allocator of ToxiaPoison__TP
function s__ToxiaPoison__TP__allocate takes nothing returns integer
 local integer this=si__ToxiaPoison__TP_F
    if (this!=0) then
        set si__ToxiaPoison__TP_F=si__ToxiaPoison__TP_V[this]
    else
        set si__ToxiaPoison__TP_I=si__ToxiaPoison__TP_I+1
        set this=si__ToxiaPoison__TP_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ToxiaPoison__TP_V[this]=-1
 return this
endfunction

//Generated destructor of ToxiaPoison__TP
function s__ToxiaPoison__TP_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ToxiaPoison__TP_V[this]!=-1) then
        return
    endif
    set si__ToxiaPoison__TP_V[this]=si__ToxiaPoison__TP_F
    set si__ToxiaPoison__TP_F=this
endfunction

//Generated allocator of ALLSHALLBURN__FB2
function s__ALLSHALLBURN__FB2__allocate takes nothing returns integer
 local integer this=si__ALLSHALLBURN__FB2_F
    if (this!=0) then
        set si__ALLSHALLBURN__FB2_F=si__ALLSHALLBURN__FB2_V[this]
    else
        set si__ALLSHALLBURN__FB2_I=si__ALLSHALLBURN__FB2_I+1
        set this=si__ALLSHALLBURN__FB2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ALLSHALLBURN__FB2_V[this]=-1
 return this
endfunction

//Generated destructor of ALLSHALLBURN__FB2
function s__ALLSHALLBURN__FB2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ALLSHALLBURN__FB2_V[this]!=-1) then
        return
    endif
    set si__ALLSHALLBURN__FB2_V[this]=si__ALLSHALLBURN__FB2_F
    set si__ALLSHALLBURN__FB2_F=this
endfunction

//Generated allocator of ALLSHALLBURN__FB
function s__ALLSHALLBURN__FB__allocate takes nothing returns integer
 local integer this=si__ALLSHALLBURN__FB_F
    if (this!=0) then
        set si__ALLSHALLBURN__FB_F=si__ALLSHALLBURN__FB_V[this]
    else
        set si__ALLSHALLBURN__FB_I=si__ALLSHALLBURN__FB_I+1
        set this=si__ALLSHALLBURN__FB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ALLSHALLBURN__FB_V[this]=-1
 return this
endfunction

//Generated destructor of ALLSHALLBURN__FB
function s__ALLSHALLBURN__FB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ALLSHALLBURN__FB_V[this]!=-1) then
        return
    endif
    set si__ALLSHALLBURN__FB_V[this]=si__ALLSHALLBURN__FB_F
    set si__ALLSHALLBURN__FB_F=this
endfunction

//Generated allocator of EverlastingFlame__FT
function s__EverlastingFlame__FT__allocate takes nothing returns integer
 local integer this=si__EverlastingFlame__FT_F
    if (this!=0) then
        set si__EverlastingFlame__FT_F=si__EverlastingFlame__FT_V[this]
    else
        set si__EverlastingFlame__FT_I=si__EverlastingFlame__FT_I+1
        set this=si__EverlastingFlame__FT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EverlastingFlame__FT_V[this]=-1
 return this
endfunction

//Generated destructor of EverlastingFlame__FT
function s__EverlastingFlame__FT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EverlastingFlame__FT_V[this]!=-1) then
        return
    endif
    set si__EverlastingFlame__FT_V[this]=si__EverlastingFlame__FT_F
    set si__EverlastingFlame__FT_F=this
endfunction

//Generated allocator of FlameTurbine__FT3
function s__FlameTurbine__FT3__allocate takes nothing returns integer
 local integer this=si__FlameTurbine__FT3_F
    if (this!=0) then
        set si__FlameTurbine__FT3_F=si__FlameTurbine__FT3_V[this]
    else
        set si__FlameTurbine__FT3_I=si__FlameTurbine__FT3_I+1
        set this=si__FlameTurbine__FT3_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FlameTurbine__FT3_V[this]=-1
 return this
endfunction

//Generated destructor of FlameTurbine__FT3
function s__FlameTurbine__FT3_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FlameTurbine__FT3_V[this]!=-1) then
        return
    endif
    set si__FlameTurbine__FT3_V[this]=si__FlameTurbine__FT3_F
    set si__FlameTurbine__FT3_F=this
endfunction

//Generated allocator of FlameTurbine__FT2
function s__FlameTurbine__FT2__allocate takes nothing returns integer
 local integer this=si__FlameTurbine__FT2_F
    if (this!=0) then
        set si__FlameTurbine__FT2_F=si__FlameTurbine__FT2_V[this]
    else
        set si__FlameTurbine__FT2_I=si__FlameTurbine__FT2_I+1
        set this=si__FlameTurbine__FT2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FlameTurbine__FT2_V[this]=-1
 return this
endfunction

//Generated destructor of FlameTurbine__FT2
function s__FlameTurbine__FT2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FlameTurbine__FT2_V[this]!=-1) then
        return
    endif
    set si__FlameTurbine__FT2_V[this]=si__FlameTurbine__FT2_F
    set si__FlameTurbine__FT2_F=this
endfunction

//Generated allocator of FlameTurbine__FT
function s__FlameTurbine__FT__allocate takes nothing returns integer
 local integer this=si__FlameTurbine__FT_F
    if (this!=0) then
        set si__FlameTurbine__FT_F=si__FlameTurbine__FT_V[this]
    else
        set si__FlameTurbine__FT_I=si__FlameTurbine__FT_I+1
        set this=si__FlameTurbine__FT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FlameTurbine__FT_V[this]=-1
 return this
endfunction

//Generated destructor of FlameTurbine__FT
function s__FlameTurbine__FT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FlameTurbine__FT_V[this]!=-1) then
        return
    endif
    set si__FlameTurbine__FT_V[this]=si__FlameTurbine__FT_F
    set si__FlameTurbine__FT_F=this
endfunction

//Generated allocator of UnnervingSymphony__US
function s__UnnervingSymphony__US__allocate takes nothing returns integer
 local integer this=si__UnnervingSymphony__US_F
    if (this!=0) then
        set si__UnnervingSymphony__US_F=si__UnnervingSymphony__US_V[this]
    else
        set si__UnnervingSymphony__US_I=si__UnnervingSymphony__US_I+1
        set this=si__UnnervingSymphony__US_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__UnnervingSymphony__US_V[this]=-1
 return this
endfunction

//Generated destructor of UnnervingSymphony__US
function s__UnnervingSymphony__US_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__UnnervingSymphony__US_V[this]!=-1) then
        return
    endif
    set si__UnnervingSymphony__US_V[this]=si__UnnervingSymphony__US_F
    set si__UnnervingSymphony__US_F=this
endfunction

//Generated allocator of DeathBolt__LB
function s__DeathBolt__LB__allocate takes nothing returns integer
 local integer this=si__DeathBolt__LB_F
    if (this!=0) then
        set si__DeathBolt__LB_F=si__DeathBolt__LB_V[this]
    else
        set si__DeathBolt__LB_I=si__DeathBolt__LB_I+1
        set this=si__DeathBolt__LB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__DeathBolt__LB_V[this]=-1
 return this
endfunction

//Generated destructor of DeathBolt__LB
function s__DeathBolt__LB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__DeathBolt__LB_V[this]!=-1) then
        return
    endif
    set si__DeathBolt__LB_V[this]=si__DeathBolt__LB_F
    set si__DeathBolt__LB_F=this
endfunction

//Generated allocator of VacuumBurst__vacuumdata
function s__VacuumBurst__vacuumdata__allocate takes nothing returns integer
 local integer this=si__VacuumBurst__vacuumdata_F
    if (this!=0) then
        set si__VacuumBurst__vacuumdata_F=si__VacuumBurst__vacuumdata_V[this]
    else
        set si__VacuumBurst__vacuumdata_I=si__VacuumBurst__vacuumdata_I+1
        set this=si__VacuumBurst__vacuumdata_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__VacuumBurst__vacuumdata_V[this]=-1
 return this
endfunction

//Generated destructor of VacuumBurst__vacuumdata
function s__VacuumBurst__vacuumdata_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__VacuumBurst__vacuumdata_V[this]!=-1) then
        return
    endif
    set si__VacuumBurst__vacuumdata_V[this]=si__VacuumBurst__vacuumdata_F
    set si__VacuumBurst__vacuumdata_F=this
endfunction

//Generated allocator of VacuumBurst__data
function s__VacuumBurst__data__allocate takes nothing returns integer
 local integer this=si__VacuumBurst__data_F
    if (this!=0) then
        set si__VacuumBurst__data_F=si__VacuumBurst__data_V[this]
    else
        set si__VacuumBurst__data_I=si__VacuumBurst__data_I+1
        set this=si__VacuumBurst__data_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__VacuumBurst__data_V[this]=-1
 return this
endfunction

//Generated destructor of VacuumBurst__data
function s__VacuumBurst__data_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__VacuumBurst__data_V[this]!=-1) then
        return
    endif
    set si__VacuumBurst__data_V[this]=si__VacuumBurst__data_F
    set si__VacuumBurst__data_F=this
endfunction

//Generated allocator of ChaosOverwhelming__BB
function s__ChaosOverwhelming__BB__allocate takes nothing returns integer
 local integer this=si__ChaosOverwhelming__BB_F
    if (this!=0) then
        set si__ChaosOverwhelming__BB_F=si__ChaosOverwhelming__BB_V[this]
    else
        set si__ChaosOverwhelming__BB_I=si__ChaosOverwhelming__BB_I+1
        set this=si__ChaosOverwhelming__BB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ChaosOverwhelming__BB_V[this]=-1
 return this
endfunction

//Generated destructor of ChaosOverwhelming__BB
function s__ChaosOverwhelming__BB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ChaosOverwhelming__BB_V[this]!=-1) then
        return
    endif
    set si__ChaosOverwhelming__BB_V[this]=si__ChaosOverwhelming__BB_F
    set si__ChaosOverwhelming__BB_F=this
endfunction

//Generated allocator of EldCurse__BB
function s__EldCurse__BB__allocate takes nothing returns integer
 local integer this=si__EldCurse__BB_F
    if (this!=0) then
        set si__EldCurse__BB_F=si__EldCurse__BB_V[this]
    else
        set si__EldCurse__BB_I=si__EldCurse__BB_I+1
        set this=si__EldCurse__BB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__EldCurse__BB_V[this]=-1
 return this
endfunction

//Generated destructor of EldCurse__BB
function s__EldCurse__BB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__EldCurse__BB_V[this]!=-1) then
        return
    endif
    set si__EldCurse__BB_V[this]=si__EldCurse__BB_F
    set si__EldCurse__BB_F=this
endfunction

//Generated allocator of Felreaving__FT2
function s__Felreaving__FT2__allocate takes nothing returns integer
 local integer this=si__Felreaving__FT2_F
    if (this!=0) then
        set si__Felreaving__FT2_F=si__Felreaving__FT2_V[this]
    else
        set si__Felreaving__FT2_I=si__Felreaving__FT2_I+1
        set this=si__Felreaving__FT2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Felreaving__FT2_V[this]=-1
 return this
endfunction

//Generated destructor of Felreaving__FT2
function s__Felreaving__FT2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Felreaving__FT2_V[this]!=-1) then
        return
    endif
    set si__Felreaving__FT2_V[this]=si__Felreaving__FT2_F
    set si__Felreaving__FT2_F=this
endfunction

//Generated allocator of Felreaving__FT
function s__Felreaving__FT__allocate takes nothing returns integer
 local integer this=si__Felreaving__FT_F
    if (this!=0) then
        set si__Felreaving__FT_F=si__Felreaving__FT_V[this]
    else
        set si__Felreaving__FT_I=si__Felreaving__FT_I+1
        set this=si__Felreaving__FT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Felreaving__FT_V[this]=-1
 return this
endfunction

//Generated destructor of Felreaving__FT
function s__Felreaving__FT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Felreaving__FT_V[this]!=-1) then
        return
    endif
    set si__Felreaving__FT_V[this]=si__Felreaving__FT_F
    set si__Felreaving__FT_F=this
endfunction

//Generated allocator of WSLeapy__Leapy
function s__WSLeapy__Leapy__allocate takes nothing returns integer
 local integer this=si__WSLeapy__Leapy_F
    if (this!=0) then
        set si__WSLeapy__Leapy_F=si__WSLeapy__Leapy_V[this]
    else
        set si__WSLeapy__Leapy_I=si__WSLeapy__Leapy_I+1
        set this=si__WSLeapy__Leapy_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__WSLeapy__Leapy_V[this]=-1
 return this
endfunction

//Generated destructor of WSLeapy__Leapy
function s__WSLeapy__Leapy_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__WSLeapy__Leapy_V[this]!=-1) then
        return
    endif
    set si__WSLeapy__Leapy_V[this]=si__WSLeapy__Leapy_F
    set si__WSLeapy__Leapy_F=this
endfunction

//Generated allocator of SearingAegisActive__EB
function s__SearingAegisActive__EB__allocate takes nothing returns integer
 local integer this=si__SearingAegisActive__EB_F
    if (this!=0) then
        set si__SearingAegisActive__EB_F=si__SearingAegisActive__EB_V[this]
    else
        set si__SearingAegisActive__EB_I=si__SearingAegisActive__EB_I+1
        set this=si__SearingAegisActive__EB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SearingAegisActive__EB_V[this]=-1
 return this
endfunction

//Generated destructor of SearingAegisActive__EB
function s__SearingAegisActive__EB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SearingAegisActive__EB_V[this]!=-1) then
        return
    endif
    set si__SearingAegisActive__EB_V[this]=si__SearingAegisActive__EB_F
    set si__SearingAegisActive__EB_F=this
endfunction

//Generated allocator of MalVladisRevelry__FB
function s__MalVladisRevelry__FB__allocate takes nothing returns integer
 local integer this=si__MalVladisRevelry__FB_F
    if (this!=0) then
        set si__MalVladisRevelry__FB_F=si__MalVladisRevelry__FB_V[this]
    else
        set si__MalVladisRevelry__FB_I=si__MalVladisRevelry__FB_I+1
        set this=si__MalVladisRevelry__FB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__MalVladisRevelry__FB_V[this]=-1
 return this
endfunction

//Generated destructor of MalVladisRevelry__FB
function s__MalVladisRevelry__FB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__MalVladisRevelry__FB_V[this]!=-1) then
        return
    endif
    set si__MalVladisRevelry__FB_V[this]=si__MalVladisRevelry__FB_F
    set si__MalVladisRevelry__FB_F=this
endfunction

//Generated allocator of SearingAegis__FB2
function s__SearingAegis__FB2__allocate takes nothing returns integer
 local integer this=si__SearingAegis__FB2_F
    if (this!=0) then
        set si__SearingAegis__FB2_F=si__SearingAegis__FB2_V[this]
    else
        set si__SearingAegis__FB2_I=si__SearingAegis__FB2_I+1
        set this=si__SearingAegis__FB2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SearingAegis__FB2_V[this]=-1
 return this
endfunction

//Generated destructor of SearingAegis__FB2
function s__SearingAegis__FB2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SearingAegis__FB2_V[this]!=-1) then
        return
    endif
    set si__SearingAegis__FB2_V[this]=si__SearingAegis__FB2_F
    set si__SearingAegis__FB2_F=this
endfunction

//Generated allocator of SkewerA__TempA
function s__SkewerA__TempA__allocate takes nothing returns integer
 local integer this=si__SkewerA__TempA_F
    if (this!=0) then
        set si__SkewerA__TempA_F=si__SkewerA__TempA_V[this]
    else
        set si__SkewerA__TempA_I=si__SkewerA__TempA_I+1
        set this=si__SkewerA__TempA_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SkewerA__TempA_V[this]=-1
 return this
endfunction

//Generated destructor of SkewerA__TempA
function s__SkewerA__TempA_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SkewerA__TempA_V[this]!=-1) then
        return
    endif
    set si__SkewerA__TempA_V[this]=si__SkewerA__TempA_F
    set si__SkewerA__TempA_F=this
endfunction

//Generated allocator of BleedingSpears__FB2
function s__BleedingSpears__FB2__allocate takes nothing returns integer
 local integer this=si__BleedingSpears__FB2_F
    if (this!=0) then
        set si__BleedingSpears__FB2_F=si__BleedingSpears__FB2_V[this]
    else
        set si__BleedingSpears__FB2_I=si__BleedingSpears__FB2_I+1
        set this=si__BleedingSpears__FB2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__BleedingSpears__FB2_V[this]=-1
 return this
endfunction

//Generated destructor of BleedingSpears__FB2
function s__BleedingSpears__FB2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__BleedingSpears__FB2_V[this]!=-1) then
        return
    endif
    set si__BleedingSpears__FB2_V[this]=si__BleedingSpears__FB2_F
    set si__BleedingSpears__FB2_F=this
endfunction

//Generated allocator of BleedingSpears__FB
function s__BleedingSpears__FB__allocate takes nothing returns integer
 local integer this=si__BleedingSpears__FB_F
    if (this!=0) then
        set si__BleedingSpears__FB_F=si__BleedingSpears__FB_V[this]
    else
        set si__BleedingSpears__FB_I=si__BleedingSpears__FB_I+1
        set this=si__BleedingSpears__FB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__BleedingSpears__FB_V[this]=-1
 return this
endfunction

//Generated destructor of BleedingSpears__FB
function s__BleedingSpears__FB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__BleedingSpears__FB_V[this]!=-1) then
        return
    endif
    set si__BleedingSpears__FB_V[this]=si__BleedingSpears__FB_F
    set si__BleedingSpears__FB_F=this
endfunction

//Generated allocator of Rains__AP
function s__Rains__AP__allocate takes nothing returns integer
 local integer this=si__Rains__AP_F
    if (this!=0) then
        set si__Rains__AP_F=si__Rains__AP_V[this]
    else
        set si__Rains__AP_I=si__Rains__AP_I+1
        set this=si__Rains__AP_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Rains__AP_V[this]=-1
 return this
endfunction

//Generated destructor of Rains__AP
function s__Rains__AP_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Rains__AP_V[this]!=-1) then
        return
    endif
    set si__Rains__AP_V[this]=si__Rains__AP_F
    set si__Rains__AP_F=this
endfunction

//Generated allocator of Soulrend__FB2
function s__Soulrend__FB2__allocate takes nothing returns integer
 local integer this=si__Soulrend__FB2_F
    if (this!=0) then
        set si__Soulrend__FB2_F=si__Soulrend__FB2_V[this]
    else
        set si__Soulrend__FB2_I=si__Soulrend__FB2_I+1
        set this=si__Soulrend__FB2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Soulrend__FB2_V[this]=-1
 return this
endfunction

//Generated destructor of Soulrend__FB2
function s__Soulrend__FB2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Soulrend__FB2_V[this]!=-1) then
        return
    endif
    set si__Soulrend__FB2_V[this]=si__Soulrend__FB2_F
    set si__Soulrend__FB2_F=this
endfunction

//Generated allocator of LAsers__FT
function s__LAsers__FT__allocate takes nothing returns integer
 local integer this=si__LAsers__FT_F
    if (this!=0) then
        set si__LAsers__FT_F=si__LAsers__FT_V[this]
    else
        set si__LAsers__FT_I=si__LAsers__FT_I+1
        set this=si__LAsers__FT_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__LAsers__FT_V[this]=-1
 return this
endfunction

//Generated destructor of LAsers__FT
function s__LAsers__FT_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__LAsers__FT_V[this]!=-1) then
        return
    endif
    set si__LAsers__FT_V[this]=si__LAsers__FT_F
    set si__LAsers__FT_F=this
endfunction

//Generated allocator of Defend__Dstruct
function s__Defend__Dstruct__allocate takes nothing returns integer
 local integer this=si__Defend__Dstruct_F
    if (this!=0) then
        set si__Defend__Dstruct_F=si__Defend__Dstruct_V[this]
    else
        set si__Defend__Dstruct_I=si__Defend__Dstruct_I+1
        set this=si__Defend__Dstruct_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Defend__Dstruct_V[this]=-1
 return this
endfunction

//Generated destructor of Defend__Dstruct
function s__Defend__Dstruct_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Defend__Dstruct_V[this]!=-1) then
        return
    endif
    set si__Defend__Dstruct_V[this]=si__Defend__Dstruct_F
    set si__Defend__Dstruct_F=this
endfunction

//Generated method caller for NinjaRope__FallingBolt.onDestroy
function sc__NinjaRope__FallingBolt_onDestroy takes integer this returns nothing
            call DestroyLightning(s__NinjaRope__FallingBolt_bolt[this])
            set s__NinjaRope__FallingBolt_bolt[this]=null
endfunction

//Generated allocator of NinjaRope__FallingBolt
function s__NinjaRope__FallingBolt__allocate takes nothing returns integer
 local integer this=si__NinjaRope__FallingBolt_F
    if (this!=0) then
        set si__NinjaRope__FallingBolt_F=si__NinjaRope__FallingBolt_V[this]
    else
        set si__NinjaRope__FallingBolt_I=si__NinjaRope__FallingBolt_I+1
        set this=si__NinjaRope__FallingBolt_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__NinjaRope__FallingBolt_V[this]=-1
 return this
endfunction

//Generated destructor of NinjaRope__FallingBolt
function sc__NinjaRope__FallingBolt_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NinjaRope__FallingBolt_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__NinjaRope__FallingBolt_onDestroy)
    set si__NinjaRope__FallingBolt_V[this]=si__NinjaRope__FallingBolt_F
    set si__NinjaRope__FallingBolt_F=this
endfunction

//Generated method caller for NinjaRope__SpellData.onDestroy
function sc__NinjaRope__SpellData_onDestroy takes integer this returns nothing
        local real height= 0.
        
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U00O' or GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U003' then
            set height=30.
            endif
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U000' then
            set height=120.
            endif
            
            call SetUnitFlyHeight(s__NinjaRope__SpellData_Caster[this], height, 0.)
            call SetUnitPathing(s__NinjaRope__SpellData_Caster[this], true)
            set s__NinjaRope__SpellData_CasterData[GetUnitUserData(s__NinjaRope__SpellData_Caster[this])]=0
            if s__NinjaRope__SpellData_Caster[this] != null then
                call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], NinjaRope__ABILITY_STOPID)
							if GetUnitAbilityLevel(s__NinjaRope__SpellData_Caster[this], 'A0O7') != 0 then
			call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], 'A0O7')
			endif
            endif
            set s__NinjaRope__SpellData_Caster[this]=null
            if s__NinjaRope__SpellData_AttachPoint[this] != null then
                call KillUnit(s__NinjaRope__SpellData_AttachPoint[this])
            endif
            set s__NinjaRope__SpellData_AttachPoint[this]=null
            if s__NinjaRope__SpellData_bolt[this] != null then
                call DestroyLightning(s__NinjaRope__SpellData_bolt[this])
            endif
            set s__NinjaRope__SpellData_bolt[this]=null
            call TriggerRemoveCondition(s__NinjaRope__SpellData_onDeath[this], s__NinjaRope__SpellData_onDeathCond[this])
            call DestroyTrigger(s__NinjaRope__SpellData_onDeath[this])
            set s__NinjaRope__SpellData_onDeathCond[this]=null
            set s__NinjaRope__SpellData_onDeath[this]=null
endfunction

//Generated method caller for NinjaRope__SpellData.Stop
function sc__NinjaRope__SpellData_Stop takes integer this returns nothing
            set s__NinjaRope__SpellData_ticks[this]=0
endfunction

//Generated allocator of NinjaRope__SpellData
function s__NinjaRope__SpellData__allocate takes nothing returns integer
 local integer this=si__NinjaRope__SpellData_F
    if (this!=0) then
        set si__NinjaRope__SpellData_F=si__NinjaRope__SpellData_V[this]
    else
        set si__NinjaRope__SpellData_I=si__NinjaRope__SpellData_I+1
        set this=si__NinjaRope__SpellData_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__NinjaRope__SpellData_initfall[this]=false
    set si__NinjaRope__SpellData_V[this]=-1
 return this
endfunction

//Generated destructor of NinjaRope__SpellData
function sc__NinjaRope__SpellData_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NinjaRope__SpellData_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__NinjaRope__SpellData_onDestroy)
    set si__NinjaRope__SpellData_V[this]=si__NinjaRope__SpellData_F
    set si__NinjaRope__SpellData_F=this
endfunction

//Generated allocator of Ragnarok__Ragnak
function s__Ragnarok__Ragnak__allocate takes nothing returns integer
 local integer this=si__Ragnarok__Ragnak_F
    if (this!=0) then
        set si__Ragnarok__Ragnak_F=si__Ragnarok__Ragnak_V[this]
    else
        set si__Ragnarok__Ragnak_I=si__Ragnarok__Ragnak_I+1
        set this=si__Ragnarok__Ragnak_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Ragnarok__Ragnak_V[this]=-1
 return this
endfunction

//Generated destructor of Ragnarok__Ragnak
function s__Ragnarok__Ragnak_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ragnarok__Ragnak_V[this]!=-1) then
        return
    endif
    set si__Ragnarok__Ragnak_V[this]=si__Ragnarok__Ragnak_F
    set si__Ragnarok__Ragnak_F=this
endfunction

//Generated allocator of Ragnarok__Ragnak2
function s__Ragnarok__Ragnak2__allocate takes nothing returns integer
 local integer this=si__Ragnarok__Ragnak2_F
    if (this!=0) then
        set si__Ragnarok__Ragnak2_F=si__Ragnarok__Ragnak2_V[this]
    else
        set si__Ragnarok__Ragnak2_I=si__Ragnarok__Ragnak2_I+1
        set this=si__Ragnarok__Ragnak2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Ragnarok__Ragnak2_V[this]=-1
 return this
endfunction

//Generated destructor of Ragnarok__Ragnak2
function s__Ragnarok__Ragnak2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ragnarok__Ragnak2_V[this]!=-1) then
        return
    endif
    set si__Ragnarok__Ragnak2_V[this]=si__Ragnarok__Ragnak2_F
    set si__Ragnarok__Ragnak2_F=this
endfunction

//Generated allocator of WandCourierPunishment__WandP
function s__WandCourierPunishment__WandP__allocate takes nothing returns integer
 local integer this=si__WandCourierPunishment__WandP_F
    if (this!=0) then
        set si__WandCourierPunishment__WandP_F=si__WandCourierPunishment__WandP_V[this]
    else
        set si__WandCourierPunishment__WandP_I=si__WandCourierPunishment__WandP_I+1
        set this=si__WandCourierPunishment__WandP_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__WandCourierPunishment__WandP_V[this]=-1
 return this
endfunction

//Generated destructor of WandCourierPunishment__WandP
function s__WandCourierPunishment__WandP_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__WandCourierPunishment__WandP_V[this]!=-1) then
        return
    endif
    set si__WandCourierPunishment__WandP_V[this]=si__WandCourierPunishment__WandP_F
    set si__WandCourierPunishment__WandP_F=this
endfunction

//Generated allocator of PDown
function s__PDown__allocate takes nothing returns integer
 local integer this=si__PDown_F
    if (this!=0) then
        set si__PDown_F=si__PDown_V[this]
    else
        set si__PDown_I=si__PDown_I+1
        set this=si__PDown_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__PDown_V[this]=-1
 return this
endfunction

//Generated destructor of PDown
function s__PDown_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__PDown_V[this]!=-1) then
        return
    endif
    set si__PDown_V[this]=si__PDown_F
    set si__PDown_F=this
endfunction

//Generated allocator of FearItem__FearIS
function s__FearItem__FearIS__allocate takes nothing returns integer
 local integer this=si__FearItem__FearIS_F
    if (this!=0) then
        set si__FearItem__FearIS_F=si__FearItem__FearIS_V[this]
    else
        set si__FearItem__FearIS_I=si__FearItem__FearIS_I+1
        set this=si__FearItem__FearIS_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FearItem__FearIS_V[this]=-1
 return this
endfunction

//Generated destructor of FearItem__FearIS
function s__FearItem__FearIS_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FearItem__FearIS_V[this]!=-1) then
        return
    endif
    set si__FearItem__FearIS_V[this]=si__FearItem__FearIS_F
    set si__FearItem__FearIS_F=this
endfunction

//Generated allocator of Ragnaros__Ragnas
function s__Ragnaros__Ragnas__allocate takes nothing returns integer
 local integer this=si__Ragnaros__Ragnas_F
    if (this!=0) then
        set si__Ragnaros__Ragnas_F=si__Ragnaros__Ragnas_V[this]
    else
        set si__Ragnaros__Ragnas_I=si__Ragnaros__Ragnas_I+1
        set this=si__Ragnaros__Ragnas_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Ragnaros__Ragnas_V[this]=-1
 return this
endfunction

//Generated destructor of Ragnaros__Ragnas
function s__Ragnaros__Ragnas_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ragnaros__Ragnas_V[this]!=-1) then
        return
    endif
    set si__Ragnaros__Ragnas_V[this]=si__Ragnaros__Ragnas_F
    set si__Ragnaros__Ragnas_F=this
endfunction

//Generated allocator of Ragnaros__Ragnas2
function s__Ragnaros__Ragnas2__allocate takes nothing returns integer
 local integer this=si__Ragnaros__Ragnas2_F
    if (this!=0) then
        set si__Ragnaros__Ragnas2_F=si__Ragnaros__Ragnas2_V[this]
    else
        set si__Ragnaros__Ragnas2_I=si__Ragnaros__Ragnas2_I+1
        set this=si__Ragnaros__Ragnas2_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Ragnaros__Ragnas2_V[this]=-1
 return this
endfunction

//Generated destructor of Ragnaros__Ragnas2
function s__Ragnaros__Ragnas2_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Ragnaros__Ragnas2_V[this]!=-1) then
        return
    endif
    set si__Ragnaros__Ragnas2_V[this]=si__Ragnaros__Ragnas2_F
    set si__Ragnaros__Ragnas2_F=this
endfunction

//Generated allocator of CorruptorFear__FearIS
function s__CorruptorFear__FearIS__allocate takes nothing returns integer
 local integer this=si__CorruptorFear__FearIS_F
    if (this!=0) then
        set si__CorruptorFear__FearIS_F=si__CorruptorFear__FearIS_V[this]
    else
        set si__CorruptorFear__FearIS_I=si__CorruptorFear__FearIS_I+1
        set this=si__CorruptorFear__FearIS_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__CorruptorFear__FearIS_V[this]=-1
 return this
endfunction

//Generated destructor of CorruptorFear__FearIS
function s__CorruptorFear__FearIS_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__CorruptorFear__FearIS_V[this]!=-1) then
        return
    endif
    set si__CorruptorFear__FearIS_V[this]=si__CorruptorFear__FearIS_F
    set si__CorruptorFear__FearIS_F=this
endfunction

//Generated allocator of FelBolt__LB
function s__FelBolt__LB__allocate takes nothing returns integer
 local integer this=si__FelBolt__LB_F
    if (this!=0) then
        set si__FelBolt__LB_F=si__FelBolt__LB_V[this]
    else
        set si__FelBolt__LB_I=si__FelBolt__LB_I+1
        set this=si__FelBolt__LB_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__FelBolt__LB_V[this]=-1
 return this
endfunction

//Generated destructor of FelBolt__LB
function s__FelBolt__LB_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__FelBolt__LB_V[this]!=-1) then
        return
    endif
    set si__FelBolt__LB_V[this]=si__FelBolt__LB_F
    set si__FelBolt__LB_F=this
endfunction

//Generated method caller for ForestCall__MyStruct.onDestroy
function sc__ForestCall__MyStruct_onDestroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__ForestCall__MyStruct_onDestroy)
endfunction

//Generated allocator of ForestCall__MyStruct
function s__ForestCall__MyStruct__allocate takes nothing returns integer
 local integer this=si__ForestCall__MyStruct_F
    if (this!=0) then
        set si__ForestCall__MyStruct_F=si__ForestCall__MyStruct_V[this]
    else
        set si__ForestCall__MyStruct_I=si__ForestCall__MyStruct_I+1
        set this=si__ForestCall__MyStruct_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__ForestCall__MyStruct_V[this]=-1
 return this
endfunction

//Generated destructor of ForestCall__MyStruct
function sc__ForestCall__MyStruct_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ForestCall__MyStruct_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__ForestCall__MyStruct_onDestroy)
    set si__ForestCall__MyStruct_V[this]=si__ForestCall__MyStruct_F
    set si__ForestCall__MyStruct_F=this
endfunction

//Generated allocator of chancesPerTreeType
function s__chancesPerTreeType__allocate takes nothing returns integer
 local integer this=si__chancesPerTreeType_F
    if (this!=0) then
        set si__chancesPerTreeType_F=si__chancesPerTreeType_V[this]
    else
        set si__chancesPerTreeType_I=si__chancesPerTreeType_I+4
        set this=si__chancesPerTreeType_I
    endif
    if (this>8187) then
        return 0
    endif

    set si__chancesPerTreeType_V[this]=-1
 return this
endfunction

//Generated destructor of chancesPerTreeType
function s__chancesPerTreeType_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__chancesPerTreeType_V[this]!=-1) then
        return
    endif
    set si__chancesPerTreeType_V[this]=si__chancesPerTreeType_F
    set si__chancesPerTreeType_F=this
endfunction

//Generated allocator of Leapy__Leapy
function s__Leapy__Leapy__allocate takes nothing returns integer
 local integer this=si__Leapy__Leapy_F
    if (this!=0) then
        set si__Leapy__Leapy_F=si__Leapy__Leapy_V[this]
    else
        set si__Leapy__Leapy_I=si__Leapy__Leapy_I+1
        set this=si__Leapy__Leapy_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Leapy__Leapy_V[this]=-1
 return this
endfunction

//Generated destructor of Leapy__Leapy
function s__Leapy__Leapy_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Leapy__Leapy_V[this]!=-1) then
        return
    endif
    set si__Leapy__Leapy_V[this]=si__Leapy__Leapy_F
    set si__Leapy__Leapy_F=this
endfunction

//Generated allocator of Charge__TempA
function s__Charge__TempA__allocate takes nothing returns integer
 local integer this=si__Charge__TempA_F
    if (this!=0) then
        set si__Charge__TempA_F=si__Charge__TempA_V[this]
    else
        set si__Charge__TempA_I=si__Charge__TempA_I+1
        set this=si__Charge__TempA_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Charge__TempA_V[this]=-1
 return this
endfunction

//Generated destructor of Charge__TempA
function s__Charge__TempA_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Charge__TempA_V[this]!=-1) then
        return
    endif
    set si__Charge__TempA_V[this]=si__Charge__TempA_F
    set si__Charge__TempA_F=this
endfunction

//Generated allocator of GlythidesGift__Glyth
function s__GlythidesGift__Glyth__allocate takes nothing returns integer
 local integer this=si__GlythidesGift__Glyth_F
    if (this!=0) then
        set si__GlythidesGift__Glyth_F=si__GlythidesGift__Glyth_V[this]
    else
        set si__GlythidesGift__Glyth_I=si__GlythidesGift__Glyth_I+1
        set this=si__GlythidesGift__Glyth_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__GlythidesGift__Glyth_V[this]=-1
 return this
endfunction

//Generated destructor of GlythidesGift__Glyth
function s__GlythidesGift__Glyth_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__GlythidesGift__Glyth_V[this]!=-1) then
        return
    endif
    set si__GlythidesGift__Glyth_V[this]=si__GlythidesGift__Glyth_F
    set si__GlythidesGift__Glyth_F=this
endfunction

//Generated allocator of Autopool__AP
function s__Autopool__AP__allocate takes nothing returns integer
 local integer this=si__Autopool__AP_F
    if (this!=0) then
        set si__Autopool__AP_F=si__Autopool__AP_V[this]
    else
        set si__Autopool__AP_I=si__Autopool__AP_I+1
        set this=si__Autopool__AP_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Autopool__AP_V[this]=-1
 return this
endfunction

//Generated destructor of Autopool__AP
function s__Autopool__AP_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Autopool__AP_V[this]!=-1) then
        return
    endif
    set si__Autopool__AP_V[this]=si__Autopool__AP_F
    set si__Autopool__AP_F=this
endfunction

//Generated allocator of NoMansLand__Noman
function s__NoMansLand__Noman__allocate takes nothing returns integer
 local integer this=si__NoMansLand__Noman_F
    if (this!=0) then
        set si__NoMansLand__Noman_F=si__NoMansLand__Noman_V[this]
    else
        set si__NoMansLand__Noman_I=si__NoMansLand__Noman_I+1
        set this=si__NoMansLand__Noman_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__NoMansLand__Noman_V[this]=-1
 return this
endfunction

//Generated destructor of NoMansLand__Noman
function s__NoMansLand__Noman_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NoMansLand__Noman_V[this]!=-1) then
        return
    endif
    set si__NoMansLand__Noman_V[this]=si__NoMansLand__Noman_F
    set si__NoMansLand__Noman_F=this
endfunction

//Generated allocator of Prot
function s__Prot__allocate takes nothing returns integer
 local integer this=si__Prot_F
    if (this!=0) then
        set si__Prot_F=si__Prot_V[this]
    else
        set si__Prot_I=si__Prot_I+1
        set this=si__Prot_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Prot_V[this]=-1
 return this
endfunction

//Generated destructor of Prot
function s__Prot_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Prot_V[this]!=-1) then
        return
    endif
    set si__Prot_V[this]=si__Prot_F
    set si__Prot_F=this
endfunction

//Generated allocator of RattyRage__RatR
function s__RattyRage__RatR__allocate takes nothing returns integer
 local integer this=si__RattyRage__RatR_F
    if (this!=0) then
        set si__RattyRage__RatR_F=si__RattyRage__RatR_V[this]
    else
        set si__RattyRage__RatR_I=si__RattyRage__RatR_I+1
        set this=si__RattyRage__RatR_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__RattyRage__RatR_b[this]= false
    set si__RattyRage__RatR_V[this]=-1
 return this
endfunction

//Generated destructor of RattyRage__RatR
function s__RattyRage__RatR_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__RattyRage__RatR_V[this]!=-1) then
        return
    endif
    set si__RattyRage__RatR_V[this]=si__RattyRage__RatR_F
    set si__RattyRage__RatR_F=this
endfunction

//Generated method caller for Roflcopter__bomb.create
function sc__Roflcopter__bomb_create takes integer i,real x,real y,real h returns integer
    set f__arg_integer1=i
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=h
    call TriggerEvaluate(st__Roflcopter__bomb_create)
 return f__result_integer
endfunction

//Generated method caller for Roflcopter__bomb.destroy
function sc__Roflcopter__bomb_destroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Roflcopter__bomb_destroy)
endfunction

//Generated allocator of Roflcopter__bomb
function s__Roflcopter__bomb__allocate takes nothing returns integer
 local integer this=si__Roflcopter__bomb_F
    if (this!=0) then
        set si__Roflcopter__bomb_F=si__Roflcopter__bomb_V[this]
    else
        set si__Roflcopter__bomb_I=si__Roflcopter__bomb_I+1
        set this=si__Roflcopter__bomb_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Roflcopter__bomb_t[this]= CreateTextTag()
   set s__Roflcopter__bomb_II___b[this]= false
    set si__Roflcopter__bomb_V[this]=-1
 return this
endfunction

//Generated destructor of Roflcopter__bomb
function s__Roflcopter__bomb_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Roflcopter__bomb_V[this]!=-1) then
        return
    endif
    set si__Roflcopter__bomb_V[this]=si__Roflcopter__bomb_F
    set si__Roflcopter__bomb_F=this
endfunction

//Generated method caller for Roflcopter__roflcopter.create
function sc__Roflcopter__roflcopter_create takes integer i,real x,real y,real l,real p returns integer
    set f__arg_integer1=i
    set f__arg_real1=x
    set f__arg_real2=y
    set f__arg_real3=l
    set f__arg_real4=p
    call TriggerEvaluate(st__Roflcopter__roflcopter_create)
 return f__result_integer
endfunction

//Generated method caller for Roflcopter__roflcopter.destroy
function sc__Roflcopter__roflcopter_destroy takes integer this returns nothing
    set f__arg_this=this
    call TriggerEvaluate(st__Roflcopter__roflcopter_destroy)
endfunction

//Generated allocator of Roflcopter__roflcopter
function s__Roflcopter__roflcopter__allocate takes nothing returns integer
 local integer this=si__Roflcopter__roflcopter_F
    if (this!=0) then
        set si__Roflcopter__roflcopter_F=si__Roflcopter__roflcopter_V[this]
    else
        set si__Roflcopter__roflcopter_I=si__Roflcopter__roflcopter_I+1
        set this=si__Roflcopter__roflcopter_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__Roflcopter__roflcopter_t[this]= CreateTextTag()
   set s__Roflcopter__roflcopter_II___b[this]= false
    set si__Roflcopter__roflcopter_V[this]=-1
 return this
endfunction

//Generated destructor of Roflcopter__roflcopter
function s__Roflcopter__roflcopter_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Roflcopter__roflcopter_V[this]!=-1) then
        return
    endif
    set si__Roflcopter__roflcopter_V[this]=si__Roflcopter__roflcopter_F
    set si__Roflcopter__roflcopter_F=this
endfunction

//Generated allocator of Roflcopter__instance
function s__Roflcopter__instance__allocate takes nothing returns integer
 local integer this=si__Roflcopter__instance_F
    if (this!=0) then
        set si__Roflcopter__instance_F=si__Roflcopter__instance_V[this]
    else
        set si__Roflcopter__instance_I=si__Roflcopter__instance_I+1
        set this=si__Roflcopter__instance_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Roflcopter__instance_V[this]=-1
 return this
endfunction

//Generated destructor of Roflcopter__instance
function s__Roflcopter__instance_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Roflcopter__instance_V[this]!=-1) then
        return
    endif
    set si__Roflcopter__instance_V[this]=si__Roflcopter__instance_F
    set si__Roflcopter__instance_F=this
endfunction

//Generated allocator of SpiderPoison__SP
function s__SpiderPoison__SP__allocate takes nothing returns integer
 local integer this=si__SpiderPoison__SP_F
    if (this!=0) then
        set si__SpiderPoison__SP_F=si__SpiderPoison__SP_V[this]
    else
        set si__SpiderPoison__SP_I=si__SpiderPoison__SP_I+1
        set this=si__SpiderPoison__SP_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__SpiderPoison__SP_V[this]=-1
 return this
endfunction

//Generated destructor of SpiderPoison__SP
function s__SpiderPoison__SP_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__SpiderPoison__SP_V[this]!=-1) then
        return
    endif
    set si__SpiderPoison__SP_V[this]=si__SpiderPoison__SP_F
    set si__SpiderPoison__SP_F=this
endfunction

//Generated method caller for MainShops.selectShop
function sc__MainShops_selectShop takes nothing returns boolean
    call TriggerEvaluate(st__MainShops_selectShop)
 return f__result_boolean
endfunction

//Generated allocator of ProgressBar
function s__ProgressBar__allocate takes nothing returns integer
 local integer this=si__ProgressBar_F
    if (this!=0) then
        set si__ProgressBar_F=si__ProgressBar_V[this]
    else
        set si__ProgressBar_I=si__ProgressBar_I+1
        set this=si__ProgressBar_I
    endif
    if (this>8190) then
        return 0
    endif

   set s__ProgressBar_xOffset[this]= 0
   set s__ProgressBar_yOffset[this]= 0
   set s__ProgressBar_t_enabled[this]= false
   set s__ProgressBar_curVal[this]=0
   set s__ProgressBar_pspeed[this]=0
    set si__ProgressBar_V[this]=-1
 return this
endfunction

//Generated destructor of ProgressBar
function s__ProgressBar_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ProgressBar_V[this]!=-1) then
        return
    endif
    set si__ProgressBar_V[this]=si__ProgressBar_F
    set si__ProgressBar_F=this
endfunction

//Generated allocator of Schadenfreude
function s__Schadenfreude__allocate takes nothing returns integer
 local integer this=si__Schadenfreude_F
    if (this!=0) then
        set si__Schadenfreude_F=si__Schadenfreude_V[this]
    else
        set si__Schadenfreude_I=si__Schadenfreude_I+1
        set this=si__Schadenfreude_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__Schadenfreude_V[this]=-1
 return this
endfunction

//Generated destructor of Schadenfreude
function s__Schadenfreude_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__Schadenfreude_V[this]!=-1) then
        return
    endif
    set si__Schadenfreude_V[this]=si__Schadenfreude_F
    set si__Schadenfreude_F=this
endfunction

//Generated allocator of NewBonus
function s__NewBonus__allocate takes nothing returns integer
 local integer this=si__NewBonus_F
    if (this!=0) then
        set si__NewBonus_F=si__NewBonus_V[this]
    else
        set si__NewBonus_I=si__NewBonus_I+1
        set this=si__NewBonus_I
    endif
    if (this>8190) then
        return 0
    endif

    set si__NewBonus_type[this]=5
    set si__NewBonus_V[this]=-1
 return this
endfunction

//Generated destructor of NewBonus
function sc__NewBonus_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NewBonus_V[this]!=-1) then
        return
    endif
    set f__arg_this=this
    call TriggerEvaluate(st__NewBonus_onDestroy[si__NewBonus_type[this]])
    set si__NewBonus_V[this]=si__NewBonus_F
    set si__NewBonus_F=this
endfunction

//Generated allocator of NewBonusUtils__NewBonusUtils
function s__NewBonusUtils__NewBonusUtils__allocate takes nothing returns integer
 local integer this=s__NewBonus__allocate()
 local integer kthis
    if(this==0) then
        return 0
    endif
    set si__NewBonus_type[this]=8
    set kthis=this

 return this
endfunction

function sc___prototype4_execute takes integer i returns nothing

    call TriggerExecute(st___prototype4[i])
endfunction
function sc___prototype4_evaluate takes integer i returns nothing

    call TriggerEvaluate(st___prototype4[i])

endfunction

//library FearSystem:

    
    


    
    function FearSystem__round takes real r returns integer
        return R2I(r + 0.5)
    endfunction
    
    function FearSystem__modulo takes integer a,integer b returns integer
        return a - ( a / b ) * b
    endfunction
    
    //Credits to Maker for this awesum func <3
    function FearSystem__DisableControl takes unit u returns nothing
        local boolean b
        //call UnitAddAbility(u, 'Aloc')
        //call UnitRemoveAbility(u, 'Aloc')
       // if IsUnitType(u, UNIT_TYPE_HERO) then
        //    call UnitAddAbility(u,MORPH_ID)
        //    call IssueImmediateOrder(u, "metamorphosis")
        //    call UnitRemoveAbility(u,MORPH_ID)
      //  else
      //      call UnitAddAbility(u, BEAR_ID)
      //      call IssueImmediateOrder(u, "bearform")
      //      call UnitRemoveAbility(u, BEAR_ID)    
      //  endif
        //Thanks to chobibo for this idea
      //  if GetLocalPlayer() != GetOwningPlayer(u) then
           // set b = not IsUnitHidden(u)
           // call ShowUnit(u,false)
           // call ShowUnit(u,b)
      //  endif
        //I added this line to disable their attack too.
        call UnitAddAbility(u, FearSystem__DISABLE_ATTACK)
        call UnitAddAbility(u, 'A0CW')
    endfunction
    
    function FearSystem__EnableControl takes unit u returns nothing
        local boolean backup= not IsUnitHidden(u)
        //call ShowUnit(u,false)
        //I added this line to enable their attack.
        call UnitRemoveAbility(u, FearSystem__DISABLE_ATTACK)
        call UnitRemoveAbility(u, 'A0CW')
        //call ShowUnit(u,backup)
    endfunction
    
        
        function s__Fear_periodic takes nothing returns nothing
            local integer this
            local real x
            local real y
            local integer i= 0
            loop
                exitwhen i > s__Fear_dindex
                set this=s__Fear_data[i]
                if FearSystem__modulo(s__Fear_steps[this] , FearSystem__EACH_CHANGE) == s__Fear_startat[this] then
                    set x=GetUnitX(s__Fear_targ[this])
                    set y=GetUnitY(s__Fear_targ[this])
                    call IssuePointOrder(s__Fear_targ[this], "move", GetRandomReal(x - FearSystem__AROUND, x + FearSystem__AROUND), GetRandomReal(y - FearSystem__AROUND, y + FearSystem__AROUND))
                endif
                set s__Fear_steps[this]=s__Fear_steps[this] - 1
                if s__Fear_steps[this] == 0 or not ( UnitAlive(s__Fear_targ[this]) ) then
                    set s__Fear_data[i]=s__Fear_data[s__Fear_dindex]
                    set i=i - 1
                    set s__Fear_dindex=s__Fear_dindex - 1
                    if s__Fear_e[this] != null then
                        call DestroyEffect(s__Fear_e[this])
                        set s__Fear_e[this]=null
                    endif
                    call IssueImmediateOrder(s__Fear_targ[this], "stop")
                    call FearSystem__EnableControl(s__Fear_targ[this])
                        call FlushChildHashtable(FearSystem__ht, GetHandleId(s__Fear_targ[this]))
                    if s__Fear_b[this] then
                        set s__Fear_targ[this]=null
                        set s__Fear_recycleNext[this]=s__Fear_recycle
                        set s__Fear_recycle=this
                    endif
                endif
                if s__Fear_dindex == - 1 then
                    call PauseTimer(s__Fear_period)
                endif
                set i=i + 1
            endloop
        endfunction
        
        function s__Fear_isFeared takes unit u returns boolean
                return HaveSavedInteger(FearSystem__ht, GetHandleId(u), 0)
        endfunction
        
        function s__Fear__set_time takes integer this,real t returns nothing
            set s__Fear_steps[this]=(R2I(((t / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
        endfunction
        
        function s__Fear__get_time takes integer this returns real
            return s__Fear_steps[this] * FearSystem__FPS
        endfunction
        
        function s__Fear_changeEffect takes integer this,string path,string attach returns nothing
            call DestroyEffect(s__Fear_e[this])
            set s__Fear_e[this]=null
            set s__Fear_e[this]=AddSpecialEffectTarget(path, s__Fear_targ[this], attach)
        endfunction
        
        function s__Fear_get takes unit u returns integer
            local integer this
            if (HaveSavedInteger(FearSystem__ht, GetHandleId((u)), 0)) then // INLINED!!
                    return LoadInteger(FearSystem__ht, GetHandleId(u), 0)
            else
                return 0
            endif
        endfunction
        
        function s__Fear_start takes integer this returns nothing
            set s__Fear_dindex=s__Fear_dindex + 1
            set s__Fear_data[s__Fear_dindex]=this
            set s__Fear_startat[this]=FearSystem__modulo(s__Fear_steps[this] , FearSystem__EACH_CHANGE)
            call FearSystem__DisableControl(s__Fear_targ[this])
            if s__Fear_path[this] != "" and s__Fear_attach[this] != "" then
                set s__Fear_e[this]=AddSpecialEffectTarget(s__Fear_path[this], s__Fear_targ[this], s__Fear_attach[this])
            endif
                call SaveInteger(FearSystem__ht, GetHandleId(s__Fear_targ[this]), 0, this)
            if s__Fear_dindex == 0 then
                call TimerStart(s__Fear_period, FearSystem__FPS, true, function s__Fear_periodic)
            endif
        endfunction
        
        function s__Fear_create takes nothing returns integer
            local integer this
            if s__Fear_recycle == 0 then
                set s__Fear_instanceCount=s__Fear_instanceCount + 1
                set this=s__Fear_instanceCount
            else
                set this=s__Fear_recycle
                set s__Fear_recycle=s__Fear_recycleNext[s__Fear_recycle]
            endif
            set s__Fear_path[this]=""
            set s__Fear_attach[this]=""
            set s__Fear_e[this]=null
            set s__Fear_b[this]=false
            return this
        endfunction
        
        function s__Fear_destroy takes integer this returns nothing
            set s__Fear_b[this]=true
        endfunction
        
        function s__Fear_onInit takes nothing returns nothing
            set s__Fear_dindex=- 1
            set s__Fear_instanceCount=0
            set s__Fear_recycle=0
            set s__Fear_period=CreateTimer()
        endfunction

//library FearSystem ends
//library II:

    
    function II__e takes nothing returns nothing
        call TriggerEvaluate(II__t)
    endfunction



//library II ends
//library IsTerrainWalkable:

    function IsTerrainWalkable__init takes nothing returns nothing
        set IsTerrainWalkable__check=CreateItem('ciri', 0., 0.)
        call SetItemVisible(IsTerrainWalkable__check, false)
        set IsTerrainWalkable__r=Rect(0.0, 0.0, 128.0, 128.0)
    endfunction

    function IsTerrainWalkable__hideBothersomeItem takes nothing returns nothing
        if IsItemVisible(GetEnumItem()) then
            set IsTerrainWalkable__hidden[IsTerrainWalkable__hiddenMax]=GetEnumItem()
            call SetItemVisible(IsTerrainWalkable__hidden[IsTerrainWalkable__hiddenMax], false)
            set IsTerrainWalkable__hiddenMax=IsTerrainWalkable__hiddenMax + 1
        endif
    endfunction

    function IsTerrainWalkable takes real x,real y returns boolean
	
        // first, hide any items in the area so they don't get in the way of our item
        call MoveRectTo(IsTerrainWalkable__r, x, y)
        call EnumItemsInRect(IsTerrainWalkable__r, null, function IsTerrainWalkable__hideBothersomeItem)
		
        // try to move the check item and get its coordinates
		// this unhides the item...
        call SetItemPosition(IsTerrainWalkable__check, x, y)
        set IsTerrainWalkable_X=GetItemX(IsTerrainWalkable__check)
        set IsTerrainWalkable_Y=GetItemY(IsTerrainWalkable__check)
		
		//...so we must hide it again
        call SetItemVisible(IsTerrainWalkable__check, false)
		
        // before returning, unhide any items that got hidden at the start
        loop
            exitwhen IsTerrainWalkable__hiddenMax == 0
            set IsTerrainWalkable__hiddenMax=IsTerrainWalkable__hiddenMax - 1
            call SetItemVisible(IsTerrainWalkable__hidden[IsTerrainWalkable__hiddenMax], true)
        endloop
		
        // return pathability status
        return ( x - IsTerrainWalkable_X ) * ( x - IsTerrainWalkable_X ) + ( y - IsTerrainWalkable_Y ) * ( y - IsTerrainWalkable_Y ) < IsTerrainWalkable__MAX_RANGE * IsTerrainWalkable__MAX_RANGE
    endfunction

//library IsTerrainWalkable ends
//library ItemSet:

//ItemSet code. Edit on your own risk.
   
        // ItemSetBonus instances are constant data, so there is no need for a recycler.
       
       
    //static if LIBRARY_ItemPower then
    //endif
   
    //static if LIBRARY_Bonus then
    //endif
   
        // ItemSets are constant. Contact me, if you want to design them dynamically.
        function s__ItemSet__ItemSetBonus_create takes integer counter,integer bonusTypeId,integer bonusId,real itemPowerValue,integer bonusValue returns integer
            local integer this= (s__ItemSet__ItemSetBonus_alloc + 1)
            set s__ItemSet__ItemSetBonus_alloc=(this)




           
            set s__ItemSet__ItemSetBonus_requiredItems[this]=counter
            set s__ItemSet__ItemSetBonus_bonus[this]=bonusId
            set s__ItemSet__ItemSetBonus_bonusType[this]=bonusTypeId
           
            set s__ItemSet__ItemSetBonus_itemPowerAmount[this]=itemPowerValue
            set s__ItemSet__ItemSetBonus_bonusAmount[this]=bonusValue
           
            return this
        endfunction
   
        // Event id's.
        // Event response variables. 
        // Wrapper functions are located below struct ItemSet. 
    
        // Allocation:
       
        // Members:
       
       
       
        
        
        function s__ItemSet_registerEvent takes integer whichEvent,boolexpr expression returns nothing
            if ( whichEvent == s__ItemSet_COMPLETE ) then
                call TriggerAddCondition(s__ItemSet_completed, expression)
            elseif ( whichEvent == s__ItemSet_INCOMPLETE ) then
                call TriggerAddCondition(s__ItemSet_incompleted, expression)
            endif
        endfunction
       
        function s__ItemSet__staticgetindex takes integer itemId returns integer
            return (LoadInteger(s__ItemSet_hash, 0, itemId))
        endfunction
       
        function s__ItemSet_fire takes integer this,trigger whichTrigger,unit whichUnit,integer id returns nothing
            local integer prevItemSet= s__ItemSet_triggerItemSet
            local unit prevUnit= s__ItemSet_triggerUnit
            local integer prevEv= s__ItemSet_triggerEventId
            set s__ItemSet_triggerItemSet=this
            set s__ItemSet_triggerUnit=whichUnit
            set s__ItemSet_triggerEventId=id
            call TriggerEvaluate(whichTrigger)
            set s__ItemSet_triggerItemSet=prevItemSet
            set s__ItemSet_triggerUnit=prevUnit
            set s__ItemSet_triggerEventId=prevEv
            set prevUnit=null
        endfunction
       
        function s__ItemSet_itemSetComplete takes integer this,unit whichUnit returns nothing
            if ( s__ItemSet_sfx[this] != null ) then

                    call SaveEffectHandle(s__ItemSet_hash, GetHandleId(whichUnit), this, AddSpecialEffectTarget(s__ItemSet_sfx[this], whichUnit, s__ItemSet_point[this]))



            endif
            call s__ItemSet_fire(this,s__ItemSet_completed , whichUnit , s__ItemSet_COMPLETE)
        endfunction
       
        function s__ItemSet_itemSetIncomplete takes integer this,unit whichUnit returns nothing
           

                local integer id= GetHandleId(whichUnit)
                if HaveSavedHandle(s__ItemSet_hash, id, this) then
                    call DestroyEffect(LoadEffectHandle(s__ItemSet_hash, id, this))
                    call RemoveSavedHandle(s__ItemSet_hash, id, this)
                endif

           
            call s__ItemSet_fire(this,s__ItemSet_incompleted , whichUnit , s__ItemSet_INCOMPLETE)
        endfunction

        function s__ItemSet_remove takes integer this,unit whichUnit,integer itemCounter returns nothing
            local integer index= 0
            local integer toRemove
            local integer child
            loop
                exitwhen index == s__ItemSet_bonuses[this]
 
                    set toRemove=(LoadInteger(s__ItemSet_hash, this, index))
                    if ( s__ItemSet__ItemSetBonus_requiredItems[toRemove] == itemCounter ) then

                        if ( s__ItemSet__ItemSetBonus_bonusType[toRemove] == ITEM_SET_BONUS_TYPE_ABILITY ) then
                            call UnitRemoveAbility(whichUnit, s__ItemSet__ItemSetBonus_bonus[toRemove])

                        // Impossible to exclude via optional textmacro/module, ....
                        elseif ( s__ItemSet__ItemSetBonus_bonusType[toRemove] == ITEM_SET_BONUS_TYPE_ITEM_POWER ) then



                               
                        elseif ( s__ItemSet__ItemSetBonus_bonusType[toRemove] == ITEM_SET_BONUS_TYPE_BONUS ) then






                       
                        endif
                       
                    endif
                set index=index + 1
            endloop

            set child=itemCounter + s__ItemSet_BUFF_ABILITY_ID_OFFSET
            if HaveSavedInteger(s__ItemSet_hash, this, child) then
                call UnitRemoveAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, child))
                call UnitRemoveAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, itemCounter + s__ItemSet_BUFF_BUFF_ID_OFFSET))
            endif
           
           set child=itemCounter + s__ItemSet_BUFF_ABILITY_ID_OFFSET - 1
            if HaveSavedInteger(s__ItemSet_hash, this, child) then
                call UnitAddAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, child))
                call UnitMakeAbilityPermanent(whichUnit, true, LoadInteger(s__ItemSet_hash, this, itemCounter + s__ItemSet_BUFF_ABILITY_ID_OFFSET - 1))
            endif
           
            if ( itemCounter == s__ItemSet_maxItemCount[this] ) then
                call s__ItemSet_itemSetIncomplete(this,whichUnit)
            endif
        endfunction
       
        function s__ItemSet_onItemUnequip takes unit whichUnit,integer itemId returns nothing
            local integer id= GetHandleId(whichUnit)
            local integer this



           
            if ( HaveSavedInteger(s__ItemSet_hash, 0, itemId) ) and ( id != 0 ) then
                call SaveInteger(s__ItemSet_hash, id, itemId, LoadInteger(s__ItemSet_hash, id, itemId) - 1)
                if ( LoadInteger(s__ItemSet_hash, id, itemId) == 0 ) then
                    call RemoveSavedInteger(s__ItemSet_hash, id, itemId)

                    set this=LoadInteger(s__ItemSet_hash, 0, itemId)
                    call s__ItemSet_remove(this,whichUnit , LoadInteger(s__ItemSet_hash, id, this))
                    call SaveInteger(s__ItemSet_hash, id, this, LoadInteger(s__ItemSet_hash, id, this) - 1)
                    
               endif
            endif
        endfunction
       
        function s__ItemSet_add takes integer this,unit whichUnit,integer itemCounter returns nothing
            local integer index= 0
            local integer toAdd
            local integer child

            loop
                // Loop through all ItemSetBonuses created for this ItemSet.
                exitwhen index == s__ItemSet_bonuses[this]
 
                    //Load the current Bonus.
                    set toAdd=(LoadInteger(s__ItemSet_hash, this, index))

                    //A Bonus is only applied if the numer of carried items equals its counter.
                    if ( s__ItemSet__ItemSetBonus_requiredItems[toAdd] == itemCounter ) then
                   
                        if ( s__ItemSet__ItemSetBonus_bonusType[toAdd] == ITEM_SET_BONUS_TYPE_ABILITY ) then
                            call UnitAddAbility(whichUnit, s__ItemSet__ItemSetBonus_bonus[toAdd])
                            call UnitMakeAbilityPermanent(whichUnit, true, s__ItemSet__ItemSetBonus_bonus[toAdd])
                       
                        elseif ( s__ItemSet__ItemSetBonus_bonusType[toAdd] == ITEM_SET_BONUS_TYPE_ITEM_POWER ) then



                               
                        elseif ( s__ItemSet__ItemSetBonus_bonusType[toAdd] == ITEM_SET_BONUS_TYPE_BONUS ) then





                           
                        endif
                    endif
                //Move on to the next loop index.
                set index=index + 1
            endloop
            
            set child=itemCounter + s__ItemSet_BUFF_ABILITY_ID_OFFSET
            if HaveSavedInteger(s__ItemSet_hash, this, child) then
                call UnitAddAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, child))
                call UnitMakeAbilityPermanent(whichUnit, true, LoadInteger(s__ItemSet_hash, this, child))
            endif
            // Check if prev item amount holds a buff.
            set child=itemCounter + s__ItemSet_BUFF_ABILITY_ID_OFFSET - 1
            if HaveSavedInteger(s__ItemSet_hash, this, child) then
                call UnitRemoveAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, child))
                call UnitRemoveAbility(whichUnit, LoadInteger(s__ItemSet_hash, this, itemCounter + s__ItemSet_BUFF_BUFF_ID_OFFSET - 1))
            endif

            //Check if the ItemSet is completed.
            if ( itemCounter == s__ItemSet_maxItemCount[this] ) then
                call s__ItemSet_itemSetComplete(this,whichUnit)
            endif
        endfunction
       
        function s__ItemSet_onItemEquip takes unit whichUnit,integer itemId returns nothing
            local integer id= GetHandleId(whichUnit)
            local integer this
           


           
            // Is item in database and the unit exists.
            if ( HaveSavedInteger(s__ItemSet_hash, 0, itemId) ) and ( id != 0 ) then
                // Keep track how often that item was equipped. 
                call SaveInteger(s__ItemSet_hash, id, itemId, LoadInteger(s__ItemSet_hash, id, itemId) + 1)
                // Bonuses are only applied on the first item of that type.
                if ( LoadInteger(s__ItemSet_hash, id, itemId) == 1 ) then
                    
                    set this=LoadInteger(s__ItemSet_hash, 0, itemId)
                    call SaveInteger(s__ItemSet_hash, id, this, LoadInteger(s__ItemSet_hash, id, this) + 1)
               
                    //Apply bonuses associated with that ItemSet counter.
                    call s__ItemSet_add(this,whichUnit , LoadInteger(s__ItemSet_hash, id, this))
                endif
            endif
        endfunction
        
        function s__ItemSet_addBuffIndicator takes integer this,integer itemCount,integer abilityId,integer buffId returns nothing
            call SaveInteger(s__ItemSet_hash, this, itemCount + s__ItemSet_BUFF_ABILITY_ID_OFFSET, abilityId)
            call SaveInteger(s__ItemSet_hash, this, itemCount + s__ItemSet_BUFF_BUFF_ID_OFFSET, buffId)
        endfunction
       
        function s__ItemSet_addBonus takes integer this,integer itemCount,integer bonusType,integer amount returns nothing
            call SaveInteger(s__ItemSet_hash, this, s__ItemSet_bonuses[this], s__ItemSet__ItemSetBonus_create(itemCount , ITEM_SET_BONUS_TYPE_BONUS , bonusType , 0. , amount))
            set s__ItemSet_bonuses[this]=s__ItemSet_bonuses[this] + 1
        endfunction
       
        function s__ItemSet_addItemPower takes integer this,integer itemCount,integer power,real value returns nothing
            call SaveInteger(s__ItemSet_hash, this, s__ItemSet_bonuses[this], s__ItemSet__ItemSetBonus_create(itemCount , ITEM_SET_BONUS_TYPE_ITEM_POWER , power , value , 0))
            set s__ItemSet_bonuses[this]=s__ItemSet_bonuses[this] + 1
        endfunction

        function s__ItemSet_addAbility takes integer this,integer itemCount,integer abilityId returns nothing
            call SaveInteger(s__ItemSet_hash, this, s__ItemSet_bonuses[this], s__ItemSet__ItemSetBonus_create(itemCount , ITEM_SET_BONUS_TYPE_ABILITY , abilityId , 0. , 0))
            set s__ItemSet_bonuses[this]=s__ItemSet_bonuses[this] + 1
        endfunction
       
        function s__ItemSet_addItem takes integer this,integer itemId returns nothing


           
            call SaveInteger(s__ItemSet_hash, 0, itemId, this)
            set s__ItemSet_maxItemCount[this]=s__ItemSet_maxItemCount[this] + 1
        endfunction

        function s__ItemSet_create takes string itemSetName,string modelName,string attachPointName returns integer
            local integer this= (s__ItemSet_alloc + 1)
            set s__ItemSet_alloc=(this)




           
            set s__ItemSet_name[this]=itemSetName
            set s__ItemSet_sfx[this]=modelName
            set s__ItemSet_point[this]=attachPointName
           
            return this
        endfunction 
        
        
        function s__ItemSet_onUnitDeindex takes unit whichUnit returns nothing
            local integer id= GetHandleId(whichUnit)
            if ( 0 != GetUnitTypeId(whichUnit) ) and ( 0 != id ) then
                call FlushChildHashtable(s__ItemSet_hash, id)
            endif
        endfunction
       
    
    
    function GetTriggerItemSetEventId takes nothing returns integer
        return s__ItemSet_triggerEventId
    endfunction
   
    function GetTriggerItemSetUnit takes nothing returns unit
        return s__ItemSet_triggerUnit
    endfunction
   
    function GetTriggerItemSet takes nothing returns integer
        return s__ItemSet_triggerItemSet
    endfunction
   
    function RegisterItemSetEvent takes integer whichEvent,code func returns nothing
        call s__ItemSet_registerEvent(whichEvent , Condition(func))
    endfunction
   

//library ItemSet ends
//library LineSegmentEnumeration:
//  --- API ---
// ==== End API ====






    function s__LineSegment_PrepareRect takes real ax,real ay,real bx,real by,real offset,real offsetCollision returns nothing
        local real maxX
        local real maxY
        local real minX
        local real minY

        // get center coordinates of rectangle
        set s__LineSegment_ox=0.5 * ( ax + bx )
        set s__LineSegment_oy=0.5 * ( ay + by )

        // get rectangle major axis as vector
        set s__LineSegment_dx=0.5 * ( bx - ax )
        set s__LineSegment_dy=0.5 * ( by - ay )

        // get half of rectangle length (da) and height (db)
        set s__LineSegment_da=SquareRoot(s__LineSegment_dx * s__LineSegment_dx + s__LineSegment_dy * s__LineSegment_dy)
        set s__LineSegment_db=offset

        // get unit vector of the major axis
        set s__LineSegment_ui=s__LineSegment_dx / s__LineSegment_da
        set s__LineSegment_uj=s__LineSegment_dy / s__LineSegment_da

        // Prepare the bounding Jass Rect
        set offset=offset + offsetCollision

        if ax > bx then
            set maxX=ax + offset
            set minX=bx - offset
        else
            set maxX=bx + offset
            set minX=ax - offset
        endif

        if ay > by then
            set maxY=ay + offset
            set minY=by - offset
        else
            set maxY=by + offset
            set minY=ay - offset
        endif

        call SetRect(s__LineSegment_RECT, minX, minY, maxX, maxY)
    endfunction

    function s__LineSegment_RotateWidgetCoordinates takes widget w returns nothing
        // distance of widget from rectangle center in vector form
        set s__LineSegment_wdx=GetWidgetX(w) - s__LineSegment_ox
        set s__LineSegment_wdy=GetWidgetY(w) - s__LineSegment_oy

        set s__LineSegment_dx=s__LineSegment_wdx * s__LineSegment_ui + s__LineSegment_wdy * s__LineSegment_uj // get the component of above vector in the rect's major axis
        set s__LineSegment_dy=s__LineSegment_wdx * ( - s__LineSegment_uj ) + s__LineSegment_wdy * s__LineSegment_ui // get the component of above vector in the rect's transverse axis
    endfunction

    function s__LineSegment_IsWidgetInRect takes widget w returns boolean
        call s__LineSegment_RotateWidgetCoordinates(w)

        // Check if the components above are less than half the length and height of the rectangle
        // (Square them to compare absolute values)
        return s__LineSegment_dx * s__LineSegment_dx <= s__LineSegment_da * s__LineSegment_da and s__LineSegment_dy * s__LineSegment_dy <= s__LineSegment_db * s__LineSegment_db
    endfunction

    function s__LineSegment_IsUnitInRect takes unit u,boolean checkCollision returns boolean
        if checkCollision then
            call s__LineSegment_RotateWidgetCoordinates(u)

            // Check if the perpendicular distances of the unit from both axes of the rect are less than
            // da and db
            return IsUnitInRangeXY(u, s__LineSegment_ox - s__LineSegment_dy * s__LineSegment_uj, s__LineSegment_oy + s__LineSegment_dy * s__LineSegment_ui, RAbsBJ(s__LineSegment_da)) and IsUnitInRangeXY(u, s__LineSegment_ox + s__LineSegment_dx * s__LineSegment_ui, s__LineSegment_oy + s__LineSegment_dx * s__LineSegment_uj, RAbsBJ(s__LineSegment_db))
        endif

        return s__LineSegment_IsWidgetInRect(u)
    endfunction

    function s__LineSegment_EnumUnitsEx takes group whichgroup,real ax,real ay,real bx,real by,real offset,boolean checkCollision returns nothing
        local unit u

        if checkCollision then
            call s__LineSegment_PrepareRect(ax , ay , bx , by , offset , s__LineSegment_MAX_UNIT_COLLISION)
        else
            call s__LineSegment_PrepareRect(ax , ay , bx , by , offset , 0.00)
        endif

        call GroupEnumUnitsInRect(s__LineSegment_GROUP, s__LineSegment_RECT, null)

        // enum through all tracked units, and check if it's inside bounds
        call GroupClear(whichgroup)
        loop
            set u=FirstOfGroup(s__LineSegment_GROUP)
            exitwhen u == null

            if s__LineSegment_IsUnitInRect(u , checkCollision) then
                call GroupAddUnit(whichgroup, u)
            endif

            call GroupRemoveUnit(s__LineSegment_GROUP, u)
        endloop
    endfunction

    function s__LineSegment_EnumUnits takes group whichgroup,real ax,real ay,real bx,real by,real offset returns nothing
        call s__LineSegment_EnumUnitsEx(whichgroup , ax , ay , bx , by , offset , false)
    endfunction


//textmacro instance: LSE_WIDGET("destructable", "Destructable")
 
    function s__LineSegment_onDestructableFilter takes nothing returns nothing
        local destructable t= GetFilterDestructable()

        if s__LineSegment_IsWidgetInRect(t) then
            set s__LineSegment_DestructableCounter=s__LineSegment_DestructableCounter + 1
            set s__LineSegment_Destructable[s__LineSegment_DestructableCounter]=t
        endif

        set t=null
    endfunction
 
    function s__LineSegment_EnumDestructables takes real ax,real ay,real bx,real by,real offset returns nothing
        call s__LineSegment_PrepareRect(ax , ay , bx , by , offset , 0.00)

        set s__LineSegment_DestructableCounter=- 1
        call EnumDestructablesInRect(s__LineSegment_RECT, Filter(function s__LineSegment_onDestructableFilter), null)
    endfunction
//end of: LSE_WIDGET("destructable", "Destructable")
//textmacro instance: LSE_WIDGET("item", "Item")
 
    function s__LineSegment_onItemFilter takes nothing returns nothing
        local item t= GetFilterItem()

        if s__LineSegment_IsWidgetInRect(t) then
            set s__LineSegment_ItemCounter=s__LineSegment_ItemCounter + 1
            set s__LineSegment_Item[s__LineSegment_ItemCounter]=t
        endif

        set t=null
    endfunction
 
    function s__LineSegment_EnumItems takes real ax,real ay,real bx,real by,real offset returns nothing
        call s__LineSegment_PrepareRect(ax , ay , bx , by , offset , 0.00)

        set s__LineSegment_ItemCounter=- 1
        call EnumItemsInRect(s__LineSegment_RECT, Filter(function s__LineSegment_onItemFilter), null)
    endfunction
//end of: LSE_WIDGET("item", "Item")
 

//library LineSegmentEnumeration ends
//library NewBonus:
    
    
    
    
    
    
    
    
    
    
        function s__NewBonus_SetUnitAbilityBonusI takes unit u,integer abilCode,abilityintegerlevelfield field,integer amount returns integer
            if GetUnitAbilityLevel(u, abilCode) == 0 then
                call UnitAddAbility(u, abilCode)
                call UnitMakeAbilityPermanent(u, true, abilCode)
            endif
        
            if BlzSetAbilityIntegerLevelField(BlzGetUnitAbility(u, abilCode), field, 0, amount) then
                call IncUnitAbilityLevel(u, abilCode)
                call DecUnitAbilityLevel(u, abilCode)
            endif
        
            return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, abilCode), field, 0)
        endfunction

        function s__NewBonus_SetUnitAbilityBonusR takes unit u,integer abilCode,abilityreallevelfield field,real amount returns real
            if GetUnitAbilityLevel(u, abilCode) == 0 then
                call UnitAddAbility(u, abilCode)
                call UnitMakeAbilityPermanent(u, true, abilCode)
            endif
        
            if BlzSetAbilityRealLevelField(BlzGetUnitAbility(u, abilCode), field, 0, amount) then
                call IncUnitAbilityLevel(u, abilCode)
                call DecUnitAbilityLevel(u, abilCode)
            endif
        
            return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, abilCode), field, 0)
        endfunction

        function s__NewBonus_Get takes unit u,integer bonus_type returns integer
            if bonus_type == BONUS_DAMAGE then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__DAMAGE_ABILITY), NewBonus__DAMAGE_FIELD, 0)
            elseif bonus_type == BONUS_ARMOR then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__ARMOR_ABILITY), NewBonus__ARMOR_FIELD, 0)
            elseif bonus_type == BONUS_HEALTH then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__HEALTH_ABILITY), NewBonus__HEALTH_FIELD, 0)
            elseif bonus_type == BONUS_MANA then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__MANA_ABILITY), NewBonus__MANA_FIELD, 0)
            elseif bonus_type == BONUS_AGILITY then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__STATS_ABILITY), NewBonus__AGILITY_FIELD, 0)
            elseif bonus_type == BONUS_STRENGTH then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__STATS_ABILITY), NewBonus__STRENGTH_FIELD, 0)
            elseif bonus_type == BONUS_INTELLIGENCE then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__STATS_ABILITY), NewBonus__INTELLIGENCE_FIELD, 0)
            elseif bonus_type == BONUS_MOVEMENT_SPEED then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__MOVEMENTSPEED_ABILITY), NewBonus__MOVEMENTSPEED_FIELD, 0)
            elseif bonus_type == BONUS_SIGHT_RANGE then
                return BlzGetAbilityIntegerLevelField(BlzGetUnitAbility(u, NewBonus__SIGHT_RANGE_ABILITY), NewBonus__SIGHT_RANGE_FIELD, 0)
            else
                call DisplayTimedTextToPlayer(Player(0), 0, 0, 10, "Invalid Bonus Type")
            endif
            
            return - 1
        endfunction

        function s__NewBonus_Set takes unit u,integer bonus_type,integer amount returns integer
            local real p

            if bonus_type == BONUS_DAMAGE then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__DAMAGE_ABILITY , NewBonus__DAMAGE_FIELD , amount)
            elseif bonus_type == BONUS_ARMOR then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__ARMOR_ABILITY , NewBonus__ARMOR_FIELD , amount)
            elseif bonus_type == BONUS_HEALTH then
                set p=GetUnitLifePercent(u)
                call BlzSetUnitMaxHP(u, ( BlzGetUnitMaxHP(u) + amount - s__NewBonus_Get(u , bonus_type) ))
                call SetUnitLifePercentBJ(u, p)
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__HEALTH_ABILITY , NewBonus__HEALTH_FIELD , amount)
            elseif bonus_type == BONUS_MANA then
                set p=GetUnitManaPercent(u)
                call BlzSetUnitMaxMana(u, ( BlzGetUnitMaxMana(u) + amount - s__NewBonus_Get(u , bonus_type) ))
                call SetUnitManaPercentBJ(u, p)
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__MANA_ABILITY , NewBonus__MANA_FIELD , amount)
            elseif bonus_type == BONUS_AGILITY then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__STATS_ABILITY , NewBonus__AGILITY_FIELD , amount)
            elseif bonus_type == BONUS_STRENGTH then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__STATS_ABILITY , NewBonus__STRENGTH_FIELD , amount)
            elseif bonus_type == BONUS_INTELLIGENCE then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__STATS_ABILITY , NewBonus__INTELLIGENCE_FIELD , amount)
            elseif bonus_type == BONUS_MOVEMENT_SPEED then
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__MOVEMENTSPEED_ABILITY , NewBonus__MOVEMENTSPEED_FIELD , amount)
            elseif bonus_type == BONUS_SIGHT_RANGE then
                call BlzSetUnitRealField(u, UNIT_RF_SIGHT_RADIUS, ( BlzGetUnitRealField(u, UNIT_RF_SIGHT_RADIUS) + amount - s__NewBonus_Get(u , bonus_type) ))
                return s__NewBonus_SetUnitAbilityBonusI(u , NewBonus__SIGHT_RANGE_ABILITY , NewBonus__SIGHT_RANGE_FIELD , amount)
            else
                call DisplayTimedTextToPlayer(Player(0), 0, 0, 10, "Invalid Bonus Type")
            endif

            return - 1
        endfunction

        function s__NewBonus_Add takes unit u,integer bonus_type,integer amount returns integer
            local integer current_amount= s__NewBonus_Get(u , bonus_type)

            if amount > 0 and current_amount > 2147483647 - amount then
                set amount=2147483647 - current_amount
            elseif amount < 0 and current_amount < - 2147483648 - amount then
                set amount=- 2147483648 - current_amount
            endif

            call s__NewBonus_Set(u , bonus_type , ( current_amount + amount ))

            return amount
        endfunction

        function s__NewBonus_GetR takes unit u,integer bonus_type returns real
            if bonus_type == BONUS_HEALTH_REGEN then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__HEALTHREGEN_ABILITY), NewBonus__HEALTHREGEN_FIELD, 0)
            elseif bonus_type == BONUS_MANA_REGEN then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__MANAREGEN_ABILITY), NewBonus__MANAREGEN_FIELD, 0)
            elseif bonus_type == BONUS_ATTACK_SPEED then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__ATTACKSPEED_ABILITY), NewBonus__ATTACKSPEED_FIELD, 0)
            elseif bonus_type == BONUS_MAGIC_RESISTANCE then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__MAGIC_RESISTANCE_ABILITY), NewBonus__MAGIC_RESISTANCE_FIELD, 0)
            elseif bonus_type == BONUS_CRITICAL_CHANCE then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__CRITICAL_STRIKE_ABILITY), NewBonus__CRITICAL_CHANCE_FIELD, 0)
            elseif bonus_type == BONUS_CRITICAL_DAMAGE then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__CRITICAL_STRIKE_ABILITY), NewBonus__CRITICAL_DAMAGE_FIELD, 0)
            elseif bonus_type == BONUS_EVASION_CHANCE then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__EVASION_ABILITY), NewBonus__EVASION_FIELD, 0)
            elseif bonus_type == BONUS_LIFE_STEAL then
                return BlzGetAbilityRealLevelField(BlzGetUnitAbility(u, NewBonus__LIFE_STEAL_ABILITY), NewBonus__LIFE_STEAL_FIELD, 0)
            else
                call DisplayTimedTextToPlayer(Player(0), 0, 0, 10, "Invalid Bonus Type")
            endif
            
            return - 1.
        endfunction

        function s__NewBonus_SetR takes unit u,integer bonus_type,real amount returns real
            if bonus_type == BONUS_HEALTH_REGEN then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__HEALTHREGEN_ABILITY , NewBonus__HEALTHREGEN_FIELD , amount)
            elseif bonus_type == BONUS_MANA_REGEN then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__MANAREGEN_ABILITY , NewBonus__MANAREGEN_FIELD , amount)
            elseif bonus_type == BONUS_ATTACK_SPEED then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__ATTACKSPEED_ABILITY , NewBonus__ATTACKSPEED_FIELD , amount)
            elseif bonus_type == BONUS_MAGIC_RESISTANCE then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__MAGIC_RESISTANCE_ABILITY , NewBonus__MAGIC_RESISTANCE_FIELD , amount)
            elseif bonus_type == BONUS_CRITICAL_CHANCE then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__CRITICAL_STRIKE_ABILITY , NewBonus__CRITICAL_CHANCE_FIELD , amount)
            elseif bonus_type == BONUS_CRITICAL_DAMAGE then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__CRITICAL_STRIKE_ABILITY , NewBonus__CRITICAL_DAMAGE_FIELD , amount)
            elseif bonus_type == BONUS_EVASION_CHANCE then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__EVASION_ABILITY , NewBonus__EVASION_FIELD , amount)
            elseif bonus_type == BONUS_LIFE_STEAL then
                call s__NewBonus_SetUnitAbilityBonusR(u , NewBonus__LIFE_STEAL_ABILITY , NewBonus__LIFE_STEAL_FIELD , amount)
            else
                call DisplayTimedTextToPlayer(Player(0), 0, 0, 10, "Invalid Bonus Type")
            endif
            
            return amount
        endfunction

        function s__NewBonus_AddR takes unit u,integer bonus_type,real amount returns real
            if bonus_type >= BONUS_HEALTH_REGEN and bonus_type <= BONUS_LIFE_STEAL then
                call s__NewBonus_SetR(u , bonus_type , s__NewBonus_GetR(u , bonus_type) + amount)
            else
                call DisplayTimedTextToPlayer(Player(0), 0, 0, 10, "Invalid Bonus Type")
            endif
            
            return amount
        endfunction
    
    
    
    
    function GetUnitBonus takes unit u,integer bonus_type returns real
        if bonus_type <= BONUS_SIGHT_RANGE then
            return I2R(s__NewBonus_Get(u , bonus_type))
        else
            return s__NewBonus_GetR(u , bonus_type)
        endif
    endfunction

    function SetUnitBonus takes unit u,integer bonus_type,real amount returns real
        if bonus_type <= BONUS_SIGHT_RANGE then
            return I2R(s__NewBonus_Set(u , bonus_type , R2I(amount)))
        else
            return s__NewBonus_SetR(u , bonus_type , amount)
        endif
    endfunction
    
    function RemoveUnitBonus takes unit u,integer bonus_type returns nothing
        if bonus_type <= BONUS_SIGHT_RANGE then
            call s__NewBonus_Set(u , bonus_type , 0)
        else
            if bonus_type == BONUS_CRITICAL_DAMAGE then
                call s__NewBonus_SetR(u , bonus_type , 1)
            else
                call s__NewBonus_SetR(u , bonus_type , 0)
            endif
            
            if bonus_type == BONUS_LIFE_STEAL then
                call UnitRemoveAbility(u, NewBonus__LIFE_STEAL_ABILITY)
            endif
        endif
    endfunction
    
    function AddUnitBonus takes unit u,integer bonus_type,real amount returns real
        if bonus_type <= BONUS_SIGHT_RANGE then
            return I2R(s__NewBonus_Add(u , bonus_type , R2I(amount)))
        else
            return s__NewBonus_AddR(u , bonus_type , amount)
        endif
    endfunction

//library NewBonus ends
//library Rects:

function Rects_IsUnitInRect takes unit u,rect r returns boolean
    return ( GetUnitX(u) > GetRectMinX(r) - 32 and GetUnitX(u) < GetRectMaxX(r) + 32 ) and ( GetUnitY(u) > GetRectMinY(r) - 32 and GetUnitY(u) < GetRectMaxY(r) + 32 )
endfunction


//library Rects ends
//library RegisterPlayerUnitEvent:
    
    function RegisterPlayerUnitEvent takes playerunitevent p,code c returns nothing
        local integer i= GetHandleId(p)
        local integer k= 15
        if RegisterPlayerUnitEvent__t[i] == null then
            set RegisterPlayerUnitEvent__t[i]=CreateTrigger()
            loop
                call TriggerRegisterPlayerUnitEvent(RegisterPlayerUnitEvent__t[i], Player(k), p, null)
                exitwhen k == 0
                set k=k - 1
            endloop
        endif
        call TriggerAddCondition(RegisterPlayerUnitEvent__t[i], Filter(c))
    endfunction
    
    function RegisterPlayerUnitEventForPlayer takes playerunitevent p,code c,player pl returns nothing
        local integer i= 260 + 16 * GetHandleId(p) + GetPlayerId(pl)
        if RegisterPlayerUnitEvent__t[i] == null then
            set RegisterPlayerUnitEvent__t[i]=CreateTrigger()
            call TriggerRegisterPlayerUnitEvent(RegisterPlayerUnitEvent__t[i], pl, p, null)
        endif
        call TriggerAddCondition(RegisterPlayerUnitEvent__t[i], Filter(c))
    endfunction
    
    function GetPlayerUnitEventTrigger takes playerunitevent p returns trigger
        return RegisterPlayerUnitEvent__t[GetHandleId(p)]
    endfunction

//library RegisterPlayerUnitEvent ends
//library SetPathing:


function SetPathing takes nothing returns boolean

local unit u= GetTriggerUnit()
local unit FoG


    if GetUnitAbilityLevel(u, 'Bbsk') != 1 and GetUnitAbilityLevel(u, 'B02M') != 1 then
    call SetUnitPathing(u, true)
    endif

if GetUnitAbilityLevel(u, 'A023') == 1 then
    call IssuePointOrderById(u, 852555, GetUnitX(GetEventTargetUnit()), GetUnitY(GetEventTargetUnit()))
endif

//	if GetUnitAbilityLevel(u,'A0K9') == 1 then
  //  call IssueTargetOrderById(u,852601,GetEventTargetUnit())
//endif

//	if GetUnitAbilityLevel(u,'A0O1') == 1 then
//    call IssueImmediateOrderById(u,852520)
//endif
    
    //call BJDebugMsg("Pathing set to true")
    //call TriggerRemoveCondition(AggroTrigger, AggroTriggerCondition)
    
    //set AggroTriggerCondition = null
    
    call DestroyTrigger(SetPathing_AggroTrigger)
    
    call GroupRemoveUnit(PATHING_GROUP, u)
    
    set SetPathing_AggroTrigger=CreateTrigger()
    //set AggroTriggerCondition = 
    call TriggerAddCondition(SetPathing_AggroTrigger, Condition(function SetPathing))

    loop
        set FoG=FirstOfGroup(PATHING_GROUP)
        exitwhen FoG == null
            call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, FoG, EVENT_UNIT_ACQUIRED_TARGET)
		call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, FoG, EVENT_UNIT_TARGET_IN_RANGE)
        call GroupAddUnit(SetPathing__swap, FoG)
        call GroupRemoveUnit(PATHING_GROUP, FoG)
    endloop
    set SetPathing__temp=PATHING_GROUP
    set PATHING_GROUP=SetPathing__swap
    set SetPathing__swap=SetPathing__temp
    

set u=null
return false
endfunction

function SetPathing__OnInit takes nothing returns nothing
set SetPathing_AggroTrigger=CreateTrigger()
//set AggroTriggerCondition = 
call TriggerAddCondition(SetPathing_AggroTrigger, Condition(function SetPathing))
endfunction


//library SetPathing ends
//library TimedLightnings:

    
    
        
        
        
        
        function s__TimedL_destroyL takes nothing returns nothing
        
            set s__TimedL_dat3=s__TimedL_prev[s__TimedL_dat2]
            set s__TimedL_next[s__TimedL_dat3]=s__TimedL_next[s__TimedL_dat2]
        
            if s__TimedL_dat2 == s__TimedL_rlast then
                set s__TimedL_rlast=s__TimedL_dat3
            endif
        
        
            set s__TimedL_dat3=s__TimedL_next[s__TimedL_dat2]
            set s__TimedL_prev[s__TimedL_dat3]=s__TimedL_prev[s__TimedL_dat2]
        
            if s__TimedL_dat2 == s__TimedL_first then
                set s__TimedL_first=s__TimedL_dat3
            endif
            
            call DestroyLightning(s__TimedL_l[s__TimedL_dat2])
            set TimedLightnings__CT=TimedLightnings__CT - 1
            if TimedLightnings__CT == 0 then
                call PauseTimer(TimedLightnings__TMR)
            endif
            set s__TimedL_rn[s__TimedL_dat2]=s__TimedL_ir
            set s__TimedL_ir=s__TimedL_dat2
        endfunction
        
        function s__TimedL_looping takes nothing returns nothing
            local real z1
            local real z2
            set s__TimedL_dat=s__TimedL_first
            loop
                set z1=0
                set z2=0
                set s__TimedL_time[s__TimedL_dat]=s__TimedL_time[s__TimedL_dat] - 1
                if s__TimedL_da[s__TimedL_dat] != 0 then
                    set s__TimedL_av[s__TimedL_dat]=s__TimedL_av[s__TimedL_dat] - s__TimedL_da[s__TimedL_dat]
                    call SetLightningColor(s__TimedL_l[s__TimedL_dat], 1, 1, 1, s__TimedL_av[s__TimedL_dat])
                endif
                if s__TimedL_s[s__TimedL_dat] == null then
                    if s__TimedL_dx1[s__TimedL_dat] != 0 then
                        set s__TimedL_x1[s__TimedL_dat]=s__TimedL_x1[s__TimedL_dat] + s__TimedL_dx1[s__TimedL_dat]
                    endif
                    if s__TimedL_dy1[s__TimedL_dat] != 0 then
                        set s__TimedL_y1[s__TimedL_dat]=s__TimedL_y1[s__TimedL_dat] + s__TimedL_dy1[s__TimedL_dat]
                    endif
                    if s__TimedL_dz1[s__TimedL_dat] != 0 then
                        set s__TimedL_z1[s__TimedL_dat]=s__TimedL_z1[s__TimedL_dat] + s__TimedL_dz1[s__TimedL_dat]
                    endif
                else
                    set s__TimedL_x1[s__TimedL_dat]=GetUnitX(s__TimedL_s[s__TimedL_dat])
                    set s__TimedL_y1[s__TimedL_dat]=GetUnitY(s__TimedL_s[s__TimedL_dat])
                    set z1=GetUnitFlyHeight(s__TimedL_s[s__TimedL_dat])
                endif
                if s__TimedL_t[s__TimedL_dat] == null then
                    if s__TimedL_dx2[s__TimedL_dat] != 0 then
                        set s__TimedL_x2[s__TimedL_dat]=s__TimedL_x2[s__TimedL_dat] + s__TimedL_dx2[s__TimedL_dat]
                    endif
                    if s__TimedL_dy2[s__TimedL_dat] != 0 then
                        set s__TimedL_y2[s__TimedL_dat]=s__TimedL_y2[s__TimedL_dat] + s__TimedL_dy2[s__TimedL_dat]
                    endif
                    if s__TimedL_dz2[s__TimedL_dat] != 0 then
                        set s__TimedL_z2[s__TimedL_dat]=s__TimedL_z2[s__TimedL_dat] + s__TimedL_dz2[s__TimedL_dat]
                    endif
                else
                    set s__TimedL_x2[s__TimedL_dat]=GetUnitX(s__TimedL_t[s__TimedL_dat])
                    set s__TimedL_y2[s__TimedL_dat]=GetUnitY(s__TimedL_t[s__TimedL_dat])
                    set z2=GetUnitFlyHeight(s__TimedL_t[s__TimedL_dat])
                endif
                if s__TimedL_moves[s__TimedL_dat] then
                    call MoveLocation(TimedLightnings__loc, s__TimedL_x1[s__TimedL_dat], s__TimedL_y1[s__TimedL_dat])
                    set z1=GetLocationZ(TimedLightnings__loc) + s__TimedL_z1[s__TimedL_dat] + z1
                    call MoveLocation(TimedLightnings__loc, s__TimedL_x2[s__TimedL_dat], s__TimedL_y2[s__TimedL_dat])
                    set z2=GetLocationZ(TimedLightnings__loc) + s__TimedL_z2[s__TimedL_dat] + z2
                    call MoveLightningEx(s__TimedL_l[s__TimedL_dat], true, s__TimedL_x1[s__TimedL_dat], s__TimedL_y1[s__TimedL_dat], z1, s__TimedL_x2[s__TimedL_dat], s__TimedL_y2[s__TimedL_dat], z2)
                endif
                if s__TimedL_time[s__TimedL_dat] == 0 then
                    set s__TimedL_dat2=s__TimedL_dat
                    set s__TimedL_dat=s__TimedL_next[s__TimedL_dat]
                    call s__TimedL_destroyL()
                else
                    set s__TimedL_dat=s__TimedL_next[s__TimedL_dat]
                endif
                exitwhen s__TimedL_dat == 0
            endloop
        endfunction
        
        function s__TimedL_InitAdd takes nothing returns nothing
            
            if s__TimedL_rlast != 0 then
                set s__TimedL_dat2=s__TimedL_rlast
                set s__TimedL_next[s__TimedL_dat2]=s__TimedL_dat
            endif
            
            
            set s__TimedL_prev[s__TimedL_dat]=s__TimedL_rlast
            
            set s__TimedL_rlast=s__TimedL_dat
            
            set TimedLightnings__CT=TimedLightnings__CT + 1
            if TimedLightnings__CT == 1 then
                
                set s__TimedL_first=s__TimedL_dat
                call TimerStart(TimedLightnings__TMR, TimedLightnings__TO, true, function s__TimedL_looping)
            endif
        endfunction
        
        function s__TimedL_Recycle takes nothing returns nothing
            if 0 == s__TimedL_ir then
                set s__TimedL_ic=s__TimedL_ic + 1
                set s__TimedL_dat=s__TimedL_ic
            else
                set s__TimedL_dat=s__TimedL_ir
                set s__TimedL_ir=s__TimedL_rn[s__TimedL_dat]
            endif
        endfunction
        
        function s__TimedL_P2U takes lightning l,unit t,real time,real x1,real y1,real z1,real z2,real startAlpha,real endAlpha returns nothing
            local integer this
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_x1[this]=x1
            set s__TimedL_y1[this]=y1
            set s__TimedL_z1[this]=z1
            set s__TimedL_z2[this]=z2
            set s__TimedL_s[this]=null
            set s__TimedL_t[this]=t
            set s__TimedL_next[this]=0 // Nodes are added to the end of the list, there is no next node
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(time / TimedLightnings__TO) // Calculates how many loops does the lightning lasts
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * TimedLightnings__TO / time // Transparency change speed
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
        
        function s__TimedL_U2P takes lightning l,unit s,real t,real x1,real y1,real x2,real y2,real z1,real z2,real startAlpha,real endAlpha returns nothing
            local integer this
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_x1[this]=x1
            set s__TimedL_y1[this]=y1
            set s__TimedL_x2[this]=x2
            set s__TimedL_y2[this]=y2
            set s__TimedL_z1[this]=z1
            set s__TimedL_z2[this]=z2
            set s__TimedL_s[this]=s
            set s__TimedL_t[this]=null
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(t / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * TimedLightnings__TO / t
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
        
        function s__TimedL_U2U takes lightning l,unit s,unit t,real time,real z1,real z2,real startAlpha,real endAlpha returns nothing
            local integer this
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_z1[this]=z1
            set s__TimedL_z2[this]=z2
            set s__TimedL_s[this]=s
            set s__TimedL_t[this]=t
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(time / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * TimedLightnings__TO / time
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
        
        function s__TimedL_P2P takes lightning l,real t,real startAlpha,real endAlpha returns nothing
            local integer this
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_s[this]=null
            set s__TimedL_t[this]=null
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(t / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * TimedLightnings__TO / t
            set s__TimedL_moves[this]=false

            call s__TimedL_InitAdd()
        endfunction
        
        function s__TimedL_P2UEx takes lightning l,unit a,real t,real zu,real x1,real y1,real z1,real x2,real y2,real z2,real startAlpha,real endAlpha returns nothing
            local integer this
            local real n= TimedLightnings__TO / t
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_x1[this]=x1
            set s__TimedL_dx1[this]=( x2 - x1 ) * n
            set s__TimedL_y1[this]=y1
            set s__TimedL_dy1[this]=( y2 - y1 ) * n
            set s__TimedL_z1[this]=z1
            set s__TimedL_dz1[this]=( z2 - z1 ) * n
            set s__TimedL_z2[this]=zu
            set s__TimedL_s[this]=null
            set s__TimedL_t[this]=a
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(t / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * n
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
        
        function s__TimedL_U2PEx takes lightning l,unit a,real t,real zu,real x1,real y1,real z1,real x2,real y2,real z2,real startAlpha,real endAlpha returns nothing
            local integer this
            local real n= TimedLightnings__TO / t
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_x2[this]=x1
            set s__TimedL_dx2[this]=( x2 - x1 ) * n
            set s__TimedL_y2[this]=y1
            set s__TimedL_dy2[this]=( y2 - y1 ) * n
            set s__TimedL_z2[this]=z1
            set s__TimedL_dz2[this]=( z2 - z1 ) * n
            set s__TimedL_z1[this]=zu
            set s__TimedL_s[this]=a
            set s__TimedL_t[this]=null
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(t / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * n
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
    
        function s__TimedL_P2PEx takes lightning l,real t,real x1,real y1,real z1,real x2,real y2,real z2,real x3,real y3,real z3,real x4,real y4,real z4,real startAlpha,real endAlpha returns nothing
            local integer this
            local real n= TimedLightnings__TO / t
            
            call s__TimedL_Recycle()
            set this=s__TimedL_dat
            
            set s__TimedL_x1[this]=x1
            set s__TimedL_x2[this]=x3
            set s__TimedL_y1[this]=y1
            set s__TimedL_y2[this]=y3
            set s__TimedL_z1[this]=z1
            set s__TimedL_z2[this]=z3
            set s__TimedL_dx1[this]=( x2 - x1 ) * n
            set s__TimedL_dy1[this]=( y2 - y1 ) * n
            set s__TimedL_dz1[this]=( z2 - z1 ) * n
            set s__TimedL_dx2[this]=( x4 - x3 ) * n
            set s__TimedL_dy2[this]=( y4 - y3 ) * n
            set s__TimedL_dz2[this]=( z4 - z3 ) * n
            set s__TimedL_s[this]=null
            set s__TimedL_t[this]=null
            set s__TimedL_next[this]=0
            set s__TimedL_l[this]=l
            set s__TimedL_time[this]=R2I(t / TimedLightnings__TO)
            set s__TimedL_av[this]=startAlpha
            set s__TimedL_da[this]=( startAlpha - endAlpha ) * n
            set s__TimedL_moves[this]=true

            call s__TimedL_InitAdd()
        endfunction
    

//library TimedLightnings ends
//library TimerUtils:
//*********************************************************************
//* TimerUtils (red+blue+orange flavors for 1.24b+) 2.0
//* ----------
//*
//*  To implement it , create a custom text trigger called TimerUtils
//* and paste the contents of this script there.
//*
//*  To copy from a map to another, copy the trigger holding this
//* library to your map.
//*
//* (requires vJass)   More scripts: htt://www.wc3c.net
//*
//* For your timer needs:
//*  * Attaching
//*  * Recycling (with double-free protection)
//*
//* set t=NewTimer()      : Get a timer (alternative to CreateTimer)
//* set t=NewTimerEx(x)   : Get a timer (alternative to CreateTimer), call
//*                            Initialize timer data as x, instead of 0.
//*
//* ReleaseTimer(t)       : Relese a timer (alt to DestroyTimer)
//* SetTimerData(t,2)     : Attach value 2 to timer
//* GetTimerData(t)       : Get the timer's value.
//*                         You can assume a timer's value is 0
//*                         after NewTimer.
//*
//* Multi-flavor:
//*    Set USE_HASH_TABLE to true if you don't want to complicate your life.
//*
//* If you like speed and giberish try learning about the other flavors.
//*
//********************************************************************

//================================================================

    //==================================================================================================
    
    

    //It is dependent on jasshelper's recent inlining optimization in order to perform correctly.
    function SetTimerData takes timer t,integer value returns nothing

            // new blue
            call SaveInteger(TimerUtils___ht, 0, GetHandleId(t), value)
            

















    endfunction

    function GetTimerData takes timer t returns integer

            // new blue
            return LoadInteger(TimerUtils___ht, 0, GetHandleId(t))
            

















    endfunction

    //==========================================================================================

    //==========================================================================================
    // I needed to decide between duplicating code ignoring the "Once and only once" rule
    // and using the ugly textmacros. I guess textmacros won.
    //

    function NewTimerEx takes integer value returns timer
        if ( TimerUtils___tN == 0 ) then
            if ( not TimerUtils___didinit ) then
                //This extra if shouldn't represent a major performance drawback
                //because QUANTITY rule is not supposed to be broken every day. 
                call TriggerEvaluate(st___prototype4[(1)]) // INLINED!!
                set TimerUtils___tN=TimerUtils___tN - 1
            else
                //If this happens then the QUANTITY rule has already been broken, try to fix the
                // issue, else fail.
                set s__TimerUtils___tT[0]= CreateTimer()















            endif
        else
            set TimerUtils___tN=TimerUtils___tN - 1
        endif
        //debug call BJDebugMsg(I2S(tN))
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[TimerUtils___tN] )), ( value)) // INLINED!!
     return s__TimerUtils___tT[TimerUtils___tN]
    endfunction
    
    function NewTimer takes nothing returns timer
        return NewTimerEx(0)
    endfunction


    //==========================================================================================
    function ReleaseTimer takes timer t returns nothing
        if ( t == null ) then
            return
        endif
        if ( TimerUtils___tN == TimerUtils___ARRAY_SIZE ) then
            //stack is full, the map already has much more troubles than the chance of bug
            call DestroyTimer(t)
        else
            call PauseTimer(t)
            if ( (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) == TimerUtils___HELD ) then // INLINED!!
                return
            endif
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( TimerUtils___HELD)) // INLINED!!
            set s__TimerUtils___tT[TimerUtils___tN]= t
            set TimerUtils___tN=TimerUtils___tN + 1
        endif
    endfunction

    function TimerUtils___init takes nothing returns nothing
     local integer i=0
     local integer o=- 1
     local boolean oops= false
        if ( TimerUtils___didinit ) then
            return
        else
            set TimerUtils___didinit=true
        endif
     

            set TimerUtils___ht=InitHashtable()
            loop
                exitwhen ( i == TimerUtils___QUANTITY )
                set s__TimerUtils___tT[i]= CreateTimer()
                call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[i] )), ( TimerUtils___HELD)) // INLINED!!
                set i=i + 1
            endloop
            set TimerUtils___tN=TimerUtils___QUANTITY










































    endfunction


//library TimerUtils ends
//library Z:


    function GetUnitZ takes unit u returns real
        call MoveLocation(Z__l, GetUnitX(u), GetUnitY(u))
        return GetLocationZ(Z__l) + GetUnitFlyHeight(u)
    endfunction
    
    function GetZ takes real x,real y returns real
        call MoveLocation(Z__l, x, y)
        return GetLocationZ(Z__l)
    endfunction


//library Z ends
//library FearStacks:

         function s__Schadenfreude_destroy takes integer this returns nothing
            set s__Schadenfreude_u[this]=null
            call s__Schadenfreude_deallocate(this)
        endfunction
    
    //native UnitAlive takes unit id returns boolean

     function Schadenfreude_Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local integer ud= GetUnitUserData(s__Schadenfreude_u[data])

    if GetUnitTypeId(LC[( 1 + GetPlayerId(GetOwningPlayer(s__Schadenfreude_u[data])) )]) != Schadenfreude_UNIT_ID or LC[( 1 + GetPlayerId(GetOwningPlayer(s__Schadenfreude_u[data])) )] != s__Schadenfreude_u[data] then
    else
    if FearCountExtra[ud] > 0 then
    set FearCountExtra[ud]=FearCountExtra[ud] - 1
    else
    set FearCounter[ud]=FearCounter[ud] - 1
    endif
    endif
    
    call s__Schadenfreude_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    
    
    set t=null
    endfunction
    

     function Schadenfreude_Handler2 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local integer ud= GetUnitUserData(s__Schadenfreude_u[data])
    
    set FearStacking[ud]=FearStacking[ud] - 1
    
    if FearStacking[ud] == 0 then
    call SetUnitVertexColor(s__Schadenfreude_u[data], 190, 190, 190, 255)
    call UnitRemoveAbility(s__Schadenfreude_u[data], Schadenfreude_BUFF_ID)
    endif
    
    call SetHeroAgi(s__Schadenfreude_u[data], GetHeroAgi(s__Schadenfreude_u[data], false) - s__Schadenfreude_i[data], true)
    
    call s__Schadenfreude_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction
    
   function AddFreudeStack takes integer id,unit cast returns nothing
    local timer t
    local integer data
    local unit u= cast
    local integer i
    local integer ud= GetUnitUserData(u)
    local texttag tt
    local string text
    
        if FearCounter[ud] == 9 then
        set FearCountExtra[ud]=FearCountExtra[ud] + 9
        set FearCounter[ud]=0

        set data=s__Schadenfreude__allocate()
        set s__Schadenfreude_u[data]=u
        set s__Schadenfreude_i[data]=GetHeroAgi(s__Schadenfreude_u[data], true)
        
            set tt=CreateTextTag()
    set text="|cFF4A484AE|r|cFF4A454Cn|r|cFF4B414Fd|r|cFF4B3E52u|r|cFF4C3B54r|r|cFF4C3856i|r|cFF4D3459n|r|cFF4D315Cg|r|cFF4E2E5E |r|cFF4E2B60M|r|cFF4F2763a|r|cFF4F2466l|r|cFF4F2168i|r|cFF501D6Ac|r|cFF501A6De|r|cFF511770 |r|cFF511472L|r|cFF521074e|r|cFF520D77v|r|cFF530A7Ae|r|cFF53077Cl|r|cFF54037E |r|cFF54008110"
    
    call SetTextTagText(tt, text, .024)
    call SetTextTagPos(tt, GetUnitX(cast), GetUnitY(cast), 0.0)
    call SetTextTagColor(tt, 255, 255, 255, 255)
    call SetTextTagVelocity(tt, GetRandomReal(- .02, .02), GetRandomReal(- .02, .02))
    call SetTextTagVisibility(tt, true)
    call SetTextTagFadepoint(tt, 2.0)
    call SetTextTagLifespan(tt, 5.0)
    call SetTextTagPermanent(tt, false)
        
        call SetHeroAgi(s__Schadenfreude_u[data], GetHeroAgi(s__Schadenfreude_u[data], false) + s__Schadenfreude_i[data], true)
        call UnitAddAbility(s__Schadenfreude_u[data], Schadenfreude_BUFF_ID)
        call SetUnitVertexColor(s__Schadenfreude_u[data], 51, 0, 51, 128)
        call DestroyEffect(AddSpecialEffectTarget(Schadenfreude_EFFECT, s__Schadenfreude_u[data], Schadenfreude_ATTACH))
        set FearStacking[ud]=FearStacking[ud] + 1
        
        set t=(NewTimerEx(0)) // INLINED!!
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, 20., false, function Schadenfreude_Handler2)
        
                set i=GetUnitAbilityLevel(u, id)
        call UnitRemoveAbility(u, id)
        call UnitAddAbility(u, id)
        call SetUnitAbilityLevel(u, id, i)
        else
        
        set FearCounter[ud]=FearCounter[ud] + 1
    set tt=CreateTextTag()
    set text="|cFF4A484AE|r|cFF4A454Cn|r|cFF4B414Fd|r|cFF4B3E52u|r|cFF4C3B54r|r|cFF4C3856i|r|cFF4D3459n|r|cFF4D315Cg|r|cFF4E2E5E |r|cFF4E2B60M|r|cFF4F2763a|r|cFF4F2466l|r|cFF4F2168i|r|cFF501D6Ac|r|cFF501A6De|r|cFF511770 |r|cFF511472L|r|cFF521074e|r|cFF520D77v|r|cFF530A7Ae|r|cFF53077Cl|r|cFF54037E |r|cFF540081" + I2S(FearCounter[ud])
    
    call SetTextTagText(tt, text, .024)
    call SetTextTagPos(tt, GetUnitX(cast), GetUnitY(cast), 0.0)
    call SetTextTagColor(tt, 255, 255, 255, 255)
    call SetTextTagVelocity(tt, GetRandomReal(- .02, .02), GetRandomReal(- .02, .02))
    call SetTextTagVisibility(tt, true)
    call SetTextTagFadepoint(tt, 2.0)
    call SetTextTagLifespan(tt, 5.0)
    call SetTextTagPermanent(tt, false)

        set t=(NewTimerEx(0)) // INLINED!!
        set data=s__Schadenfreude__allocate()
        set s__Schadenfreude_u[data]=u
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        if id == 'A0CU' then
        call TimerStart(t, 90., false, function Schadenfreude_Handler)
        elseif id == 'A0CK' then
        call TimerStart(t, 5., false, function Schadenfreude_Handler)
        elseif id == 'A0CQ' then
        call TimerStart(t, 20., false, function Schadenfreude_Handler)
        else
        call TimerStart(t, 10., false, function Schadenfreude_Handler)
        endif
        endif
    
    set text=null
    set tt=null
    set t=null
    set u=null
    endfunction
    

//library FearStacks ends
//library Income:

function IncomeHandler takes nothing returns nothing
local timer IncomeHandler_t= GetExpiredTimer()
local integer i= 0

call DestroyTimerDialog(IncomeDialog)

if HD then
call ReleaseTimer(IncomeHandler_t)
else
set IncomeDialog=CreateTimerDialog(IncomeHandler_t)
loop
exitwhen i == 12

if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) != MAP_CONTROL_COMPUTER then
if GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + Income[i] >= 1000000 then
call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, 1000000)
call DisplayTextToPlayer(Player(i), 0., 0., "Warning: You have maximal gold. Spend it or convert it to lumber to prevent loss of resources.")
else
call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD) + Income[i] ))
endif
if TIPST[i] then
call DisplayTextToPlayer(Player(i), 0., 0., "Income: " + I2S(Income[i]))
endif
endif

set i=i + 1
endloop
    call TimerDialogSetTitle(IncomeDialog, "Income:")
    call TimerDialogDisplay(IncomeDialog, true)
call TimerStart(IncomeHandler_t, 10., false, function IncomeHandler)
endif
endfunction

function IncomeTrigger takes nothing returns nothing
local timer IncomeHandler_t= (NewTimerEx(0)) // INLINED!!

call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "|cffffcc0020 seconds till game starts.|r")
call TriggerSleepAction(20.)

set IncomeDialog=CreateTimerDialog(IncomeHandler_t)

    call TimerDialogSetTitle(IncomeDialog, "Income:")
    call TimerDialogDisplay(IncomeDialog, true)
    
call TimerStart(IncomeHandler_t, 10., false, function IncomeHandler)

set IncomeHandler_t=null
endfunction

//library Income ends
//library NewBonusUtils:
    
    
    
    
    
    

        


        function s__NewBonusUtils__NewBonusUtils_remove takes integer this,integer i,boolean isItem returns integer
            call AddUnitBonus(s__NewBonusUtils__NewBonusUtils_unit[this] , s__NewBonusUtils__NewBonusUtils_type[this] , - s__NewBonusUtils__NewBonusUtils_amount[this])

            if isItem then
                set s__NewBonusUtils__NewBonusUtils_items[i]=s__NewBonusUtils__NewBonusUtils_items[s__NewBonusUtils__NewBonusUtils_k]
                set s__NewBonusUtils__NewBonusUtils_k=s__NewBonusUtils__NewBonusUtils_k - 1
            else
                set s__NewBonusUtils__NewBonusUtils_array[i]=s__NewBonusUtils__NewBonusUtils_array[s__NewBonusUtils__NewBonusUtils_key]
                set s__NewBonusUtils__NewBonusUtils_key=s__NewBonusUtils__NewBonusUtils_key - 1

                if s__NewBonusUtils__NewBonusUtils_key == - 1 then
                    call PauseTimer(s__NewBonusUtils__NewBonusUtils_timer)
                endif
            endif

            set s__NewBonusUtils__NewBonusUtils_unit[this]=null
            set s__NewBonusUtils__NewBonusUtils_item[this]=null
            
            call sc__NewBonus_deallocate(this)

            return i - 1
        endfunction

        function s__NewBonusUtils__NewBonusUtils_onDrop takes nothing returns nothing
            local item itm= GetManipulatedItem()
            local integer i= 0
            local integer this

            loop
                exitwhen i > s__NewBonusUtils__NewBonusUtils_k
                    set this=s__NewBonusUtils__NewBonusUtils_items[i]

                    if s__NewBonusUtils__NewBonusUtils_item[this] == itm then
                        set i=s__NewBonusUtils__NewBonusUtils_remove(this,i , true)
                    endif
                set i=i + 1
            endloop
        endfunction
     
        function s__NewBonusUtils__NewBonusUtils_onPeriod takes nothing returns nothing
            local integer i= 0
            local integer this

            loop
                exitwhen i > s__NewBonusUtils__NewBonusUtils_key
                    set this=s__NewBonusUtils__NewBonusUtils_array[i]

                    if s__NewBonusUtils__NewBonusUtils_link[this] then
                        set s__NewBonusUtils__NewBonusUtils_ticks[this]=s__NewBonusUtils__NewBonusUtils_ticks[this] - 1

                        if s__NewBonusUtils__NewBonusUtils_ticks[this] <= 0 then
                            set i=s__NewBonusUtils__NewBonusUtils_remove(this,i , false)
                        endif
                    else
                        if GetUnitAbilityLevel(s__NewBonusUtils__NewBonusUtils_unit[this], s__NewBonusUtils__NewBonusUtils_buff[this]) == 0 then
                            set i=s__NewBonusUtils__NewBonusUtils_remove(this,i , false)
                        endif
                    endif
                set i=i + 1
            endloop
        endfunction

        function s__NewBonusUtils__NewBonusUtils_linkTimed takes unit u,integer bonus_type,real amount,real duration,boolean link returns nothing
            local integer this= s__NewBonusUtils__NewBonusUtils__allocate()

            set s__NewBonusUtils__NewBonusUtils_unit[this]=u
            set s__NewBonusUtils__NewBonusUtils_type[this]=bonus_type
            set s__NewBonusUtils__NewBonusUtils_ticks[this]=duration / 0.03125000
            set s__NewBonusUtils__NewBonusUtils_link[this]=link
            set s__NewBonusUtils__NewBonusUtils_amount[this]=AddUnitBonus(u , bonus_type , amount)
            set s__NewBonusUtils__NewBonusUtils_key=s__NewBonusUtils__NewBonusUtils_key + 1
            set s__NewBonusUtils__NewBonusUtils_array[s__NewBonusUtils__NewBonusUtils_key]=this
         
            if s__NewBonusUtils__NewBonusUtils_key == 0 then
                call TimerStart(s__NewBonusUtils__NewBonusUtils_timer, 0.03125000, true, function s__NewBonusUtils__NewBonusUtils_onPeriod)
            endif
        endfunction

        function s__NewBonusUtils__NewBonusUtils_linkBuff takes unit u,integer bonus_type,real amount,integer buffId,boolean link returns nothing
            local integer this= s__NewBonusUtils__NewBonusUtils__allocate()

            set s__NewBonusUtils__NewBonusUtils_unit[this]=u
            set s__NewBonusUtils__NewBonusUtils_type[this]=bonus_type
            set s__NewBonusUtils__NewBonusUtils_buff[this]=buffId
            set s__NewBonusUtils__NewBonusUtils_link[this]=link
            set s__NewBonusUtils__NewBonusUtils_amount[this]=AddUnitBonus(u , bonus_type , amount)
            set s__NewBonusUtils__NewBonusUtils_key=s__NewBonusUtils__NewBonusUtils_key + 1
            set s__NewBonusUtils__NewBonusUtils_array[s__NewBonusUtils__NewBonusUtils_key]=this
         
            if s__NewBonusUtils__NewBonusUtils_key == 0 then
                call TimerStart(s__NewBonusUtils__NewBonusUtils_timer, 0.03125000, true, function s__NewBonusUtils__NewBonusUtils_onPeriod)
            endif
        endfunction

        function s__NewBonusUtils__NewBonusUtils_linkItem takes unit u,integer bonus_type,real amount,item i returns nothing
            local integer this= s__NewBonusUtils__NewBonusUtils__allocate()

            set s__NewBonusUtils__NewBonusUtils_unit[this]=u
            set s__NewBonusUtils__NewBonusUtils_item[this]=i
            set s__NewBonusUtils__NewBonusUtils_type[this]=bonus_type
            set s__NewBonusUtils__NewBonusUtils_amount[this]=AddUnitBonus(u , bonus_type , amount)
            set s__NewBonusUtils__NewBonusUtils_k=s__NewBonusUtils__NewBonusUtils_k + 1
            set s__NewBonusUtils__NewBonusUtils_items[s__NewBonusUtils__NewBonusUtils_k]=this
        endfunction

        function s__NewBonusUtils__NewBonusUtils_copy takes unit source,unit target returns nothing
            local integer i= 1

            loop
                exitwhen i > 17
                    if GetUnitBonus(source , i) != 0 then
                        call AddUnitBonus(target , i , GetUnitBonus(source , i))
                    endif
                set i=i + 1
            endloop
        endfunction

        function s__NewBonusUtils__NewBonusUtils_mirror takes unit source,unit target returns nothing
            local integer i= 1

            loop
                exitwhen i > 17
                    call SetUnitBonus(target , i , GetUnitBonus(source , i))
                set i=i + 1
            endloop
        endfunction

        function s__NewBonusUtils__NewBonusUtils_onInit takes nothing returns nothing
            call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_DROP_ITEM , function s__NewBonusUtils__NewBonusUtils_onDrop)
        endfunction

    
    
    
    function AddUnitBonusTimed takes unit u,integer bonus_type,real amount,real duration returns nothing
        call s__NewBonusUtils__NewBonusUtils_linkTimed(u , bonus_type , amount , duration , true)
    endfunction

    function LinkBonusToBuff takes unit u,integer bonus_type,real amount,integer buffId returns nothing
        call s__NewBonusUtils__NewBonusUtils_linkBuff(u , bonus_type , amount , buffId , false)
    endfunction

    function LinkBonusToItem takes unit u,integer bonus_type,real amount,item i returns nothing
        call s__NewBonusUtils__NewBonusUtils_linkItem(u , bonus_type , amount , i)
    endfunction

    function UnitCopyBonuses takes unit source,unit target returns nothing
        call s__NewBonusUtils__NewBonusUtils_copy(source , target)
    endfunction

    function UnitMirrorBonuses takes unit source,unit target returns nothing
        call s__NewBonusUtils__NewBonusUtils_mirror(source , target)
    endfunction

//library NewBonusUtils ends
//library ProgressBars:


    
    
        
        
        
        

        function s__ProgressBar__set_x takes integer this,real x returns nothing
            call SetUnitX(s__ProgressBar_bar[this], x)
        endfunction
        
        function s__ProgressBar__get_x takes integer this returns real
            return GetUnitX(s__ProgressBar_bar[this])
        endfunction
        
        function s__ProgressBar__set_y takes integer this,real y returns nothing
            call SetUnitY(s__ProgressBar_bar[this], y)
        endfunction
        
        function s__ProgressBar__get_y takes integer this returns real
            return GetUnitY(s__ProgressBar_bar[this])
        endfunction
        
        function s__ProgressBar__set_zOffset takes integer this,real offset returns nothing
            call SetUnitFlyHeight(s__ProgressBar_bar[this], offset, 0)
        endfunction
        
        function s__ProgressBar__get_zOffset takes integer this returns real
            return GetUnitFlyHeight(s__ProgressBar_bar[this])
        endfunction
        
        function s__ProgressBar__set_size takes integer this,real size returns nothing
            call SetUnitScale(s__ProgressBar_bar[this], size, size, size)
        endfunction
        
        function s__ProgressBar__set_color takes integer this,playercolor color returns nothing
            call SetUnitColor(s__ProgressBar_bar[this], color)
        endfunction
        
        function s__ProgressBar_show takes integer this,boolean flag returns nothing
            call UnitRemoveAbility(s__ProgressBar_bar[this], 'Aloc')
            call ShowUnit(s__ProgressBar_bar[this], flag)
            call UnitAddAbility(s__ProgressBar_bar[this], 'Aloc')
        endfunction
        
        function s__ProgressBar_reset takes integer this returns nothing
            call SetUnitAnimationByIndex(s__ProgressBar_bar[this], 1)
        endfunction

        function s__ProgressBar_RGB takes integer this,integer red,integer green,integer blue,integer alpha returns nothing
            call SetUnitVertexColor(s__ProgressBar_bar[this], red, green, blue, alpha)
        endfunction
        
        function s__ProgressBar_destroy takes integer this returns nothing
            if ( s__ProgressBar_recycle[this] ) then
                set s__ProgressBar_lastDummyIndex=s__ProgressBar_lastDummyIndex + 1
                set s__ProgressBar_dummy[s__ProgressBar_lastDummyIndex]=s__ProgressBar_bar[this]
                call SetUnitAnimationByIndex(s__ProgressBar_bar[this], 0)
                call SetUnitTimeScale(s__ProgressBar_bar[this], 1)
            endif
            
            set s__ProgressBar_bar[this]=null
            set s__ProgressBar_target[this]=null
            set s__ProgressBar_t_enabled[this]=false
            set s__ProgressBar_endVal[this]=0
            set s__ProgressBar_curVal[this]=0
            
            if ( s__ProgressBar_timer[this] != null ) then
                call ReleaseTimer(s__ProgressBar_timer[this])
                set s__ProgressBar_timer[this]=null
            endif
            
            if ( s__ProgressBar_timer2[this] != null ) then
                call ReleaseTimer(s__ProgressBar_timer2[this])
                set s__ProgressBar_timer2[this]=null
            endif
        endfunction
        
        function s__ProgressBar_updatePercentage takes nothing returns nothing
            local timer expired= GetExpiredTimer()
            local integer this= (LoadInteger(TimerUtils___ht, 0, GetHandleId((expired)))) // INLINED!!
            
            if ( s__ProgressBar_reverse[this] ) then
            
                if ( s__ProgressBar_curVal[this] > s__ProgressBar_endVal[this] ) then
                    call SetUnitTimeScale(s__ProgressBar_bar[this], - s__ProgressBar_pspeed[this])
                    set s__ProgressBar_curVal[this]=( s__ProgressBar_curVal[this] - ( s__ProgressBar_pspeed[this] ) )
                elseif ( s__ProgressBar_curVal[this] <= s__ProgressBar_endVal[this] ) then
                    call PauseTimer(s__ProgressBar_timer2[this])
                    call SetUnitTimeScale(s__ProgressBar_bar[this], 0)
                    set s__ProgressBar_curVal[this]=s__ProgressBar_endVal[this]
                    set s__ProgressBar_done[this]=true
                endif
                
            else
            
                if ( s__ProgressBar_curVal[this] < s__ProgressBar_endVal[this] ) then
                    call SetUnitTimeScale(s__ProgressBar_bar[this], s__ProgressBar_pspeed[this])
                    set s__ProgressBar_curVal[this]=( s__ProgressBar_curVal[this] + ( s__ProgressBar_pspeed[this] ) )
                elseif ( s__ProgressBar_curVal[this] >= s__ProgressBar_endVal[this] ) then
                    call PauseTimer(s__ProgressBar_timer2[this])
                    call SetUnitTimeScale(s__ProgressBar_bar[this], 0)
                    set s__ProgressBar_curVal[this]=s__ProgressBar_endVal[this]
                    set s__ProgressBar_done[this]=true
                    
                endif
                
            endif
            
        endfunction
        
        function s__ProgressBar_updatePosition takes nothing returns nothing
            local integer this= (LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer())))) // INLINED!!
            if ( s__ProgressBar_target[this] != null ) then
                call SetUnitX(s__ProgressBar_bar[this], GetUnitX(s__ProgressBar_target[this]) + s__ProgressBar_xOffset[this])
                call SetUnitY(s__ProgressBar_bar[this], GetUnitY(s__ProgressBar_target[this]) + s__ProgressBar_yOffset[this])
            else
                call ReleaseTimer(GetExpiredTimer())
            endif
        endfunction
        
        function s__ProgressBar_getDummy takes nothing returns unit
            if ( s__ProgressBar_lastDummyIndex <= - 1 ) then
                set bj_lastCreatedUnit=CreateUnit(ProgressBars__PROGRESS_BAR_OWNER, ProgressBars__PROGRESS_BAR_DUMMY, 0, 0, 270)
                call PauseUnit(bj_lastCreatedUnit, true)
                return bj_lastCreatedUnit
            endif
            call SetUnitAnimationByIndex(s__ProgressBar_dummy[s__ProgressBar_lastDummyIndex], 1)
            set s__ProgressBar_lastDummyIndex=s__ProgressBar_lastDummyIndex - 1
            return s__ProgressBar_dummy[s__ProgressBar_lastDummyIndex + 1]
        endfunction
        
        function s__ProgressBar_release takes integer count returns nothing
            if ( count > s__ProgressBar_lastDummyIndex ) then
                set count=s__ProgressBar_lastDummyIndex
            endif
                
            loop
                exitwhen count <= 0
                call RemoveUnit(s__ProgressBar_dummy[count])
                set s__ProgressBar_dummy[count]=null
                set count=count - 1
            endloop
                
            set s__ProgressBar_lastDummyIndex=- 1
        endfunction
        
        function s__ProgressBar_create takes nothing returns integer
            local integer this= s__ProgressBar__allocate()
            
            set s__ProgressBar_bar[this]=s__ProgressBar_getDummy()
            set s__ProgressBar_done[this]=true
            set s__ProgressBar_recycle[this]=true
            
            call SetUnitAnimationByIndex(s__ProgressBar_bar[this], 1)
            call SetUnitTimeScale(s__ProgressBar_bar[this], 0)
            
            return this
        endfunction
        
        function s__ProgressBar_createEx takes integer unitId returns integer
            local integer this= s__ProgressBar__allocate()
            
            set s__ProgressBar_bar[this]=CreateUnit(ProgressBars__PROGRESS_BAR_OWNER, unitId, 0, 0, 0)
            set s__ProgressBar_done[this]=true
            set s__ProgressBar_recycle[this]=false
            
            call SetUnitAnimationByIndex(s__ProgressBar_bar[this], 1)
            call SetUnitTimeScale(s__ProgressBar_bar[this], 0)
            
            return this
        endfunction
        
        function s__ProgressBar_setPercentage takes integer this,real percent,real speed returns nothing
            set s__ProgressBar_endVal[this]=R2I(percent)
            set s__ProgressBar_pspeed[this]=speed
            
            set s__ProgressBar_reverse[this]=( s__ProgressBar_curVal[this] > s__ProgressBar_endVal[this] )
                
            if ( s__ProgressBar_done[this] ) then
                
                if ( s__ProgressBar_timer2[this] == null ) then
                    set s__ProgressBar_timer2[this]=NewTimerEx(this)
                endif
            
                call TimerStart(s__ProgressBar_timer2[this], 0.01, true, function s__ProgressBar_updatePercentage)
                set s__ProgressBar_done[this]=false
            endif
        endfunction
        
        function s__ProgressBar__set_targetUnit takes integer this,unit u returns nothing
            set s__ProgressBar_target[this]=u
            
            if ( u != null ) then
                if ( s__ProgressBar_timer[this] == null ) then
                    set s__ProgressBar_timer[this]=NewTimerEx(this)
                endif
                call TimerStart(s__ProgressBar_timer[this], ProgressBars__UPDATE_POSITION_PERIOD, true, function s__ProgressBar_updatePosition)
                call SetUnitX(s__ProgressBar_bar[this], GetUnitX(s__ProgressBar_target[this]) - s__ProgressBar_xOffset[this])
                call SetUnitY(s__ProgressBar_bar[this], GetUnitY(s__ProgressBar_target[this]) - s__ProgressBar_yOffset[this])
                set s__ProgressBar_t_enabled[this]=true
            else
                if ( s__ProgressBar_timer[this] != null ) then
                    call ReleaseTimer(s__ProgressBar_timer[this])
                endif
                set s__ProgressBar_t_enabled[this]=false
            endif
        endfunction
        
    

//library ProgressBars ends
//library ShopSystem:

    
    
    

        
        //integer array items [11]
        
        
        function s__Shops_clearShop takes integer id returns nothing
            local integer i= 0
            local integer this= LoadInteger(ShopSystem__WhichShop, id, 0)
            loop
                call RemoveItemFromStock(ShopSystem__DummyShop[id], LoadInteger(s__Shops_items, this * 11 + i, 0))
                set i=i + 1
                exitwhen i > s__Shops_itemnum[this]
            endloop
        endfunction
        
        function s__Shops_changeItems takes nothing returns boolean
            local player p= GetOwningPlayer(GetBuyingUnit())
            local integer i= 0
            local integer this= LoadInteger(ShopSystem__ShopTable, GetItemTypeId(GetSoldItem()), 0)
            local integer id= GetPlayerId(p)
            if this == 0 then
                set p=null
                return false
            endif
            call s__Shops_clearShop(id)
            call SaveInteger(ShopSystem__WhichShop, id, 0, this)
            loop
                if not LoadBoolean(ShopSystem__ItemHash, id, LoadInteger(s__Shops_items, this * 11 + i, 0)) then
                    call AddItemToStock(ShopSystem__DummyShop[id], LoadInteger(s__Shops_items, this * 11 + i, 0), 1, 1)
                endif
                set i=i + 1
                exitwhen i == s__Shops_itemnum[this]
            endloop
            set p=null
            return false
        endfunction
        
        function s__Shops_forceChangeItems takes integer baseItem,integer id returns boolean
            local integer i= 0
            local integer this= LoadInteger(ShopSystem__ShopTable, baseItem, 0)
            call s__Shops_clearShop(id)
            call SaveInteger(ShopSystem__WhichShop, id, 0, this)
            loop
                if not LoadBoolean(ShopSystem__ItemHash, id, LoadInteger(s__Shops_items, this * 11 + i, 0)) then
                    call AddItemToStock(ShopSystem__DummyShop[id], LoadInteger(s__Shops_items, this * 11 + i, 0), 1, 1)
                endif
                set i=i + 1
                exitwhen i == s__Shops_itemnum[this]
            endloop
            return false
        endfunction
        
        function s__Shops_addItemLink takes integer itemBaseId,integer itemAddId returns nothing
            local integer this= LoadInteger(ShopSystem__ShopTable, itemBaseId, 0)
            if s__Shops_itemnum[this] < 11 then
                call SaveInteger(s__Shops_items, this * 11 + s__Shops_itemnum[this], 0, itemAddId)
                set s__Shops_itemnum[this]=s__Shops_itemnum[this] + 1
            else
            endif
        endfunction
        
        function s__Shops_removeItem takes integer baseItemId,integer itemId returns nothing
            local integer this= LoadInteger(ShopSystem__ShopTable, baseItemId, 0)
            local integer i= 0
            loop
                if LoadInteger(s__Shops_items, this * 11 + i, 0) == itemId then
                    set s__Shops_itemnum[this]=s__Shops_itemnum[this] - 1
                    call SaveInteger(s__Shops_items, this * 11 + i, 0, LoadInteger(s__Shops_items, this * 11 + s__Shops_itemnum[this], 0))
                    return
                endif
                set i=i + 1
                exitwhen i == s__Shops_itemnum[this]
            endloop
        endfunction
        
        function s__Shops_duplicate takes integer baseItemId,integer itemId returns nothing
            local integer base=  LoadInteger(ShopSystem__ShopTable, baseItemId, 0)
            local integer that
            local integer i= 0
            if ( s__Shops_recycle == 0 ) then
                set s__Shops_instanceCount=s__Shops_instanceCount + 1
                set that=s__Shops_instanceCount
            else
                set that=s__Shops_recycle
                set s__Shops_recycle=s__Shops_recycleNext[s__Shops_recycle]
            endif
            call SaveInteger(ShopSystem__ShopTable, itemId, 0, that)
            set s__Shops_itemnum[that]=s__Shops_itemnum[base]
            loop
                call SaveInteger(s__Shops_items, that * 11 + i, 0, LoadInteger(s__Shops_items, base * 11 + i, 0))
                set i=i + 1
                exitwhen i == s__Shops_itemnum[base]
            endloop
        endfunction
        
        function s__Shops_register takes integer itemId returns nothing
            local integer this
            if ( s__Shops_recycle == 0 ) then
                set s__Shops_instanceCount=s__Shops_instanceCount + 1
                set this=s__Shops_instanceCount
            else
                set this=s__Shops_recycle
                set s__Shops_recycle=s__Shops_recycleNext[s__Shops_recycle]
            endif
            call SaveInteger(ShopSystem__ShopTable, itemId, 0, this)
        endfunction
        
//Implemented from module ShopSystem__init:
        function s__Shops_onInit takes nothing returns nothing
            local integer i= 0
            //set ShopTable = Table.create()
            //set WhichShop = Table.create()
            //set MainShop = Table.create()
            set s__Shops_items=InitHashtable()
            call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED , function sc__MainShops_selectShop)
            call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL_ITEM , function s__Shops_changeItems)
            loop
                if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING then
                    set ShopSystem__DummyShop[i]=CreateUnit(Player(i), ShopSystem__DUMMY_SHOP_ID, 0.0, 0.0, 0.0)
                    // I make the player own it because if not and they are not visible to the player
                    // the selection action actually runs before the dummy gets moved so the selection becomes empty
                    set ShopSystem__CanShop[i]=true
                endif
                set i=i + 1
                exitwhen i > 11
            endloop
        endfunction
    
        
        
        
        function s__MainShops_selectShop takes nothing returns boolean
            local unit u= GetTriggerUnit()
            local integer this= LoadInteger(ShopSystem__MainShop, GetHandleId(u), 0)
            local player p= GetTriggerPlayer()
            local integer id= GetPlayerId(p)
            if this == 0 or not ShopSystem__CanShop[id] then
                set p=null
                return false
            endif
            // If you click the portait, it will still point your camera towards the main shop
            call SetUnitX(ShopSystem__DummyShop[id], GetUnitX(u))
            call SetUnitY(ShopSystem__DummyShop[id], GetUnitY(u))
            call s__Shops_forceChangeItems(s__MainShops_baseItem[this] , id)
            if GetLocalPlayer() == p then
                call ClearSelection()
                call SelectUnit(ShopSystem__DummyShop[id], true)
            endif
            
            set u=null
            return false
        endfunction
        
        function s__MainShops_register takes unit shop,integer baseItem returns nothing
            local integer this
            
            if ( s__MainShops_recycle == 0 ) then
                set s__MainShops_instanceCount=s__MainShops_instanceCount + 1
                set this=s__MainShops_instanceCount
            else
                set this=s__MainShops_recycle
                set s__MainShops_recycle=s__MainShops_recycleNext[s__MainShops_recycle]
            endif
            
            call SaveInteger(ShopSystem__MainShop, GetHandleId(shop), 0, this)
            set s__MainShops_baseItem[this]=baseItem
        endfunction
        
    
    function shopAvailableForPlayer takes player p,boolean what returns nothing
        set ShopSystem__CanShop[GetPlayerId(p)]=what
    endfunction
    
    function shopAvailableForPlayerId takes integer id,boolean what returns nothing
        set ShopSystem__CanShop[id]=what
    endfunction
    
    function itemAvailableForPlayer takes integer itemid,player p,boolean what returns nothing
        call SaveBoolean(ShopSystem__ItemHash, GetPlayerId(p), itemid, not what)
    endfunction
    
    function itemAvailableForPlayerId takes integer itemid,integer id,boolean what returns nothing
        call SaveBoolean(ShopSystem__ItemHash, id, itemid, not what)
    endfunction
    

//library ShopSystem ends
//library SpellEffectEvent:
 
//============================================================================
 
//============================================================================
//Implemented from module SpellEffectEvent__M:
    




    
    function s__SpellEffectEvent__S_onCast takes nothing returns nothing



            call TriggerEvaluate(LoadTriggerHandle(s__SpellEffectEvent__S_ht, 0, GetSpellAbilityId()))

    endfunction
 
    function s__SpellEffectEvent__S_SpellEffectEvent__M___onInit takes nothing returns nothing



        call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT , function s__SpellEffectEvent__S_onCast)
    endfunction
 
//============================================================================
function RegisterSpellEffectEvent takes integer abil,code onCast returns nothing






        if not HaveSavedHandle(s__SpellEffectEvent__S_ht, 0, abil) then
            call SaveTriggerHandle(s__SpellEffectEvent__S_ht, 0, abil, CreateTrigger())
        endif
        call TriggerAddCondition(LoadTriggerHandle(s__SpellEffectEvent__S_ht, 0, abil), Filter(onCast))

endfunction
 

//library SpellEffectEvent ends
//library SpiderPoison:




        function s__SpiderPoison__SP_destroy takes integer this returns nothing
        set s__SpiderPoison__SP_c[this]=null
	set s__SpiderPoison__SP_t[this]=null
	call DestroyEffect(s__SpiderPoison__SP_fx[this])
	set s__SpiderPoison__SP_fx[this]=null

        call s__SpiderPoison__SP_deallocate(this)
        endfunction

function SpiderPoison__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__SpiderPoison__SP_i[data] <= 0 then

call ReleaseTimer(t)
call s__SpiderPoison__SP_destroy(data)

else

call UnitDamageTarget(s__SpiderPoison__SP_c[data], s__SpiderPoison__SP_t[data], 100., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)

set s__SpiderPoison__SP_i[data]=s__SpiderPoison__SP_i[data] - 1

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1., false, function SpiderPoison__Handler)

endif


set t=null
endfunction

function SpiderPoison_PoisonUnit takes unit c,unit tar returns nothing
local integer data= s__SpiderPoison__SP__allocate()
local timer t= (NewTimerEx(0)) // INLINED!!

set s__SpiderPoison__SP_c[data]=c
set s__SpiderPoison__SP_t[data]=tar
set s__SpiderPoison__SP_fx[data]=AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\CorrosiveBreath\\ChimaeraAcidTargetArt.mdl", s__SpiderPoison__SP_t[data], "chest")
set s__SpiderPoison__SP_i[data]=5

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 01, false, function SpiderPoison__Handler)

set t=null
endfunction



//library SpiderPoison ends
//library Roflcopter:

    //Configurables and whatnot
    
    constant function Roflcopter__DAMAGE takes unit caster,integer lvl returns real
        return lvl * 888. //Damage dependency of level.
        //You can also make damage depend on caster's stats by refering to unit variable 'caster'
    endfunction
    
    constant function Roflcopter__TRAVEL_LENGTH takes integer lvl returns real
        return 1400. //How long does roflcopter fly
    endfunction
    
    constant function Roflcopter__BOMB_PERIOD takes integer lvl returns real
        return 0.5 //How often will roflcopter throw bombs
    endfunction
    
    constant function Roflcopter__BOMB_AOE takes integer lvl returns real
        return 200. //Area of effect for bomb explosion
    endfunction
    
    constant function Roflcopter__ROFLCOPTER_SPEED takes integer lvl returns real
        return 7. //Movement speed or roflcopter
    endfunction
    
    constant function Roflcopter__BOMB_SPEED takes integer lvl returns real
        return 7. //Fall speed of bombs
    endfunction
    
    function Roflcopter__FILTER takes unit caster,unit target,integer lvl returns boolean
 local integer i= GetRandomInt(0, 99)
        //Filters which units will be damaged on explosion
	if i <= 9 then
	return UnitAlive(target)
	else
        return IsPlayerEnemy(GetOwningPlayer(caster), GetOwningPlayer(target))
	endif
 
        //and IsUnitType(target,UNIT_TYPE_GROUND) 
        //and not IsUnitType(target,UNIT_TYPE_DEAD)
    endfunction
    
    function Roflcopter__EFFECTS takes unit caster,unit target,real x,real y,real z,integer lvl returns nothing
        //You can add here anything you want to happen on explosion given the above arguments
        //For example, you can set damaged targets on fire with a spell casted by dummy or something
    endfunction
    
    //Don't change stuff below
    //===================================================================
    
    
    
        function s__Roflcopter__instance_add takes integer this returns nothing
            set s__Roflcopter__instance_n[this]=s__Roflcopter__instance_n[this] + 1
        endfunction
        
        function s__Roflcopter__instance_sub takes integer this returns nothing
            set s__Roflcopter__instance_n[this]=s__Roflcopter__instance_n[this] - 1
            if s__Roflcopter__instance_n[this] == 0 then
                call s__Roflcopter__instance_deallocate(this)
            endif
        endfunction
    
        function s__Roflcopter__instance_create takes unit u,real x,real y returns integer
            local integer this= s__Roflcopter__instance__allocate()
            local integer l= GetUnitAbilityLevel(u, Roflcopter__SPELL_RAW)
            set s__Roflcopter__instance_u[this]=u
            set s__Roflcopter__instance_bs[this]=Roflcopter__BOMB_SPEED(l)
            set s__Roflcopter__instance_rs[this]=Roflcopter__ROFLCOPTER_SPEED(l)
            set s__Roflcopter__instance_d[this]=Roflcopter__DAMAGE(u , l)
            set s__Roflcopter__instance_a[this]=Roflcopter__BOMB_AOE(l)
            set s__Roflcopter__instance_lv[this]=l
            call sc__Roflcopter__roflcopter_create(this , x , y , Roflcopter__TRAVEL_LENGTH(l) , Roflcopter__BOMB_PERIOD(l))
            return this
        endfunction
    
    
    
        
        function s__Roflcopter__roflcopter_execute takes integer this returns nothing
            set s__Roflcopter__roflcopter_x[this]=s__Roflcopter__roflcopter_x[this] + s__Roflcopter__instance_rs[s__Roflcopter__roflcopter_i[this]] * Cos(s__Roflcopter__roflcopter_a[this])
            set s__Roflcopter__roflcopter_y[this]=s__Roflcopter__roflcopter_y[this] + s__Roflcopter__instance_rs[s__Roflcopter__roflcopter_i[this]] * Sin(s__Roflcopter__roflcopter_a[this])
            call SetTextTagPos(s__Roflcopter__roflcopter_t[this], s__Roflcopter__roflcopter_x[this] - Roflcopter__DEVIATION, s__Roflcopter__roflcopter_y[this], Roflcopter__HEIGHT)
            set s__Roflcopter__roflcopter_l[this]=s__Roflcopter__roflcopter_l[this] - s__Roflcopter__instance_rs[s__Roflcopter__roflcopter_i[this]]
            if s__Roflcopter__roflcopter_l[this] <= 0 then
                call sc__Roflcopter__roflcopter_destroy(this)
            endif
        endfunction
    
//Implemented from module II:
        
        function s__Roflcopter__roflcopter_start takes integer this returns boolean
            if not s__Roflcopter__roflcopter_II___b[this] then
                if II__C == 0 then
                    call TimerStart(II__l, 0.031250000, true, function II__e) //ResumeTimer() doesn't seem to work on a looping timer
                endif
                set II__C=II__C + 1
                set s__Roflcopter__roflcopter_II___c=s__Roflcopter__roflcopter_II___c + 1
                set s__Roflcopter__roflcopter_II___I[s__Roflcopter__roflcopter_II___c]=this
                set s__Roflcopter__roflcopter_II___i[this]=s__Roflcopter__roflcopter_II___c
                set s__Roflcopter__roflcopter_II___b[this]=true
                return true
            endif
            return false
        endfunction
        
        function s__Roflcopter__roflcopter_end takes integer this returns boolean
            if s__Roflcopter__roflcopter_II___b[this] then
                set II__C=II__C - 1
                if II__C == 0 then
                    call PauseTimer(II__l)
                elseif s__Roflcopter__roflcopter_II___i[this] != s__Roflcopter__roflcopter_II___c then //If the instance is not last in the array, the last one is moved to it's position
                    set s__Roflcopter__roflcopter_II___I[s__Roflcopter__roflcopter_II___i[this]]=s__Roflcopter__roflcopter_II___I[s__Roflcopter__roflcopter_II___c]
                    set s__Roflcopter__roflcopter_II___i[s__Roflcopter__roflcopter_II___I[s__Roflcopter__roflcopter_II___i[this]]]=s__Roflcopter__roflcopter_II___i[this]
                endif
                set s__Roflcopter__roflcopter_II___c=s__Roflcopter__roflcopter_II___c - 1
                set s__Roflcopter__roflcopter_II___b[this]=false
                return true
            endif
            return false
        endfunction
    
        function s__Roflcopter__roflcopter_II___p takes nothing returns boolean
            local integer n=s__Roflcopter__roflcopter_II___c
            loop
                exitwhen n == 0
                call s__Roflcopter__roflcopter_execute(s__Roflcopter__roflcopter_II___I[n])
                set n=n - 1
            endloop
            return false
        endfunction
        
        function s__Roflcopter__roflcopter_II___onInit takes nothing returns nothing
            call TriggerAddCondition(II__t, Condition(function s__Roflcopter__roflcopter_II___p))
        endfunction
    
        
        function s__Roflcopter__roflcopter_bombdrop takes nothing returns nothing
            local integer this= ((LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer()))))) // INLINED!!
            call sc__Roflcopter__bomb_create(s__Roflcopter__roflcopter_i[this] , s__Roflcopter__roflcopter_x[this] , s__Roflcopter__roflcopter_y[this] , Roflcopter__HEIGHT)
        endfunction
        
        function s__Roflcopter__roflcopter_spin takes nothing returns nothing
            local integer this= ((LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer()))))) // INLINED!!
            if s__Roflcopter__roflcopter_p[this] == 1 then
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R2, 0.0184)
                set s__Roflcopter__roflcopter_p[this]=2
            elseif s__Roflcopter__roflcopter_p[this] == 2 then
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R1, 0.0184)
                set s__Roflcopter__roflcopter_p[this]=1
            elseif s__Roflcopter__roflcopter_p[this] == 3 then
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R4, 0.0184)
                set s__Roflcopter__roflcopter_p[this]=4
            else
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R3, 0.0184)
                set s__Roflcopter__roflcopter_p[this]=3
            endif
        endfunction
    
        function s__Roflcopter__roflcopter_create takes integer i,real x,real y,real l,real p returns integer
            local integer this= s__Roflcopter__roflcopter__allocate()
            local real a= Atan2(y - GetUnitY(s__Roflcopter__instance_u[i]), x - GetUnitX(s__Roflcopter__instance_u[i]))
            if a < 0 then
                set a=2 * bj_PI + a
            endif
            set s__Roflcopter__roflcopter_i[this]=i
            set s__Roflcopter__roflcopter_l[this]=l
            set s__Roflcopter__roflcopter_a[this]=a + bj_PI / 2
            set s__Roflcopter__roflcopter_bp[this]=(NewTimerEx(0)) // INLINED!!
            call TimerStart(s__Roflcopter__roflcopter_bp[this], p, true, function s__Roflcopter__roflcopter_bombdrop)
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__Roflcopter__roflcopter_bp[this] )), ( this)) // INLINED!!
            set s__Roflcopter__roflcopter_sp[this]=(NewTimerEx(0)) // INLINED!!
            call TimerStart(s__Roflcopter__roflcopter_sp[this], Roflcopter__SPIN_PERIOD, true, function s__Roflcopter__roflcopter_spin)
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__Roflcopter__roflcopter_sp[this] )), ( this)) // INLINED!!
            call SetTextTagPermanent(s__Roflcopter__roflcopter_t[this], false)
            call SetTextTagVisibility(s__Roflcopter__roflcopter_t[this], true)
            set s__Roflcopter__roflcopter_x[this]=x + l / 2 * Cos(a - bj_PI / 2) - Roflcopter__DEVIATION
            set s__Roflcopter__roflcopter_y[this]=y + Roflcopter__TRAVEL_LENGTH(i) / 2 * Sin(a - bj_PI / 2)
            call SetTextTagPos(s__Roflcopter__roflcopter_t[this], s__Roflcopter__roflcopter_x[this], s__Roflcopter__roflcopter_y[this], Roflcopter__HEIGHT)
            if a < bj_PI then
                set s__Roflcopter__roflcopter_p[this]=1
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R1, 0.0184)
            else
                set s__Roflcopter__roflcopter_p[this]=3
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R3, 0.0184)
            endif
            call s__Roflcopter__roflcopter_start(this)
            call s__Roflcopter__instance_add(s__Roflcopter__roflcopter_i[this])
            return this
        endfunction
        
        function s__Roflcopter__roflcopter_destroy takes integer this returns nothing
            call DestroyTextTag(s__Roflcopter__roflcopter_t[this])
            call ReleaseTimer(s__Roflcopter__roflcopter_bp[this])
            call ReleaseTimer(s__Roflcopter__roflcopter_sp[this])
            call s__Roflcopter__roflcopter_end(this)
            call s__Roflcopter__instance_sub(s__Roflcopter__roflcopter_i[this])
            call s__Roflcopter__roflcopter_deallocate(this)
        endfunction
    
    
        
        function s__Roflcopter__bomb_execute takes integer this returns nothing
            set s__Roflcopter__bomb_h[this]=s__Roflcopter__bomb_h[this] - s__Roflcopter__instance_bs[s__Roflcopter__bomb_i[this]]
            call SetTextTagPos(s__Roflcopter__bomb_t[this], s__Roflcopter__bomb_x[this], s__Roflcopter__bomb_y[this], s__Roflcopter__bomb_h[this])
            if s__Roflcopter__bomb_h[this] <= 3.00 then
                call sc__Roflcopter__bomb_destroy(this)
            endif
        endfunction
        
//Implemented from module II:
        
        function s__Roflcopter__bomb_start takes integer this returns boolean
            if not s__Roflcopter__bomb_II___b[this] then
                if II__C == 0 then
                    call TimerStart(II__l, 0.031250000, true, function II__e) //ResumeTimer() doesn't seem to work on a looping timer
                endif
                set II__C=II__C + 1
                set s__Roflcopter__bomb_II___c=s__Roflcopter__bomb_II___c + 1
                set s__Roflcopter__bomb_II___I[s__Roflcopter__bomb_II___c]=this
                set s__Roflcopter__bomb_II___i[this]=s__Roflcopter__bomb_II___c
                set s__Roflcopter__bomb_II___b[this]=true
                return true
            endif
            return false
        endfunction
        
        function s__Roflcopter__bomb_end takes integer this returns boolean
            if s__Roflcopter__bomb_II___b[this] then
                set II__C=II__C - 1
                if II__C == 0 then
                    call PauseTimer(II__l)
                elseif s__Roflcopter__bomb_II___i[this] != s__Roflcopter__bomb_II___c then //If the instance is not last in the array, the last one is moved to it's position
                    set s__Roflcopter__bomb_II___I[s__Roflcopter__bomb_II___i[this]]=s__Roflcopter__bomb_II___I[s__Roflcopter__bomb_II___c]
                    set s__Roflcopter__bomb_II___i[s__Roflcopter__bomb_II___I[s__Roflcopter__bomb_II___i[this]]]=s__Roflcopter__bomb_II___i[this]
                endif
                set s__Roflcopter__bomb_II___c=s__Roflcopter__bomb_II___c - 1
                set s__Roflcopter__bomb_II___b[this]=false
                return true
            endif
            return false
        endfunction
    
        function s__Roflcopter__bomb_II___p takes nothing returns boolean
            local integer n=s__Roflcopter__bomb_II___c
            loop
                exitwhen n == 0
                call s__Roflcopter__bomb_execute(s__Roflcopter__bomb_II___I[n])
                set n=n - 1
            endloop
            return false
        endfunction
        
        function s__Roflcopter__bomb_II___onInit takes nothing returns nothing
            call TriggerAddCondition(II__t, Condition(function s__Roflcopter__bomb_II___p))
        endfunction
    
        
        function s__Roflcopter__bomb_create takes integer i,real x,real y,real h returns integer
            local integer this= s__Roflcopter__bomb__allocate()
            set s__Roflcopter__bomb_i[this]=i
            set s__Roflcopter__bomb_x[this]=x
            set s__Roflcopter__bomb_y[this]=y
            set s__Roflcopter__bomb_h[this]=h
            call SetTextTagPermanent(s__Roflcopter__bomb_t[this], false)
            call SetTextTagVisibility(s__Roflcopter__bomb_t[this], true)
            call SetTextTagPos(s__Roflcopter__bomb_t[this], x, y, h)
            call SetTextTagText(s__Roflcopter__bomb_t[this], "*", 0.04)
            call s__Roflcopter__bomb_start(this)
            call s__Roflcopter__instance_add(s__Roflcopter__bomb_i[this])
            return this
        endfunction
        
        function s__Roflcopter__bomb_explosion takes nothing returns boolean
            local integer this= s__Roflcopter__bomb_This
            local unit u= GetFilterUnit()
            local real x
            local real y
            local real z
            local real z2
            if Roflcopter__FILTER(s__Roflcopter__instance_u[s__Roflcopter__bomb_i[this]] , u , s__Roflcopter__instance_lv[s__Roflcopter__bomb_i[this]]) then
                set x=GetUnitX(u) - s__Roflcopter__bomb_x[this]
                set y=GetUnitY(u) - s__Roflcopter__bomb_y[this]
                set z2=GetZ(s__Roflcopter__bomb_x[this] , s__Roflcopter__bomb_y[this]) + s__Roflcopter__bomb_h[this]
                set z=GetUnitZ(u) - z2
                if x * x + y * y + z * z <= s__Roflcopter__instance_a[s__Roflcopter__bomb_i[this]] * s__Roflcopter__instance_a[s__Roflcopter__bomb_i[this]] then
                    call UnitDamageTarget(s__Roflcopter__instance_u[s__Roflcopter__bomb_i[this]], u, s__Roflcopter__instance_d[s__Roflcopter__bomb_i[this]], false, false, Roflcopter__ATTACK_TYPE, Roflcopter__DAMAGE_TYPE, Roflcopter__WEAPON_TYPE)
                    call Roflcopter__EFFECTS(s__Roflcopter__instance_u[s__Roflcopter__bomb_i[this]] , u , s__Roflcopter__bomb_x[this] , s__Roflcopter__bomb_y[this] , z2 , s__Roflcopter__instance_lv[s__Roflcopter__bomb_i[this]])
                endif
            endif
            set u=null
            return false
        endfunction
        
        function s__Roflcopter__bomb_destroy takes integer this returns nothing
            call DestroyTextTag(s__Roflcopter__bomb_t[this])
            call DestroyEffect(AddSpecialEffect(Roflcopter__EXPLOSION_EFFECT, s__Roflcopter__bomb_x[this], s__Roflcopter__bomb_y[this]))
            set s__Roflcopter__bomb_This=this
            call GroupEnumUnitsInRange(s__Roflcopter__bomb_g, s__Roflcopter__bomb_x[this], s__Roflcopter__bomb_y[this], s__Roflcopter__instance_a[s__Roflcopter__bomb_i[this]], Filter(function s__Roflcopter__bomb_explosion))
            call s__Roflcopter__bomb_end(this)
            call s__Roflcopter__instance_sub(s__Roflcopter__bomb_i[this])
            call s__Roflcopter__bomb_deallocate(this)
        endfunction
        
    
    function Roflcopter_ROFL_Cast takes unit u,real x,real y returns nothing
        call s__Roflcopter__instance_create(u , x , y)
    endfunction
    


//library Roflcopter ends
//library Sample:
    
    
    
    function Sample__create takes nothing returns nothing
        // Create the shop on top
        local unit shop= CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'n01C', 6458, - 3100, 270.0)
        
        call s__MainShops_register(shop , 'I03G')
        
        set shop=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'n01C', - 6400, - 3100, 270.0)
        
        call s__MainShops_register(shop , 'I03G')
        
        call s__Shops_register('I03G') //Main Shop
        
        call s__Shops_addItemLink('I03G' , 'I03I') // Weapons
        call s__Shops_addItemLink('I03G' , 'I03J') // Defensive Items
        call s__Shops_addItemLink('I03G' , 'I03L') //Trinkets
        call s__Shops_addItemLink('I03G' , 'I03K') //Boots
        call s__Shops_addItemLink('I03G' , 'I03M') //Misc
        // Now it's time to register those two items too
        call s__Shops_register('I03I') //Weapons
        call s__Shops_register('I03J') //Defensive IOtems
        call s__Shops_register('I03L') //Trinkets
        call s__Shops_register('I03K') //Boots
        call s__Shops_register('I03M') //Miscel
        // Now we will register items to I002 first since we will no longer have any category below potions
        //call Shops.addItemLink('I03M', 'I03C') //Potion of Mana
        call s__Shops_addItemLink('I03M' , 'I03D') //Misc,Daedalus

	call s__Shops_addItemLink('I03M' , 'I04Y') //Misc,Shining Daedalus

        call s__Shops_addItemLink('I03M' , 'I03E') //Misc,Night's Veil
	call s__Shops_addItemLink('I03M' , 'I04H') //Misc, Demonic Heart
	call s__Shops_addItemLink('I03M' , 'I04N') //Misc,Demonic Eye
	call s__Shops_addItemLink('I03M' , 'I04Q') //Misc,Demonic Hand
        
        call s__Shops_addItemLink('I03K' , 'I01S') //Boots,Supreme Elven Boots
        call s__Shops_addItemLink('I03K' , 'I01T')
        call s__Shops_addItemLink('I03K' , 'I000')
        call s__Shops_addItemLink('I03K' , 'I01U')
	call s__Shops_addItemLink('I03K' , 'I04I')
        // Now we setup another set of links with the equipments category
        call s__Shops_addItemLink('I03I' , 'I03N') //Weapons
        call s__Shops_addItemLink('I03I' , 'I03O') //Armor
        call s__Shops_addItemLink('I03I' , 'I03P')
        call s__Shops_addItemLink('I03I' , 'I03Q')
        
        call s__Shops_addItemLink('I03J' , 'I03T')
        call s__Shops_addItemLink('I03J' , 'I03U')
        
        call s__Shops_addItemLink('I03L' , 'I03R')
        call s__Shops_addItemLink('I03L' , 'I03S')
        
        call s__Shops_register('I03N') //Weapons
        call s__Shops_register('I03O') //Armor
        call s__Shops_register('I03P')
        call s__Shops_register('I03Q')
        call s__Shops_register('I03T')
        call s__Shops_register('I03U')
        call s__Shops_register('I03R')
        call s__Shops_register('I03S')
        // Now we link items to the weapons category
        call s__Shops_addItemLink('I03N' , 'I023') //Standard Weapons
        call s__Shops_addItemLink('I03N' , 'I01L')
        call s__Shops_addItemLink('I03N' , 'I01X')
        call s__Shops_addItemLink('I03N' , 'I041')
	call s__Shops_addItemLink('I03N' , 'I04A')
	call s__Shops_addItemLink('I03N' , 'I036')
	call s__Shops_addItemLink('I03N' , 'I048')
	call s__Shops_addItemLink('I03N' , 'I03V')
        
        call s__Shops_addItemLink('I03O' , 'I00W') //Melee weapons
        call s__Shops_addItemLink('I03O' , 'I01N')
        call s__Shops_addItemLink('I03O' , 'I02A')
        call s__Shops_addItemLink('I03O' , 'I02W')
        call s__Shops_addItemLink('I03O' , 'I038')
        call s__Shops_addItemLink('I03O' , 'I02U')
        call s__Shops_addItemLink('I03O' , 'I02V')
	call s__Shops_addItemLink('I03O' , 'I04R') //Demonic Mutilator
	call s__Shops_addItemLink('I03O' , 'I04W') //True Mutilator
        
		call s__Shops_addItemLink('I03P' , 'I02C') //Agility Weapons
		call s__Shops_addItemLink('I03P' , 'I02G')
		call s__Shops_addItemLink('I03P' , 'I02E')
		call s__Shops_addItemLink('I03P' , 'I04B')
		call s__Shops_addItemLink('I03P' , 'I04C')
        call s__Shops_addItemLink('I03P' , 'I02M')
        call s__Shops_addItemLink('I03P' , 'I02N')
        call s__Shops_addItemLink('I03P' , 'I02O')
	call s__Shops_addItemLink('I03P' , 'I04U')
	call s__Shops_addItemLink('I03P' , 'I04V')
        
        call s__Shops_addItemLink('I03Q' , 'I020') //Caster Weapons
        call s__Shops_addItemLink('I03Q' , 'I029')
        call s__Shops_addItemLink('I03Q' , 'I02Y')
        call s__Shops_addItemLink('I03Q' , 'I037')
        call s__Shops_addItemLink('I03Q' , 'I027')
        call s__Shops_addItemLink('I03Q' , 'I045')
        call s__Shops_addItemLink('I03Q' , 'I032')
        call s__Shops_addItemLink('I03Q' , 'I03F')
        call s__Shops_addItemLink('I03Q' , 'I040')
	call s__Shops_addItemLink('I03Q' , 'I04T')
        
        call s__Shops_addItemLink('I03U' , 'I02H') //Armors
        call s__Shops_addItemLink('I03U' , 'I02I')
        call s__Shops_addItemLink('I03U' , 'I02J')
        call s__Shops_addItemLink('I03U' , 'I02K')
	call s__Shops_addItemLink('I03U' , 'I04O') //Demon Carapace
        call s__Shops_addItemLink('I03U' , 'I04P') //Demon Vessel

        call s__Shops_addItemLink('I03T' , 'I01Z')
        call s__Shops_addItemLink('I03T' , 'I02R')
        call s__Shops_addItemLink('I03T' , 'I02T')
        call s__Shops_addItemLink('I03T' , 'I02Z')
        
        call s__Shops_addItemLink('I03R' , 'I01V')
        call s__Shops_addItemLink('I03R' , 'I01W')
        call s__Shops_addItemLink('I03R' , 'I012')
        call s__Shops_addItemLink('I03R' , 'I01Q')
        call s__Shops_addItemLink('I03R' , 'I01R')
        
        call s__Shops_addItemLink('I03S' , 'I02D')
        call s__Shops_addItemLink('I03S' , 'I02F')
        call s__Shops_addItemLink('I03S' , 'I03B')
	call s__Shops_addItemLink('I03S' , 'I049')
        call s__Shops_addItemLink('I03S' , 'I039')
        call s__Shops_addItemLink('I03S' , 'I030')
        call s__Shops_addItemLink('I03S' , 'I02S')
        
        //call itemAvailableForPlayerId('ofir', 0, false) we disable selling of Orb of fire for Player Red
        // Now we link items to the armor category
        // Now we will create a return to upper category button for the weapons category
        call s__Shops_duplicate('I03G' , 'I04J') //Return,Main
	call s__Shops_addItemLink('I03M' , 'I04J') //Misc, Return
call s__Shops_addItemLink('I03K' , 'I04J') //Boots, Return
call s__Shops_addItemLink('I03I' , 'I04J') //Weapons, Return to Main
call s__Shops_addItemLink('I03L' , 'I04J') //Trinkets, Return to Main
call s__Shops_addItemLink('I03J' , 'I04J') //Defensive Items, Return to Main


call s__Shops_duplicate('I03I' , 'I04K') //Return, to Weapons Category 
call s__Shops_addItemLink('I03Q' , 'I04K') //Caster Weapon Return
call s__Shops_addItemLink('I03P' , 'I04K') //Agility Weapon Return
call s__Shops_addItemLink('I03O' , 'I04K') //Melee Weapon Return
call s__Shops_addItemLink('I03N' , 'I04K') //Standard Weapon Return

call s__Shops_duplicate('I03J' , 'I04L') //Return, to Defensive Category 
call s__Shops_addItemLink('I03U' , 'I04L') //Armor Return
call s__Shops_addItemLink('I03T' , 'I04L') //Shields Return

call s__Shops_duplicate('I03L' , 'I04M') //Return, to Trinkets Category 
call s__Shops_addItemLink('I03R' , 'I04M') //Rings Return
call s__Shops_addItemLink('I03S' , 'I04M') //Crystals Return
        //call Shops.duplicate('I03O','I03H') //Armor
        //call Shops.duplicate('I03P','I03H') 
        //call Shops.duplicate('I03Q','I03H') 
        //call Shops.duplicate('I03T','I03H') 
        //call Shops.duplicate('I03U','I03H') 
        //call Shops.duplicate('I03R','I03H') 
        //call Shops.duplicate('I03I','I03H') //Equipments
        //call Shops.duplicate('I03J','I03H') //Potions
        //call Shops.duplicate('I03L','I03H')
        //call Shops.duplicate('I03M','I03H')
        //call Shops.duplicate('I03K','I03H')
        //call Shops.duplicate('I03Q','I03H')
        
        //call Shops.addItemLink('I03N','I03H') //Weapons
        //call Shops.addItemLink('I03O','I03H') //Armor
        //call Shops.addItemLink('I03P','I03H') 
        //call Shops.addItemLink('I03Q','I03H') 
        //call Shops.addItemLink('I03T','I03H') 
        //call Shops.addItemLink('I03U','I03H') 
        //call Shops.addItemLink('I03R','I03H') 
        //call Shops.addItemLink('I03Q','I03H')


        // the .duplicate method automatically registers the new item so no need to call .register
        // Upper category of weapons is equipments so we duplicate its instance into the upper category dummy
        //call Shops.addItemLink('I003', 'I03H') // Don't forget to link it to the weapons dummy
        // Now we will create another shop at the left which sells the items in the weapons category of our
        // previous shop.
        //set shop = CreateUnit(Player(15), 'n001', 93.4, -1430.0, 270.0)
        //call MainShops.register(shop, 'I006') 
        // We actually created a new dummy item since this shop cannot have the return to upper
        // category option since it sells the items from the weapons category directly
        // to easily do this:
        //call Shops.duplicate('I003', 'I006')  // we duplicate the weapons category
        //call Shops.removeItem('I006', 'I03H') // but remove the return to upper category item from the duplicated instance. 
        set shop=null
    endfunction
    
    function Sample__init takes nothing returns nothing
        call TimerStart(CreateTimer(), 0.00, false, function Sample__create)
    endfunction
    

//library Sample ends
//===========================================================================
// 
// |cffaa0000Enfo's FFB Edition v2.42d
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author:  Strikest#1504
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************


function InitGlobals takes nothing returns nothing
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//TESH.scrollpos=0
//TESH.alwaysfold=0

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: II
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//             Instance Iterator by Garfield1337

//    Iterates struct instances, for more info, check T32
    
//    Usage:
//    -Implement II module
//    -Add a method named "execute" above the module implementation that doesn't
//     take any arguments, this method will be called each iteration
//    -call start() method to start iterating an instance
//    -call end() method to stop

//===========================================================================
// Trigger: Z
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//===========================================================================
// Trigger: Roflcopter
//===========================================================================
//TESH.scrollpos=239
//TESH.alwaysfold=0
//===========================================================================
// Trigger: UnitInRect
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//===========================================================================
// Trigger: FearSystem
//===========================================================================
//TESH.scrollpos=53
//TESH.alwaysfold=0
//===========================================================================
// Trigger: ProgressBars v2 1
//
// v2.0.1
// - Added support for different types of progress bars (without recycling) via .createEx(integer unitId).
// - Properly nulled the timer handles.
// v2.0.0
// - beginProgression and everything associated with it has been removed. Use .setPercentage instead.
// - zOffset getter included.
// - xOffset and yOffset added.
// - show method now adds and removes locust to prevent it removing.
// -1.0.2
// Minor efficiency improvements
// freeDummies member renamed to lastDummyIndex
// -1.0.1
// Fixed a bug where the bar would fade out really slow on long durations.
// Removed unused parameters from the getDummy method.
// Removed UnitAddAbility and gave the dummy the ability directly.
// targetUnit operator now sets the position of the bar directly (fixes cosmetic bug)
// Changed onDestroy to destroy.
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
//===========================================================================
// Trigger: TimedLightning
//===========================================================================
//TESH.scrollpos=36
//TESH.alwaysfold=0



//===========================================================================
// Trigger: RegisterPlayerUnitEvent
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0



//===========================================================================
// Trigger: SpellEffectEvent
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//============================================================================
// SpellEffectEvent
// - Version 1.1.0.0
//
// API
// ---
//     RegisterSpellEffectEvent(integer abil, code onCast)
// 
// Requires
// --------
//     RegisterPlayerUnitEvent: hiveworkshop.com/forums/showthread.php?t=203338
// 
// Optional
// --------
//     Table: hiveworkshop.com/forums/showthread.php?t=188084
//
//===========================================================================
// Trigger: Init Some Stuff
//===========================================================================
// scope InitializeCitadelVariables begins

function InitializeCitadelVariables__OnInit takes nothing returns nothing
    local framehandle blackbox

    call BlzFrameSetVisible(BlzGetFrameByName("ConsoleUIBackdrop", 0), false) // Hide bottom black box
    set blackbox=BlzCreateFrameByType("BACKDROP", "", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0) // tiny black box behind portrait
    call BlzFrameSetSize(blackbox, 0.1, 0.15)
    call BlzFrameSetAbsPoint(blackbox, FRAMEPOINT_CENTER, 0.25, 0.05)
    call BlzFrameSetTexture(blackbox, "war3mapImported\\Black box.tga", 0, true)
    call BlzFrameSetLevel(blackbox, - 1)

set CitadelSpawnX[0]=- 6399.
set CitadelSpawnY[0]=- 1235.8
set CitadelSpawnX[1]=- 6385.7
set CitadelSpawnY[1]=- 1641.
set CitadelSpawnX[2]=- 6775.5
set CitadelSpawnY[2]=- 1555.8
set CitadelSpawnX[3]=- 5932.4
set CitadelSpawnY[3]=- 1516.6
set CitadelSpawnX[4]=- 6103.8
set CitadelSpawnY[4]=- 995.8
set CitadelSpawnX[5]=6421.0
set CitadelSpawnY[5]=- 1252.
set CitadelSpawnX[6]=6432.6
set CitadelSpawnY[6]=- 1699.2
set CitadelSpawnX[7]=6061.7
set CitadelSpawnY[7]=- 1451.1
set CitadelSpawnX[8]=6819.3
set CitadelSpawnY[8]=- 1475.9
set CitadelSpawnX[9]=6437.0
set CitadelSpawnY[9]=- 708.1

call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(0))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(1))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(2))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(3))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(4))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(5))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(6))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(7))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(8))
call SetPlayerAbilityAvailableBJ(false, 'A0KV', Player(9))


call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(0))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(1))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(2))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(3))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(4))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(5))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(6))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(7))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(8))
call SetPlayerAbilityAvailableBJ(false, 'A0LA', Player(9))



call SetPlayerTeam(Player(12), 0)
call SetPlayerTeam(Player(13), 1)



//call BJDebugMsg("This totally worked")
endfunction

// scope InitializeCitadelVariables ends
//===========================================================================
// Trigger: Is Terrain Walkable
//===========================================================================


 


//===========================================================================
// Trigger: NewBonus
//===========================================================================
//===========================================================================
// Trigger: NewBonusUtils
//===========================================================================
//===========================================================================
// Trigger: LSE vJASS
//===========================================================================
//===========================================================================
// Trigger: Item Set
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//===========================================================================
// Trigger: Restored Triggers
//===========================================================================
//TESH.scrollpos=26188
//TESH.alwaysfold=0



function CRE takes real CIE returns nothing
local real CAE
local real st=TimerGetElapsed(B6E)
if st <= 0 then
set B6E=CreateTimer()
call TimerStart(B6E, 1000000, false, null)
endif
if ( CIE > 0 ) then
loop
set CAE=CIE - TimerGetElapsed(B6E) + st
exitwhen CAE <= 0
if ( CAE > bj_POLLED_WAIT_SKIP_THRESHOLD ) then
call TriggerSleepAction(.1 * CAE)
else
call TriggerSleepAction(bj_POLLED_WAIT_INTERVAL)
endif
endloop
endif
endfunction
function CNE takes location CBE,real CCE,real CDE returns location
return Location(GetLocationX(CBE) + CCE * Cos(CDE * bj_DEGTORAD), GetLocationY(CBE) + CCE * Sin(CDE * bj_DEGTORAD))
endfunction
function CFE takes nothing returns boolean
local real dx=GetDestructableX(GetFilterDestructable()) - B8E
local real dy=GetDestructableY(GetFilterDestructable()) - B9E
return ( dx * dx + dy * dy <= bj_enumDestructableRadius )
endfunction
function CGE takes real CHE,location CJE,code CKE returns nothing
local rect r
if ( CHE >= 0 ) then
set B8E=GetLocationX(CJE)
set B9E=GetLocationY(CJE)
set bj_enumDestructableRadius=CHE * CHE
set r=Rect(B8E - CHE, B9E - CHE, B8E + CHE, B9E + CHE)
call EnumDestructablesInRect(r, filterEnumDestructablesInCircleBJ, CKE)
call RemoveRect(r)
set r=null
endif
endfunction
function CLE takes rect r,boolexpr CME returns group
set CVE=CreateGroup()
call GroupEnumUnitsInRect(CVE, r, CME)
call DestroyBoolExpr(CME)
return CVE
endfunction
function CPE takes rect r returns group
set CVE=CreateGroup()
call GroupEnumUnitsInRect(CVE, r, CXE)
return CVE
endfunction
function CQE takes real CHE,location CSE,boolexpr CME returns group
set CVE=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(CVE, CSE, CHE, CME)
return CVE
endfunction
function CTE takes real CHE,location CSE returns group
set CVE=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(CVE, CSE, CHE, CXE)
return CVE
endfunction
function CUE takes player CWE,boolexpr CME returns group
set CVE=CreateGroup()
call GroupEnumUnitsOfPlayer(CVE, CWE, CME)
call DestroyBoolExpr(CME)
return CVE
endfunction
function CountingAliveUnitsOfComputer takes nothing returns boolean
return UnitAlive(GetFilterUnit())
endfunction
function CYE takes player CWE returns group
set CVE=CreateGroup()
call GroupEnumUnitsOfPlayer(CVE, CWE, Filter(function CountingAliveUnitsOfComputer))
return CVE
endfunction
function CZE takes player CWE returns force
set CEE=CreateForce()
call ForceAddPlayer(CEE, CWE)
return CEE
endfunction
function C_E takes mapcontrol C0E returns force
local integer C1E
local player C2E
set CEE=CreateForce()
set C1E=0
loop
set C2E=Player(C1E)
if GetPlayerController(C2E) == C0E then
call ForceAddPlayer(CEE, C2E)
endif
set C1E=C1E + 1
exitwhen C1E == 16
endloop
return CEE
endfunction
function C3E takes player CWE returns force
set CEE=CreateForce()
call ForceEnumAllies(CEE, CWE, CXE)
return CEE
endfunction
function C4E takes boolexpr CME returns force
set CEE=CreateForce()
call ForceEnumPlayers(CEE, CME)
call DestroyBoolExpr(CME)
return CEE
endfunction

        
function C5E takes integer C6E,group C7E returns group
set bj_randomSubGroupGroup=CreateGroup()
set bj_randomSubGroupWant=C6E
set bj_randomSubGroupTotal=CountUnitsInGroup(C7E)
if ( bj_randomSubGroupWant <= 0 or bj_randomSubGroupTotal <= 0 ) then
return bj_randomSubGroupGroup
endif
set bj_randomSubGroupChance=I2R(bj_randomSubGroupWant) / I2R(bj_randomSubGroupTotal)
call ForGroup(C7E, function GetRandomSubGroupEnum)
return bj_randomSubGroupGroup
endfunction
function C8E takes player CWE,playercolor C9E,boolean DVE returns nothing
local group g
call SetPlayerColor(CWE, C9E)
if DVE then
set bj_setPlayerTargetColor=C9E
set g=CreateGroup()
call GroupEnumUnitsOfPlayer(g, CWE, CXE)
call ForGroup(g, function SetPlayerColorBJEnum)
call DestroyGroup(g)
set g=null
endif
endfunction
function DEE takes itemtype DXE,integer DOE returns nothing
local group g
set bj_stockPickedItemType=DXE
set bj_stockPickedItemLevel=DOE
set g=CreateGroup()
call GroupEnumUnitsOfType(g, "marketplace", CXE)
call ForGroup(g, function UpdateEachStockBuildingEnum)
call DestroyGroup(g)
set g=null
endfunction
function DRE takes nothing returns nothing
local integer pickedItemId
local itemtype DIE
local integer DAE=0
local integer DNE=0
local integer DOE
set DOE=1
loop
if ( bj_stockAllowedPermanent[DOE] ) then
set DNE=DNE + 1
if ( GetRandomInt(1, DNE) == 1 ) then
set DIE=ITEM_TYPE_PERMANENT
set DAE=DOE
endif
endif
if ( bj_stockAllowedCharged[DOE] ) then
set DNE=DNE + 1
if ( GetRandomInt(1, DNE) == 1 ) then
set DIE=ITEM_TYPE_CHARGED
set DAE=DOE
endif
endif
if ( bj_stockAllowedArtifact[DOE] ) then
set DNE=DNE + 1
if ( GetRandomInt(1, DNE) == 1 ) then
set DIE=ITEM_TYPE_ARTIFACT
set DAE=DOE
endif
endif
set DOE=DOE + 1
exitwhen DOE > 10
endloop
if ( DNE == 0 ) then
set DIE=null
return
endif
call DEE(DIE , DAE)
set DIE=null
endfunction
function DBE takes nothing returns nothing
call DRE()
call TimerStart(bj_stockUpdateTimer, bj_STOCK_RESTOCK_INTERVAL, true, function DRE)
endfunction
function DDE takes nothing returns boolean
return true
endfunction
function DJE takes integer i returns real
if ( i < 8191 ) then
return ICV[i]
elseif ( i < 16382 ) then
return INV[i - 8191]
else
return IBV[i - 16382]
endif
endfunction
function DKE takes integer i,real v returns nothing
if ( i < 8191 ) then
set ICV[i]=v
elseif ( i < 16382 ) then
set INV[i - 8191]=v
else
set IBV[i - 16382]=v
endif
endfunction
function DLE takes integer i returns real
if ( i < 8191 ) then
return IGV[i]
elseif ( i < 16382 ) then
return IDV[i - 8191]
else
return IFV[i - 16382]
endif
endfunction
function DME takes integer i,real v returns nothing
if ( i < 8191 ) then
set IGV[i]=v
elseif ( i < 16382 ) then
set IDV[i - 8191]=v
else
set IFV[i - 16382]=v
endif
endfunction
function DPE takes integer i returns real
if ( i < 8191 ) then
return IKV[i]
elseif ( i < 16382 ) then
return IHV[i - 8191]
else
return IJV[i - 16382]
endif
endfunction
function DQE takes integer i,real v returns nothing
if ( i < 8191 ) then
set IKV[i]=v
elseif ( i < 16382 ) then
set IHV[i - 8191]=v
else
set IJV[i - 16382]=v
endif
endfunction
function DSE takes integer i returns boolean
if ( i < 8191 ) then
return IPV[i]
elseif ( i < 16382 ) then
return ILV[i - 8191]
else
return IMV[i - 16382]
endif
endfunction
function DTE takes integer i,boolean v returns nothing
if ( i < 8191 ) then
set IPV[i]=v
elseif ( i < 16382 ) then
set ILV[i - 8191]=v
else
set IMV[i - 16382]=v
endif
endfunction
function DUE takes integer i returns real
if ( i < 8191 ) then
return ITV[i]
elseif ( i < 16382 ) then
return IQV[i - 8191]
else
return ISV[i - 16382]
endif
endfunction
function DWE takes integer i,real v returns nothing
if ( i < 8191 ) then
set ITV[i]=v
elseif ( i < 16382 ) then
set IQV[i - 8191]=v
else
set ISV[i - 16382]=v
endif
endfunction
function DYE takes integer i returns boolean
if ( i < 8191 ) then
return IYV[i]
elseif ( i < 16382 ) then
return IUV[i - 8191]
else
return IWV[i - 16382]
endif
endfunction
function DZE takes integer i,boolean v returns nothing
if ( i < 8191 ) then
set IYV[i]=v
elseif ( i < 16382 ) then
set IUV[i - 8191]=v
else
set IWV[i - 16382]=v
endif
endfunction
function D_E takes nothing returns integer
local integer D0E=ABE
if ( D0E != 0 ) then
set ABE=ADE[D0E]
else
set ACE=ACE + 1
set D0E=ACE
endif
if ( D0E > 8190 ) then
return 0
endif
set AGE[D0E]=0
set ADE[D0E]=- 1
return D0E
endfunction
function D1E takes nothing returns integer
local integer D0E=AOE
if ( D0E != 0 ) then
set AOE=AIE[D0E]
else
set ARE=ARE + 1
set D0E=ARE
endif
if ( D0E > 8190 ) then
return 0
endif
set AIE[D0E]=- 1
return D0E
endfunction
function D2E takes integer D0E returns nothing
if D0E == null then
return
elseif ( AIE[D0E] != - 1 ) then
return
endif
set AIE[D0E]=AOE
set AOE=D0E
endfunction
function D3E takes nothing returns integer
local integer D0E=I7E
if ( D0E != 0 ) then
set I7E=I9E[D0E]
else
set I8E=I8E + 1
set D0E=I8E
endif
if ( D0E > 8190 ) then
return 0
endif
set I9E[D0E]=- 1
return D0E
endfunction
function D4E takes integer D0E returns nothing
if D0E == null then
return
elseif ( I9E[D0E] != - 1 ) then
return
endif
set I9E[D0E]=I7E
set I7E=D0E
endfunction
function D5E takes nothing returns integer
local integer D0E=I1E
if ( D0E != 0 ) then
set I1E=I3E[D0E]
else
set I2E=I2E + 1
set D0E=I2E
endif
if ( D0E > 8190 ) then
return 0
endif
set I3E[D0E]=- 1
return D0E
endfunction
function D6E takes integer D0E returns nothing
if D0E == null then
return
elseif ( I3E[D0E] != - 1 ) then
return
endif
set I3E[D0E]=I1E
set I1E=D0E
endfunction
function D7E takes nothing returns integer
local integer D0E=ITE
if ( D0E != 0 ) then
set ITE=IWE[D0E]
else
set IUE=IUE + 1
set D0E=IUE
endif
if ( D0E > 8190 ) then
return 0
endif
set IWE[D0E]=- 1
return D0E
endfunction
function D8E takes integer D0E returns nothing
if D0E == null then
return
elseif ( IWE[D0E] != - 1 ) then
return
endif
set IWE[D0E]=ITE
set ITE=D0E
endfunction
function D9E takes nothing returns integer
local integer D0E=IKE
if ( D0E != 0 ) then
set IKE=IME[D0E]
else
set ILE=ILE + 1
set D0E=ILE
endif
if ( D0E > 8190 ) then
return 0
endif
set IME[D0E]=- 1
return D0E
endfunction
function FVE takes integer D0E returns nothing
if D0E == null then
return
elseif ( IME[D0E] != - 1 ) then
return
endif
set IME[D0E]=IKE
set IKE=D0E
endfunction
function FEE takes nothing returns integer
local integer D0E=IDE
if ( D0E != 0 ) then
set IDE=IGE[D0E]
else
set IFE=IFE + 1
set D0E=IFE
endif
if ( D0E > 8190 ) then
return 0
endif
set IGE[D0E]=- 1
return D0E
endfunction
function FXE takes integer D0E returns nothing
if D0E == null then
return
elseif ( IGE[D0E] != - 1 ) then
return
endif
set IGE[D0E]=IDE
set IDE=D0E
endfunction
function FOE takes nothing returns integer
local integer D0E=IIE
if ( D0E != 0 ) then
set IIE=INE[D0E]
else
set IAE=IAE + 1
set D0E=IAE
endif
if ( D0E > 8190 ) then
return 0
endif
set INE[D0E]=- 1
return D0E
endfunction
function FRE takes integer D0E returns nothing
if D0E == null then
return
elseif ( INE[D0E] != - 1 ) then
return
endif
set INE[D0E]=IIE
set IIE=D0E
endfunction
function FIE takes nothing returns integer
local integer D0E=IEE
if ( D0E != 0 ) then
set IEE=IOE[D0E]
else
set IXE=IXE + 1
set D0E=IXE
endif
if ( D0E > 8190 ) then
return 0
endif
set IOE[D0E]=- 1
return D0E
endfunction
function FAE takes integer D0E returns nothing
if D0E == null then
return
elseif ( IOE[D0E] != - 1 ) then
return
endif
set IOE[D0E]=IEE
set IEE=D0E
endfunction
function FNE takes nothing returns integer
local integer D0E=R6E
if ( D0E != 0 ) then
set R6E=R8E[D0E]
else
set R7E=R7E + 1
set D0E=R7E
endif
if ( D0E > 8190 ) then
return 0
endif
set R8E[D0E]=- 1
return D0E
endfunction
function FBE takes integer D0E returns nothing
if D0E == null then
return
elseif ( R8E[D0E] != - 1 ) then
return
endif
set R8E[D0E]=R6E
set R6E=D0E
endfunction
function FCE takes nothing returns integer
local integer D0E=RZE
if ( D0E != 0 ) then
set RZE=R0E[D0E]
else
set R_E=R_E + 1
set D0E=R_E
endif
if ( D0E > 8190 ) then
return 0
endif
set R0E[D0E]=- 1
return D0E
endfunction
function FDE takes integer D0E returns nothing
if D0E == null then
return
elseif ( R0E[D0E] != - 1 ) then
return
endif
set R0E[D0E]=RZE
set RZE=D0E
endfunction
function FFE takes nothing returns integer
local integer D0E=RSE
if ( D0E != 0 ) then
set RSE=RUE[D0E]
else
set RTE=RTE + 1
set D0E=RTE
endif
if ( D0E > 8190 ) then
return 0
endif
set RUE[D0E]=- 1
return D0E
endfunction
function FGE takes integer D0E returns nothing
if D0E == null then
return
elseif ( RUE[D0E] != - 1 ) then
return
endif
set RUE[D0E]=RSE
set RSE=D0E
endfunction
function FHE takes nothing returns integer
local integer D0E=RJE
if ( D0E != 0 ) then
set RJE=RLE[D0E]
else
set RKE=RKE + 1
set D0E=RKE
endif
if ( D0E > 8190 ) then
return 0
endif
set RLE[D0E]=- 1
return D0E
endfunction
function FJE takes integer D0E returns nothing
if D0E == null then
return
elseif ( RLE[D0E] != - 1 ) then
return
endif
set RLE[D0E]=RJE
set RJE=D0E
endfunction
function FKE takes nothing returns integer
local integer D0E=RDE
if ( D0E != 0 ) then
set RDE=RGE[D0E]
else
set RFE=RFE + 1
set D0E=RFE
endif
if ( D0E > 8190 ) then
return 0
endif
set RGE[D0E]=- 1
return D0E
endfunction
function FLE takes integer D0E returns nothing
if D0E == null then
return
elseif ( RGE[D0E] != - 1 ) then
return
endif
set RGE[D0E]=RDE
set RDE=D0E
endfunction
function FME takes nothing returns integer
local integer D0E=ROE
if ( D0E != 0 ) then
set ROE=RIE[D0E]
else
set RRE=RRE + 1
set D0E=RRE
endif
if ( D0E > 8190 ) then
return 0
endif
set RIE[D0E]=- 1
return D0E
endfunction
function FPE takes integer D0E returns nothing
if D0E == null then
return
elseif ( RIE[D0E] != - 1 ) then
return
endif
set RIE[D0E]=ROE
set ROE=D0E
endfunction
function FQE takes nothing returns integer
local integer D0E=O6E
if ( D0E != 0 ) then
set O6E=O8E[D0E]
else
set O7E=O7E + 1
set D0E=O7E
endif
if ( D0E > 8190 ) then
return 0
endif
set O8E[D0E]=- 1
return D0E
endfunction
function FSE takes integer D0E returns nothing
if D0E == null then
return
elseif ( O8E[D0E] != - 1 ) then
return
endif
set O8E[D0E]=O6E
set O6E=D0E
endfunction
function FTE takes nothing returns integer
local integer D0E=O_E
if ( D0E != 0 ) then
set O_E=O1E[D0E]
else
set O0E=O0E + 1
set D0E=O0E
endif
if ( D0E > 8190 ) then
return 0
endif
set O1E[D0E]=- 1
return D0E
endfunction
function FUE takes integer D0E returns nothing
if D0E == null then
return
elseif ( O1E[D0E] != - 1 ) then
return
endif
set O1E[D0E]=O_E
set O_E=D0E
endfunction
function FWE takes nothing returns integer
local integer D0E=OSE
if ( D0E != 0 ) then
set OSE=OUE[D0E]
else
set OTE=OTE + 1
set D0E=OTE
endif
if ( D0E > 8190 ) then
return 0
endif
set OUE[D0E]=- 1
return D0E
endfunction
function FYE takes integer D0E returns nothing
if D0E == null then
return
elseif ( OUE[D0E] != - 1 ) then
return
endif
set OUE[D0E]=OSE
set OSE=D0E
endfunction
function FZE takes nothing returns integer
local integer D0E=OHE
if ( D0E != 0 ) then
set OHE=OKE[D0E]
else
set OJE=OJE + 1
set D0E=OJE
endif
if ( D0E > 8190 ) then
return 0
endif
set OKE[D0E]=- 1
return D0E
endfunction
function F_E takes integer D0E returns nothing
if D0E == null then
return
elseif ( OKE[D0E] != - 1 ) then
return
endif
set OKE[D0E]=OHE
set OHE=D0E
endfunction
function F0E takes nothing returns integer
local integer D0E=XYE
if ( D0E != 0 ) then
set XYE=X_E[D0E]
else
set XZE=XZE + 1
set D0E=XZE
endif
if ( D0E > 8190 ) then
return 0
endif
set X_E[D0E]=- 1
return D0E
endfunction
function F1E takes integer D0E returns nothing
if D0E == null then
return
elseif ( X_E[D0E] != - 1 ) then
return
endif
set X_E[D0E]=XYE
set XYE=D0E
endfunction
function F2E takes nothing returns integer
local integer D0E=XQE
if ( D0E != 0 ) then
set XQE=XTE[D0E]
else
set XSE=XSE + 1
set D0E=XSE
endif
if ( D0E > 8190 ) then
return 0
endif
set XTE[D0E]=- 1
return D0E
endfunction
function F3E takes integer D0E returns nothing
if D0E == null then
return
elseif ( XTE[D0E] != - 1 ) then
return
endif
set XTE[D0E]=XQE
set XQE=D0E
endfunction
function F4E takes nothing returns integer
local integer D0E=XAE
if ( D0E != 0 ) then
set XAE=XBE[D0E]
else
set XNE=XNE + 1
set D0E=XNE
endif
if ( D0E > 8190 ) then
return 0
endif
set XBE[D0E]=- 1
return D0E
endfunction
function F5E takes integer D0E returns nothing
if D0E == null then
return
elseif ( XBE[D0E] != - 1 ) then
return
endif
set XBE[D0E]=XAE
set XAE=D0E
endfunction
function F6E takes nothing returns integer
local integer D0E=E6E
if ( D0E != 0 ) then
set E6E=E8E[D0E]
else
set E7E=E7E + 1
set D0E=E7E
endif
if ( D0E > 8190 ) then
return 0
endif
set E8E[D0E]=- 1
return D0E
endfunction
function F7E takes integer D0E returns nothing
if D0E == null then
return
elseif ( E8E[D0E] != - 1 ) then
return
endif
set E8E[D0E]=E6E
set E6E=D0E
endfunction
function F8E takes nothing returns integer
local integer D0E=EZE
if ( D0E != 0 ) then
set EZE=E0E[D0E]
else
set E_E=E_E + 1
set D0E=E_E
endif
if ( D0E > 8190 ) then
return 0
endif
set E0E[D0E]=- 1
return D0E
endfunction
function F9E takes integer D0E returns nothing
if D0E == null then
return
elseif ( E0E[D0E] != - 1 ) then
return
endif
set E0E[D0E]=EZE
set EZE=D0E
endfunction
function GVE takes nothing returns integer
local integer D0E=ELE
if ( D0E != 0 ) then
set ELE=EPE[D0E]
else
set EME=EME + 1
set D0E=EME
endif
if ( D0E > 8190 ) then
return 0
endif
set EPE[D0E]=- 1
return D0E
endfunction
function GEE takes nothing returns integer
local integer D0E=VQE
if ( D0E != 0 ) then
set VQE=VTE[D0E]
else
set VSE=VSE + 1
set D0E=VSE
endif
if ( D0E > 4094 ) then
return 0
endif
set V_E[D0E]=( D0E - 1 ) * 2
set V1E[D0E]=( D0E - 1 ) * 2
set V3E[D0E]=( D0E - 1 ) * 2
set V5E[D0E]=( D0E - 1 ) * 2
set V7E[D0E]=( D0E - 1 ) * 2
set EKE[D0E]=.0
set VTE[D0E]=- 1
return D0E
endfunction
function GXE takes integer D0E returns nothing
if D0E == null then
return
elseif ( VTE[D0E] != - 1 ) then
return
endif
set VTE[D0E]=VQE
set VQE=D0E
endfunction
function GOE takes nothing returns integer
local integer D0E=ZUV
if ( D0E != 0 ) then
set ZUV=ZYV[D0E]
else
set ZWV=ZWV + 1
set D0E=ZWV
endif
if ( D0E > 4094 ) then
return 0
endif
set Z2V[D0E]=( D0E - 1 ) * 2
set Z4V[D0E]=( D0E - 1 ) * 2
set Z6V[D0E]=( D0E - 1 ) * 2
set Z8V[D0E]=( D0E - 1 ) * 2
set VVE[D0E]=( D0E - 1 ) * 2
set VPE[D0E]=.0
set ZYV[D0E]=- 1
return D0E
endfunction
function GRE takes integer D0E returns nothing
if D0E == null then
return
elseif ( ZYV[D0E] != - 1 ) then
return
endif
set ZYV[D0E]=ZUV
set ZUV=D0E
endfunction
function GIE takes nothing returns integer
local integer D0E=YZV
if ( D0E != 0 ) then
set YZV=Y0V[D0E]
else
set Y_V=Y_V + 1
set D0E=Y_V
endif
if ( D0E > 4094 ) then
return 0
endif
set Y5V[D0E]=( D0E - 1 ) * 2
set Y7V[D0E]=( D0E - 1 ) * 2
set Y9V[D0E]=( D0E - 1 ) * 2
set ZEV[D0E]=( D0E - 1 ) * 2
set ZOV[D0E]=( D0E - 1 ) * 2
set ZTV[D0E]=.0
set Y0V[D0E]=- 1
return D0E
endfunction
function GAE takes integer D0E returns nothing
if D0E == null then
return
elseif ( Y0V[D0E] != - 1 ) then
return
endif
set Y0V[D0E]=YZV
set YZV=D0E
endfunction
function GBE takes nothing returns integer
local integer D0E=RMV
if ( D0E != 0 ) then
set RMV=RQV[D0E]
else
set RPV=RPV + 1
set D0E=RPV
endif
if ( D0E > 8190 ) then
return 0
endif
set RQV[D0E]=- 1
return D0E
endfunction
function GCE takes integer D0E returns nothing
if D0E == null then
return
elseif ( RQV[D0E] != - 1 ) then
return
endif
set RQV[D0E]=RMV
set RMV=D0E
endfunction
function GDE takes nothing returns integer
local integer D0E=YNV
if ( D0E != 0 ) then
set YNV=YCV[D0E]
else
set YBV=YBV + 1
set D0E=YBV
endif
if ( D0E > 8190 ) then
return 0
endif
set YCV[D0E]=- 1
return D0E
endfunction
function GFE takes integer D0E returns nothing
if D0E == null then
return
elseif ( YCV[D0E] != - 1 ) then
return
endif
set YCV[D0E]=YNV
set YNV=D0E
endfunction
function GGE takes nothing returns integer
local integer D0E=W_V
if ( D0E != 0 ) then
set W_V=W1V[D0E]
else
set W0V=W0V + 1
set D0E=W0V
endif
if ( D0E > 8190 ) then
return 0
endif
set W1V[D0E]=- 1
return D0E
endfunction
function GHE takes integer D0E returns nothing
if D0E == null then
return
elseif ( W1V[D0E] != - 1 ) then
return
endif
set W1V[D0E]=W_V
set W_V=D0E
endfunction
function GJE takes nothing returns integer
local integer D0E=WAV
if ( D0E != 0 ) then
set WAV=WBV[D0E]
else
set WNV=WNV + 1
set D0E=WNV
endif
if ( D0E > 2729 ) then
return 0
endif
set WTV[D0E]=( D0E - 1 ) * 3
set WBV[D0E]=- 1
return D0E
endfunction
function GKE takes integer D0E returns nothing
if D0E == null then
return
elseif ( WBV[D0E] != - 1 ) then
return
endif
set WBV[D0E]=WAV
set WAV=D0E
endfunction
function GLE takes nothing returns integer
local integer D0E=U8V
if ( D0E != 0 ) then
set U8V=WVV[D0E]
else
set U9V=U9V + 1
set D0E=U9V
endif
if ( D0E > 8190 ) then
return 0
endif
set WVV[D0E]=- 1
return D0E
endfunction
function GME takes integer D0E returns nothing
if D0E == null then
return
elseif ( WVV[D0E] != - 1 ) then
return
endif
set WVV[D0E]=U8V
set U8V=D0E
endfunction

function GQE takes integer D0E returns nothing
if D0E == null then
return
elseif ( U3V[D0E] != - 1 ) then
return
endif
set U3V[D0E]=U1V
set U1V=D0E
endfunction
function GSE takes nothing returns integer
local integer D0E=UTV
if ( D0E != 0 ) then
set UTV=UWV[D0E]
else
set UUV=UUV + 1
set D0E=UUV
endif
if ( D0E > 8190 ) then
return 0
endif
set UWV[D0E]=- 1
return D0E
endfunction
function GTE takes integer D0E returns nothing
if D0E == null then
return
elseif ( UWV[D0E] != - 1 ) then
return
endif
set UWV[D0E]=UTV
set UTV=D0E
endfunction
function GUE takes nothing returns integer
local integer D0E=UKV
if ( D0E != 0 ) then
set UKV=UMV[D0E]
else
set ULV=ULV + 1
set D0E=ULV
endif
if ( D0E > 8190 ) then
return 0
endif
set UMV[D0E]=- 1
return D0E
endfunction
function GWE takes integer D0E returns nothing
if D0E == null then
return
elseif ( UMV[D0E] != - 1 ) then
return
endif
set UMV[D0E]=UKV
set UKV=D0E
endfunction
function GYE takes nothing returns integer
local integer D0E=UFV
if ( D0E != 0 ) then
set UFV=UHV[D0E]
else
set UGV=UGV + 1
set D0E=UGV
endif
if ( D0E > 8190 ) then
return 0
endif
set UHV[D0E]=- 1
return D0E
endfunction
function GZE takes integer D0E returns nothing
if D0E == null then
return
elseif ( UHV[D0E] != - 1 ) then
return
endif
set UHV[D0E]=UFV
set UFV=D0E
endfunction
function G_E takes nothing returns integer
local integer D0E=UIV
if ( D0E != 0 ) then
set UIV=UNV[D0E]
else
set UAV=UAV + 1
set D0E=UAV
endif
if ( D0E > 8190 ) then
return 0
endif
set UNV[D0E]=- 1
return D0E
endfunction
function G0E takes integer D0E returns nothing
if D0E == null then
return
elseif ( UNV[D0E] != - 1 ) then
return
endif
set UNV[D0E]=UIV
set UIV=D0E
endfunction
function G1E takes nothing returns integer
local integer D0E=T8V
if ( D0E != 0 ) then
set T8V=UVV[D0E]
else
set T9V=T9V + 1
set D0E=T9V
endif
if ( D0E > 8190 ) then
return 0
endif
set UVV[D0E]=- 1
return D0E
endfunction
function G2E takes integer D0E returns nothing
if D0E == null then
return
elseif ( UVV[D0E] != - 1 ) then
return
endif
set UVV[D0E]=T8V
set T8V=D0E
endfunction
function G3E takes nothing returns integer
local integer D0E=T3V
if ( D0E != 0 ) then
set T3V=T5V[D0E]
else
set T4V=T4V + 1
set D0E=T4V
endif
if ( D0E > 8190 ) then
return 0
endif
set T5V[D0E]=- 1
return D0E
endfunction
function G4E takes integer D0E returns nothing
if D0E == null then
return
elseif ( T5V[D0E] != - 1 ) then
return
endif
set T5V[D0E]=T3V
set T3V=D0E
endfunction
function G5E takes nothing returns integer
local integer D0E=TYV
if ( D0E != 0 ) then
set TYV=T_V[D0E]
else
set TZV=TZV + 1
set D0E=TZV
endif
if ( D0E > 8190 ) then
return 0
endif
set T_V[D0E]=- 1
return D0E
endfunction
function G6E takes integer D0E returns nothing
if D0E == null then
return
elseif ( T_V[D0E] != - 1 ) then
return
endif
set T_V[D0E]=TYV
set TYV=D0E
endfunction
function G7E takes nothing returns integer
local integer D0E=TFV
if ( D0E != 0 ) then
set TFV=THV[D0E]
else
set TGV=TGV + 1
set D0E=TGV
endif
if ( D0E > 8190 ) then
return 0
endif
set THV[D0E]=- 1
return D0E
endfunction
function G8E takes integer D0E returns nothing
if D0E == null then
return
elseif ( THV[D0E] != - 1 ) then
return
endif
set THV[D0E]=TFV
set TFV=D0E
endfunction
function G9E takes nothing returns integer
local integer D0E=TNV
if ( D0E != 0 ) then
set TNV=TCV[D0E]
else
set TBV=TBV + 1
set D0E=TBV
endif
if ( D0E > 8190 ) then
return 0
endif
set TCV[D0E]=- 1
return D0E
endfunction
function HVE takes integer D0E returns nothing
if D0E == null then
return
elseif ( TCV[D0E] != - 1 ) then
return
endif
set TCV[D0E]=TNV
set TNV=D0E
endfunction
function HEE takes nothing returns integer
local integer D0E=SLV
if ( D0E != 0 ) then
set SLV=SPV[D0E]
else
set SMV=SMV + 1
set D0E=SMV
endif
if ( D0E > 67 ) then
return 0
endif
set SUV[D0E]=( D0E - 1 ) * 120
set SYV[D0E]=( D0E - 1 ) * 120
set S_V[D0E]=( D0E - 1 ) * 120
set S1V[D0E]=( D0E - 1 ) * 120
set S3V[D0E]=( D0E - 1 ) * 120
set S5V[D0E]=( D0E - 1 ) * 120
set S7V[D0E]=( D0E - 1 ) * 120
set S9V[D0E]=( D0E - 1 ) * 120
set TXV[D0E]=( D0E - 1 ) * 120
set SPV[D0E]=- 1
return D0E
endfunction
function HXE takes integer D0E returns nothing
if D0E == null then
return
elseif ( SPV[D0E] != - 1 ) then
return
endif
set B3E=D0E
call TriggerEvaluate(BFE)
set SPV[D0E]=SLV
set SLV=D0E
endfunction
function HOE takes integer D0E returns nothing
set SJV[SKV[D0E]]=SJV[D0E]
set SKV[SJV[D0E]]=SKV[D0E]
endfunction
function HRE takes nothing returns integer
local integer D0E=SBV
if ( D0E != 0 ) then
set SBV=SDV[D0E]
else
set SCV=SCV + 1
set D0E=SCV
endif
if ( D0E > 8190 ) then
return 0
endif
set SFV[D0E]=null
set SGV[D0E]=null
set SHV[D0E]=.0
set SDV[D0E]=- 1
return D0E
endfunction
function HIE takes integer D0E returns nothing
if D0E == null then
return
elseif ( SDV[D0E] != - 1 ) then
return
endif
set SDV[D0E]=SBV
set SBV=D0E
endfunction
function HAE takes integer D0E returns nothing
set SAV[SNV[D0E]]=SAV[D0E]
set SNV[SAV[D0E]]=SNV[D0E]
endfunction
function HNE takes nothing returns integer
local integer D0E=Q8V
if ( D0E != 0 ) then
set Q8V=SVV[D0E]
else
set Q9V=Q9V + 1
set D0E=Q9V
endif
if ( D0E > 8190 ) then
return 0
endif
set SEV[D0E]=null
set SXV[D0E]=null
set SOV[D0E]=.0
set SRV[D0E]=0
set SIV[D0E]=0
set SVV[D0E]=- 1
return D0E
endfunction
function HBE takes integer D0E returns nothing
if D0E == null then
return
elseif ( SVV[D0E] != - 1 ) then
return
endif
set SVV[D0E]=Q8V
set Q8V=D0E
endfunction
function HCE takes integer D0E returns nothing
set Q6V[Q7V[D0E]]=Q6V[D0E]
set Q7V[Q6V[D0E]]=Q7V[D0E]
endfunction
function HDE takes nothing returns integer
local integer D0E=Q0V
if ( D0E != 0 ) then
set Q0V=Q2V[D0E]
else
set Q1V=Q1V + 1
set D0E=Q1V
endif
if ( D0E > 8190 ) then
return 0
endif
set Q3V[D0E]=null
set Q4V[D0E]=0
set Q5V[D0E]=0
set Q2V[D0E]=- 1
return D0E
endfunction
function HFE takes integer D0E returns nothing
if D0E == null then
return
elseif ( Q2V[D0E] != - 1 ) then
return
endif
set Q2V[D0E]=Q0V
set Q0V=D0E
endfunction
function HGE takes integer D0E returns nothing
set QZV[Q_V[D0E]]=QZV[D0E]
set Q_V[QZV[D0E]]=Q_V[D0E]
endfunction
function HHE takes nothing returns integer
local integer D0E=QQV
if ( D0E != 0 ) then
set QQV=QTV[D0E]
else
set QSV=QSV + 1
set D0E=QSV
endif
if ( D0E > 8190 ) then
return 0
endif
set QUV[D0E]=null
set QWV[D0E]=null
set QYV[D0E]=.0
set QTV[D0E]=- 1
return D0E
endfunction
function HJE takes integer D0E returns nothing
if D0E == null then
return
elseif ( QTV[D0E] != - 1 ) then
return
endif
set QTV[D0E]=QQV
set QQV=D0E
endfunction
function HKE takes integer D0E returns nothing
set QMV[QPV[D0E]]=QMV[D0E]
set QPV[QMV[D0E]]=QPV[D0E]
endfunction
function HLE takes nothing returns integer
local integer D0E=QFV
if ( D0E != 0 ) then
set QFV=QHV[D0E]
else
set QGV=QGV + 1
set D0E=QGV
endif
if ( D0E > 8190 ) then
return 0
endif
set QJV[D0E]=null
set QKV[D0E]=0
set QLV[D0E]=0
set QHV[D0E]=- 1
return D0E
endfunction
function HME takes integer D0E returns nothing
if D0E == null then
return
elseif ( QHV[D0E] != - 1 ) then
return
endif
set QHV[D0E]=QFV
set QFV=D0E
endfunction
function HPE takes integer D0E returns nothing
set QCV[QDV[D0E]]=QCV[D0E]
set QDV[QCV[D0E]]=QDV[D0E]
endfunction
function HQE takes nothing returns integer
local integer D0E=QOV
if ( D0E != 0 ) then
set QOV=QIV[D0E]
else
set QRV=QRV + 1
set D0E=QRV
endif
if ( D0E > 8190 ) then
return 0
endif
set QAV[D0E]=null
set QNV[D0E]=null
set QBV[D0E]=.0
set QIV[D0E]=- 1
return D0E
endfunction
function HSE takes integer D0E returns nothing
if D0E == null then
return
elseif ( QIV[D0E] != - 1 ) then
return
endif
set QIV[D0E]=QOV
set QOV=D0E
endfunction
function HTE takes integer D0E returns nothing
set QEV[QXV[D0E]]=QEV[D0E]
set QXV[QEV[D0E]]=QXV[D0E]
endfunction
function HUE takes nothing returns integer
local integer D0E=P5V
if ( D0E != 0 ) then
set P5V=P7V[D0E]
else
set P6V=P6V + 1
set D0E=P6V
endif
if ( D0E > 8190 ) then
return 0
endif
set P8V[D0E]=null
set P9V[D0E]=0
set QVV[D0E]=0
set P7V[D0E]=- 1
return D0E
endfunction
function HWE takes integer D0E returns nothing
if D0E == null then
return
elseif ( P7V[D0E] != - 1 ) then
return
endif
set P7V[D0E]=P5V
set P5V=D0E
endfunction
function HYE takes integer D0E returns nothing
set P3V[P4V[D0E]]=P3V[D0E]
set P4V[P3V[D0E]]=P4V[D0E]
endfunction
function HZE takes nothing returns integer
local integer D0E=PYV
if ( D0E != 0 ) then
set PYV=P_V[D0E]
else
set PZV=PZV + 1
set D0E=PZV
endif
if ( D0E > 8190 ) then
return 0
endif
set P0V[D0E]=null
set P1V[D0E]=null
set P2V[D0E]=.0
set P_V[D0E]=- 1
return D0E
endfunction
function H_E takes integer D0E returns nothing
if D0E == null then
return
elseif ( P_V[D0E] != - 1 ) then
return
endif
set P_V[D0E]=PYV
set PYV=D0E
endfunction
function H0E takes nothing returns integer
local integer D0E=MDV
if ( D0E != 0 ) then
set MDV=MGV[D0E]
else
set MFV=MFV + 1
set D0E=MFV
endif
if ( D0E > 2729 ) then
return 0
endif
set M6V[D0E]=( D0E - 1 ) * 3
set M8V[D0E]=( D0E - 1 ) * 3
set PEV[D0E]=( D0E - 1 ) * 3
set POV[D0E]=( D0E - 1 ) * 3
set MHV[D0E]=false
set MJV[D0E]=false
set MKV[D0E]=true
set MLV[D0E]=true
set MMV[D0E]=true
set MPV[D0E]=false
set MQV[D0E]=false
set MSV[D0E]=false
set MTV[D0E]=false
set MUV[D0E]=DAMAGE_TYPE_UNIVERSAL
set MWV[D0E]=ATTACK_TYPE_NORMAL
set MYV[D0E]=WEAPON_TYPE_WHOKNOWS
set MZV[D0E]=0
set M_V[D0E]=false
set M0V[D0E]=1.
set M1V[D0E]=false
set M2V[D0E]=null
set M3V[D0E]=false
set M4V[D0E]=null
set M9V[D0E]=0
set PRV[D0E]=0
set PIV[D0E]=false
set MGV[D0E]=- 1
return D0E
endfunction
function H1E takes integer D0E returns nothing
set MBV[MCV[D0E]]=MBV[D0E]
set MCV[MBV[D0E]]=MCV[D0E]
endfunction
function H2E takes nothing returns integer
local integer D0E=L6V
if ( D0E != 0 ) then
set L6V=L8V[D0E]
else
set L7V=L7V + 1
set D0E=L7V
endif
if ( D0E > 8190 ) then
return 0
endif
set L9V[D0E]=null
set MVV[D0E]=null
set MEV[D0E]=null
set MXV[D0E]=.0
set MOV[D0E]=.0
set MRV[D0E]=.0
set MIV[D0E]=.0
set MAV[D0E]=.0
set MNV[D0E]=0
set L8V[D0E]=- 1
return D0E
endfunction
function H3E takes integer D0E returns nothing
if D0E == null then
return
elseif ( L8V[D0E] != - 1 ) then
return
endif
set L8V[D0E]=L6V
set L6V=D0E
endfunction
function H4E takes integer D0E returns nothing
set L4V[L5V[D0E]]=L4V[D0E]
set L5V[L4V[D0E]]=L5V[D0E]
endfunction
function H5E takes nothing returns integer
local integer D0E=L_V
if ( D0E != 0 ) then
set L_V=L1V[D0E]
else
set L0V=L0V + 1
set D0E=L0V
endif
if ( D0E > 8190 ) then
return 0
endif
set L2V[D0E]=null
set L3V[D0E]=.0
set L1V[D0E]=- 1
return D0E
endfunction
function H6E takes integer D0E returns nothing
if D0E == null then
return
elseif ( L1V[D0E] != - 1 ) then
return
endif
set L1V[D0E]=L_V
set L_V=D0E
endfunction
function H7E takes nothing returns integer
local integer D0E=LQV
if ( D0E != 0 ) then
set LQV=LTV[D0E]
else
set LSV=LSV + 1
set D0E=LSV
endif
if ( D0E > 8190 ) then
return 0
endif
set LTV[D0E]=- 1
return D0E
endfunction
function H8E takes integer D0E returns nothing
if D0E == null then
return
elseif ( LTV[D0E] != - 1 ) then
return
endif
set LTV[D0E]=LQV
set LQV=D0E
endfunction
function H9E takes nothing returns integer
local integer D0E=LJV
if ( D0E != 0 ) then
set LJV=LLV[D0E]
else
set LKV=LKV + 1
set D0E=LKV
endif
if ( D0E > 8190 ) then
return 0
endif
set LLV[D0E]=- 1
return D0E
endfunction
function JVE takes integer D0E returns nothing
if D0E == null then
return
elseif ( LLV[D0E] != - 1 ) then
return
endif
set LLV[D0E]=LJV
set LJV=D0E
endfunction
function JEE takes nothing returns integer
local integer D0E=LRV
if ( D0E != 0 ) then
set LRV=LAV[D0E]
else
set LIV=LIV + 1
set D0E=LIV
endif
if ( D0E > 8190 ) then
return 0
endif
set LAV[D0E]=- 1
return D0E
endfunction
function JXE takes integer D0E returns nothing
if D0E == null then
return
elseif ( LAV[D0E] != - 1 ) then
return
endif
set LAV[D0E]=LRV
set LRV=D0E
endfunction
function JOE takes nothing returns integer
local integer D0E=K4V
if ( D0E != 0 ) then
set K4V=K6V[D0E]
else
set K5V=K5V + 1
set D0E=K5V
endif
if ( D0E > 8190 ) then
return 0
endif
set K6V[D0E]=- 1
return D0E
endfunction
function JRE takes integer D0E returns nothing
if D0E == null then
return
elseif ( K6V[D0E] != - 1 ) then
return
endif
set K6V[D0E]=K4V
set K4V=D0E
endfunction
function JIE takes nothing returns integer
local integer D0E=K_V
if ( D0E != 0 ) then
set K_V=K1V[D0E]
else
set K0V=K0V + 1
set D0E=K0V
endif
if ( D0E > 8190 ) then
return 0
endif
set K2V[D0E]=.0
set K3V[D0E]=.0
set K1V[D0E]=- 1
return D0E
endfunction
function JAE takes integer D0E returns nothing
if D0E == null then
return
elseif ( K1V[D0E] != - 1 ) then
return
endif
set K1V[D0E]=K_V
set K_V=D0E
endfunction
function JNE takes nothing returns integer
local integer D0E=RYV
if ( D0E != 0 ) then
set RYV=R_V[D0E]
else
set RZV=RZV + 1
set D0E=RZV
endif
if ( D0E > 8190 ) then
return 0
endif
set R0V[D0E]=null
set R1V[D0E]=.0
set R2V[D0E]=.0
set R3V[D0E]=.0
set R4V[D0E]=.0
set R5V[D0E]=.0
set R6V[D0E]=0
set R7V[D0E]=null
set R8V[D0E]=false
set R9V[D0E]=false
set IVV[D0E]=false
set IEV[D0E]=false
set R_V[D0E]=- 1
return D0E
endfunction
function JBE takes nothing returns integer
local integer D0E=J6V
if ( D0E != 0 ) then
set J6V=J8V[D0E]
else
set J7V=J7V + 1
set D0E=J7V
endif
if ( D0E > 8190 ) then
return 0
endif
set KXV[D0E]=.0
set KOV[D0E]=.0
set KIV[D0E]=1.
set J8V[D0E]=- 1
return D0E
endfunction
function JCE takes integer D0E returns nothing
if D0E == null then
return
elseif ( J8V[D0E] != - 1 ) then
return
endif
set J8V[D0E]=J6V
set J6V=D0E
endfunction
function JDE takes integer D0E,integer JFE returns boolean
set B3E=D0E
set B_E=JFE
call TriggerEvaluate(N9E)
return B4E
endfunction
function JGE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(BVE)
endfunction
function JHE takes nothing returns integer
local integer D0E=JQV
if ( D0E != 0 ) then
set JQV=JTV[D0E]
else
set JSV=JSV + 1
set D0E=JSV
endif
if ( D0E > 8190 ) then
return 0
endif
set JUV[D0E]=0
set JTV[D0E]=- 1
return D0E
endfunction
function JJE takes integer D0E returns nothing
if D0E == null then
return
elseif ( JTV[D0E] != - 1 ) then
return
endif
set JTV[D0E]=JQV
set JQV=D0E
endfunction
function JKE takes integer D0E returns integer
set B3E=D0E
call TriggerEvaluate(N3E)
return B5E
endfunction
function JLE takes integer D0E returns integer
set B3E=D0E
call TriggerEvaluate(N4E)
return B5E
endfunction
function JME takes integer D0E returns integer
set B3E=D0E
call TriggerEvaluate(N5E)
return B5E
endfunction
function JPE takes integer D0E returns integer
set B3E=D0E
call TriggerEvaluate(N6E)
return B5E
endfunction
function JQE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(N7E)
endfunction
function JSE takes integer D0E returns nothing
set JHV[JJV[D0E]]=JHV[D0E]
set JJV[JHV[D0E]]=JJV[D0E]
endfunction
function JTE takes nothing returns integer
local integer D0E=GPV
if ( D0E != 0 ) then
set GPV=GSV[D0E]
else
set GQV=GQV + 1
set D0E=GQV
endif
if ( D0E > 8190 ) then
return 0
endif
set GTV[D0E]=0
set GUV[D0E]=0
set GWV[D0E]=0
set GYV[D0E]=false
set GZV[D0E]=null
set G_V[D0E]=null
set G0V[D0E]=64.
set G1V[D0E]=64.
set G2V[D0E]=.0
set G3V[D0E]=.0
set G4V[D0E]=.0
set G5V[D0E]=1.
set G6V[D0E]=2.
set G7V[D0E]=false
set G8V[D0E]=false
set G9V[D0E]=false
set HVV[D0E]=false
set HEV[D0E]=false
set HXV[D0E]=false
set HOV[D0E]=false
set HRV[D0E]=0
set HIV[D0E]=0
set HAV[D0E]=0
set HNV[D0E]=0
set HBV[D0E]=0
set HCV[D0E]=0
set HDV[D0E]=0
set HFV[D0E]=null
set HGV[D0E]=.0
set HHV[D0E]=.0
set HJV[D0E]=.0
set HKV[D0E]=.0
set HLV[D0E]=.0
set HMV[D0E]=.0
set HPV[D0E]=.0
set HQV[D0E]=.0
set HSV[D0E]=.0
set HTV[D0E]=.0
set HUV[D0E]=.0
set HWV[D0E]=.0
set HYV[D0E]=.0
set HZV[D0E]=null
set H_V[D0E]=null
set H0V[D0E]=""
set H1V[D0E]=false
set H2V[D0E]=false
set H3V[D0E]=true
set H4V[D0E]=.0
set H5V[D0E]=.0
set H6V[D0E]=.0
set H7V[D0E]=.0
set H8V[D0E]=.0
set H9V[D0E]=.0
set JAV[D0E]=null
set JNV[D0E]=.0
set JBV[D0E]=false
set JCV[D0E]=.0
set JDV[D0E]=1.
set JFV[D0E]=false
set JGV[D0E]=0
set GSV[D0E]=- 1
return D0E
endfunction
function JUE takes integer D0E returns nothing
if D0E == null then
return
elseif ( GSV[D0E] != - 1 ) then
return
endif
set GSV[D0E]=GPV
set GPV=D0E
endfunction
function JWE takes integer D0E returns nothing
set GLV[GMV[D0E]]=GLV[D0E]
set GMV[GLV[D0E]]=GMV[D0E]
endfunction
function JYE takes nothing returns integer
local integer D0E=GFV
if ( D0E != 0 ) then
set GFV=GHV[D0E]
else
set GGV=GGV + 1
set D0E=GGV
endif
if ( D0E > 8190 ) then
return 0
endif
set GJV[D0E]=null
set GKV[D0E]=.0
set GHV[D0E]=- 1
return D0E
endfunction
function JZE takes integer D0E returns nothing
if D0E == null then
return
elseif ( GHV[D0E] != - 1 ) then
return
endif
set GHV[D0E]=GFV
set GFV=D0E
endfunction
function J_E takes nothing returns integer
local integer D0E=IXV
if ( D0E != 0 ) then
if ( D0E < 8191 ) then
set IXV=IRV[D0E]
elseif ( D0E < 16382 ) then
set IXV=IIV[D0E - 8191]
else
set IXV=IAV[D0E - 16382]
endif
else
set IOV=IOV + 1
set D0E=IOV
endif
if ( D0E > 20000 ) then
return 0
endif
if ( D0E < 8191 ) then
set ICV[D0E]=.0
set IGV[D0E]=.0
set IKV[D0E]=.0
set IPV[D0E]=true
set ITV[D0E]=.0
set IYV[D0E]=false
elseif ( D0E < 16382 ) then
set INV[D0E - 8191]=.0
set IDV[D0E - 8191]=.0
set IHV[D0E - 8191]=.0
set ILV[D0E - 8191]=true
set IQV[D0E - 8191]=.0
set IUV[D0E - 8191]=false
else
set IBV[D0E - 16382]=.0
set IFV[D0E - 16382]=.0
set IJV[D0E - 16382]=.0
set IMV[D0E - 16382]=true
set ISV[D0E - 16382]=.0
set IWV[D0E - 16382]=false
endif
if ( D0E < 8191 ) then
set IRV[D0E]=- 1
elseif ( D0E < 16382 ) then
set IIV[D0E - 8191]=- 1
else
set IAV[D0E - 16382]=- 1
endif
return D0E
endfunction
function J0E takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(FRV[FXV[D0E]])
endfunction
function J1E takes integer D0E,unit J2E returns nothing
set B3E=D0E
set BYE=J2E
call TriggerEvaluate(FIV[FXV[D0E]])
endfunction
function J3E takes integer D0E,destructable J4E returns nothing
set B3E=D0E
set BZE=J4E
call TriggerEvaluate(FAV[FXV[D0E]])
endfunction
function J5E takes integer D0E,real x,real y returns nothing
set B3E=D0E
set BUE=x
set BWE=y
call TriggerEvaluate(FNV[FXV[D0E]])
endfunction
function J6E takes integer D0E,integer J7E returns nothing
set B3E=D0E
set B_E=J7E
call TriggerEvaluate(FBV[FXV[D0E]])
endfunction
function J8E takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(FCV[FXV[D0E]])
endfunction
function J9E takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(FDV[FXV[D0E]])
endfunction
function KVE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(FFV[FXV[D0E]])
endfunction
function KEE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(FGV[FXV[D0E]])
endfunction
function KXE takes integer D0E returns nothing
if D0E == null then
return
elseif ( FEV[D0E] != - 1 ) then
return
endif
set B3E=D0E
call TriggerEvaluate(FOV[FXV[D0E]])
set FEV[D0E]=D9V
set D9V=D0E
endfunction
function KOE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(NUE)
endfunction
function sc__Damage___Detector_AIDS_onInit takes nothing returns nothing
call TriggerEvaluate(NYE)
endfunction
function KRE takes nothing returns integer
local integer D0E=DJV
if ( D0E != 0 ) then
set DJV=DLV[D0E]
else
set DKV=DKV + 1
set D0E=DKV
endif
if ( D0E > 8190 ) then
return 0
endif
set DMV[D0E]=0
set DQV[D0E]=null
set DSV[D0E]=.0
set DTV[D0E]=255
set DUV[D0E]=255
set DWV[D0E]=255
set DYV[D0E]=255
set DZV[D0E]=0
set DLV[D0E]=- 1
return D0E
endfunction
function KIE takes nothing returns integer
local integer D0E=C8V
if ( D0E != 0 ) then
set C8V=DVV[D0E]
else
set C9V=C9V + 1
set D0E=C9V
endif
if ( D0E > 1364 ) then
return 0
endif
set DXV[D0E]=( D0E - 1 ) * 6
set DVV[D0E]=- 1
return D0E
endfunction
function KAE takes integer D0E returns nothing
if D0E == null then
return
elseif ( DVV[D0E] != - 1 ) then
return
endif
set B3E=D0E
call TriggerEvaluate(NSE)
set DVV[D0E]=C8V
set C8V=D0E
endfunction
function KNE takes nothing returns integer
local integer D0E=C4V
if ( D0E != 0 ) then
set C4V=C7V[D0E]
else
set C3V=C3V + 10
set D0E=C3V
endif
if ( D0E > 8181 ) then
return 0
endif
set C7V[D0E]=- 1
return D0E
endfunction
function KBE takes integer D0E returns nothing
if D0E == null then
return
elseif ( C7V[D0E] != - 1 ) then
return
endif
set C7V[D0E]=C4V
set C4V=D0E
endfunction
function KCE takes nothing returns integer
local integer D0E=C_V
if ( D0E != 0 ) then
set C_V=C2V[D0E]
else
set CZV=CZV + 10
set D0E=CZV
endif
if ( D0E > 8181 ) then
return 0
endif
set C2V[D0E]=- 1
return D0E
endfunction
function KDE takes integer D0E returns nothing
if D0E == null then
return
elseif ( C2V[D0E] != - 1 ) then
return
endif
set C2V[D0E]=C_V
set C_V=D0E
endfunction
function KFE takes nothing returns integer
local integer D0E=I_V
if ( D0E != 0 ) then
set I_V=I1V[D0E]
else
set I0V=I0V + 1
set D0E=I0V
endif
if ( D0E > 8100 ) then
return 0
endif
set NBE[D0E]=7
set I1V[D0E]=- 1
return D0E
endfunction
function KGE takes integer D0E returns nothing
if D0E == null then
return
elseif ( I1V[D0E] != - 1 ) then
return
endif
set B3E=D0E
call TriggerEvaluate(NCE[NBE[D0E]])
set I1V[D0E]=I_V
set I_V=D0E
endfunction
function KHE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(B3V[B1V[D0E]])
endfunction
function KJE takes integer D0E,unit u returns nothing
set B3E=D0E
set BYE=u
call TriggerEvaluate(B4V[B1V[D0E]])
endfunction
function KKE takes integer D0E,unit u returns nothing
set B3E=D0E
set BYE=u
call TriggerEvaluate(B5V[B1V[D0E]])
endfunction
function KLE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(B6V[B1V[D0E]])
endfunction
function KME takes integer D0E returns nothing
if D0E == null then
return
elseif ( B0V[D0E] != - 1 ) then
return
endif
set B3E=D0E
call TriggerEvaluate(B2V[B1V[D0E]])
set B0V[D0E]=BZV
set BZV=D0E
endfunction
function KPE takes nothing returns integer
local integer D0E=BAV
if ( D0E != 0 ) then
set BAV=BBV[D0E]
else
set BNV=BNV + 1
set D0E=BNV
endif
if ( D0E > 8190 ) then
return 0
endif
set BBV[D0E]=- 1
return D0E
endfunction
function KQE takes integer D0E returns nothing
if D0E == null then
return
elseif ( BBV[D0E] != - 1 ) then
return
endif
set BBV[D0E]=BAV
set BAV=D0E
endfunction
function KSE takes nothing returns integer
local integer D0E=N1V
if ( D0E != 0 ) then
set N1V=N3V[D0E]
else
set N2V=N2V + 1
set D0E=N2V
endif
if ( D0E > 8190 ) then
return 0
endif
set N3V[D0E]=- 1
return D0E
endfunction
function KTE takes integer D0E returns nothing
if D0E == null then
return
elseif ( N3V[D0E] != - 1 ) then
return
endif
set N3V[D0E]=N1V
set N1V=D0E
endfunction
function KUE takes nothing returns integer
local integer D0E=NDV
if ( D0E != 0 ) then
set NDV=NGV[D0E]
else
set NFV=NFV + 1
set D0E=NFV
endif
if ( D0E > 2729 ) then
return 0
endif
set NWV[D0E]=( D0E - 1 ) * 3
set NGV[D0E]=- 1
return D0E
endfunction
function KWE takes integer D0E returns nothing
if D0E == null then
return
elseif ( NGV[D0E] != - 1 ) then
return
endif
set NGV[D0E]=NDV
set NDV=D0E
endfunction
function KYE takes integer D0E,real x returns nothing
set B3E=D0E
set BUE=x
call TriggerEvaluate(NJE)
endfunction
function KZE takes integer D0E,real y returns nothing
set B3E=D0E
set BUE=y
call TriggerEvaluate(NKE)
endfunction
function K_E takes integer D0E,real K0E returns nothing
set B3E=D0E
set BUE=K0E
call TriggerEvaluate(NLE)
endfunction
function K1E takes integer D0E,real K2E returns nothing
set B3E=D0E
set BUE=K2E
call TriggerEvaluate(NME)
endfunction
function K3E takes nothing returns integer
local integer D0E=A0V
if ( D0E != 0 ) then
set A0V=A2V[D0E]
else
set A1V=A1V + 1
set D0E=A1V
endif
if ( D0E > 8190 ) then
return 0
endif
set A4V[D0E]=.0
set A5V[D0E]=15.
set A6V[D0E]=.0
set A7V[D0E]=.0
set A8V[D0E]=.0
set A9V[D0E]=.0
set NVV[D0E]=1.
set NEV[D0E]=1.
set NXV[D0E]=255
set NOV[D0E]=255
set NRV[D0E]=255
set NIV[D0E]=0
set NAV[D0E]=true
set NNV[D0E]=false
set A2V[D0E]=- 1
return D0E
endfunction
function K4E takes integer D0E returns nothing
if D0E == null then
return
elseif ( A2V[D0E] != - 1 ) then
return
endif
set A2V[D0E]=A0V
set A0V=D0E
endfunction
function K5E takes nothing returns integer
local integer D0E=ALV
if ( D0E != 0 ) then
set ALV=APV[D0E]
else
set AMV=AMV + 1
set D0E=AMV
endif
if ( D0E > 8190 ) then
return 0
endif
set APV[D0E]=- 1
return D0E
endfunction
function K6E takes integer D0E returns nothing
if D0E == null then
return
elseif ( APV[D0E] != - 1 ) then
return
endif
set APV[D0E]=ALV
set ALV=D0E
endfunction
function K7E takes nothing returns integer
local integer D0E=AAV
if ( D0E != 0 ) then
set AAV=ABV[D0E]
else
set ANV=ANV + 1
set D0E=ANV
endif
if ( D0E > 8190 ) then
return 0
endif
set ABV[D0E]=- 1
return D0E
endfunction
function K8E takes nothing returns integer
local integer D0E=I9V
if ( D0E != 0 ) then
set I9V=AEV[D0E]
else
set AVV=AVV + 1
set D0E=AVV
endif
if ( D0E > 8190 ) then
return 0
endif
set AEV[D0E]=- 1
return D0E
endfunction
function K9E takes nothing returns integer
local integer D0E=I2V
if ( D0E != 0 ) then
set I2V=I4V[D0E]
else
set I3V=I3V + 1
set D0E=I3V
endif
if ( D0E > 8190 ) then
return 0
endif
set I4V[D0E]=- 1
return D0E
endfunction
function LVE takes nothing returns integer
local integer D0E=KFE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set NBE[D0E]=10
set LEE=D0E
return D0E
endfunction
function s__StringTable__allocate takes nothing returns integer
local integer D0E=KFE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set NBE[D0E]=9
set LEE=D0E
return D0E
endfunction
function LXE takes nothing returns integer
local integer D0E=KFE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set NBE[D0E]=8
set LEE=D0E
return D0E
endfunction
function LOE takes nothing returns integer
call TriggerEvaluate(NZE)
return B5E
endfunction
function LRE takes nothing returns integer
local integer LEE
local integer D0E=D9V
if ( D0E != 0 ) then
set D9V=FEV[D0E]
else
set FVV=FVV + 1
set D0E=FVV
endif
if ( D0E > 8190 ) then
return 0
endif
set FXV[D0E]=34
set LEE=D0E
set FQV[D0E]=.0
set FSV[D0E]=.0
set FTV[D0E]=.0
set FUV[D0E]=.0
set FWV[D0E]=1.
set FYV[D0E]=null
set FZV[D0E]=CreateGroup()
set F_V[D0E]=false
set F0V[D0E]=false
set F1V[D0E]=false
set F2V[D0E]=false
set F3V[D0E]=true
set F4V[D0E]=false
set F5V[D0E]=false
set FEV[D0E]=- 1
return D0E
endfunction
function LIE takes integer D0E returns nothing
set CWV[CYV[D0E]]=CWV[D0E]
set CYV[CWV[D0E]]=CYV[D0E]
endfunction
function LAE takes nothing returns integer
local integer LEE
local integer D0E=BZV
if ( D0E != 0 ) then
set BZV=B0V[D0E]
else
set B_V=B_V + 1
set D0E=B_V
endif
if ( D0E > 8190 ) then
return 0
endif
set B1V[D0E]=22
set LEE=D0E
set CBV[D0E]=false
set B0V[D0E]=- 1
return D0E
endfunction
function LNE takes integer D0E returns boolean
set B3E=D0E
call TriggerEvaluate(NAE[FXV[D0E]])
return B4E
endfunction
function LBE takes integer D0E returns nothing
set B3E=D0E
call TriggerEvaluate(NNE[FXV[D0E]])
endfunction
function LCE takes nothing returns integer
local integer D0E=LOE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set FXV[D0E]=43
set LEE=D0E
set KBV[D0E]=1
set KCV[D0E]=1
set KDV[D0E]=null
set KFV[D0E]=.0
set KGV[D0E]=.0
set KHV[D0E]=.0
set KJV[D0E]=""
set KKV[D0E]=""
set KMV[D0E]=false
set KPV[D0E]=false
set KQV[D0E]=false
set KSV[D0E]=null
return D0E
endfunction
function LDE takes nothing returns integer
local integer D0E=LCE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set FXV[D0E]=91
set LEE=D0E
set YWV[D0E]=.0
set YYV[D0E]=0
return D0E
endfunction
function LFE takes nothing returns integer
local integer D0E=LCE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set FXV[D0E]=89
set LEE=D0E
return D0E
endfunction
function LGE takes nothing returns integer
local integer D0E=LCE()
local integer LEE
if ( D0E == 0 ) then
return 0
endif
set FXV[D0E]=90
set LEE=D0E
set YUV[D0E]=.0
return D0E
endfunction
function LHE takes integer i,integer a1 returns nothing
set B_E=a1
call TriggerExecute(BHE[i])
endfunction
function LJE takes integer i,trigger a1,integer a2 returns nothing
set B0E=a1
set B_E=a2
call TriggerExecute(BKE[i])
endfunction
function LKE takes integer i,boolexpr a1 returns nothing
set B1E=a1
call TriggerEvaluate(BLE[i])
endfunction
function LLE takes integer i,integer a1,unit a2 returns nothing
set B_E=a1
set BYE=a2
call TriggerExecute(BME[i])
endfunction
function LME takes integer i,integer a1,destructable a2 returns nothing
set B_E=a1
set BZE=a2
call TriggerExecute(BPE[i])
endfunction
function LPE takes integer i,group a1,real a2,real a3 returns nothing
set B2E=a1
set BUE=a2
set BWE=a3
call TriggerExecute(BTE[i])
endfunction
function LQE takes boolexpr a0 returns nothing
call LKE(1 , a0)
call DestroyBoolExpr(a0)
endfunction
//function LSE takes nothing returns nothing
//set V=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE),'zsmc',.0,.0,.0)
//call UnitApplyTimedLife(V,0,.001)
//call ShowUnit(V,false)
//call UnitAddAbility(V,'Aloc')
//endfunction
function LTE takes unit u returns boolean
local integer is=UnitInventorySize(u)
local integer s=0
loop
exitwhen s >= is
if UnitItemInSlot(u, s) == null then
return false
endif
set s=s + 1
endloop
return true
endfunction
function LUE takes unit u,item i returns boolean
local integer ic=GetItemCharges(i)
local integer is
local integer il
local integer it
local item ii
local integer LWE
local integer s=0
local real px
local real py
local real ua
if IsItemPowerup(i) then
return false
endif
if ic <= 0 then
call DisableTrigger(S1)
call UnitAddItem(u, i)
call EnableTrigger(S1)
else
set is=UnitInventorySize(u)
set il=GetItemLevel(i)
set it=GetItemTypeId(i)
call RemoveItem(i)
loop
set ii=UnitItemInSlot(u, s)
set LWE=GetItemCharges(ii)
if ii != null and ( not A or il == 0 or LWE < il ) and GetItemTypeId(ii) == it then
if A and il > 0 and LWE + ic > il then
call SetItemCharges(ii, il)
set ic=LWE + ic - il
else
call SetItemCharges(ii, LWE + ic)
set ic=0
endif
endif
set s=s + 1
exitwhen ic <= 0 or s >= is
endloop
if ic > 0 then
set px=GetUnitX(u)
set py=GetUnitY(u)
set s=0
loop
set ii=UnitItemInSlot(u, s)
if ii == null then
set ii=CreateItem(it, px, py)
if A and il > 0 and ic > il then
call SetItemCharges(ii, il)
set ic=ic - il
else
call SetItemCharges(ii, ic)
set ic=0
endif
call DisableTrigger(S1)
call UnitAddItem(u, ii)
call EnableTrigger(S1)
endif
set s=s + 1
exitwhen ic <= 0 or s >= is
endloop
if ic > 0 then
set ua=GetUnitFacing(u)
set px=GetUnitX(u) + 100 * Cos(ua * bj_DEGTORAD)
set py=GetUnitY(u) + 100 * Sin(ua * bj_DEGTORAD)
loop
if ic > il then
set LWE=il
set ic=ic - il
else
set LWE=ic
set ic=0
endif
set ii=CreateItem(it, px, py)
call SetItemCharges(ii, LWE)
exitwhen ic <= 0
endloop
return true
endif
endif
endif
return false
endfunction
function LYE takes nothing returns nothing
local unit u
local item i
local item ii
local integer x=0
local integer o
local real px
local real py
local player p
local string LZE
local sound L_E
if J > 0 then
loop
set u=B[x]
set i=D[x]
if u != null and i != null and not IsItemOwned(i) and GetWidgetLife(i) > 0 and GetWidgetLife(u) > 0 then
set o=GetUnitCurrentOrder(u)
set px=GetItemX(i) - GetUnitX(u)
set py=GetItemY(i) - GetUnitY(u)
if px * px + py * py <= 22500 or o != 851986 then
if o == 851986 then
set p=GetOwningPlayer(u)
set LZE="Sound\\Interface\\PickUpItem.wav"
if GetLocalPlayer() != p then
set LZE=""
endif
set L_E=CreateSound(LZE, false, true, false, 12700, 12700, "")
call AttachSoundToUnit(L_E, u)
call SetSoundVolume(L_E, 75)
call SetSoundDistances(L_E, 600., 1024.)
call SetSoundDistanceCutoff(L_E, 1536.)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
call IssueImmediateOrderById(u, 851972)
call SetUnitFacing(u, bj_RADTODEG * Atan2(GetItemY(i) - GetUnitY(u), GetItemX(i) - GetUnitX(u)))
if LUE(u , i) then
set LZE="Sound\\Interface\\HeroDropItem1.wav"
if GetLocalPlayer() != p then
set LZE=""
endif
set L_E=CreateSound(LZE, false, true, false, 12700, 12700, "")
call AttachSoundToUnit(L_E, u)
call SetSoundVolume(L_E, 75)
call SetSoundDistances(L_E, 600., 1024.)
call SetSoundDistanceCutoff(L_E, 1536.)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
endif
endif
set J=J - 1
if J > 0 then
set B[x]=B[J]
set D[x]=D[J]
set x=x - 1
endif
endif
elseif u != null or i != null then
call IssueImmediateOrderById(u, 851972)
set J=J - 1
if J > 0 then
set B[x]=B[J]
set D[x]=D[J]
set x=x - 1
endif
endif
set x=x + 1
exitwhen x >= J
endloop
endif
if O and K > 0 then
set x=0
loop
set u=C[x]
set i=F[x]
set ii=G[x]
set px=H[x]
if u != null and i != null and ii != null and px > 0 and UnitHasItem(u, i) and UnitHasItem(u, ii) then
set H[x]=px - .05
else
set K=K - 1
if K > 0 then
set C[x]=C[K]
set F[x]=F[K]
set G[x]=G[K]
set H[x]=H[K]
set x=x - 1
endif
endif
set x=x + 1
exitwhen x >= K
endloop
endif
if J <= 0 and ( not O or K <= 0 ) then
call PauseTimer(L)
endif
set u=null
set i=null
set p=null
set L_E=null
endfunction
function L0E takes nothing returns boolean
local integer x=0
if J > 0 then
loop
if B[x] == GetTriggerUnit() and ( GetOrderPointX() != GetItemX(D[x]) or GetOrderPointY() != GetItemY(D[x]) ) then
set J=J - 1
if J > 0 then
set B[x]=B[J]
set D[x]=D[J]
set x=x - 1
elseif not O or K <= 0 then
call PauseTimer(L)
endif
endif
set x=x + 1
exitwhen x >= J
endloop
endif
return false
endfunction
function L1E takes nothing returns boolean
local item i=GetOrderTargetItem()
local integer o=GetIssuedOrderId()
local unit u
local player p
local item ii
local integer is
local integer L2E
local integer s
local integer ss
local boolean L3E
local real ua
local string LZE
local sound L_E
if i == null then
set i=GetManipulatedItem()
endif
set s=GetItemCharges(i)
if i != null and ( o == 851971 or ( s > 0 and ( o == 0 or ( o > 852001 and o < 852008 ) ) ) ) then
set u=GetTriggerUnit()
set is=UnitInventorySize(u)
if is > 0 then
if o > 852001 and o < 852008 then
if UnitHasItem(u, i) then
set o=o - 852002
set ii=UnitItemInSlot(u, o)
if GetItemTypeId(ii) == GetItemTypeId(i) then
if ii == i then
if E then
set L3E=LTE(u)
if s > 1 and ( I or not L3E ) then
if X > 0 then
if X >= s then
set ss=s - 1
else
set ss=X
endif
else
set ss=s / 2
endif
call SetItemCharges(i, s - ss)
if O then
set ii=null
if K > 0 then
set o=0
loop
if u == C[o] then
set ii=G[o]
set L2E=GetItemCharges(ii)
set s=GetItemLevel(ii)
exitwhen true
endif
set o=o + 1
exitwhen o >= K
endloop
endif
endif
if O and ii != null and ii != i and F[o] == i and ( not A or s == 0 or L2E < s ) and UnitHasItem(u, ii) and GetItemTypeId(ii) == GetItemTypeId(i) then
call SetItemCharges(ii, L2E + ss)
set H[o]=R
else
set ua=GetUnitFacing(u)
set ii=CreateItem(GetItemTypeId(i), GetUnitX(u) + 100 * Cos(ua * bj_DEGTORAD), GetUnitY(u) + 100 * Sin(ua * bj_DEGTORAD))
call SetItemCharges(ii, ss)
if not L3E then
call DisableTrigger(S1)
call UnitAddItem(u, ii)
call EnableTrigger(S1)
if O then
set o=0
if K > 0 then
loop
if C[o] == u then
set F[o]=i
set G[o]=ii
set H[o]=R
set o=- 1
else
set o=o + 1
endif
exitwhen o >= K or o == - 1
endloop
endif
if o >= 0 then
if K == 0 then
call TimerStart(L, .05, true, function LYE)
endif
set C[K]=u
set F[K]=i
set G[K]=ii
set H[K]=R
set K=K + 1
endif
endif
else
set p=GetOwningPlayer(u)
set LZE="Sound\\Interface\\HeroDropItem1.wav"
if GetLocalPlayer() != p then
set LZE=""
endif
set L_E=CreateSound(LZE, false, true, false, 12700, 12700, "")
call AttachSoundToUnit(L_E, u)
call SetSoundVolume(L_E, 75)
call SetSoundDistances(L_E, 600., 1024.)
call SetSoundDistanceCutoff(L_E, 1536.)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
endif
endif
endif
endif
else
set is=GetItemLevel(i)
set L2E=GetItemCharges(ii)
if A and is > 0 and L2E + s > is then
if o < is and L2E < GetItemLevel(ii) then
call SetItemCharges(ii, L2E + s - is)
call SetItemCharges(i, is)
endif
else
call SetItemCharges(ii, L2E + s)
call RemoveItem(i)
endif
endif
endif
endif
elseif o == 851971 then
if LTE(u) then
set o=GetItemLevel(i)
set L2E=GetItemTypeId(i)
set s=0
loop
set ii=UnitItemInSlot(u, s)
if ii != i and GetItemTypeId(ii) == L2E and ( not A or o == 0 or GetItemCharges(ii) < o ) then
set s=is + 1
else
set s=s + 1
endif
exitwhen s >= is
endloop
if s > is and GetItemCharges(i) > 0 then
set s=0
if J > 0 then
loop
if B[s] == u then
set D[s]=i
set s=- 1
else
set s=s + 1
endif
exitwhen s >= J or s == - 1
endloop
endif
if s >= 0 then
if J == 0 then
call TimerStart(L, .05, true, function LYE)
endif
set B[J]=u
set D[J]=i
set J=J + 1
endif
call IssuePointOrderById(u, 851986, GetItemX(i), GetItemY(i))
else
call IssueImmediateOrderById(u, 851972)
set p=GetOwningPlayer(u)
if N != null and N != "" then
set LZE=N
if GetLocalPlayer() != p then
set LZE=""
endif
set L_E=CreateSound(LZE, false, false, false, 12700, 12700, "")
call SetSoundVolume(L_E, 127)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
endif
endif
endif
else
if LUE(u , i) then
set p=GetOwningPlayer(u)
set LZE="Sound\\Interface\\Sound\\Interface\\HeroDropItem1.wav.wav"
if GetLocalPlayer() != p then
set LZE=""
endif
set L_E=CreateSound(LZE, false, true, false, 12700, 12700, "")
call AttachSoundToUnit(L_E, u)
call SetSoundVolume(L_E, 75)
call SetSoundDistances(L_E, 600., 1024.)
call SetSoundDistanceCutoff(L_E, 1536.)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
endif
endif
endif
endif
set u=null
set p=null
set i=null
set ii=null
set L_E=null
return false
endfunction
function L4E takes nothing returns boolean
local string array LZE
local sound L_E
local integer x=0
set LZE[0]="Sound\\Interface\\PickUpItem.wav"
set LZE[1]="Sound\\Interface\\HeroDropItem1.wav"
if N != null and N != "" then
set LZE[2]=N
endif
loop
exitwhen LZE[x] == null
set L_E=CreateSound(LZE[x], false, false, false, 12700, 12700, "")
call SetSoundVolume(L_E, 0)
call StartSound(L_E)
call KillSoundWhenDone(L_E)
set x=x + 1
endloop
set L_E=null
call DestroyTrigger(GetTriggeringTrigger())
return false
endfunction
function L5E takes nothing returns nothing
local trigger L6E=CreateTrigger()
local trigger L7E=CreateTrigger()
local integer x=0
set S1=CreateTrigger()
loop
call TriggerRegisterPlayerUnitEvent(S1, Player(x), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
call TriggerRegisterPlayerUnitEvent(S1, Player(x), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, null)
call TriggerRegisterPlayerUnitEvent(L6E, Player(x), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, null)
set x=x + 1
exitwhen x >= 16
endloop
call TriggerRegisterTimerEvent(L7E, .0, false)
call TriggerAddCondition(S1, Condition(function L1E))
call TriggerAddCondition(L6E, Condition(function L0E))
call TriggerAddCondition(L7E, Condition(function L4E))
endfunction
function L8E takes string L9E,real x,real y,real z returns effect
set M=CreateDestructableZ('OTip', x, y, z, .0, 1., 0)
set P=AddSpecialEffect(L9E, x, y)
call RemoveDestructable(M)
return P
endfunction
function s__Event___EventStack_increment takes nothing returns nothing
set RKV=( RKV + 1 )
endfunction
function s__Event___EventStack_decrement takes nothing returns nothing
set RKV=( RKV - 1 )
endfunction
function s__Event_getTriggeringEventReg takes nothing returns integer
return RLV[RKV]
endfunction
function MVE takes nothing returns integer
local integer D0E=GBE()
set RTV[D0E]=D0E
set RUV[D0E]=D0E
return D0E
endfunction
function MEE takes integer D0E returns nothing
local integer MXE=RTV[D0E]
set RKV=( RKV + 1 )
loop
exitwhen MXE == D0E
set RWV=RSV[MXE]
if IsTriggerEnabled(RWV) then
set RLV[RKV]=MXE
if TriggerEvaluate(RWV) then
call TriggerExecute(RWV)
endif
else
call EnableTrigger(RWV)
if IsTriggerEnabled(RWV) then
call DisableTrigger(RWV)
else
set RUV[RTV[MXE]]=RUV[MXE]
set RTV[RUV[MXE]]=RTV[MXE]
call GCE(MXE)
endif
endif
set MXE=RTV[MXE]
endloop
set RKV=( RKV - 1 )
endfunction
function MOE takes integer D0E,trigger t returns integer
local integer MRE=GBE()
set RUV[MRE]=RUV[D0E]
set RTV[RUV[D0E]]=MRE
set RUV[D0E]=MRE
set RTV[MRE]=D0E
set RSV[MRE]=t
set RJV[( ( MRE ) )]=0
return MRE
endfunction
function CreateEvent takes nothing returns integer
return MVE()
endfunction
function GetTriggeringEventReg takes nothing returns integer
return ( RLV[RKV] )
endfunction
function MAE takes handle h returns nothing
local integer id=GetHandleId(h)
local integer qi
if HaveSavedInteger(Q, id, 0) then
set qi=LoadInteger(Q, id, 0)
set AYE[qi]=AYE[qi] + 1
elseif T > 0 then
set T=T - 1
set AYE[AZE[T]]=1
call SaveInteger(Q, id, 0, AZE[T])
else
set AYE[S]=1
call SaveInteger(Q, id, 0, S)
set S=S + 1
endif
endfunction
function MNE takes handle h returns nothing
local integer id=GetHandleId(h)
local integer qi=LoadInteger(Q, id, 0)
set AYE[qi]=AYE[qi] - 1
if AYE[qi] == 0 then
set AZE[T]=qi
set T=T + 1
call FlushChildHashtable(Q, id)
endif
endfunction
function MBE takes nothing returns nothing
if IsItemVisible(GetEnumItem()) then
set Y[Z]=GetEnumItem()
call SetItemVisible(Y[Z], false)
set Z=Z + 1
endif
endfunction
function MCE takes real x1,real y1 returns boolean
local real x2=.0
local real y2=.0
call SetRect(IV, .0, .0, 128., 128.)
call MoveRectTo(IV, x1, y1)
call EnumItemsInRect(IV, null, function MBE)
call SetItemPosition(NV, x1, y1)
set x2=GetItemX(NV)
set y2=GetItemY(NV)
call SetItemVisible(NV, false)
loop
exitwhen Z <= 0
set Z=Z - 1
call SetItemVisible(Y[Z], true)
set Y[Z]=null
endloop
return ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) < 10. * 10.
endfunction
function MDE takes nothing returns nothing
if W[0] then
call KillDestructable(GetEnumDestructable())
else
set W[1]=true
endif
endfunction
function MFE takes nothing returns boolean
local destructable MGE=GetFilterDestructable()
local boolean MHE=false
if GetDestructableLife(MGE) > .405 then
call ShowUnit(AV, true)
call SetUnitX(AV, GetWidgetX(MGE))
call SetUnitY(AV, GetWidgetY(MGE))
set MHE=IssueTargetOrderById(AV, 852018, MGE)
call IssueImmediateOrderById(AV, 851972)
call ShowUnit(AV, false)
set MGE=null
return MHE
endif
set MGE=null
return MHE
endfunction
function MJE takes real x,real y returns boolean
return ( x > EV or y > OV or x < XV or y < RV )
endfunction
function MKE takes integer D0E returns integer
local real x=GetUnitX(R0V[D0E])
local real y=GetUnitY(R0V[D0E])
if IsTerrainPathable(x, y, PATHING_TYPE_FLOATABILITY) then
return 1
elseif not IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY) then
return 2
endif
return 0
endfunction
function MLE takes unit MME,real MPE,real MQE,real MSE,string MTE,real MUE,boolean MWE,boolean MYE returns integer
local integer d=JNE()
set R0V[d]=MME
set R1V[d]=( 2. * MPE ) / ( MQE + 1. )
set R2V[d]=R1V[d] / MQE
set R3V[d]=Sin(MSE)
set R4V[d]=Cos(MSE)
set R5V[d]=MUE
set R9V[d]=MWE
set IVV[d]=MYE
set R6V[d]=MKE(d)
if MTE != "" and MTE != null then
set R8V[d]=true
endif
if R8V[d] then
set R7V[d]=AddSpecialEffectTarget(MTE, R0V[d], "chest")
else
if R6V[d] == 1 then
set R7V[d]=AddSpecialEffectTarget("war3mapImported\\Dust.mdx", R0V[d], "chest")
elseif R6V[d] == 2 then
set R7V[d]=AddSpecialEffectTarget("war3mapImported\\SlideWater.mdx", R0V[d], "chest")
endif
endif
return d
endfunction
function MZE takes integer D0E returns nothing
set R0V[D0E]=null
if R7V[D0E] != null then
call DestroyEffect(R7V[D0E])
set R7V[D0E]=null
endif
set W[0]=false
set W[1]=false
endfunction
function M_E takes integer D0E returns nothing
if D0E == null then
return
elseif ( R_V[D0E] != - 1 ) then
return
endif
call MZE(D0E)
set R_V[D0E]=RYV
set RYV=D0E
endfunction
function M0E takes nothing returns nothing
local integer i=1
local integer M1E=0
local integer M2E=0
local integer d=0
local real x=.0
local real y=.0
local real M3E=.0
local real M4E=.0
loop
exitwhen i > VV
set d=U[i]
set M1E=R6V[d]
set x=GetUnitX(R0V[d])
set y=GetUnitY(R0V[d])
if R5V[d] != .0 then
set W[0]=R5V[d] > .0
call SetRect(IV, x - R5V[d], y - R5V[d], x + R5V[d], y + R5V[d])
call EnumDestructablesInRect(IV, CV, function MDE)
endif
if IVV[d] then
if MCE(x + 50. * R4V[d] , y + 50. * R3V[d]) == false then
set M2E=1
if true then
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
endif
endif
endif
if not R8V[d] then
set R6V[d]=MKE(d)
if R6V[d] == 1 and M1E == 2 then
call DestroyEffect(R7V[d])
set R7V[d]=AddSpecialEffectTarget("war3mapImported\\Dust.mdx", R0V[d], "chest")
elseif R6V[d] == 2 and M1E == 1 then
call DestroyEffect(R7V[d])
set R7V[d]=AddSpecialEffectTarget("war3mapImported\\SlideWater.mdx", R0V[d], "chest")
endif
endif
if R1V[d] <= 0 or MJE(x , y) or W[1] or M2E == 1 or IEV[d] then
call M_E(d)
set U[i]=U[VV]
set VV=VV - 1
set i=i - 1
set M2E=0
else
set M3E=x + R1V[d] * R4V[d]
set M4E=y + R1V[d] * R3V[d]
if R9V[d] then
call SetUnitX(R0V[d], M3E)
call SetUnitY(R0V[d], M4E)
else
call SetUnitPosition(R0V[d], M3E, M4E)
endif
set R1V[d]=R1V[d] - R2V[d]
endif
set i=i + 1
endloop
if VV <= 0 then
call PauseTimer(BV)
set VV=0
endif
endfunction
function M5E takes unit MME returns boolean
local integer i=1
loop
exitwhen i > VV
if R0V[U[i]] == MME then
return true
endif
set i=i + 1
endloop
return false
endfunction
function M6E takes unit MME,real MPE,real MQE,real MSE,string MTE,real MUE,boolean MWE,boolean MYE returns boolean
local integer d=0
if MME == null or MPE <= .0 or MQE <= .0 then
return false
endif
set d=MLE(MME , MPE , ( MQE / .04 ) , ( MSE * .01745328 ) , MTE , MUE , MWE , MYE)
set VV=VV + 1
if VV == 1 then
call TimerStart(BV, .04, true, function M0E)
endif
set U[VV]=d
return true
endfunction
function M7E takes nothing returns nothing
set BV=CreateTimer()
set IV=Rect(.0, .0, 1., 1.)
set CV=Filter(function MFE)
set EV=GetRectMaxX(bj_mapInitialPlayableArea) - 64.
set OV=GetRectMaxY(bj_mapInitialPlayableArea) - 64.
set XV=GetRectMinX(bj_mapInitialPlayableArea) + 64.
set RV=GetRectMinY(bj_mapInitialPlayableArea) + 64.
set W[0]=false
set W[1]=false
set AV=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h007', .0, .0, .0)
call SetUnitPathing(AV, false)
call ShowUnit(AV, false)
call UnitAddAbility(AV, 'Ahrl')
//call UnitAddAbility(AV,'Aloc')
set NV=CreateItem('ciri', .0, .0)
call SetItemVisible(NV, false)
endfunction
function M8E takes nothing returns nothing
set EE=R2I(TimerGetTimeout(GetExpiredTimer()) * 800)
set XE=HV[EE]
call TriggerEvaluate(FV[EE])
set XE=0
loop
exitwhen XE == VE
set XE=XE + 1
if ZV[XE] then
set JV[UV[XE]]=TriggerAddCondition(FV[EE], KV[UV[XE]])
else
call TriggerRemoveCondition(FV[EE], WV[XE])
call LQE(YV[XE])
endif
endloop
set VE=0
set EE=- 1
endfunction
function M9E takes nothing returns boolean
set VE=VE + 1
set ZV[VE]=false
set WV[VE]=JV[OE]
set YV[VE]=KV[OE]
if MV[OE] == 0 then
set HV[EE]=PV[OE]
endif
set PV[MV[OE]]=PV[OE]
if PV[OE] == 0 then
set GV[EE]=MV[OE]
if GV[EE] < 1 then
call PauseTimer(DV[EE])
endif
else
set MV[PV[OE]]=MV[OE]
endif
set SV[TV]=OE
set TV=TV + 1
return false
endfunction
function PVE takes code PEE,integer PXE,real POE returns nothing
set RE=R2I(POE * 800)
if DV[RE] == null then
set DV[RE]=CreateTimer()
set FV[RE]=CreateTrigger()
endif
if TV == 1 then
set QV=QV + 1
set IE=QV
else
set TV=TV - 1
set IE=SV[TV]
endif
set KV[IE]=And(Condition(PEE), AE)
if EE == RE then
set VE=VE + 1
set ZV[VE]=true
set UV[VE]=IE
else
if GV[RE] < 1 then
call TimerStart(DV[RE], RE / 800., true, function M8E)
set HV[RE]=IE
endif
set JV[IE]=TriggerAddCondition(FV[RE], KV[IE])
endif
set LV[IE]=PXE
set PV[IE]=0
set MV[IE]=GV[RE]
set PV[GV[RE]]=IE
set GV[RE]=IE
endfunction
function PRE takes nothing returns integer
set OE=XE
set XE=PV[XE]
return LV[OE]
endfunction
function KT__KTinit takes nothing returns nothing
set AE=Condition(function M9E)
endfunction
function PIE takes nothing returns boolean
set KE=PRE()
call TriggerExecute(HE[KE])
set JE[KE]=JE[KE] - 1
if JE[KE] == 0 then
set GE=GE + 1
set FE[GE]=HE[KE]
return true
endif
return false
endfunction
function PAE takes nothing returns boolean
set LE=GetTriggeringTrigger()
set ME=GetTriggerExecCount(LE)
call DestroyTrigger(LE)
call LQE(DE[ME])
set HE[ME]=CreateTrigger()
set JE[ME]=ME
call PVE(function PIE , ME , .03125)
return false
endfunction
function PNE takes nothing returns boolean
set XE=8190
set LV[8190]=CE[GetTriggerExecCount(GetTriggeringTrigger())]
return false
endfunction
function PBE takes code PEE,integer PXE,real POE returns nothing
set QE=FE[GE]
set PE=GetTriggerExecCount(QE)
set GE=GE - 1
set CE[PE]=PXE
set DE[PE]=And(Condition(PEE), BE)
call TriggerAddCondition(QE, NE)
call TriggerAddCondition(QE, DE[PE])
call TriggerRegisterTimerEvent(QE, POE, true)
endfunction
function PCE takes trigger t,integer d returns nothing
if d > 64 then
call LJE(1 , t , d - 64)
set d=64
endif
loop
exitwhen d == 0
set d=d - 1
call TriggerExecute(t)
endloop
endfunction
function PDE takes nothing returns nothing
set NE=Condition(function PNE)
set BE=Condition(function PAE)
set MV[8190]=8190
set PV[8190]=8190
loop
set GE=GE + 1
set FE[GE]=CreateTrigger()
call LJE(1 , FE[GE] , 64 + 1 - GE)
exitwhen GE == 64
endloop
endfunction
function PFE takes code PEE,integer PXE,real POE returns nothing
if POE < .3 then
call PVE(PEE , PXE , POE)
else
call PBE(PEE , PXE , POE)
endif
endfunction
function PGE takes nothing returns nothing
set AE=Condition(function M9E)
call PDE()
endfunction
function PHE takes real x returns real
local real PJE=- 88.
local real PKE=88.
local real PLE
local integer i=20
loop
set PLE=( PJE + PKE ) / 2
exitwhen ( i <= 0 )
set i=i - 1
if ( Pow(bj_E, PLE) >= x ) then
set PKE=PLE
else
set PJE=PLE
endif
endloop
return PLE
endfunction
function PME takes unit u returns nothing
call UnitAddAbility(u, 'Amrf')
call UnitRemoveAbility(u, 'Amrf')
endfunction
function PPE takes real x,real y,real xt,real yt returns real
local real dx=xt - x
local real dy=yt - y
return SquareRoot(dx * dx + dy * dy)
endfunction
function PQE takes nothing returns boolean
return true
endfunction
function PSE takes real CHE,real x,real y returns group
call GroupEnumUnitsInRange(SE, x, y, CHE, WE)
return SE
endfunction
function PTE takes real x,real y returns real
call MoveLocation(UE, x, y)
return GetLocationZ(UE)
endfunction
function PUE takes real PWE,real zs,real zt,real q returns real
return ( PWE * Sin(q * bj_PI) ) + q * ( zt - zs )
endfunction
function PYE takes unit c,unit u returns boolean
if IsUnitEnemy(u, GetOwningPlayer(c)) then
if GetUnitState(u, UNIT_STATE_LIFE) > .0 then
if GetUnitAbilityLevel(u, 'Avul') <= 0 then
if IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) == false then
return IsUnitType(u, UNIT_TYPE_STRUCTURE) == false
endif
endif
endif
endif
return false
endfunction
function PZE takes unit u returns boolean
if IsUnitType(u, UNIT_TYPE_RESISTANT) == false then
if IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) == false then
if GetUnitState(u, UNIT_STATE_LIFE) > .0 then
if GetUnitAbilityLevel(u, 'Avul') <= 0 then
return GetUnitAbilityLevel(u, 'Bprg') <= 0
endif
endif
endif
endif
return false
endfunction
function P_E takes nothing returns nothing
set TE=CreateItem('sehr', 0, 0)
set UE=Location(0, 0)
set SE=CreateGroup()
set WE=Filter(function PQE)
call SetItemVisible(TE, false)
endfunction
function P0E takes real CDE returns real
local real r=CDE
loop
exitwhen r >= 0 and r <= 360
if r < 0 then
set r=r + 360
elseif r > 360 then
set r=r - 360
endif
endloop
return r
endfunction
function P1E takes real x0,real y0,real x1,real y1 returns real
return Atan2(( y1 - y0 ), ( x1 - x0 ))
endfunction
function P4E takes real h,real d,real x returns real
return ( 4 * h / d ) * ( d - x ) * ( x / d )
endfunction
function P5E takes real h,real d,real x,real z0,real z1 returns real
return ( 4 * h / d ) * ( d - x ) * ( x / d ) + ( ( ( z1 - z0 ) / d ) * x + z0 )
endfunction
function P6E takes integer D0E returns nothing
call DZE(D0E , false)
call DWE(D0E , .0)
call DTE(D0E , true)
endfunction
function P7E takes integer D0E returns nothing
if D0E == null then
return
elseif ( IRV[D0E] != - 1 ) then
return
endif
call P6E(D0E)
set IRV[D0E]=IXV
set IXV=D0E
endfunction
function P8E takes real x,real y,real z returns integer
local integer P9E=J_E()
call DKE(P9E , x)
call DME(P9E , y)
call DQE(P9E , z)
call DZE(P9E , true)
if P9E == IZV then
set IZV=IZV + 1
endif
return P9E
endfunction
function QVE takes integer D0E returns real
return SquareRoot(DJE(D0E) * DJE(D0E) + DLE(D0E) * DLE(D0E) + DPE(D0E) * DPE(D0E))
endfunction
function QEE takes integer D0E returns real
return P1E(.0 , .0 , DJE(D0E) , DLE(D0E))
endfunction
function QOE takes integer D0E,integer QRE returns nothing
call DKE(D0E , DJE(D0E) + DJE(QRE))
call DME(D0E , DLE(D0E) + DLE(QRE))
call DQE(D0E , DPE(D0E) + DPE(QRE))
endfunction
function QIE takes integer QAE,integer QNE returns integer
return P8E(DJE(QNE) - DJE(QAE) , DLE(QNE) - DLE(QAE) , DPE(QNE) - DPE(QAE))
endfunction
function QBE takes integer D0E,real QCE returns nothing
call DKE(D0E , DJE(D0E) * QCE)
call DME(D0E , DLE(D0E) * QCE)
call DQE(D0E , DPE(D0E) * QCE)
endfunction
function QDE takes integer a,real QCE returns integer
return P8E(DJE(a) * QCE , DLE(a) * QCE , DPE(a) * QCE)
endfunction
function QGE takes integer a returns integer
return QDE(a , 1 / QVE(a))
endfunction
function QHE takes integer D0E,real x,real y,real z,real CHE returns boolean
if DJE(D0E) > x - CHE and DJE(D0E) < x + CHE and DLE(D0E) > y - CHE and DLE(D0E) < y + CHE and DPE(D0E) > z - CHE and DPE(D0E) < z + CHE then
return true
else
return false
endif
endfunction
function QJE takes integer a,integer b,real CHE returns boolean
return QHE(a , DJE(b) , DLE(b) , DPE(b) , CHE)
endfunction
function QKE takes nothing returns nothing
local integer i=0
loop
exitwhen i == IZV
if DSE(( i )) and DYE(( i )) then
if DUE(( i )) >= .1 then
call DZE(( i ) , false)
call P7E(( i ))
endif
call DWE(( i ) , DUE(( i )) + .05)
endif
set i=i + 1
endloop
endfunction
function QLE takes nothing returns nothing
call TimerStart(ZE, .05, true, function QKE)
endfunction
function QME takes real x,real y returns real
call MoveLocation(YE, x, y)
return GetLocationZ(YE)
endfunction
function QPE takes nothing returns boolean
if ( GetWidgetLife(GetManipulatedItem()) == 0 ) then
call RemoveItem(GetManipulatedItem())
endif
return false
endfunction
function QQE takes nothing returns nothing
local trigger t=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DROP_ITEM)
call TriggerAddCondition(t, Condition(function QPE))
endfunction
function QSE takes nothing returns nothing
set VX=Location(.0, .0)
set EX=Location(.0, .0)
endfunction
function QTE takes real x1,real y1,real x2,real y2 returns real
return SquareRoot(( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 ))
endfunction
function QUE takes real x1,real y1,real x2,real y2 returns real
return bj_RADTODEG * ( Atan2(y2 - y1, x2 - x1) )
endfunction
function QWE takes real CDE,real x,real y,real QYE,real QZE returns real
return 2. * Atan2(QZE - y, QYE - x) + bj_PI - CDE * bj_DEGTORAD
endfunction
function Q_E takes player Q0E,string Q1E returns nothing
set Q1E="\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n|cffffcc00" + Q1E + "|r"
if ( GetLocalPlayer() == Q0E ) then
call ClearTextMessages()
call DisplayTimedTextToPlayer(Q0E, .52, .96, 2., Q1E)
call StartSound(AX)
endif
endfunction
function Q2E takes nothing returns nothing
set AX=CreateSoundFromLabel("InterfaceError", false, false, false, 10, 10)
endfunction
function Q3E takes nothing returns nothing
set NX=NX + 1
call TriggerEvaluate(BX)
endfunction
function Q4E takes nothing returns nothing
call TimerStart(CreateTimer(), .03125, true, function Q3E)
endfunction
function Q5E takes nothing returns nothing
set CX=InitHashtable()
endfunction
function Q6E takes unit J2E,string Q7E,string C9E returns nothing
local texttag tt=CreateTextTag()
local real Q8E=RMinBJ(StringLength(Q7E) * 5.5, 200.)
call SetTextTagText(tt, C9E + Q7E, .024)
call SetTextTagPos(tt, GetUnitX(J2E) - Q8E, GetUnitY(J2E), 16.)
call SetTextTagVelocity(tt, .0, .04)
call SetTextTagVisibility(tt, true)
call SetTextTagFadepoint(tt, 2.5)
call SetTextTagLifespan(tt, 4.)
call SetTextTagPermanent(tt, false)
set tt=null
endfunction
function Q9E takes unit J2E,integer SVE returns nothing
local texttag tt=CreateTextTag()
local string Q7E="-" + I2S(SVE)
call SetTextTagText(tt, Q7E, .024)
call SetTextTagPos(tt, GetUnitX(J2E) - 16., GetUnitY(J2E), .0)
call SetTextTagColor(tt, 82, 82, 255, 255)
call SetTextTagVelocity(tt, .0, .04)
call SetTextTagVisibility(tt, true)
call SetTextTagFadepoint(tt, 2.)
call SetTextTagLifespan(tt, 5.)
call SetTextTagPermanent(tt, false)
set Q7E=null
set tt=null
endfunction
function SEE takes unit J2E,integer SVE returns nothing
local texttag tt=CreateTextTag()
local string Q7E=I2S(SVE) + "!"
call SetTextTagText(tt, Q7E, .024)
call SetTextTagPos(tt, GetUnitX(J2E), GetUnitY(J2E), .0)
call SetTextTagColor(tt, 255, 0, 0, 255)
call SetTextTagVelocity(tt, .0, .04)
call SetTextTagVisibility(tt, true)
call SetTextTagFadepoint(tt, 2.)
call SetTextTagLifespan(tt, 5.)
call SetTextTagPermanent(tt, false)
set Q7E=null
set tt=null
endfunction
//function SRE takes nothing returns nothing
//local integer i=0
//local integer o=-1
//local boolean oops=false
//set FX=InitHashtable()
//loop
//exitwhen(i==256)
//set A_E[i]=CreateTimer()
//call SaveInteger(FX,0,GetHandleId((A_E[i])),(HX))
//set i=i+1
//endloop
//set GX=256
//endfunction
function SIE takes nothing returns nothing
local integer i=JX
local integer sw
loop
exitwhen i <= 0
set sw=KX[i]
set I6V[sw]=I6V[sw] - I7V[sw]
call SetUnitVertexColor(I5V[sw], 255, 255, 255, R2I(I6V[sw]))
set I8V[sw]=I8V[sw] - 1
if I8V[sw] == 0 then
set KX[i]=KX[JX]
set KX[JX]=sw
set JX=JX - 1
call RemoveUnit(I5V[sw])
if JX == 0 then
call PauseTimer(MX)
endif
endif
set i=i - 1
endloop
endfunction
function SAE takes integer id,real x,real y,real K0E,real CIE,string SNE,real SBE returns nothing
local unit SCE=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), id, x, y, K0E)
call UnitAddAbility(SCE, 'Aloc')
call PauseUnit(SCE, true)
call SetUnitX(SCE, x)
call SetUnitY(SCE, y)
call SetUnitAnimation(SCE, SNE)
call SetUnitTimeScale(SCE, SBE)
set JX=JX + 1
if JX > LX then
set LX=LX + 1
set KX[JX]=K9E()
endif
set I6V[KX[JX]]=255.
set I8V[KX[JX]]=R2I(CIE / .03125)
set I7V[KX[JX]]=255. / I2R(I8V[KX[JX]])
set I5V[KX[JX]]=SCE
if JX == 1 then
call TimerStart(MX, .03125, true, function SIE)
endif
endfunction
function SDE takes integer id,real x,real y,real K0E,real CIE,integer DGE,real SBE returns nothing
local unit SCE=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), id, x, y, K0E)
call UnitAddAbility(SCE, 'Aloc')
call PauseUnit(SCE, true)
call SetUnitX(SCE, x)
call SetUnitY(SCE, y)
call SetUnitAnimationByIndex(SCE, DGE)
call SetUnitTimeScale(SCE, SBE)
set JX=JX + 1
if JX > LX then
set LX=LX + 1
set KX[JX]=K9E()
endif
set I6V[KX[JX]]=255.
set I8V[KX[JX]]=R2I(CIE / .03125)
set I7V[KX[JX]]=255. / I2R(I8V[KX[JX]])
set I5V[KX[JX]]=SCE
if JX == 1 then
call TimerStart(MX, .03125, true, function SIE)
endif
endfunction
function SFE takes nothing returns nothing
local integer i=PX
local integer sw
loop
exitwhen i <= 0
set sw=QX[i]
set AOV[sw]=AOV[sw] - ARV[sw]
call SetUnitVertexColor(AXV[sw], 50, 50, 50, R2I(AOV[sw]))
set AIV[sw]=AIV[sw] - 1
if AIV[sw] == 0 then
set QX[i]=QX[PX]
set QX[PX]=sw
set PX=PX - 1
call RemoveUnit(AXV[sw])
if PX == 0 then
call PauseTimer(TX)
endif
endif
set i=i - 1
endloop
endfunction
function SGE takes integer id,real x,real y,real K0E,real CIE,string SNE,real SBE returns nothing
local unit SCE=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), id, x, y, K0E)
call UnitAddAbility(SCE, 'Aloc')
call PauseUnit(SCE, true)
call SetUnitX(SCE, x)
call SetUnitY(SCE, y)
call SetUnitAnimation(SCE, SNE)
call SetUnitTimeScale(SCE, SBE)
set PX=PX + 1
if PX > SX then
set SX=SX + 1
set QX[PX]=K8E()
endif
set AOV[QX[PX]]=255.
set AIV[QX[PX]]=R2I(CIE / .03125)
set ARV[QX[PX]]=255. / I2R(AIV[QX[PX]])
set AXV[QX[PX]]=SCE
if PX == 1 then
call TimerStart(TX, .03125, true, function SFE)
endif
endfunction
function SHE takes integer id,real x,real y,real K0E,real CIE,integer DGE,real SBE returns nothing
local unit SCE=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), id, x, y, K0E)
call UnitAddAbility(SCE, 'Aloc')
call PauseUnit(SCE, true)
call SetUnitX(SCE, x)
call SetUnitY(SCE, y)
call SetUnitAnimationByIndex(SCE, DGE)
call SetUnitTimeScale(SCE, SBE)
set PX=PX + 1
if PX > SX then
set SX=SX + 1
set QX[PX]=K8E()
endif
set AOV[QX[PX]]=255.
set AIV[QX[PX]]=R2I(CIE / .03125)
set ARV[QX[PX]]=255. / I2R(AIV[QX[PX]])
set AXV[QX[PX]]=SCE
if PX == 1 then
call TimerStart(TX, .03125, true, function SFE)
endif
endfunction
function SJE takes unit u1,location l1,real SKE,real SLE returns integer
local integer d=K7E()
local real dx=GetUnitX(u1) - GetLocationX(l1)
local real dy=GetUnitY(u1) - GetLocationY(l1)
set AJV[d]=l1
set ACV[d]=u1
set ADV[d]=SKE
set AFV[d]=SLE
set AGV[d]=SquareRoot(dx * dx + dy * dy)
set AHV[d]=0
set AKV[WX]=d
return d
endfunction
function SME takes integer D0E returns nothing
set ACV[D0E]=null
set AJV[D0E]=null
call RemoveLocation(AJV[D0E])
endfunction
function SPE takes integer D0E returns nothing
if D0E == null then
return
elseif ( ABV[D0E] != - 1 ) then
return
endif
call SME(D0E)
set ABV[D0E]=AAV
set AAV=D0E
endfunction
function SQE takes nothing returns nothing
call KillDestructable(GetEnumDestructable())
endfunction
function SSE takes unit u returns nothing
local rect r
local real STE=GetUnitX(u)
local real SUE=GetUnitY(u)
local real CHE=90
local location CJE=GetUnitLoc(u)
if ( CHE >= 0 ) then
set bj_enumDestructableCenter=CJE
set bj_enumDestructableRadius=CHE
set r=Rect(STE - CHE, SUE - CHE, STE + CHE, SUE + CHE)
call EnumDestructablesInRect(r, filterEnumDestructablesInCircleBJ, function SQE)
call RemoveRect(r)
call RemoveLocation(CJE)
endif
set r=null
set CJE=null
endfunction
function SWE takes nothing returns nothing
local integer i=0
local integer d
local real x
local real y
local real x1
local real y1
local real dx
local real dy
local real d2
local group g=CreateGroup()
local boolexpr CME
loop
exitwhen i >= WX
set d=AKV[i]
set x1=GetUnitX(ACV[d])
set y1=GetUnitY(ACV[d])
set dx=GetLocationX(AJV[d]) - x1
set dy=GetLocationY(AJV[d]) - y1
set d2=SquareRoot(dx * dx + dy * dy)
set x=x1 + ADV[d] * dx / d2
set y=y1 + ADV[d] * dy / d2
call SetUnitX(ACV[d], x)
call SetUnitY(ACV[d], y)
if true then
if IsTerrainPathable(x, y, PATHING_TYPE_FLOATABILITY) then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FlakTarget3.mdx", ACV[d], "origin"))
elseif not IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY) then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\WaterElementalMissile\\WaterElementalMissile.mdl", ACV[d], "origin"))
endif
endif
if true then
call SSE(ACV[d])
endif
set AHV[d]=AHV[d] + ADV[d]
if ADV[d] - AFV[d] >= .0 then
set ADV[d]=ADV[d] - AFV[d]
endif
if AHV[d] >= AGV[d] or AHV[d] <= 1 or ADV[d] <= 1 then
set WX=WX - 1
set AKV[i]=AKV[WX]
set i=i - 1
if WX <= 0 then
call PauseTimer(UX)
set WX=0
endif
call SPE(d)
endif
set i=i + 1
endloop
set g=null
set CME=null
endfunction
function SYE takes unit u,location l,real SZE,real S_E returns nothing
local integer d=SJE(u , l , SZE , S_E)
set WX=WX + 1
if WX == 1 then
call TimerStart(UX, .02, true, function SWE)
endif
endfunction
function S0E takes unit u returns boolean
//if GetUnitTypeId(u) == 'h007' or GetUnitTypeId(u) == 'h00W' or GetUnitTypeId(u) == 'h004' or GetUnitTypeId(u) == 'o016' or GetUnitTypeId(u) == 'o003' or GetUnitTypeId(u) == 'h00L' then
//return true
//endif

if GetUnitTypeId(u) == 'h018' then
return true
else
return GetUnitAbilityLevel(u, 'Aloc') != 1 and GetUnitTypeId(u) != 'e005' and GetOwningPlayer(u) != Player(PLAYER_NEUTRAL_PASSIVE) and GetUnitAbilityLevel(u, 'Avul') != 1
endif
endfunction
function S1E takes nothing returns integer
if FO[DO] == 0 then
if EO == 0 then
set XO=XO + 1
set FO[DO]=XO
else
set FO[DO]=VO[EO]
set EO=EO - 1
endif
call SetUnitUserData(GO[DO], FO[DO])
set YX[FO[DO]]=GO[DO]
set RO=RO + 1
set OO[RO]=FO[DO]
endif
return FO[DO]
endfunction
function S4E takes nothing returns boolean
return IsUnitType(GetFilterUnit(), UNIT_TYPE_DEAD) or GetUnitAbilityLevel(GetFilterUnit(), 'AIDS') == 0
endfunction
function S5E takes nothing returns nothing
loop
exitwhen NO == 0
set NO=NO - 1
set BO[0]=AO[NO]
if YX[BO[0]] != null then
if GetUnitUserData(YX[BO[0]]) == 0 then
if ZX[BO[0]] == 0 then
call TriggerEvaluate(KO)
set EO=EO + 1
set VO[EO]=BO[0]
set YX[BO[0]]=null
endif
endif
endif
endloop
endfunction
function S6E takes nothing returns boolean
if GetIssuedOrderId() == 852056 then
set MO=GetUnitUserData(GetOrderedUnit())
if AO[NO - 1] != MO then
set AO[NO]=MO
set NO=NO + 1
call TimerStart(IO, 0, false, function S5E)
endif
endif
return false
endfunction
function S7E takes nothing returns boolean
set DO=DO + 1
set GO[DO]=GetFilterUnit()
if GetUnitUserData(GO[DO]) == 0 then
if S0E(GO[DO]) then
if EO == 0 then
set XO=XO + 1
set FO[DO]=XO
else
set FO[DO]=VO[EO]
set EO=EO - 1
endif
call SetUnitUserData(GO[DO], FO[DO])
set YX[FO[DO]]=GO[DO]
call UnitAddAbility(GO[DO], 'AIDS')
call UnitMakeAbilityPermanent(GO[DO], true, 'AIDS')
call TriggerEvaluate(HO)
else
set FO[DO]=0
call TriggerEvaluate(HO)
endif
endif
set DO=DO - 1
return false
endfunction
function S8E takes nothing returns nothing
local region r=CreateRegion()
local group g=CreateGroup()
local integer n=15
local trigger t=CreateTrigger()
loop
call TriggerRegisterPlayerUnitEvent(t, Player(n), EVENT_PLAYER_UNIT_ISSUED_ORDER, Filter(function S4E))
call SetPlayerAbilityAvailable(Player(n), 'AIDS', false)
exitwhen n == 0
set n=n - 1
endloop
set n=15
call TriggerAddCondition(t, Filter(function S6E))
set t=null
call RegionAddRect(r, GetWorldBounds())
call TriggerRegisterEnterRegion(CreateTrigger(), r, Filter(function S7E))
set r=null
loop
call GroupEnumUnitsOfPlayer(g, Player(n), Filter(function S7E))
exitwhen n == 0
set n=n - 1
endloop
call DestroyGroup(g)
set g=null
endfunction
function S9E takes nothing returns nothing
endfunction
function TVE takes integer D0E returns nothing
set ASV[D0E]=ASV[D0E] + .5
set AZV[D0E]=ASV[D0E] <= ATV[D0E] and GetUnitAbilityLevel(AUV[D0E], AQV[D0E]) > 0
endfunction
function TEE takes integer D0E returns nothing
call UnitRemoveAbility(AUV[D0E], AQV[D0E])
set AUV[D0E]=null
call K6E(D0E)
endfunction
function TXE takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == AYV
if not A_V[A7E[DGE]] then
if AZV[A7E[DGE]] then
call TVE(A7E[DGE])
set DGE=DGE + 1
else
call TEE(A7E[DGE])
set AYV=AYV - 1
set A7E[DGE]=A7E[AYV]
endif
else
set DGE=DGE + 1
endif
endloop
if AYV == 0 then
call PauseTimer(AWV)
endif
endfunction
function TRE takes nothing returns nothing
if GetDestructableLife(GetEnumDestructable()) > 0 then
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endif
endfunction
function TIE takes integer D0E returns nothing
set A4V[D0E]=.0
set NNV[D0E]=false
set NAV[D0E]=true
call ShowUnit(A3V[D0E], false)
call RemoveUnit(A3V[D0E])
call K4E(D0E)
endfunction
function TAE takes nothing returns nothing
local integer DGE=1
loop
exitwhen DGE == NBV
if NAV[( DGE )] and NNV[( DGE )] then
set A4V[( DGE )]=A4V[( DGE )] + .2
if A4V[( DGE )] >= A5V[( DGE )] then
call TIE(( DGE ))
endif
endif
set DGE=DGE + 1
endloop
endfunction
function TNE takes real x,real y,real K0E returns integer
local integer TBE=K3E()
set A3V[TBE]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'face', x, y, K0E)
call K1E(TBE , GetUnitTurnSpeed(A3V[TBE]))
call KYE(TBE , x)
call KZE(TBE , y)
set A9V[TBE]=K0E
call K_E(TBE , 0)
set NNV[TBE]=true
call UnitAddAbility(A3V[TBE], 'Amrf')
call UnitRemoveAbility(A3V[TBE], 'Amrf')
if TBE == NBV then
set NBV=NBV + 1
endif
return TBE
endfunction
function TCE takes nothing returns nothing
call TimerStart(NCV, .2, true, function TAE)
endfunction
function TFE takes integer D0E returns real
set A4V[( D0E )]=.0
return A6V[D0E]
endfunction
function TGE takes integer D0E,real x returns nothing
set A6V[D0E]=x
call SetUnitX(A3V[D0E], x)
set A4V[( D0E )]=.0
endfunction
function THE takes integer D0E returns real
set A4V[( D0E )]=.0
return A7V[D0E]
endfunction
function TJE takes integer D0E,real y returns nothing
set A7V[D0E]=y
call SetUnitY(A3V[D0E], y)
set A4V[( D0E )]=.0
endfunction
function TKE takes integer D0E returns real
set A4V[( D0E )]=.0
return A8V[D0E]
endfunction
function TLE takes integer D0E,real z returns nothing
set A8V[D0E]=z
call SetUnitFlyHeight(A3V[D0E], z, .0)
set A4V[( D0E )]=.0
endfunction
function TME takes integer D0E,real K0E returns nothing
set A9V[D0E]=P0E(K0E)
call SetUnitFacing(A3V[D0E], K0E)
set A4V[( D0E )]=.0
endfunction
function TPE takes integer D0E,real K0E returns nothing
local integer z=R2I(K0E * .7)
loop
exitwhen z >= 0 and z <= 252
if z > 252 then
set z=z - 252
else
set z=z + 252
endif
endloop
call SetUnitAnimationByIndex(A3V[D0E], z)
set A4V[( D0E )]=.0
endfunction
function TQE takes integer D0E,real K2E returns nothing
set NVV[D0E]=K2E
call SetUnitTurnSpeed(A3V[D0E], K2E)
set A4V[( D0E )]=.0
endfunction
function TSE takes integer D0E,string TTE,string TUE returns nothing
call AddSpecialEffectTarget(TTE, A3V[D0E], TUE)
set A4V[( D0E )]=.0
endfunction
function GetNextGroup takes nothing returns group
set SO=SO + 1
if QO < SO then
set TO[SO]=CreateGroup()
set QO=SO
endif
call MAE(TO[SO])
set A0E[( LoadInteger(Q, GetHandleId(( TO[SO] )), 0) )]=SO
return TO[SO]
endfunction
function TWE takes nothing returns nothing
if VR then
call GroupClear(ER)
set VR=false
endif
call GroupAddUnit(ER, GetEnumUnit())
endfunction
function TYE takes nothing returns group
if OR == 0 then
set XR[0]=CreateGroup()
else
set OR=OR - 1
endif
call SaveInteger(ZO, 0, GetHandleId(XR[OR]), 1)
return XR[OR]
endfunction
function TZE takes group g returns boolean
local integer id=GetHandleId(g)
if g == null then
return false
elseif not HaveSavedInteger(ZO, 0, id) then
return false
elseif LoadInteger(ZO, 0, id) == 2 then
return false
elseif OR == 8191 then
call DestroyGroup(g)
return false
endif
call SaveInteger(ZO, 0, id, 2)
call GroupClear(g)
set XR[OR]=g
set OR=OR + 1
return true
endfunction
function T_E takes nothing returns boolean
return IsUnitInRangeXY(GetFilterUnit(), RR, IR, AR)
endfunction
function T0E takes boolexpr b returns nothing
local integer T1E=GetHandleId(b)
if HaveSavedHandle(NR, 0, T1E) then
call LQE(LoadBooleanExprHandle(NR, 0, T1E))
call RemoveSavedHandle(NR, 0, T1E)
endif
endfunction
function T2E takes group T3E,real x,real y,real CHE,boolexpr CME returns nothing
local real T4E=RR
local real T5E=IR
local real T6E=AR
local integer T1E=0
set RR=x
set IR=y
set AR=CHE
if CME == null then
set CME=Condition(function T_E)
else
set T1E=GetHandleId(CME)
if HaveSavedHandle(NR, 0, T1E) then
set CME=LoadBooleanExprHandle(NR, 0, T1E)
else
set CME=And(Condition(function T_E), CME)
call SaveBooleanExprHandle(NR, 0, T1E, CME)
endif
endif
call GroupEnumUnitsInRange(T3E, x, y, ( ( ( CHE ) * 1. ) + 197. ), CME)
set RR=T4E
set IR=T5E
set AR=T6E
endfunction
function T7E takes nothing returns boolean
return true
endfunction
function T8E takes nothing returns boolean
return false
endfunction
function T9E takes nothing returns nothing
set WO=Condition(function T7E)
set YO=Condition(function T8E)
endfunction
function UVE takes integer D0E returns nothing
local real UEE
local real x
local real y
local real z
set NJV[D0E]=NJV[D0E] + NMV[D0E]
if NJV[D0E] > NKV[D0E] then
call SetUnitFlyHeight(NHV[D0E], GetUnitDefaultFlyHeight(NHV[D0E]), 0)
set N_V[D0E]=false
else
set x=NPV[D0E] + NSV[D0E]
set y=NQV[D0E] + NTV[D0E]
set z=PTE(x , y)
set UEE=PUE(NUV[NWV[D0E] + 1] , NUV[NWV[D0E]] , NUV[NWV[D0E] + 2] , NJV[D0E] / NKV[D0E]) + ( NUV[NWV[D0E]] - z )
if RectContainsCoords(GR, x, y) then
call SetUnitPosition(NHV[D0E], x, y)
set NPV[D0E]=x
set NQV[D0E]=y
endif
call SetUnitFlyHeight(NHV[D0E], UEE, 0)
endif
endfunction
function UXE takes integer D0E returns nothing
set NHV[D0E]=null
call KWE(D0E)
endfunction
function UOE takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == NZV
if not N0V[A8E[DGE]] then
if N_V[A8E[DGE]] then
call UVE(A8E[DGE])
set DGE=DGE + 1
else
call UXE(A8E[DGE])
set NZV=NZV - 1
set A8E[DGE]=A8E[NZV]
endif
else
set DGE=DGE + 1
endif
endloop
if NZV == 0 then
call PauseTimer(NYV)
endif
endfunction
function UIE takes integer D0E returns nothing
local real Ux=GetUnitX(N4V[D0E])
local real Uy=GetUnitY(N4V[D0E])
local real Tx=GetUnitX(N5V[D0E])
local real Ty=GetUnitY(N5V[D0E])
local real UAE=PPE(Ux , Uy , Tx , Ty)
local real CDE
if UAE > 10. then
set CDE=Atan2(Ty - Uy, Tx - Ux)
set Ux=Ux + N7V[D0E] * Cos(CDE)
set Uy=Uy + N7V[D0E] * Sin(CDE)
call SetUnitPosition(N4V[D0E], Ux, Uy)
call SetUnitFlyHeight(N4V[D0E], N8V[D0E], N9V[D0E])
else
set BRV[D0E]=false
endif
endfunction
function UNE takes integer D0E returns nothing
set DR=N5V[D0E]
set BR=N4V[D0E]
set CR=N6V[D0E]
set FR=BEV[D0E]
call ExecuteFunc(BVV[D0E])
set N4V[D0E]=null
set N5V[D0E]=null
set N6V[D0E]=null
call KTE(D0E)
endfunction
function UBE takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == BOV
if not BIV[A9E[DGE]] then
if BRV[A9E[DGE]] then
call UIE(A9E[DGE])
set DGE=DGE + 1
else
call UNE(A9E[DGE])
set BOV=BOV - 1
set A9E[DGE]=A9E[BOV]
endif
else
set DGE=DGE + 1
endif
endloop
if BOV == 0 then
call PauseTimer(BXV)
endif
endfunction
function UDE takes integer D0E returns nothing
local unit a
local group g
local integer c
set BLV[D0E]=BLV[D0E] - BFV[D0E]
if BLV[D0E] > .0 then
set BMV[D0E]=BMV[D0E] + BFV[D0E] * Cos(BGV[D0E])
set BPV[D0E]=BPV[D0E] + BFV[D0E] * Sin(BGV[D0E])
call SetUnitPosition(BCV[D0E], BMV[D0E], BPV[D0E])
call SetUnitFlyHeight(BCV[D0E], BHV[D0E], BJV[D0E])
set g=PSE(BKV[D0E] , BMV[D0E] , BPV[D0E])
set c=0
loop
set a=FirstOfGroup(g)
exitwhen a == null
call GroupRemoveUnit(g, a)
if PYE(BDV[D0E] , a) and a != BCV[D0E] then
set c=c + 1
endif
endloop
call GroupClear(g)
set g=null
set BWV[D0E]=c <= 0
else
set BWV[D0E]=false
endif
endfunction
function UFE takes integer D0E returns nothing
set CR=BDV[D0E]
set BR=BCV[D0E]
set FR=BSV[D0E]
call ExecuteFunc(BQV[D0E])
set BCV[D0E]=null
set BDV[D0E]=null
call KQE(D0E)
endfunction
function UGE takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == BUV
if not BYV[NVE[DGE]] then
if BWV[NVE[DGE]] then
call UDE(NVE[DGE])
set DGE=DGE + 1
else
call UFE(NVE[DGE])
set BUV=BUV - 1
set NVE[DGE]=NVE[BUV]
endif
else
set DGE=DGE + 1
endif
endloop
if BUV == 0 then
call PauseTimer(BTV)
endif
endfunction
function UJE takes nothing returns nothing
set GR=bj_mapInitialPlayableArea
endfunction
function UKE takes integer D0E,unit u returns boolean
return ( IsUnitEnemy(u, CFV[D0E]) and GetWidgetLife(u) >= .405 and ( IsUnitType(u, UNIT_TYPE_DEAD) != true ) )
endfunction
function ULE takes nothing returns boolean
set CUV=GetFilterUnit()
if ( B4V[B1V[CSV]] != null ) then
call KJE(CSV , CUV)
endif
if UKE(CSV , CUV) then
call UnitDamageTarget(B9V[CSV], CUV, CCV[CSV], false, false, CKV[CSV], CLV[CSV], null)
if ( B5V[B1V[CSV]] != null ) then
call KKE(CSV , CUV)
endif
endif
return true
endfunction
function UME takes nothing returns nothing
set CTV=LoadInteger(QR, GetHandleId(GetTriggerUnit()), 0)
if CTV != 0 then
set CAV[CTV]=.0
endif
endfunction
function UPE takes integer D0E returns nothing
local unit UQE=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'face', CMV, CPV, .0)
if UnitAddAbility(UQE, 'Amrf') then
call UnitRemoveAbility(UQE, 'Amrf')
endif
call SetUnitScale(UQE, CGV[D0E], CGV[D0E], CGV[D0E])
call SetUnitFlyHeight(UQE, CJV[D0E], .0)
call DestroyEffect(AddSpecialEffectTarget(CDV[D0E], UQE, "origin"))
call UnitApplyTimedLife(UQE, 'BTLF', 1.)
set CSV=D0E
call GroupEnumUnitsInRange(JR, CMV, CPV, CEV[D0E], Condition(function ULE))
set UQE=null
if ( B3V[B1V[D0E]] != null ) then
call KHE(D0E)
endif
endfunction
function USE takes integer D0E returns real
local real tx=.0
loop
set tx=GetRandomReal(B7V[D0E] - CVV[D0E], B7V[D0E] + CVV[D0E])
exitwhen ( tx >= MR and tx <= KR )
endloop
return tx
endfunction
function UTE takes integer D0E returns real
local real ty=.0
loop
set ty=GetRandomReal(B8V[D0E] - CVV[D0E], B8V[D0E] + CVV[D0E])
exitwhen ( ty >= PR and ty <= LR )
endloop
return ty
endfunction
function UUE takes integer D0E returns nothing
local integer a=1
local integer b=0
set CQV=D0E
set CIV[CQV]=CIV[CQV] + .03
if CIV[CQV] >= CNV[CQV] then
set CNV[CQV]=CNV[CQV] + CRV[CQV]
set b=GetRandomInt(COV[CQV], CXV[CQV])
loop
exitwhen a > b
if CHV[CQV] then
set B7V[CQV]=GetUnitX(B9V[CQV])
set B8V[CQV]=GetUnitY(B9V[CQV])
endif
set CMV=USE(CQV)
set CPV=UTE(CQV)
call UPE(CQV)
set a=a + 1
endloop
endif
if CIV[CQV] >= CAV[CQV] then
call LIE(CQV)
if ( B6V[B1V[CQV]] != null ) then
call KLE(CQV)
endif
if CBV[CQV] then
call FlushChildHashtable(QR, GetHandleId(B9V[CQV]))
endif
call KME(CQV)
endif
endfunction
function UWE takes nothing returns boolean
local integer D0E=CWV[( 0 )]
loop
exitwhen D0E == 0
call UUE(D0E)
set D0E=CWV[D0E]
endloop
return false
endfunction
function UYE takes integer D0E returns nothing
set CYV[CWV[( 0 )]]=D0E
set CWV[D0E]=CWV[( 0 )]
set CWV[( 0 )]=D0E
set CYV[D0E]=( 0 )
endfunction
function UZE takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function UWE))
endfunction
function U_E takes unit U0E,real x,real y,real U1E,real U2E,real M2E,integer U3E,integer U4E,real ni,real U5E,real U6E,real U7E,boolean U8E,boolean U9E,boolean WVE,string WEE,attacktype at,damagetype dt returns integer
local integer a=1
local integer b=GetRandomInt(U3E, U4E)
set CQV=LAE()
set B9V[CQV]=U0E
set CFV[CQV]=GetOwningPlayer(U0E)
set B7V[CQV]=x
set B8V[CQV]=y
set CHV[CQV]=WVE
set CJV[CQV]=M2E
set CVV[CQV]=U1E
set CCV[CQV]=U6E
set CBV[CQV]=U8E
set CDV[CQV]=WEE
set COV[CQV]=U3E
set CXV[CQV]=U4E
set CRV[CQV]=ni
set CNV[CQV]=ni
set CAV[CQV]=U5E
set CGV[CQV]=U7E
set CEV[CQV]=U2E
set CIV[CQV]=.0
set CKV[CQV]=at
set CLV[CQV]=dt
if U8E then
call SaveInteger(QR, GetHandleId(U0E), 0, CQV)
endif
call UYE(CQV)
if U9E then
loop
exitwhen a > b
set CMV=USE(CQV)
set CPV=UTE(CQV)
call KHE(CQV)
set a=a + 1
endloop
endif
return CQV
endfunction
function WXE takes nothing returns nothing
local trigger WOE=CreateTrigger()
local integer i=0
set KR=GetRectMaxX(bj_mapInitialPlayableArea)
set LR=GetRectMaxY(bj_mapInitialPlayableArea)
set MR=GetRectMinX(bj_mapInitialPlayableArea)
set PR=GetRectMinY(bj_mapInitialPlayableArea)
call TriggerAddAction(WOE, function UME)
loop
exitwhen i > 15
call TriggerRegisterPlayerUnitEvent(WOE, Player(i), EVENT_PLAYER_UNIT_SPELL_CAST, null)
call TriggerRegisterPlayerUnitEvent(WOE, Player(i), EVENT_PLAYER_UNIT_ISSUED_ORDER, null)
call TriggerRegisterPlayerUnitEvent(WOE, Player(i), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, null)
call TriggerRegisterPlayerUnitEvent(WOE, Player(i), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, null)
set i=i + 1
endloop
endfunction
function WRE takes integer i1,integer i2,integer i3,integer i4,integer i5,integer i6,integer MHE,string WIE,string WAE,boolean WNE,integer WBE returns integer
local integer i=KIE()
local integer WCE
local integer WDE
local boolean WFE=false
local boolean array b
local integer j=0
local integer k
local integer l=0
set DEV[DXV[i]]=i1
set DEV[DXV[i] + 1]=i2
set DEV[DXV[i] + 2]=i3
set DEV[DXV[i] + 3]=i4
set DEV[DXV[i] + 4]=i5
set DEV[DXV[i] + 5]=i6
set DOV[i]=MHE
set DBV[i]=true
set DNV[i]=WNE
set DRV[i]=WBE
set b[0]=true
set b[1]=i2 != i1
set b[2]=i3 != i2 and i3 != i1
set b[3]=i4 != i3 and i4 != i2 and i4 != i1
set b[4]=i5 != i4 and i5 != i3 and i5 != i2 and i5 != i1
set b[5]=i6 != i5 and i6 != i4 and i6 != i3 and i6 != i2 and i6 != i1
if WIE == "" then
set DIV[i]="Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl"
else
set DIV[i]=WIE
endif
if WAE == "" then
set DAV[i]="origin"
else
set DAV[i]=WAE
endif
loop
if DEV[DXV[i] + j] != 0 and b[j] then
set k=( LoadInteger(CX, ( ( UR ) ), ( DEV[DXV[i] + j] )) )
if k != 0 then
set WCE=( k )
set k=0
loop
exitwhen WFE or C0V[WCE + k] == 0
set k=k + 1
if k == C1V then
set WFE=true
endif
endloop
else
set WCE=KCE()
set k=0
endif
exitwhen WFE
set C0V[WCE + k]=i
call SaveInteger(CX, ( ( UR ) ), ( DEV[DXV[i] + j] ), ( ( WCE ) ))
endif
set j=j + 1
exitwhen j == 6
endloop
if not WFE then
set k=( LoadInteger(CX, ( ( WR ) ), ( DOV[i] )) )
if k != 0 then
set WDE=( k )
set k=0
loop
exitwhen WFE or C5V[WDE + k] == 0
set k=k + 1
if k == C6V then
set WFE=true
endif
endloop
else
set WDE=KNE()
endif
if not WFE then
set C5V[WDE + k]=i
call SaveInteger(CX, ( ( WR ) ), ( DOV[i] ), ( ( WDE ) ))
endif
endif
if WFE then
call KAE(i)
return ( 0 )
else
return i
endif
endfunction
function WGE takes integer D0E,integer it returns nothing
local integer i=0
local integer j=0
local integer k
local integer WCE=( ( LoadInteger(CX, ( ( UR ) ), ( it )) ) )
if it == 0 or ( C0V[WCE] ) == 0 then
return
endif
loop
exitwhen i == C1V
if C0V[WCE + i] == D0E then
set j=i + 1
loop
exitwhen j == C1V or C0V[WCE + j] == 0
set j=j + 1
endloop
set j=j - 1
set C0V[WCE + i]=C0V[WCE + j]
set C0V[WCE + j]=0
exitwhen true
endif
set i=i + 1
endloop
if ( C0V[WCE] ) == 0 then
call RemoveSavedInteger(CX, ( ( UR ) ), ( it ))
call KDE(WCE)
endif
endfunction
function WHE takes integer D0E,integer it returns nothing
local integer i=0
local integer j
local integer WDE=( ( LoadInteger(CX, ( ( WR ) ), ( it )) ) )
if it == 0 then
return
endif
loop
exitwhen i == C6V
if C5V[WDE + i] == D0E then
set j=i + 1
loop
exitwhen j == C6V or C5V[WDE + j] == 0
set j=j + 1
endloop
set j=j - 1
set C5V[WDE + i]=C5V[WDE + j]
set C5V[WDE + j]=0
exitwhen true
endif
set i=i + 1
endloop
if C5V[WDE] == 0 then
call RemoveSavedInteger(CX, ( ( WR ) ), ( it ))
call KBE(WDE)
endif
endfunction
function ZSE takes nothing returns boolean
local integer D0E=( PRE() )
if D4V[D0E] then
set D5V[D0E]=false
return true
endif
set BA=( YX[( ( D0E ) )] )
set CA=GetUnitX(BA)
set DA=GetUnitY(BA)
if ( not IsUnitPaused(BA) ) and GetUnitAbilityLevel(BA, 'BSTN') == 0 and GetUnitAbilityLevel(BA, 'BPSE') == 0 then
if CA != D6V[D0E] or DA != D7V[D0E] then
set FA=CA - D6V[D0E]
set GA=DA - D7V[D0E]
if D3V[D0E] != .0 then
set CA=CA + FA * D3V[D0E]
set DA=DA + GA * D3V[D0E]
endif
if D2V[D0E] != .0 then
set HA=SquareRoot(FA * FA + GA * GA)
set CA=CA + FA / HA * D2V[D0E]
set DA=DA + GA / HA * D2V[D0E]
endif
call SetUnitX(BA, CA)
call SetUnitY(BA, DA)
endif
endif
set D6V[D0E]=CA
set D7V[D0E]=DA
return false
endfunction
function ZTE takes integer D0E returns nothing
if not D5V[D0E] then
call PFE(function ZSE , D0E , .00625)
set D5V[D0E]=true
set D4V[D0E]=false
set D6V[D0E]=GetUnitX(( YX[( ( D0E ) )] ))
set D7V[D0E]=GetUnitY(( YX[( ( D0E ) )] ))
endif
if D2V[D0E] == .0 and D3V[D0E] == .0 then
set D4V[D0E]=true
endif
endfunction
function ZUE takes unit u,real SZE returns nothing
local integer d=( GetUnitUserData(( ( u ) )) )
set D2V[d]=D2V[d] + SZE * .00625
call ZTE(d)
endfunction
function ZWE takes unit u,real SZE returns nothing
local integer d=( GetUnitUserData(( ( u ) )) )
set D2V[d]=SZE * .00625
call ZTE(d)
endfunction
function ZYE takes unit u returns nothing
local integer d=( GetUnitUserData(( ( u ) )) )
set D2V[d]=.0
call ZTE(d)
endfunction
function ZZE takes unit u,real QCE returns nothing
local integer d=( GetUnitUserData(( ( u ) )) )
set D3V[d]=D3V[d] + QCE
call ZTE(d)
endfunction
function WSE takes integer WTE,unit u,item WUE returns boolean
local integer array WWE
local integer WYE=GetItemTypeId(WUE)
local integer WZE
local integer W_E=0
local integer W0E=0
local integer i=0
local integer j=0
local item W1E
local item array W2E
loop
set WWE[i]=DEV[DXV[WTE] + i]
set i=i + 1
exitwhen i == 6
endloop
set i=0
loop
set WZE=GetItemTypeId(UnitItemInSlot(u, i))
loop
if WWE[j] == WYE and WUE != null then
set W2E[j]=WUE
set WWE[j]=0
set WUE=null
exitwhen true
elseif WWE[j] == WZE and WZE != 0 then
set W2E[j]=UnitItemInSlot(u, i)
set WWE[j]=0
exitwhen true
endif
set j=j + 1
exitwhen j == 6
endloop
set j=0
set i=i + 1
exitwhen i == 6
endloop
set WUE=null
set i=0
set j=0
loop
if WWE[i] != 0 then
loop
set W2E[j]=null
set j=j + 1
exitwhen j == 6
endloop
return false
endif
set i=i + 1
exitwhen i == 6
endloop
set i=0
loop
set j=GetItemCharges(W2E[i])
set W0E=W0E + j
if j > W_E then
set W_E=j
endif
call RemoveSavedInteger(CX, ( ( YR ) ), GetHandleId(( W2E[i] )))
call RemoveItem(W2E[i])
set W2E[i]=null
set i=i + 1
exitwhen i == 6
endloop
set W1E=UnitAddItemById(u, DOV[WTE])
call DestroyEffect(AddSpecialEffectTarget(DIV[WTE], u, DAV[WTE]))
if DNV[WTE] then
if DRV[WTE] == 0 then
call SetItemCharges(W1E, W0E)
elseif DRV[WTE] == - 1 then
call SetItemCharges(W1E, W_E)
else
call SetItemCharges(W1E, DRV[WTE])
endif
endif
call SaveInteger(CX, ( ( YR ) ), GetHandleId(( W1E )), ( ( WTE ) ))
set bj_lastCreatedItem=W1E
if GetItemTypeId(W1E) == 'I04I' then // and GetUnitAbilityLevel(u,'A078') != 1 then
call UnitDropItemPoint(u, W1E, GetUnitX(u), GetUnitY(u))
endif
set W1E=null
return true
endfunction
function W3E takes item W4E,unit u returns boolean
local boolean W5E=UnitHasItem(u, W4E)
local integer r=( ( LoadInteger(CX, ( ( UR ) ), ( GetItemTypeId(W4E) )) ) )
local integer i=0
if W4E == null then
return false
endif
loop
exitwhen ( C0V[r + i] ) == 0 or i == C1V
if DBV[C0V[r + i]] then
if W5E then
if WSE(C0V[r + i] , u , null) then
return true
endif
else
if WSE(C0V[r + i] , u , W4E) then
return true
endif
endif
endif
set i=i + 1
endloop
return false
endfunction
function W6E takes nothing returns boolean
local real dx
local real dy
if GetIssuedOrderId() == 851971 then
if GetOrderTargetItem() == null then
return false
endif
set dx=GetItemX(GetOrderTargetItem()) - GetUnitX(GetTriggerUnit())
set dy=GetItemY(GetOrderTargetItem()) - GetUnitY(GetTriggerUnit())
if dx * dx + dy * dy <= SR then
return W3E(GetOrderTargetItem() , GetTriggerUnit())
endif
return false
endif
return W3E(GetManipulatedItem() , GetTriggerUnit())
endfunction
function W7E takes nothing returns boolean
return true
endfunction
function W8E takes nothing returns nothing
local integer DGE=0
if true then
loop
call TriggerRegisterPlayerUnitEvent(TR, Player(DGE), EVENT_PLAYER_UNIT_PICKUP_ITEM, Filter(function W7E))
if not false then
call TriggerRegisterPlayerUnitEvent(TR, Player(DGE), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, Filter(function W7E))
endif
set DGE=DGE + 1
exitwhen DGE == 16
endloop
call TriggerAddCondition(TR, Condition(function W6E))
endif
set UR=LXE()
set WR=LXE()
set YR=LVE()
endfunction
function W9E takes nothing returns nothing
set DCV=LXE()
endfunction
function YVE takes string t returns integer
local integer i=StringHash(t)
if ( LoadInteger(CX, ( ( DCV ) ), ( i )) ) == 0 then
set VI=VI + 1
call SaveInteger(CX, ( ( DCV ) ), ( i ), ( VI ))
set ZR[VI]=t
return VI
endif
return ( LoadInteger(CX, ( ( DCV ) ), ( i )) )
endfunction
function YIE takes timer t returns nothing
local integer DGE=( LoadInteger(Q, GetHandleId(( t )), 0) )
call PauseTimer(t)
call MNE(t)
set A1E[XI]=t
set XI=XI + 1
endfunction
function YAE takes nothing returns nothing
call RemoveUnit(DDV[DHV])
set DDV[DHV]=null
set DHV=( ( DHV ) + 1 )
if ( DHV == DGV ) then
set DHV=0
set DGV=0
else
call TimerStart(OI, DFV[DHV] - TimerGetElapsed(RI), false, function YAE)
endif
endfunction
function YNE takes nothing returns nothing
set OI=CreateTimer()
set RI=CreateTimer()
call TimerStart(RI, 43200, true, null)
endfunction
function YBE takes real x,real y,real K0E returns integer
local integer D0E=KRE()
set DPV[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'e005', x, y, K0E * bj_RADTODEG)
call UnitAddAbility(DPV[D0E], 'Amrf')
call UnitAddAbility(DPV[D0E], 'Aloc')
call UnitRemoveAbility(DPV[D0E], 'Amrf')
call SetUnitX(DPV[D0E], x)
call SetUnitY(DPV[D0E], y)
return D0E
endfunction
function YCE takes integer D0E,real YDE returns nothing
call SetUnitScale(DPV[D0E], YDE, YDE, YDE)
endfunction
function YHE takes integer D0E,string YJE returns nothing
if ( DQV[D0E] != null ) then
call DestroyEffect(DQV[D0E])
endif
if ( YJE == "" ) then
set DQV[D0E]=null
else
set DQV[D0E]=AddSpecialEffectTarget(YJE, DPV[D0E], "origin")
endif
endfunction
function YKE takes integer D0E returns nothing
if ( DZV[D0E] != 0 ) then
call UnitRemoveAbility(DPV[D0E], DZV[D0E])
endif
if ( DQV[D0E] != null ) then
call DestroyEffect(DQV[D0E])
set DQV[D0E]=null
endif
if ( DGV == 8190 ) then
call TimerStart(OI, 0, false, function YAE)
call ExplodeUnitBJ(DPV[D0E])
else
set DDV[DGV]=DPV[D0E]
set DFV[DGV]=TimerGetElapsed(RI) + 4.
set DGV=( ( DGV ) + 1 )
if ( DGV == 1 ) then
call TimerStart(OI, 4., false, function YAE)
endif
call SetUnitOwner(DPV[D0E], Player(PLAYER_NEUTRAL_PASSIVE), false)
endif
set DPV[D0E]=null
endfunction
function YLE takes integer D0E returns nothing
if D0E == null then
return
elseif ( DLV[D0E] != - 1 ) then
return
endif
call YKE(D0E)
set DLV[D0E]=DJV
set DJV=D0E
endfunction
function Damage_GetType takes nothing returns damagetype
return BI[NI]
endfunction
function Damage_IsAttack takes nothing returns boolean
return CI[NI]
endfunction
function Damage_BlockAll takes nothing returns nothing
set DI[NI]=DI[NI] + GetEventDamage()
endfunction
function YME takes nothing returns nothing
loop
exitwhen GI == 0
set KI=FI[GI]
set JI=GetWidgetLife(KI)
call UnitRemoveAbility(KI, 'dprv')
if JI > .405 then
call SetWidgetLife(KI, JI)
endif
set GI=GI - 1
endloop
endfunction
function YPE takes nothing returns boolean
if AI and GetEventDamage() != .0 then
call MEE(II)
if DI[NI] != .0 then
set LI=GetTriggerUnit()
set MI=GetEventDamage()
if DI[NI] >= MI then
set MI=GetWidgetLife(LI) + MI
else
set MI=GetWidgetLife(LI) + DI[NI]
endif
call SetWidgetLife(LI, MI)
if GetWidgetLife(LI) < MI then
call UnitAddAbility(LI, 'dprv')
call SetWidgetLife(LI, MI)
set GI=GI + 1
set FI[GI]=LI
call ResumeTimer(HI)
endif
set DI[NI]=.0
endif
endif
return false
endfunction
function UnitDamageTargetEx takes unit J2E,widget YSE,real YTE,boolean YUE,boolean YWE,attacktype YYE,damagetype YZE,weapontype Y_E returns boolean
local boolean MHE
set NI=NI + 1
set BI[NI]=YZE
set CI[NI]=YUE
set MHE=UnitDamageTarget(J2E, YSE, YTE, YUE, YWE, YYE, YZE, Y_E)
set NI=NI - 1
return MHE
endfunction
function Damage_IsPure takes nothing returns boolean
return ( BI[NI] ) == DAMAGE_TYPE_UNIVERSAL
endfunction
function Damage_IsSpell takes nothing returns boolean
return ( BI[NI] ) == DAMAGE_TYPE_MAGIC
endfunction
function Y0E takes unit CBE,unit YSE,real YTE,attacktype Y1E,boolean YUE,boolean YWE returns boolean
return UnitDamageTargetEx(CBE , YSE , YTE , YUE , YWE , Y1E , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
endfunction
function Damage_IsPhysical takes nothing returns boolean
return ( BI[NI] ) == DAMAGE_TYPE_NORMAL
endfunction
function Y2E takes nothing returns boolean
if ( S0E(( ( GO[DO] ) )) ) then
set D_V[( S1E() )]=true
call KOE(( ( FO[DO] ) ))
endif
return false
endfunction
function Y3E takes nothing returns boolean
if ( S0E(( ( GO[DO] ) )) ) then
set D_V[( ( FO[DO] ) )]=true
call KOE(( ( FO[DO] ) ))
endif
return false
endfunction
function Y4E takes nothing returns boolean
if D_V[( ( BO[CO] ) )] then
call DestroyTrigger(D1V[( ( ( BO[CO] ) ) )])
set D_V[( ( BO[CO] ) )]=false
endif
return false
endfunction
function Y5E takes nothing returns nothing
call TriggerAddCondition(HO, ( Filter(function Y2E) ))
call TriggerAddCondition(JO, ( Filter(function Y3E) ))
call TriggerAddCondition(KO, ( Filter(function Y4E) ))
call TriggerEvaluate(NYE)
endfunction
function s__Damage___Detector_AIDS_onInit takes nothing returns nothing
set D0V=Condition(function YPE)
endfunction
function Y6E takes nothing returns nothing
local unit Y7E=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'uloc', 0, 0, 0)
call UnitAddAbility(Y7E, 'dprv')
call RemoveUnit(Y7E)
set Y7E=null
set II=MVE()
set BI[NI]=DAMAGE_TYPE_NORMAL
set CI[NI]=true
call TimerStart(HI, .0, false, function YME)
endfunction
function Y8E takes nothing returns boolean
return IsUnitInGroup(GetEventDamageSource(), TI)
endfunction
function Y9E takes nothing returns nothing
local integer id=( LoadInteger(Q, GetHandleId(( GetEventDamageSource() )), 0) )
local triggercondition tc
set WI=A3E[id]
set YI=A4E[id]
set ZI=GetEventDamage()
set tc=TriggerAddCondition(SI, A2E[id])
call TriggerEvaluate(SI)
call TriggerRemoveCondition(SI, tc)
call LQE(A2E[id])
call GroupRemoveUnit(TI, A3E[id])
call MNE(A3E[id])
set A2E[id]=null
set A3E[id]=null
set A4E[id]=null
set tc=null
endfunction
function ZVE takes nothing returns nothing
set TI=CreateGroup()
set UI=CreateGroup()
set QI=CreateTrigger()
set SI=CreateTrigger()
call TriggerAddAction(QI, function Y9E)
call TriggerAddCondition(QI, Condition(function Y8E))
endfunction
function ZEE takes unit ZXE,real x,real y,real CHE,boolexpr b returns unit
local group g=TYE()
local real ZOE=VA
local real CCE
local unit u
call T2E(g , x , y , CHE , b)
loop
set u=FirstOfGroup(g)
exitwhen u == null
set CCE=Pow(x - GetUnitX(u), 2.) + Pow(y - GetUnitY(u), 2.)
if CCE < ZOE then
set ZOE=CCE
set ZXE=u
endif
call GroupRemoveUnit(g, u)
endloop
call TZE(g)
return ZXE
endfunction
function ZRE takes nothing returns nothing
local real CCE=Pow(RA - GetDestructableX(GetEnumDestructable()), 2.) + Pow(IA - GetDestructableY(GetEnumDestructable()), 2.)
if CCE <= OA and CCE < XA then
set AA=GetEnumDestructable()
set XA=CCE
endif
endfunction
function ZFE takes nothing returns nothing
local real CCE=Pow(RA - GetItemX(GetEnumItem()), 2.) + Pow(IA - GetItemY(GetEnumItem()), 2.)
if CCE <= OA and CCE < XA then
set NA=GetEnumItem()
set XA=CCE
endif
endfunction
function ZJE takes unit u returns boolean
return GetUnitAbilityLevel(u, 'Aloc') == 0 and not IsUnitType(u, UNIT_TYPE_STRUCTURE)
endfunction
function ZKE takes integer D0E returns nothing
set D2V[D0E]=.0
set D3V[D0E]=.0
endfunction
function ZLE takes nothing returns boolean
if ( ZJE(( ( GO[DO] ) )) ) then
set D8V[( S1E() )]=true
call ZKE(( ( FO[DO] ) ))
endif
return false
endfunction
function ZME takes nothing returns boolean
if ( ZJE(( ( GO[DO] ) )) ) then
set D8V[( ( FO[DO] ) )]=true
call ZKE(( ( FO[DO] ) ))
endif
return false
endfunction
function ZPE takes nothing returns boolean
if D8V[( ( BO[CO] ) )] then
set D4V[( ( ( BO[CO] ) ) )]=true
set D8V[( ( BO[CO] ) )]=false
endif
return false
endfunction
function ZQE takes nothing returns nothing
call TriggerAddCondition(HO, ( Filter(function ZLE) ))
call TriggerAddCondition(JO, ( Filter(function ZME) ))
call TriggerAddCondition(KO, ( Filter(function ZPE) ))
call S9E()
endfunction


function Z_E takes unit J2E returns integer
local integer i=1
loop
exitwhen i == F7V
if A3V[FHV[( i )]] == J2E then
return ( i )
endif
set i=i + 1
endloop
return 0
endfunction
function s__Missile_create takes nothing returns integer
local integer J7E=LRE()
set FKV[J7E]=P8E(.0 , .0 , .0)
set FLV[J7E]=P8E(.0 , .0 , .0)
set FMV[J7E]=P8E(.0 , .0 , .0)
set FPV[J7E]=P8E(.0 , .0 , .0)
call DTE(( FKV[J7E] ) , false)
call DTE(( FLV[J7E] ) , false)
call DTE(( FPV[J7E] ) , false)
call DTE(( FMV[J7E] ) , false)
set F4V[J7E]=true
call J9E(J7E)
if J7E == F7V then
set F7V=F7V + 1
endif
return J7E
endfunction
function Z0E takes integer D0E returns nothing
set FHV[D0E]=TNE(DJE(FKV[D0E]) , DLE(FKV[D0E]) , QEE(FPV[D0E]) * 57.295779)
call TQE(FHV[D0E] , 10.)
call TLE(FHV[D0E] , DPE(FKV[D0E]) - QME(DJE(FKV[D0E]) , DLE(FKV[D0E])))
call TSE(FHV[D0E] , FJV[D0E] , "origin")
set NAV[( FHV[D0E] )]=false
endfunction
function Z1E takes integer D0E returns nothing
call KEE(D0E)
call TIE(FHV[D0E])
call P7E(FKV[D0E])
call P7E(FMV[D0E])
call P7E(FPV[D0E])
call P7E(FLV[D0E])
call DestroyGroup(FZV[D0E])
set F5V[D0E]=false
call KXE(D0E)
endfunction
function Z2E takes integer D0E,real x,real y,real z returns nothing
if not F5V[D0E] then
call DKE(FKV[D0E] , x)
call DME(FKV[D0E] , y)
call DQE(FKV[D0E] , z + QME(x , y))
call DKE(FLV[D0E] , x)
call DME(FLV[D0E] , y)
call DQE(FLV[D0E] , z + QME(x , y))
endif
endfunction
function Z3E takes integer D0E returns real
if not F4V[D0E] then
return DJE(FLV[D0E])
endif
return .0
endfunction
function Z4E takes integer D0E returns real
if not F4V[D0E] then
return DLE(FLV[D0E])
endif
return .0
endfunction
function Z5E takes integer D0E returns unit
if not F4V[D0E] then
return FYV[D0E]
endif
return null
endfunction
function Z6E takes integer D0E,real SZE returns nothing
set FWV[D0E]=FWV[D0E] * SZE * .0233333
call QBE(FPV[D0E] , FWV[D0E])
endfunction
function Z7E takes integer D0E returns nothing
call Z0E(D0E)
call J8E(D0E)
set F5V[D0E]=true
endfunction
function Z8E takes integer D0E,unit J2E returns nothing
if not F3V[D0E] and not F4V[D0E] then
set FYV[D0E]=J2E
call DKE(FKV[D0E] , TFE(FHV[D0E]))
call DME(FKV[D0E] , THE(FHV[D0E]))
call DQE(FKV[D0E] , TKE(FHV[D0E]) + QME(TFE(FHV[D0E]) , THE(FHV[D0E])))
call DKE(FMV[D0E] , Z3E(D0E))
call DME(FMV[D0E] , Z4E(D0E))
if GetUnitFlyHeight(J2E) == .0 then
call DQE(FMV[D0E] , 50. + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
else
call DQE(FMV[D0E] , GetUnitFlyHeight(J2E) + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
endif
set FUV[D0E]=QVE(QIE(FKV[D0E] , FMV[D0E]))
set FTV[D0E]=0
call P7E(FPV[D0E])
set FPV[D0E]=QGE(QIE(FKV[D0E] , FMV[D0E]))
call QBE(FPV[D0E] , FWV[D0E])
call DTE(( FPV[D0E] ) , false)
set F4V[D0E]=true
endif
endfunction
function Z9E takes integer D0E,unit J2E returns nothing
if not F5V[D0E] then
set FYV[D0E]=J2E
call DKE(FMV[D0E] , GetUnitX(J2E))
call DME(FMV[D0E] , GetUnitY(J2E))
if GetUnitFlyHeight(J2E) == .0 then
call DQE(FMV[D0E] , 50. + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
else
call DQE(FMV[D0E] , GetUnitFlyHeight(J2E) + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
endif
set FUV[D0E]=QVE(QIE(FKV[D0E] , FMV[D0E]))
call P7E(FPV[D0E])
set FPV[D0E]=QGE(QIE(FKV[D0E] , FMV[D0E]))
call QBE(FPV[D0E] , FWV[D0E])
call DTE(( FPV[D0E] ) , false)
endif
endfunction
function VVX takes integer D0E returns nothing
local real d
if FYV[D0E] != null then
set d=QVE(QIE(FLV[D0E] , FMV[D0E]))
call DKE(FMV[D0E] , GetUnitX(FYV[D0E]))
call DME(FMV[D0E] , GetUnitY(FYV[D0E]))
if GetUnitFlyHeight(FYV[D0E]) == .0 then
call DQE(FMV[D0E] , 50. + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
else
call DQE(FMV[D0E] , GetUnitFlyHeight(FYV[D0E]) + QME(DJE(FMV[D0E]) , DLE(FMV[D0E])))
endif
set d=QVE(QIE(FLV[D0E] , FMV[D0E])) - d
set FUV[D0E]=FUV[D0E] + d
call P7E(FPV[D0E])
set FPV[D0E]=QGE(QIE(FLV[D0E] , FMV[D0E]))
call QBE(FPV[D0E] , FWV[D0E])
call DTE(( FPV[D0E] ) , false)
endif
endfunction
function VEX takes integer D0E returns nothing
if FYV[D0E] != null and GetWidgetLife(FYV[D0E]) < .405 then
call Z1E(D0E)
endif
call QOE(FLV[D0E] , FPV[D0E])
set FTV[D0E]=FTV[D0E] + QVE(FPV[D0E])
endfunction
function VXX takes integer D0E returns nothing
local real d=FUV[D0E]
local real x=FTV[D0E]
local real a=QEE(QIE(FLV[D0E] , FMV[D0E]))
if FSV[D0E] != .0 then
call DKE(GVV , DJE(FLV[D0E]) + P4E(FSV[D0E] , d , x) * Sin(a))
call DME(GVV , DLE(FLV[D0E]) - P4E(FSV[D0E] , d , x) * Cos(a))
endif
endfunction
function VOX takes integer D0E returns nothing
local real d=FUV[D0E]
local real x=FTV[D0E]
call DQE(FLV[D0E] , P5E(FQV[D0E] , d , x , DPE(FKV[D0E]) , DPE(FMV[D0E])))
endfunction
function VRX takes integer D0E returns nothing
if FSV[D0E] != .0 then
call TGE(FHV[D0E] , DJE(GVV))
call TJE(FHV[D0E] , DLE(GVV))
else
call TGE(FHV[D0E] , DJE(FLV[D0E]))
call TJE(FHV[D0E] , DLE(FLV[D0E]))
endif
call TLE(FHV[D0E] , DPE(FLV[D0E]) - QME(TFE(FHV[D0E]) , THE(FHV[D0E])))
endfunction
function VIX takes integer D0E returns nothing
if QHE(FMV[D0E] , TFE(FHV[D0E]) , THE(FHV[D0E]) , TKE(FHV[D0E]) , 32.) or FTV[D0E] > FUV[D0E] then
set F4V[D0E]=false
call J0E(D0E)
if F3V[D0E] then
set F5V[D0E]=false
call Z1E(D0E)
endif
endif
endfunction
function VAX takes integer D0E returns nothing
if TKE(FHV[D0E]) < QME(TFE(FHV[D0E]) , THE(FHV[D0E])) and F2V[D0E] then
call J5E(D0E , TFE(FHV[D0E]) , THE(FHV[D0E]))
endif
endfunction
function VNX takes integer D0E returns nothing
local real d=FUV[D0E]
local real x=FTV[D0E]
local real s=QVE(FPV[D0E])
local real z0=P4E(FSV[D0E] , d , x)
local real z1=P4E(FSV[D0E] , d , x + s)
local real a=Atan2(z1 - z0, s) * - 1 * 57.295779
if FSV[D0E] != 0 then
call TME(FHV[D0E] , a + QEE(FPV[D0E]) * 57.295779)
else
call TME(FHV[D0E] , QEE(FPV[D0E]) * 57.295779)
endif
endfunction
function VBX takes integer D0E returns nothing
local real d=FUV[D0E]
local real x=FTV[D0E]
local real s=QVE(FPV[D0E])
local real z0=P5E(FQV[D0E] , d , x , DPE(FKV[D0E]) , DPE(FMV[D0E]))
local real z1=P5E(FQV[D0E] , d , x + s , DPE(FKV[D0E]) , DPE(FMV[D0E]))
call TPE(FHV[D0E] , Atan2(z1 - z0, s) * 57.295779)
endfunction
function VCX takes nothing returns boolean
local integer TBE=F6V
local unit VDX=GetFilterUnit()
if Z_E(VDX) != 0 and F_V[TBE] and not IsUnitInGroup(VDX, FZV[TBE]) and QJE(Z_E(VDX) , TBE , 32.) then
call J6E(TBE , Z_E(VDX))
call GroupAddUnit(FZV[TBE], VDX)
return false
endif
if not IsUnitInGroup(VDX, FZV[TBE]) then
call GroupAddUnit(FZV[TBE], VDX)
call J1E(TBE , VDX)
return false
endif
return false
endfunction
function VFX takes nothing returns boolean
call J3E(F6V , GetFilterDestructable())
return false
endfunction
function VGX takes nothing returns nothing
local integer i=1
local integer TBE=0
loop
exitwhen i == F7V
if F5V[( i )] then
set TBE=( i )
call VVX(TBE)
call VEX(TBE)
call VXX(TBE)
call VOX(TBE)
call VRX(TBE)
call VIX(TBE)
call VAX(TBE)
call VNX(TBE)
call VBX(TBE)
set F6V=TBE
call GroupEnumUnitsInRange(FZV[TBE], TFE(FHV[TBE]), THE(FHV[TBE]), 32., Condition(function VCX))
if F1V[TBE] then
call SetRect(F9V, TFE(FHV[TBE]) - 32., THE(FHV[TBE]) - 32., TFE(FHV[TBE]) + 32., THE(FHV[TBE]) + 32.)
call EnumDestructablesInRect(F9V, Condition(function VFX), null)
endif
call KVE(TBE)
endif
set i=i + 1
endloop
endfunction
function VHX takes nothing returns nothing
set F9V=Rect(.0, .0, .0, .0)
set GVV=P8E(.0 , .0 , .0)
call DTE(( GVV ) , false)
call TimerStart(F8V, .03, true, function VGX)
endfunction
function s__GameMode_enable takes nothing returns nothing
set GXV=true
endfunction
function s__GameMode_disable takes nothing returns nothing
set GXV=false
endfunction
function s__GameMode__get_enabled takes nothing returns boolean
return GXV
endfunction
function VJX takes string Q7E,boolean VKX,code c returns integer
local integer D0E=YVE(Q7E)
set GRV[D0E]=VKX
set GOV[D0E]=Filter(c)
set GBV[D0E]=true
return D0E
endfunction
function VLX takes string s returns string
local string MRE=""
local string VMX=""
local integer DGE=0
local integer VPX=StringLength(s)
loop
exitwhen DGE >= VPX
set VMX=SubString(s, DGE, DGE + 1)
if " " != VMX then
set MRE=MRE + VMX
endif
set DGE=DGE + 1
endloop
return MRE
endfunction
function VQX takes nothing returns boolean
local integer D0E
local integer DGE=1
local integer id=GetPlayerId(GetTriggerPlayer())
local integer VPX
local string LZE
if GXV and not GAV[id] then
call TriggerClearConditions(GEV)
set LZE=VLX(StringCase(GetEventPlayerChatString(), false))
set VPX=StringLength(LZE)
loop
exitwhen DGE >= VPX
set D0E=( LoadInteger(CX, ( ( DCV ) ), ( StringHash(( SubString(LZE, DGE, DGE + 2) )) )) )
if GIV[D0E * 12 + id] and GBV[D0E] then
if GRV[D0E] then
call TriggerAddCondition(GEV, GOV[D0E])
elseif not GRV[D0E] and DGE == 1 then
call TriggerAddCondition(GEV, GOV[D0E])
exitwhen true
endif
endif
set DGE=DGE + 2
endloop
return TriggerEvaluate(GEV)
endif
return false
endfunction
function VSX takes nothing returns nothing
local trigger t=CreateTrigger()
local integer i=11
local player p
loop
set p=Player(i)
if GetPlayerSlotState(p) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(p) == MAP_CONTROL_USER then
call TriggerRegisterPlayerChatEvent(t, p, "-", false)
endif
exitwhen i == 0
set i=i - 1
endloop
call TriggerAddCondition(t, Condition(function VQX))
set t=null
set p=null
endfunction
function EnableGameModes takes nothing returns nothing
set GXV=true
endfunction
function DisableGameModes takes nothing returns nothing
set GXV=false
endfunction
function GameModesEnabled takes nothing returns boolean
return ( GXV )
endfunction
function GetTotalProjectiles takes nothing returns integer
return JKE(QA)
endfunction
function VTX takes nothing returns boolean
if ( GetUnitTypeId(( ( GO[DO] ) )) == 'e001' ) then
set GCV[( S1E() )]=true
set GDV[( ( ( FO[DO] ) ) )]=0
endif
return false
endfunction
function VUX takes nothing returns boolean
if ( GetUnitTypeId(( ( GO[DO] ) )) == 'e001' ) then
set GCV[( ( FO[DO] ) )]=true
set GDV[( ( ( FO[DO] ) ) )]=0
endif
return false
endfunction
function VWX takes nothing returns boolean
if GCV[( ( BO[CO] ) )] then
set GDV[( ( ( BO[CO] ) ) )]=0
set GCV[( ( BO[CO] ) )]=false
endif
return false
endfunction
function VYX takes nothing returns nothing
call TriggerAddCondition(HO, ( Filter(function VTX) ))
call TriggerAddCondition(JO, ( Filter(function VUX) ))
call TriggerAddCondition(KO, ( Filter(function VWX) ))
call S9E()
endfunction
function VZX takes integer D0E returns nothing
call RemoveUnit(GJV[D0E])
set GJV[D0E]=null
call JZE(D0E)
endfunction
function V_X takes integer D0E returns nothing
if GKV[D0E] == NX then
call JWE(D0E)
call VZX(D0E)
endif
endfunction
function V0X takes nothing returns boolean
local integer D0E=GLV[( 0 )]
loop
exitwhen D0E == 0
call V_X(D0E)
set D0E=GLV[D0E]
endloop
return false
endfunction
function V1X takes integer D0E returns nothing
set GMV[GLV[( 0 )]]=D0E
set GLV[D0E]=GLV[( 0 )]
set GLV[( 0 )]=D0E
set GMV[D0E]=( 0 )
endfunction
function V2X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function V0X))
endfunction
function V3X takes unit J2E,real V4X returns nothing
local integer D0E=JYE()
set GJV[D0E]=J2E
set GKV[D0E]=NX + R2I(V4X / .03125)
call V1X(D0E)
endfunction
function V5X takes integer D0E,integer V6X returns integer
set GUV[GTV[D0E]]=V6X
set GTV[V6X]=GTV[D0E]
set GTV[D0E]=V6X
if GUV[D0E] == 0 then
set GUV[D0E]=V6X
endif
set GWV[V6X]=D0E
set GWV[D0E]=( GWV[D0E] ) + 1
return V6X
endfunction
function V7X takes nothing returns integer
local integer D0E=JTE()
set GYV[D0E]=true
return D0E
endfunction
function V8X takes integer D0E,real YDE returns nothing
call SetUnitScale(HFV[D0E], YDE, .0, .0)
set H9V[D0E]=YDE
endfunction
function V9X takes integer D0E,string EVX returns nothing
if H_V[D0E] != null then
call DestroyEffect(H_V[D0E])
set H0V[D0E]="" //Get Effect Path
endif
if EVX == "" then
set H_V[D0E]=null
set H0V[D0E]=""
else
set H_V[D0E]=AddSpecialEffectTarget(EVX, HFV[D0E], "origin")
set H0V[D0E]=EVX
endif
endfunction
function EEX takes integer D0E,unit EXX returns nothing
set H3V[D0E]=true
set HZV[D0E]=EXX
endfunction
function EOX takes integer D0E returns real
return Atan2(( HJV[D0E] + HMV[D0E] ) - HJV[D0E], ( HHV[D0E] + HLV[D0E] ) - HHV[D0E])
endfunction
function ERX takes integer D0E,real EIX,real EAX,real ENX,boolean EBX returns nothing
set HZV[D0E]=null
set HGV[D0E]=.0
set HQV[D0E]=EIX
set HSV[D0E]=EAX
call MoveLocation(NN, HQV[D0E], HSV[D0E])
set HTV[D0E]=ENX + GetLocationZ(NN)
set H3V[D0E]=EBX
endfunction
function ECX takes integer D0E,real EIX,real EAX,real ENX,boolean EBX returns nothing
set HHV[D0E]=EIX
set HJV[D0E]=EAX
set HKV[D0E]=ENX
set H3V[D0E]=EBX
endfunction
function EDX takes integer D0E returns nothing
set HZV[D0E]=null
set HEV[D0E]=false
endfunction
function EFX takes integer D0E,boolean EGX returns nothing
call JSE(D0E)
set H2V[D0E]=false
set H3V[D0E]=true
if not EGX then
set HRV[D0E]=0
endif
endfunction
function EHX takes integer D0E returns nothing
call V9X(D0E , "")
set H1V[D0E]=true
endfunction
function EJX takes integer D0E,unit J2E returns boolean
return IsUnitInGroup(J2E, JVV[D0E])
endfunction
function EKX takes integer D0E,unit J2E returns nothing
if IsUnitInGroup(J2E, JVV[D0E]) then
call GroupRemoveUnit(JVV[D0E], J2E)
endif
endfunction
function ELX takes integer D0E returns nothing
if JAV[D0E] != null then
call DestroyImage(JAV[D0E])
set JAV[D0E]=null
endif
set JBV[D0E]=false
endfunction
function EMX takes integer D0E,real EPX returns nothing
if JBV[D0E] then
call ELX(D0E)
endif
set JAV[D0E]=CreateImage("ReplaceableTextures\\Shadows\\ShadowFlyer.blp", EPX, EPX, EPX, HHV[D0E] - EPX * .5, HJV[D0E] - EPX * .5, .0, .0, .0, .0, 2)
call SetImageColor(JAV[D0E], XX, OX, RX, IX)
call SetImageRenderAlways(JAV[D0E], IsUnitVisible(HFV[D0E], GetLocalPlayer()))
set JNV[D0E]=EPX * .5
set JBV[D0E]=true
endfunction
function EQX takes integer D0E returns nothing
call SetImagePosition(JAV[D0E], HHV[D0E] - JNV[D0E], HJV[D0E] - JNV[D0E], .0)
call SetImageRenderAlways(JAV[D0E], IsUnitVisible(HFV[D0E], GetLocalPlayer()))
endfunction
function ESX takes integer D0E returns nothing
local real ETX=.0
local real EUX=.0
local real EWX=.0
local real EYX=.0
local real M3E=.0
local real M4E=.0
local real EZX=.0
if JFV[D0E] then
call MoveLocation(VX, HHV[D0E] - 16., HJV[D0E])
call MoveLocation(EX, HHV[D0E] + 16., HJV[D0E])
set ETX=GetLocationZ(VX) - GetLocationZ(EX)
call MoveLocation(VX, HHV[D0E], HJV[D0E] - 16.)
call MoveLocation(EX, HHV[D0E], HJV[D0E] + 16.)
set EUX=GetLocationZ(VX) - GetLocationZ(EX)
set EWX=ETX * ETX + EUX * EUX + 16. * 16.
call MoveLocation(VX, HHV[D0E], HJV[D0E])
set EYX=G1V[D0E] / SquareRoot(EWX) - ( HKV[D0E] - GetLocationZ(VX) ) * 16. / EWX
if EYX >= .0 then
set HHV[D0E]=HHV[D0E] + EYX * ETX
set HJV[D0E]=HJV[D0E] + EYX * EUX
set HKV[D0E]=HKV[D0E] + EYX * 16.
set EWX=( HLV[D0E] * ETX + HMV[D0E] * EUX + HPV[D0E] * 16. ) / EWX
set M3E=ETX * EWX
set M4E=EUX * EWX
set EZX=16. * EWX
set HLV[D0E]=( HLV[D0E] - M3E ) * ( 1. - JCV[D0E] ) - ( M3E * JDV[D0E] )
set HMV[D0E]=( HMV[D0E] - M4E ) * ( 1. - JCV[D0E] ) - ( M4E * JDV[D0E] )
set HPV[D0E]=( HPV[D0E] - EZX ) * ( 1. - JCV[D0E] ) - ( EZX * JDV[D0E] )
endif
if JGV[D0E] > 0 then
set JGV[D0E]=JGV[D0E] - 1
else
set JFV[D0E]=false
call EHX(D0E)
endif
endif
endfunction
function E_X takes nothing returns boolean
local integer D0E=JIV
local destructable MGE=GetFilterDestructable()
local real E0X=GetDestructableX(MGE)
local real E1X=GetDestructableY(MGE)
if GetWidgetLife(MGE) > .405 then
if ( HHV[D0E] - E0X ) * ( HHV[D0E] - E0X ) + ( HJV[D0E] - E1X ) * ( HJV[D0E] - E1X ) <= G0V[D0E] * G0V[D0E] then
call LME(HDV[D0E] , D0E , MGE)
endif
endif
set MGE=null
return false
endfunction
function E2X takes nothing returns boolean
local integer D0E=JIV
local unit E3X=GetFilterUnit()
if not IsUnitInGroup(E3X, JVV[D0E]) then
call GroupAddUnit(JVV[D0E], E3X)
call LLE(HCV[D0E] , D0E , E3X)
endif
set E3X=null
return false
endfunction
function E4X takes integer D0E returns nothing
if H1V[D0E] then
call JSE(D0E)
call JQE(JLE(( D0E )))
else
if HIV[D0E] != 0 then
call LHE(HIV[D0E] , D0E)
endif
if HXV[D0E] then
set JIV=D0E
call SetRect(JEV, HHV[D0E] - G0V[D0E], HJV[D0E] - G0V[D0E], HHV[D0E] + G0V[D0E], HJV[D0E] + G0V[D0E])
call EnumDestructablesInRect(JEV, JOV, null)
endif
if HOV[D0E] then
set JIV=D0E
call GroupEnumUnitsInRange(JXV, HHV[D0E], HJV[D0E], G1V[D0E], JRV)
endif
if not G7V[D0E] then
if HZV[D0E] != null and HEV[D0E] and UnitAlive(HZV[D0E]) then
set XN=GetUnitX(HZV[D0E])
set ON=GetUnitY(HZV[D0E])
call MoveLocation(NN, XN, ON)
set RN=GetUnitFlyHeight(HZV[D0E]) + GetLocationZ(NN) + G2V[D0E]
if HQV[D0E] != XN or HSV[D0E] != ON or HTV[D0E] != RN then
set HQV[D0E]=XN
set HSV[D0E]=ON
set HTV[D0E]=RN
set H3V[D0E]=true
endif
endif
if H3V[D0E] then
set XN=HQV[D0E] - HHV[D0E]
set ON=HSV[D0E] - HJV[D0E]
set RN=HTV[D0E] - HKV[D0E]
set IN=SquareRoot(XN * XN + ON * ON + RN * RN)
set HLV[D0E]=XN / IN * H4V[D0E]
set HMV[D0E]=ON / IN * H4V[D0E]
set H7V[D0E]=IN / H4V[D0E] * .03125
if H7V[D0E] <= .0 then
set H7V[D0E]=.03125
endif
if HGV[D0E] != .0 then
set H8V[D0E]=2. * ( RN / H7V[D0E] / H7V[D0E] * .03125 * .03125 - ( HPV[D0E] * .03125 ) / H7V[D0E] )
else
set HPV[D0E]=RN / IN * H4V[D0E]
set H8V[D0E]=.0
endif
call SetUnitFacing(HFV[D0E], Atan2(ON, XN) * bj_RADTODEG)
set H3V[D0E]=false
endif
set AN=HKV[D0E]
set HPV[D0E]=HPV[D0E] + H8V[D0E] * G5V[D0E]
set HHV[D0E]=HHV[D0E] + HLV[D0E] * G5V[D0E]
set HJV[D0E]=HJV[D0E] + HMV[D0E] * G5V[D0E]
set HKV[D0E]=HKV[D0E] + HPV[D0E] * G5V[D0E]
call MoveLocation(NN, HHV[D0E], HJV[D0E])
set RN=GetLocationZ(NN)
call SetUnitX(HFV[D0E], HHV[D0E])
call SetUnitY(HFV[D0E], HJV[D0E])
call SetUnitFlyHeight(HFV[D0E], HKV[D0E] - RN, .0)
call SetUnitAnimationByIndex(HFV[D0E], R2I(bj_RADTODEG * Atan2(( HKV[D0E] - AN ), SquareRoot(HLV[D0E] * HLV[D0E] + HMV[D0E] * HMV[D0E]) * G5V[D0E]) + 90.5))
if ( JBV[( D0E )] ) then
call EQX(D0E)
endif
set G4V[D0E]=G4V[D0E] - .03125 * G5V[D0E]
if G4V[D0E] <= .0 then
if G9V[D0E] then
set H1V[D0E]=true
endif
if HNV[D0E] != 0 then
call LHE(HNV[D0E] , D0E)
endif
endif
if HKV[D0E] <= RN then
if JFV[D0E] then
call ESX(D0E)
endif
if HBV[D0E] != 0 then
call LHE(HBV[D0E] , D0E)
endif
endif
endif
endif
endfunction
function E5X takes nothing returns boolean
local integer D0E=JHV[( 0 )]
loop
exitwhen D0E == 0
call E4X(D0E)
set D0E=JHV[D0E]
endloop
return false
endfunction
function E6X takes integer D0E returns nothing
set JJV[JHV[( 0 )]]=D0E
set JHV[D0E]=JHV[( 0 )]
set JHV[( 0 )]=D0E
set JJV[D0E]=( 0 )
endfunction
function E7X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function E5X))
endfunction
function E8X takes integer D0E,real EIX,real EAX,real ENX,real SZE,real E9X returns nothing
local real XVX=EIX - HHV[D0E]
local real XEX=EAX - HJV[D0E]
local real XXX=ENX - HKV[D0E]
local real XOX=SquareRoot(XVX * XVX + XEX * XEX + XXX * XXX)
if SZE <= .0 or XOX <= .0 then
set HHV[D0E]=EIX
set HJV[D0E]=EAX
set HKV[D0E]=ENX
set H7V[D0E]=.0
else
set H7V[D0E]=XOX / SZE
endif
set H4V[D0E]=SZE * .03125
set H5V[D0E]=H4V[D0E]
set H6V[D0E]=H4V[D0E]
set HGV[D0E]=E9X
set HQV[D0E]=EIX
set HSV[D0E]=EAX
set HTV[D0E]=ENX
set HLV[D0E]=XVX / XOX * H4V[D0E]
set HMV[D0E]=XEX / XOX * H4V[D0E]
set HPV[D0E]=( ( XOX * E9X ) / ( H7V[D0E] / 4. ) + XXX / H7V[D0E] ) * .03125
if G4V[D0E] == .0 then
set G4V[D0E]=H7V[D0E]
endif
endfunction
function XRX takes integer D0E,real EIX,real EAX,real ENX,real SZE returns boolean
if not H2V[D0E] then
set H2V[D0E]=true
call E8X(D0E , EIX , EAX , ENX , SZE , .0)
call LHE(HRV[D0E] , D0E)
call E6X(D0E)
return true
endif
return false
endfunction
function XIX takes integer D0E,real EIX,real EAX,real ENX,real SZE,real E9X returns boolean
if not H2V[D0E] then
set H2V[D0E]=true
call E8X(D0E , EIX , EAX , ENX , SZE , E9X)
call LHE(HRV[D0E] , D0E)
call E6X(D0E)
return true
endif
return false
endfunction
function XAX takes real EIX,real EAX,real ENX,real K0E returns integer
local integer D0E=JTE()
set HFV[D0E]=CreateUnit(JA, 'e001', EIX, EAX, K0E * bj_RADTODEG)
call UnitAddAbility(HFV[D0E], 'Amrf')
call UnitRemoveAbility(HFV[D0E], 'Amrf')
call SetUnitX(HFV[D0E], EIX)
call SetUnitY(HFV[D0E], EAX)
call MoveLocation(NN, EIX, EAX)
call SetUnitFlyHeight(HFV[D0E], ENX, .0)
set HHV[D0E]=EIX
set HJV[D0E]=EAX
set HKV[D0E]=ENX + GetLocationZ(NN)
set HUV[D0E]=EIX
set HWV[D0E]=EIX
set HYV[D0E]=ENX + GetLocationZ(NN)
set GDV[( GetUnitUserData(( ( HFV[D0E] ) )) )]=D0E
set JVV[D0E]=TYE()
return V5X(QA , D0E)
endfunction
function XNX takes nothing returns nothing
set JXV=CreateGroup()
set JEV=Rect(.0, .0, .0, .0)
set JOV=Condition(function E_X)
set JRV=Condition(function E2X)
endfunction
function s__Projectile___ForGroupStack_increment takes nothing returns nothing
set JPV=( JPV + 1 )
endfunction
function s__Projectile___ForGroupStack_decrement takes nothing returns nothing
set JPV=( JPV - 1 )
endfunction
function XBX takes nothing returns nothing
set MA=GDV[( GetUnitUserData(( ( GetEnumUnit() ) )) )]
set LA=JMV[JPV]
set PA=JLV[JPV]
call TriggerExecute(BJE[( ( JKV[JPV] ) )])
endfunction
function XCX takes nothing returns nothing
set MA=GDV[( GetUnitUserData(( ( GetEnumUnit() ) )) )]
call TriggerExecute(BJE[( ( JKV[JPV] ) )])
endfunction
function XDX takes integer D0E returns nothing
call JGE(D0E)
call TZE(JWV[D0E])
set JWV[D0E]=null
call JJE(D0E)
endfunction
function XJX takes integer D0E,integer XGX returns nothing
set JPV=( JPV + 1 )
set JKV[JPV]=XGX
call ForGroup(JWV[D0E], function XCX)
set JPV=( JPV - 1 )
endfunction
function XKX takes integer D0E,integer JFE returns boolean
local integer i=0
local integer j=0
if JFE != 0 and IsUnitInGroup(HFV[JFE], JWV[D0E]) then
call GroupRemoveUnit(JWV[D0E], HFV[JFE])
set JUV[D0E]=JUV[D0E] - 1
set i=LoadInteger(ZA, ( JFE ), - 1) - 1
set j=LoadInteger(VN, ( JFE ), D0E)
call SaveInteger(ZA, ( JFE ), - 1, i)
call SaveInteger(ZA, ( JFE ), j, LoadInteger(ZA, ( JFE ), i))
call SaveInteger(VN, ( JFE ), LoadInteger(ZA, ( JFE ), j), j)
if i < 1 then
call FlushChildHashtable(ZA, ( JFE ))
call FlushChildHashtable(VN, ( JFE ))
endif
return true
endif
return false
endfunction
function XLX takes integer D0E,integer JFE returns boolean
local integer i=0
if JFE != 0 and not IsUnitInGroup(HFV[JFE], JWV[D0E]) then
call GroupAddUnit(JWV[D0E], HFV[JFE])
set JUV[D0E]=JUV[D0E] + 1
if HaveSavedInteger(ZA, ( JFE ), - 1) then
set i=LoadInteger(ZA, ( JFE ), - 1)
endif
call SaveInteger(ZA, ( JFE ), i, D0E)
call SaveInteger(VN, ( JFE ), D0E, i)
call SaveInteger(ZA, ( JFE ), - 1, i + 1)
return true
endif
return false
endfunction
function XMX takes integer D0E,integer JFE returns boolean
return IsUnitInGroup(HFV[JFE], JWV[D0E])
endfunction
function XPX takes integer D0E,real x,real y,real z,real r,integer i,integer e1,integer e2 returns nothing
local integer p=( GTV[( QA )] )
loop
exitwhen p == 0
if XMX(D0E , p) then
call XKX(D0E , p)
if e1 != 0 then
set MA=p
set LA=D0E
set PA=i
call TriggerExecute(BJE[( e1 )])
endif
endif
if r * r > ( ( HHV[p] - x ) * ( HHV[p] - x ) + ( HJV[p] - y ) * ( HJV[p] - y ) + ( HKV[p] - z ) * ( HKV[p] - z ) ) then
call XLX(D0E , p)
if e2 != 0 then
set MA=p
set LA=D0E
set PA=i
call TriggerExecute(BJE[( e2 )])
endif
endif
set p=( GTV[( p )] )
endloop
endfunction
function XQX takes integer D0E,real x,real y,real z,real r,integer i,integer XSX returns nothing
local integer p=( GTV[( QA )] )
call JGE(D0E)
loop
exitwhen p == 0
if r * r > ( ( HHV[p] - x ) * ( HHV[p] - x ) + ( HJV[p] - y ) * ( HJV[p] - y ) + ( HKV[p] - z ) * ( HKV[p] - z ) ) then
call XLX(D0E , p)
if XSX != 0 then
set MA=p
set LA=D0E
set PA=i
call TriggerExecute(BJE[( XSX )])
endif
endif
set p=( GTV[( p )] )
endloop
endfunction
function XUX takes integer D0E returns nothing
local unit u=null
loop
set u=FirstOfGroup(JWV[D0E])
exitwhen u == null
call XKX(D0E , GDV[( GetUnitUserData(( ( u ) )) )])
endloop
call GroupClear(JWV[D0E])
set JUV[D0E]=0
set u=null
endfunction
function XWX takes nothing returns integer
local integer D0E=JHE()
set JWV[D0E]=TYE()
return D0E
endfunction
function CreateProjGroup takes nothing returns integer
return XWX()
endfunction
function GetEnumProjectile takes nothing returns integer
return MA
endfunction
function GetParentProjGroup takes nothing returns integer
return LA
endfunction
function GetForProjGroupData takes nothing returns integer
return PA
endfunction
function GetGlobalProjGroup takes nothing returns integer
return KA
endfunction
function XYX takes nothing returns boolean
local unit u=GetLeavingUnit()
local real x=GetUnitX(u)
local real y=GetUnitY(u)
local integer p=GDV[( GetUnitUserData(( ( u ) )) )]
if p != 0 then
call EHX(p)
else
if ( x > TA ) then
set x=TA
elseif ( x < WA ) then
set x=WA
endif
if ( y > UA ) then
set y=UA
elseif ( y < YA ) then
set y=YA
endif
call SetUnitX(u, x)
call SetUnitY(u, y)
endif
set u=null
return false
endfunction
function XZX takes nothing returns nothing
local trigger X_X=CreateTrigger()
local region X0X=CreateRegion()
local rect WTE=null
set QA=V7X()
set KA=XWX()
set ZA=InitHashtable()
set VN=InitHashtable()
set NN=Location(.0, .0)
set TA=GetRectMaxX(bj_mapInitialPlayableArea) - 64.
set UA=GetRectMaxY(bj_mapInitialPlayableArea) - 64.
set WA=GetRectMinX(bj_mapInitialPlayableArea) + 64.
set YA=GetRectMinY(bj_mapInitialPlayableArea) + 64.
set WTE=Rect(WA, YA, TA, UA)
call RegionAddRect(X0X, WTE)
call TriggerRegisterLeaveRegion(X_X, X0X, null)
call TriggerAddCondition(X_X, Condition(function XYX))
call RemoveRect(WTE)
set X_X=null
set WTE=null
set X0X=null
endfunction
function X1X takes nothing returns nothing
local timer t=GetExpiredTimer()
call RemoveUnit(( LoadUnitHandle(EI, ( LoadInteger(Q, GetHandleId(( ( t ) )), 0) ), 0) ))
call YIE(t)
set t=null
endfunction
function X2X takes nothing returns nothing
local timer t=GetExpiredTimer()
call DestroyEffect(( LoadEffectHandle(EI, ( LoadInteger(Q, GetHandleId(( ( t ) )), 0) ), 0) ))
call YIE(t)
set t=null
endfunction
function X3X takes nothing returns nothing
local timer t=GetExpiredTimer()
call DestroyLightning(( LoadLightningHandle(EI, ( LoadInteger(Q, GetHandleId(( ( t ) )), 0) ), 0) ))
call YIE(t)
set t=null
endfunction
function TT2Death takes nothing returns nothing
local timer t=GetExpiredTimer()
call DestroyTextTag(( LoadTextTagHandle(EI, ( LoadInteger(Q, GetHandleId(( ( t ) )), 0) ), 0) ))
call YIE(t)
set t=null
endfunction
function X4X takes integer i returns integer
local integer X5X=i - ( i / 8191 ) * 8191
loop
exitwhen GN[X5X] == i
if GN[X5X] == 0 then
set GN[X5X]=i
return X5X
endif
set X5X=X5X + 53
if X5X >= 8191 then
set X5X=X5X - 8191
endif
endloop
return X5X
endfunction
function X6X takes integer X7X,real X8X,real X9X returns boolean
if X7X != 0 then
set DN[X4X(X7X)]=X8X
set FN[X4X(X7X)]=X9X
return true
endif
return false
endfunction
function OVX takes unit J2E returns real
call MoveLocation(CN, GetUnitX(J2E), GetUnitY(J2E))
return FN[X4X(GetUnitTypeId(J2E))] + GetLocationZ(CN)
endfunction
function OEX takes real M2E,unit J2E returns boolean
return ( M2E <= OVX(J2E) and M2E >= ( DN[X4X(GetUnitTypeId(( J2E )))] ) )
endfunction
function OXX takes nothing returns nothing
call X6X('n021' , BN , 115.)
call X6X('n020' , BN , 115.)
call X6X('n03P' , BN , 155.)
call X6X('n030' , BN , 155.)
call X6X('n029' , BN , 155.)
call X6X('n028' , BN , 155.)
call X6X('n02V' , BN , 115.)
call X6X('n02U' , BN , 115.)
call X6X('n03A' , BN , 115.)
call X6X('n039' , BN , 115.)
call X6X('n02B' , BN , 155.)
call X6X('n02A' , BN , 155.)
call X6X('n031' , BN , 115.)
call X6X('n030' , BN , 115.)
call X6X('n02T' , BN , 155.)
call X6X('n02S' , BN , 155.)
call X6X('n02A' , BN , 155.)
call X6X('n02R' , BN , 155.)
call X6X('n02Q' , BN , 155.)
call X6X('n01X' , BN , 115.)
call X6X('n01W' , BN , 115.)
call X6X('n03N' , BN , 115.)
call X6X('n03L' , BN , 115.)
call X6X('n02H' , BN , 115.)
call X6X('n02G' , BN , 115.)
call X6X('n03S' , BN , 115.)
call X6X('n03Q' , BN , 115.)
call X6X('n02N' , BN , 155.)
call X6X('n02M' , BN , 155.)
call X6X('n02M' , BN , 155.)
call X6X('n03J' , BN , 155.)
call X6X('n03G' , BN , 155.)
//call X6X('n02L',BN,400.)
call X6X('n02K' , BN , 400.)
call X6X('u00Y' , BN , 400.)
call X6X('u00W' , BN , 400.)
call X6X('n03E' , BN , 115.)
call X6X('n03D' , BN , 115.)
//call X6X('n03E',BN,115.)
call X6X('n02J' , BN , 155.)
call X6X('n02I' , BN , 155.)
call X6X('n02D' , BN , 155.)
call X6X('n02C' , BN , 155.)
call X6X('n02Z' , BN , 155.)
call X6X('n02Y' , BN , 115.)
call X6X('n038' , BN , 155.)
call X6X('n037' , BN , 155.)
call X6X('n027' , BN , 155.)
call X6X('n026' , BN , 155.)
call X6X('n01Z' , BN , 115.)
call X6X('n01Y' , BN , 115.)
call X6X('n01V' , BN , 115.)
call X6X('n01Y' , BN , 115.)
call X6X('n03T' , BN , 155.)
call X6X('n03R' , BN , 155.)
call X6X('U00Z' , BN , 155.)
call X6X('U00N' , BN , 155.)
call X6X('E01R' , BN , 155.)
call X6X('E00Y' , BN , 155.)
call X6X('E010' , BN , 155.)
call X6X('E011' , BN , 155.)
call X6X('O00E' , BN , 155.)
call X6X('E012' , BN , 155.)
call X6X('E013' , BN , 155.)
call X6X('E00R' , BN , 155.)
call X6X('E014' , BN , 155.)
call X6X('E015' , BN , 155.)
call X6X('E016' , BN , 155.)
call X6X('H01F' , BN , 155.)
call X6X('h01E' , BN , 115.)
call X6X('o007' , BN , 115.)
call X6X('h01D' , BN , 115.)
call X6X('h01B' , BN , 115.)
call X6X('E017' , BN , 155.)
call X6X('E018' , BN , 155.)
call X6X('E019' , BN , 155.)
call X6X('E01A' , BN , 155.)
call X6X('E01B' , BN , 155.)
call X6X('E000' , BN , 155.)
call X6X('O00B' , BN , 155.)
call X6X('E01C' , BN , 155.)
call X6X('E00U' , BN , 155.)
call X6X('N01O' , BN , 155.)
call X6X('E01D' , BN , 155.)
call X6X('E01E' , BN , 155.)
call X6X('E01F' , BN , 155.)
call X6X('E01G' , BN , 155.)
call X6X('E01H' , BN , 155.)
call X6X('E01J' , BN , 155.)
call X6X('E01K' , BN , 155.)
call X6X('E006' , BN , 155.)
call X6X('E01L' , BN , 155.)
call X6X('E020' , BN , 155.)
//call X6X('E01M',BN,155.)
call X6X('E01N' , BN , 155.)
call X6X('E01O' , BN , 155.)
call X6X('E01P' , BN , 155.)
call X6X('E01Q' , BN , 155.)
call X6X('H00F' , BN , 155.)
call X6X('U00O' , BN , 155.)
call X6X('N01T' , BN , 155.)
call X6X('N01S' , BN , 155.)
call X6X('N01Q' , BN , 155.)
call X6X('N032' , BN , 155.)
call X6X('N01M' , BN , 155.)
call X6X('N01L' , BN , 155.)
call X6X('n009' , BN , 155.)
call X6X('n033' , BN , 155.)
call X6X('n000' , BN , 155.)
call X6X('n001' , BN , 155.)
call X6X('n002' , BN , 155.)
call X6X('n003' , BN , 155.)
call X6X('n004' , BN , 155.)
call X6X('n005' , BN , 155.)
call X6X('n006' , BN , 155.)
call X6X('n007' , BN , 155.)
call X6X('n00B' , BN , 155.)
call X6X('H008' , BN , 155.)
call X6X('H005' , BN , 155.)
call X6X('H006' , BN , 155.)
call X6X('n03C' , BN , 115.)
call X6X('n03B' , BN , 115.)
call X6X('e00X' , BN , 115.)
call X6X('e00G' , BN , 115.)
call X6X('n02P' , BN , 115.)
call X6X('n02O' , BN , 115.)
call X6X('u00S' , BN , 155.)
call X6X('u00R' , BN , 155.)
call X6X('u00X' , BN , 155.)
call X6X('u00Q' , BN , 115.)
call X6X('u00P' , BN , 115.)
call X6X('u00T' , BN , 155.)
call X6X('u00U' , BN , 155.)
call X6X('n02X' , BN , 115.)
call X6X('n02W' , BN , 115.)
call X6X('n025' , BN , 115.)
call X6X('n024' , BN , 115.)
call X6X('n023' , BN , 115.)
call X6X('n022' , BN , 115.)
call X6X('n03H' , BN , 115.)
call X6X('n03B' , BN , 115.)
call X6X('n02F' , BN , 155.)
call X6X('n02R' , BN , 155.)
call X6X('e01S' , BN , 155.)
call X6X('e00Z' , BN , 155.)
call X6X('u00V' , BN , 155.)
call X6X('n03F' , BN , 115.)
call X6X('n03O' , BN , 115.)
call X6X('n01U' , BN , 115.)
call X6X('n02E' , BN , 115.)
call X6X('n03M' , BN , 115.)
call X6X('H009' , BN , 155.)
call X6X('E00E' , BN , 155.)
call X6X('n01K' , BN , 155.)
call X6X('n02L' , 150. , 400.)
call X6X('h00B' , BN , 155.)
call X6X('nhrh' , 190. , 340.)
call X6X('nhar' , 190. , 340.)
call X6X('nhrq' , 230. , 380.)
call X6X('nsqa' , BN , 155.)
call X6X('nowk' , BN , 155.)
call X6X('nsbm' , BN , 155.)
call X6X('nmdr' , BN , 155.)
call X6X('nwld' , BN , 155.)
call X6X('ntrd' , BN , 155.)
call X6X('njgb' , BN , 155.)
call X6X('nfra' , BN , 155.)
call X6X('nmgr' , BN , 155.)
call X6X('nmgw' , BN , 155.)
call X6X('nlkl' , BN , 155.)
call X6X('nogl' , BN , 155.)
call X6X('nano' , BN , 155.)
call X6X('nsll' , BN , 155.)
call X6X('nsc3' , BN , 155.)
call X6X('nspb' , BN , 115.)
call X6X('nanc' , BN , 115.)
call X6X('njga' , BN , 115.)
call X6X('nfrg' , BN , 115.)
call X6X('nfre' , BN , 115.)
call X6X('nltl' , BN , 115.)
call X6X('nlds' , BN , 115.)
call X6X('nlsn' , BN , 115.)
call X6X('nomg' , BN , 115.)
call X6X('nogm' , BN , 115.)
call X6X('nrzb' , BN , 115.)
call X6X('ntrs' , BN , 115.)
call X6X('nssp' , BN , 115.)
call X6X('E003' , BN , 155.)
call X6X('E004' , BN , 155.)
call X6X('E00Q' , BN , 155.)
call X6X('nfel' , BN , 115.)
call X6X('n01N' , BN , 115.)
call X6X('o000' , BN , 115.)
call X6X('n00S' , BN , 115.)
call X6X('h00S' , BN , 115.)
call X6X('n03I' , BN , 155.)
call X6X('h020' , BN , 115.)
call X6X('n016' , BN , 155.)
call X6X('n03K' , BN , 155.)
call X6X('U003' , BN , 155.)
call X6X('U000' , BN , 450.)
call X6X('N00D' , BN , 155.)
call X6X('uskm' , BN , 115.)
call X6X('uske' , BN , 115.)
call X6X('nsko' , BN , 115.)
call X6X('nskm' , BN , 115.)
call X6X('nskf' , BN , 115.)
call X6X('U004' , BN , 155.)
call X6X('n013' , BN , 115.)
call X6X('n01B' , BN , 115.)
call X6X('e009' , BN , 155.)
call X6X('e008' , BN , 155.)
call X6X('e007' , BN , 155.)
call X6X('e00A' , 190. , 340.)
call X6X('e00C' , 190. , 340.)
call X6X('e00I' , 190. , 340.)
call X6X('u002' , 70. , 380.)
call X6X('E00E' , BN , 175.)
call X6X('n01J' , BN , 115.)
call X6X('o008' , BN , 115.)
call X6X('n01I' , BN , 115.)
call X6X('u006' , BN , 155.)
call X6X('n03W' , BN , 155.)
call X6X('n03X' , BN , 155.)
call X6X('E01Z' , BN , 155.)
call X6X('n03Y' , BN , 155.)
endfunction
function OOX takes integer p,unit u returns nothing
local real x=HHV[p]
local real y=HJV[p]
//local unit su
if UnitAlive(u) and u != GZV[p] and IsUnitEnemy(u, GetOwningPlayer(GZV[p])) then
//set su=CreateUnit(GetOwningPlayer(GZV[p]),'h007',x,y,.0)
//call UnitApplyTimedLife(su,'BTLF',1.)
//call UnitAddAbility(su,'A015')
//call IssueTargetOrderById(su,852226,u)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", u, "origin"))
call UnitDamageTargetEx(( GZV[p] ) , ( u ) , ( ( G3V[p] ) + ( GetHeroInt(GZV[p], true) * GetUnitAbilityLevel(GZV[p], 'A04O') * .9 ) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
//set su=null
endfunction
function AetherLance__ProjColl takes nothing returns nothing
local integer E3X=MA
local integer TBE=( PA )
if IsUnitEnemy(GZV[E3X], GetOwningPlayer(GZV[TBE])) then
set G5V[E3X]=.5
call SetUnitVertexColor(HFV[E3X], 25, 100, 150, 255)
endif
endfunction
function ORX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local location NEWX=Location(GetUnitX(OIX), GetUnitY(OIX))
local location OBX=CNE(NEWX , 80. , GetUnitFacing(OIX))
local real OCX=GetLocationX(OBX)
local real ODX=GetLocationY(OBX)
local location OFX=GetUnitLoc(OIX)
local real OGX=1200.
local location OHX=CNE(OFX , OGX , GetUnitFacing(OIX))
local real OJX=GetLocationX(OHX)
local real OKX=GetLocationY(OHX)
local real OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
local integer OMX=0
call MoveLocation(HN, OAX, ONX)
set OMX=XAX(OCX , ODX , 75. , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\FrozenOrb.mdx")
set G3V[OMX]=IT[GetUnitAbilityLevel(OIX, 'A04O')]
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=1200. / 800.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(1)
set HCV[OMX]=( 1 )
call MoveLocation(HN, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(HN) , 800.)
call RemoveLocation(OFX)
call RemoveLocation(OHX)
call RemoveLocation(OBX)
call RemoveLocation(NEWX)
set OBX=null
set OFX=null
set OHX=null
set OIX=null
set NEWX=null
endfunction

function OQX takes nothing returns nothing

call RegisterSpellEffectEvent('A04O' , function ORX)
endfunction
function OSX takes nothing returns boolean
return ( not IsUnitAlly(GetFilterUnit(), GM) and UnitAlive(GetFilterUnit()) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) and not ( GetUnitAbilityLevel(( GetFilterUnit() ), 'Avul') > 0 ) ) != null
endfunction
function OTX takes unit CBE,location OUX,real U6E,real CHE,damagetype OWX,attacktype OYX,boolean OZX returns nothing
local group O_X=CreateGroup()
local filterfunc O0X=null
local unit O1X=null
set GM=GetOwningPlayer(CBE)
if OZX == false then
set O0X=Filter(function OSX)
endif
call GroupEnumUnitsInRange(O_X, GetLocationX(OUX), GetLocationY(OUX), CHE + 24., O0X)
loop
set O1X=FirstOfGroup(O_X)
call UnitDamageTargetEx(CBE , O1X , U6E , false , true , OYX , OWX , WEAPON_TYPE_WHOKNOWS)
call GroupRemoveUnit(O_X, O1X)
exitwhen O1X == null
endloop
call DestroyGroup(O_X)
set GM=null
set O1X=null
set O_X=null
endfunction
function O2X takes unit CBE,location OUX,real U6E,real CHE,damagetype OWX,attacktype OYX,boolean OZX returns nothing
local group O_X=CreateGroup()
local filterfunc O0X=null
local unit O3X
local unit O1X=null
set GM=GetOwningPlayer(CBE)
if OZX == false then
set O0X=Filter(function OSX)
endif
call GroupEnumUnitsInRange(O_X, GetLocationX(OUX), GetLocationY(OUX), CHE, O0X)
loop
set O1X=FirstOfGroup(O_X)
call UnitDamageTargetEx(CBE , O1X , U6E , false , true , OYX , OWX , WEAPON_TYPE_WHOKNOWS)
set O3X=CreateUnit(GM, 'h007', .0, .0, .0)
call UnitApplyTimedLife(O3X, 'BTLF', 1)
call UnitAddAbility(O3X, 'A02R')
call IssueTargetOrderById(O3X, 852226, O1X)
call GroupRemoveUnit(O_X, O1X)
exitwhen O1X == null
endloop
call DestroyGroup(O_X)
set O3X=null
set GM=null
set O1X=null
set O_X=null
endfunction
function O4X takes unit u returns real
local real O5X=GetWidgetLife(u)
local real O6X=O5X
local real O7X=.0
local boolean O8X=false
local trigger X_X=GetTriggeringTrigger()
if u != null and O5X >= .405 then
if GetUnitState(u, UNIT_STATE_MAX_LIFE) <= 16. then
call UnitAddAbility(u, 'lif&')
endif
if O5X <= 30. then
call SetWidgetLife(u, 30.)
set O6X=30.
endif
if X_X != null and IsTriggerEnabled(X_X) then
call DisableTrigger(X_X)
set O8X=true
endif
call UnitDamageTargetEx(u , u , 16. , true , false , JN , DAMAGE_TYPE_NORMAL , null)
if O8X then
call EnableTrigger(X_X)
endif
set O7X=( 16. - O6X + GetWidgetLife(u) ) / 16.
call UnitRemoveAbility(u, 'lif&')
call SetWidgetLife(u, O5X)
set X_X=null
if O7X >= 1. then
return 917451.519
elseif O7X < .0 then
return - PHE(O7X + 1.) / KN
else
return O7X / ( .06 * ( 1. - O7X ) )
endif
endif
set X_X=null
return .0
endfunction
function O9X takes real U6E,real RVX returns real
if RVX >= .0 then
return U6E / ( 1. - ( ( RVX * .06 ) / ( 1. + .06 * RVX ) ) )
else
return U6E / ( 2. - Pow(.94, - RVX) )
endif
endfunction
function REX takes integer p,unit J2E returns nothing
local unit u
local real x
local real y
local group g
local unit FoG
if J2E == ( HZV[( p )] ) then
if OEX(HKV[p] , J2E) then
if GetUnitAbilityLevel(GZV[p], 'A0JL') == 1 then
set x=GetUnitX(J2E)
set y=GetUnitY(J2E)
set u=CreateUnit(GetOwningPlayer(GZV[p]), 'h01R', x, y, 0.)
call UnitApplyTimedLife(u, 'BTLF', .5)
call IssuePointOrderById(u, 852488, x, y)
set u=CreateUnit(GetOwningPlayer(GZV[p]), 'h01Q', x, y, 0.)
call UnitApplyTimedLife(u, 'BTLF', 2.1)
call IssueImmediateOrderById(u, 852177)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Damnation Orange2.mdx", x, y))
endif
if GetUnitAbilityLevel(GZV[p], 'A0HY') == 1 then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Damnation Orange2.mdx", GetUnitX(J2E), GetUnitY(J2E)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", GetUnitX(J2E), GetUnitY(J2E)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\OrbOfFire.mdx", GetUnitX(J2E), GetUnitY(J2E)))
set g=CreateGroup()
set x=GetUnitX(J2E)
set y=GetUnitY(J2E)
call GroupEnumUnitsInRange(g, x, y, 275., null)
loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)
                if IsUnitEnemy(FoG, GetOwningPlayer(GZV[p])) and UnitAlive(FoG) and FoG != J2E then

		call UnitDamageTargetEx(GZV[p] , FoG , G3V[p] , false , true , ATTACK_TYPE_CHAOS , LN , WEAPON_TYPE_WHOKNOWS)
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebolt Rough Minor.mdx", FoG, "chest"))

		endif

            endloop
endif
call UnitDamageTargetEx(GZV[p] , J2E , G3V[p] , false , true , ATTACK_TYPE_CHAOS , LN , WEAPON_TYPE_WHOKNOWS)
call EHX(p)
else
call EKX(p , J2E)
endif
endif
set u=null
set g=null
set FoG=null
endfunction
function RXX takes integer p,unit J2E returns nothing
local unit u
local real x
local real y
if J2E == ( HZV[( p )] ) then
if OEX(HKV[p] , J2E) then
if GetUnitAbilityLevel(GZV[p], 'A0JL') == 1 then
set x=GetUnitX(J2E)
set y=GetUnitY(J2E)
set u=CreateUnit(GetOwningPlayer(GZV[p]), 'h01R', x, y, 0.)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call IssuePointOrderById(u, 852488, x, y)
set u=CreateUnit(GetOwningPlayer(GZV[p]), 'h01Q', x, y, 0.)
call UnitApplyTimedLife(u, 'BTLF', 2.1)
call IssueImmediateOrderById(u, 852177)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Damnation Orange2.mdx", GetUnitX(J2E), GetUnitY(J2E)))
endif
call UnitDamageTargetEx(GZV[p] , J2E , G3V[p] , false , true , ATTACK_TYPE_CHAOS , LN , WEAPON_TYPE_WHOKNOWS)
call SEE(J2E , R2I(G3V[p]))
call EHX(p)
else
call EKX(p , J2E)
endif
endif
set u=null
endfunction
function ROX takes integer i returns integer
local integer X5X=i - ( i / 8191 ) * 8191
loop
exitwhen UN[X5X] == i
if UN[X5X] == 0 then
set UN[X5X]=i
return X5X
endif
set X5X=X5X + 53
if X5X >= 8191 then
set X5X=X5X - 8191
endif
endloop
return X5X
endfunction
function Attack_GetSource takes nothing returns unit
return QN
endfunction
function Attack_GetTarget takes nothing returns unit
return SN
endfunction
function Attack_GetDamage takes nothing returns real
return TN
endfunction
function Attack_GetAttackData takes nothing returns integer
return PN
endfunction
function Attack_GetType takes nothing returns damagetype
return LN
endfunction
function RRX takes integer id,string RIX,real SZE,real RAX,real RNX,real RBX,real RCX,real RDX returns boolean
local integer ad=( ROX(id) )
if J5V[ad] then
return false
else
set JYV[ad]=RIX
set JZV[ad]=SZE
set J0V[ad]=RNX
set J1V[ad]=RBX
set J2V[ad]=RCX
set J3V[ad]=RDX
set J5V[ad]=true
if RAX == .0 then
set J4V[ad]=true
else
set J_V[ad]=RAX
endif
return true
endif
endfunction
function RFX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
local unit RHX=GetTriggerUnit()
local real SVE=GetEventDamage()
local real ax=GetUnitX(RGX)
local real ay=GetUnitY(RGX)
local real tx=GetUnitX(RHX)
local real ty=GetUnitY(RHX)
local real OLX=Atan2(( ty - ay ), ( tx - ax ))
local integer ad=( ROX(GetUnitTypeId(RGX)) )
local integer p=0
local integer ran
if ( CI[NI] ) and J5V[ad] and SVE > .5 and GetEventDamageSource() != GetTriggerUnit() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) then

if GetUnitTypeId(RGX) == 'E00E' then
set SVE=( GetHeroStr(RGX, true) * .15 * GetHeroLevel(RGX) ) + ( GetHeroInt(RGX, true) * .1 * GetHeroLevel(RGX) ) + ( GetHeroAgi(RGX, true) * .05 * GetHeroLevel(RGX) )
endif

set DI[NI]=DI[NI] + GetEventDamage()
set p=XAX(ax , ay , J0V[ad] , OLX)
set GZV[p]=RGX
call EEX(p , RHX)
set G_V[p]=GetOwningPlayer(RGX)

if IsRangerUseless[GetUnitUserData(RGX)] or IsBardCustom[GetUnitUserData(RGX)] or IsRangerRat[GetUnitUserData(RGX)] or IsAMChonk[GetUnitUserData(RGX)] or IsRangerGreen[GetUnitUserData(RGX)] then
if IsAMChonk[GetUnitUserData(RGX)] then
call V9X(p , "war3mapImported\\ChomusukeWhite.mdx")
endif
if IsRangerUseless[GetUnitUserData(RGX)] then
call V9X(p , "units\\critters\\Sheep\\Sheep.mdl")
endif
if IsRangerRat[GetUnitUserData(RGX)] then
call V9X(p , "war3mapImported\\Shot Green.mdx")
endif
if IsRangerGreen[GetUnitUserData(RGX)] then
call V9X(p , "war3mapImported\\Shot Yellow.mdx")
endif
if IsBardCustom[GetUnitUserData(RGX)] then
set ran=GetRandomInt(0, 100)
if ran < 33 then
call V9X(p , "war3mapImported\\Azul Arrow Defrosted.mdx")
endif
if ran >= 33 and ran < 66 then
call V9X(p , "war3mapImported\\Azul Arrow.mdx")
endif
if ran >= 66 then
call V9X(p , "war3mapImported\\Maiz con Arrow.mdx")
endif
endif
else
call V9X(p , JYV[ad])
endif
if IsBardCustom[GetUnitUserData(RGX)] then
call V8X(p , 1.5)
else
call V8X(p , J1V[ad])
endif
set G3V[p]=SVE
if IsBardCustom[GetUnitUserData(RGX)] then
set G2V[p]=100.
else
set G2V[p]=J3V[ad]
endif
set G1V[p]=J2V[ad]
set HEV[p]=true
set G8V[p]=true
set HOV[p]=true
set G4V[p]=20.
set G9V[p]=true
set HCV[p]=( 2 )
set HBV[p]=( 2 )
set HAV[p]=( 3 )
set HNV[p]=( 4 )
if J4V[ad] then
call XRX(p , tx , ty , GetUnitFlyHeight(RHX) + J0V[ad] , JZV[ad])
else
call XIX(p , tx , ty , GetUnitFlyHeight(RHX) + J0V[ad] , JZV[ad] , J_V[ad])
endif
set QN=RGX
set SN=RHX
set TN=SVE
set PN=ad
call MEE(MN)
endif
set RGX=null
set RHX=null
return false
endfunction
function RJX takes nothing returns nothing
local trigger X_X=CreateTrigger()
set MN=MVE()
call MOE(II , ( X_X ))
call TriggerAddCondition(X_X, Condition(function RFX))
endfunction
function Blink___Disjoint takes nothing returns nothing
local integer p=( MA )
if HEV[p] then
call EDX(p)
endif
endfunction
function RKX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
//if GetSpellAbilityId()=='Albk' then
call XQX(KA , GetUnitX(OIX) , GetUnitY(OIX) , .0 , 400. , 0 , ( 2 ))
//endif
set OIX=null
//return false
endfunction
function RLX takes nothing returns nothing

call RegisterSpellEffectEvent('AIbk' , function RKX)
endfunction
function RMX takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)
if J2E == ( HZV[( RPX )] ) and UnitAlive(J2E) then
if OEX(HKV[RPX] , J2E) then
if not IsUnitType(J2E, UNIT_TYPE_ANCIENT) or BRTON then
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( ( GetUnitState(J2E, UNIT_STATE_MAX_LIFE) * .025 ) + ( GetHeroStr(GZV[RPX], true) ) ) * 5. ) + ( GetHeroStr(GZV[RPX], true) * .05 * GetHeroLevel(GZV[RPX]) ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( ( GetUnitState(J2E, UNIT_STATE_LIFE) * .0375 ) ) + ( ( GetHeroStr(GZV[RPX], true) ) * 2.5 ) ) + ( GetHeroStr(GZV[RPX], true) * .025 * GetHeroLevel(GZV[RPX]) ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
endif
call IssueTargetOrderById(J2E, 851983, GZV[RPX])
call EHX(RPX)
endif
endif
endfunction
function RTX takes nothing returns nothing
local unit OIX=BLOODHYDRANTCASTER
local unit EXX=BLOODHYDRANTTARGET
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(WN, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , ( Deg2Rad(GetUnitFacing(OIX)) ))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\Blood Missile.mdx")
call V8X(OMX , .75)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 3 )
call EMX(OMX , G1V[OMX])
call MoveLocation(WN, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 900.)
set OIX=null
set EXX=null
endfunction

function RWX takes nothing returns nothing

call RegisterSpellEffectEvent('A03K' , function RTX)
endfunction
function RYX takes integer RPX,unit J2E returns nothing
local unit u=J2E
local real x=GetUnitX(u) + 150. * Cos(( GetUnitFacing(u) - 180. ) * bj_DEGTORAD)
local real y=GetUnitY(u) + 150. * Sin(( GetUnitFacing(u) - 180. ) * bj_DEGTORAD)
local unit s


if J2E == ( HZV[( RPX )] ) then
if IsSkaarUseless[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GZV[RPX]))])] or IsMechaSkaar[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GZV[RPX]))])] then
if IsSkaarUseless[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GZV[RPX]))])] then
set s=CreateUnit(GetOwningPlayer(GZV[RPX]), 'n01N', x, y, GetUnitFacing(u))
endif
if IsMechaSkaar[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GZV[RPX]))])] then
if GetRandomInt(0, 100) >= 50 then
set s=CreateUnit(GetOwningPlayer(GZV[RPX]), 'n03W', x, y, GetUnitFacing(u))
else
set s=CreateUnit(GetOwningPlayer(GZV[RPX]), 'n03X', x, y, GetUnitFacing(u))
endif
endif
else
set s=CreateUnit(GetOwningPlayer(GZV[RPX]), 'nfel', x, y, GetUnitFacing(u))
endif
call SetUnitAbilityLevel(s, 'A05T', GetUnitAbilityLevel(GZV[RPX], 'A05T') / 2)

if GetUnitTypeId(GZV[RPX]) == 'E00Q' or GetUnitTypeId(GZV[RPX]) == 'E004' or GetUnitTypeId(GZV[RPX]) == 'E01Y' then
call BlzSetUnitMaxHP(s, BlzGetUnitMaxHP(GZV[RPX]))
call BlzSetUnitBaseDamage(s, GetHeroStr(GZV[RPX], true) * 3, 0)
call UnitApplyTimedLife(s, 'BTLF', 10. + ( I2R(GetHeroStr(GZV[RPX], true)) / 4. ))
else
call BlzSetUnitMaxHP(s, R2I(GetWidgetLife(GZV[RPX])))
call BlzSetUnitBaseDamage(s, BlzGetUnitBaseDamage(GZV[RPX], 0) / 3 * 2, 0)
call UnitApplyTimedLife(s, 'BTLF', 30.)
call SetUnitScale(s, BlzGetUnitRealField(s, UNIT_RF_SCALING_VALUE) / 2., BlzGetUnitRealField(s, UNIT_RF_SCALING_VALUE) / 2., BlzGetUnitRealField(s, UNIT_RF_SCALING_VALUE) / 2.)
endif
call SetWidgetLife(s, GetUnitState(s, UNIT_STATE_MAX_LIFE))
call IssueTargetOrderById(s, 851983, u)
call EHX(RPX)
endif
set u=null
set s=null
endfunction
function RZX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetEventDamageSource()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(YN, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
if IsMechaSkaar[GetUnitUserData(OIX)] or IsMechaSkaar[GetUnitUserData(LC[1 + GetPlayerId(G_V[OMX])])] then
call V9X(OMX , "war3mapImported\\Big_ICM_Blue.mdx")
else
call V9X(OMX , "war3mapImported\\Blood Missile Blight.mdx")
endif
//call V9X(OMX,"war3mapImported\\PeeKay's Bonespirit.mdx")
call V8X(OMX , 1.)
set G2V[OMX]=60.
set G3V[OMX]=0.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 4 )
set G4V[OMX]=20.
set G9V[OMX]=true
call EMX(OMX , G1V[OMX])
call MoveLocation(YN, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XIX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 400. , .9)
call SetWidgetLife(OIX, GetWidgetLife(OIX) * .9)
if IsMechaSkaar[GetUnitUserData(OIX)] or IsMechaSkaar[GetUnitUserData(LC[1 + GetPlayerId(G_V[OMX])])] then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PlasmaGrenade.mdx", OIX, "chest"))
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Missile Blight.mdx", OIX, "chest"))
endif
set OIX=null
set EXX=null
endfunction
function R_X takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'S007') == 1 and GetRandomInt(1, 100) <= 4. and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) then
call RZX()
endif
return false
endfunction
function R0X takes nothing returns nothing
local trigger X_X=CreateTrigger()
call TriggerAddCondition(X_X, Condition(function R_X))
call MOE(II , ( X_X ))
set X_X=null
endfunction
function R1X takes integer D0E returns nothing
call DestroyLightning(J9V[D0E])
set KVV[D0E]=null
set KEV[D0E]=null
set KRV[D0E]=false
set KIV[D0E]=1.
set KXV[D0E]=.0
set KOV[D0E]=.0
call JCE(D0E)
endfunction
function R2X takes unit R3X,unit R4X,string WEE returns nothing
local integer PXE=JBE()
if PXE == KAV then
set KAV=KAV + 1
endif
if GetUnitFlyHeight(R3X) == 0 then
set KXV[PXE]=50.
else
set KXV[PXE]=GetUnitFlyHeight(R3X)
endif
if GetUnitFlyHeight(R4X) == 0 then
set KOV[PXE]=50.
else
set KOV[PXE]=GetUnitFlyHeight(R4X)
endif
set KVV[PXE]=R3X
set KEV[PXE]=R4X
set KRV[PXE]=true
set J9V[PXE]=AddLightningEx(WEE, true, GetUnitX(R3X), GetUnitY(R3X), KXV[PXE], GetUnitX(R4X), GetUnitY(R4X), KOV[PXE])
endfunction
function R5X takes nothing returns nothing
local integer i=1
loop
exitwhen i == KAV
if KRV[( i )] then
call MoveLightningEx(J9V[( i )], true, GetUnitX(KVV[( i )]), GetUnitY(KVV[( i )]), KXV[( i )], GetUnitX(KEV[( i )]), GetUnitY(KEV[( i )]), KOV[( i )])
set KIV[( i )]=KIV[( i )] - .03
if KIV[( i )] <= .0 then
call R1X(( i ))
else
call SetLightningColor(J9V[( i )], 1., 1., 1., KIV[( i )])
endif
endif
set i=i + 1
endloop
endfunction
function R6X takes nothing returns nothing
call TimerStart(KNV, .03, true, function R5X)
endfunction
function R7X takes integer D0E,unit CBE,unit YSE returns nothing
call Z2E(D0E , GetUnitX(CBE) , GetUnitY(CBE) , GetUnitFlyHeight(CBE) + 50.)
set FJV[( D0E )]=( KJV[D0E] )
set FQV[( D0E )]=( ( KHV[D0E] ) * 1. ) * 300.
call Z6E(D0E , KGV[D0E])
set KDV[D0E]=CBE
set KSV[D0E]=CBE
set KLV[D0E]=LVE()
call Z9E(D0E , YSE)
set F3V[( D0E )]=false
call Z7E(D0E)
endfunction
function R8X takes integer D0E,integer R9X returns nothing
set KBV[D0E]=R9X
set KCV[D0E]=R9X
endfunction
function IVX takes integer D0E returns nothing
call KGE(KLV[D0E])
call Z1E(D0E)
call KXE(D0E)
endfunction
function IEX takes nothing returns boolean
local integer TBE=KZV
local unit IXX=KUV
local boolean b
set KUV=GetFilterUnit()
set b=LNE(TBE) and IXX != KUV and not ( HaveSavedInteger(CX, ( ( KLV[TBE] ) ), GetHandleId(( KUV ))) ) and GetUnitTypeId(KUV) != 'face'
set KUV=IXX
return b
endfunction
function IOX takes real x,real y returns integer
local integer D0E=JIE()
set K2V[D0E]=x
set K3V[D0E]=y
return D0E
endfunction
function IRX takes integer RPX,unit J2E returns nothing
local unit u
local unit FoG
if UnitAlive(J2E) and J2E != GZV[RPX] and IsUnitEnemy(J2E, GetOwningPlayer(GZV[RPX])) then
if OEX(HKV[RPX] , J2E) then
set u=CreateUnit(GetOwningPlayer(GZV[RPX]), 'h007', 0., 0., 0.)

if H0V[RPX] == "war3mapImported\\CentaurArcherMissile.mdx" then
call UnitApplyTimedLife(u, 'BTLF', 15.)
else
call UnitApplyTimedLife(u, 'BTLF', 1.)
endif
if H0V[RPX] == "war3mapImported\\LightningArrow1.mdx" then
if not IsUnitType(J2E, UNIT_TYPE_HERO) then
if GetUnitAbilityLevel(J2E, 'A0EQ') == 0 then
call UnitAddAbility(J2E, 'A0EQ')
endif
call AddUnitBonus(J2E , BONUS_ARMOR , - 3.)
endif
call UnitDamageTargetEx(u , J2E , GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 3 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call UnitAddAbility(u, 'A0J7')
call IssueTargetOrder(u, "purge", J2E)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\StormBolt\\StormBoltMissile.mdl", J2E, "chest"))
endif
if H0V[RPX] == "Abilities\\Weapons\\FlamingArrow\\FlamingArrowMissile.mdl" then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\BallsOfFireMissile\\BallsOfFireMissile.mdl", J2E, "chest"))
call GroupEnumUnitsInRange(RAINBOW_GROUP, GetUnitX(J2E), GetUnitY(J2E), 160., null)
loop
            set FoG=FirstOfGroup(RAINBOW_GROUP)
            exitwhen FoG == null
            if IsUnitEnemy(FoG, GetOwningPlayer(GZV[RPX])) and UnitAlive(FoG) then
            call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\MagmaMissile2.mdx", FoG, "chest"))
			
			if not IsUnitType(FoG, UNIT_TYPE_HERO) then
				if GetUnitAbilityLevel(FoG, 'A0EQ') == 0 then
call UnitAddAbility(FoG, 'A0EQ')
endif
call AddUnitBonus(FoG , BONUS_ARMOR , - 3.)
endif
                call UnitDamageTargetEx(u , FoG , GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 1.5 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
            endif
            call GroupRemoveUnit(RAINBOW_GROUP, FoG)
        endloop
endif
if H0V[RPX] == "Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdl" then
if not IsUnitType(J2E, UNIT_TYPE_HERO) then
if GetUnitAbilityLevel(J2E, 'A0EQ') == 0 then
call UnitAddAbility(J2E, 'A0EQ')
endif
call AddUnitBonus(J2E , BONUS_ARMOR , - 3.)
endif
call UnitDamageTargetEx(u , J2E , GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 2.5 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call UnitAddAbility(u, 'A0D3')
call IssueTargetOrder(u, "thunderbolt", J2E)
endif
if H0V[RPX] == "war3mapImported\\CentaurArcherMissile.mdx" then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl", J2E, "chest"))
if not IsUnitType(J2E, UNIT_TYPE_HERO) then
if GetUnitAbilityLevel(J2E, 'A0EQ') == 0 then
call UnitAddAbility(J2E, 'A0EQ')
endif
call AddUnitBonus(J2E , BONUS_ARMOR , - 3.)
endif
call UnitDamageTargetEx(u , J2E , GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 2. , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call UnitAddAbility(u, 'A0D1')
call SetUnitAbilityLevel(u, 'A0D1', GetUnitAbilityLevel(GZV[RPX], 'A021'))
call IssueTargetOrder(u, "acidbomb", J2E)
endif
if H0V[RPX] == "war3mapImported\\s_Enchanted Arrow.mdx" then
if not IsUnitType(J2E, UNIT_TYPE_HERO) then
if GetUnitAbilityLevel(J2E, 'A0EQ') == 0 then
call UnitAddAbility(J2E, 'A0EQ')
endif
call AddUnitBonus(J2E , BONUS_ARMOR , - 3.)
endif
call UnitDamageTargetEx(u , J2E , GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 1.5 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call GroupEnumUnitsInRange(RAINBOW_GROUP, GetUnitX(J2E), GetUnitY(J2E), 175., null)
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_Nature'sBloom Effect.mdx", GetUnitX(J2E), GetUnitY(J2E)))
loop
            set FoG=FirstOfGroup(RAINBOW_GROUP)
            exitwhen FoG == null
            if IsUnitAlly(FoG, GetOwningPlayer(GZV[RPX])) and UnitAlive(FoG) then
                call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", FoG, "chest"))
                if GetUnitState(FoG, UNIT_STATE_MAX_LIFE) >= GetWidgetLife(FoG) + ( GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 1.5 ) then
                call SetWidgetLife(FoG, GetUnitState(FoG, UNIT_STATE_MAX_LIFE))
                else
                call SetWidgetLife(FoG, GetWidgetLife(FoG) + ( GetHeroAgi(GZV[RPX], true) * GetUnitAbilityLevel(GZV[RPX], 'A021') * 1. ))
                endif
            endif
            call GroupRemoveUnit(RAINBOW_GROUP, FoG)
        endloop
endif
else
call EKX(RPX , J2E)
endif
endif

set FoG=null
set u=null
endfunction
function IIX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX) + 50. * Cos(GetUnitFacing(OIX) * bj_DEGTORAD)
local real ONX=GetUnitY(OIX) + 50. * Sin(GetUnitFacing(OIX) * bj_DEGTORAD)
local real OJX=GetSpellTargetX()
local real OKX=GetSpellTargetY()
local real CCE=SquareRoot(( OAX - OJX ) * ( OAX - OJX ) + ( ONX - OKX ) * ( ONX - OKX ))
local real OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
local integer OMX=0
call MoveLocation(VB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\Magic Missile.mdx")
call V8X(OMX , 1.)
set G2V[OMX]=0.
set G6V[OMX]=5.
set G8V[OMX]=true
set HVV[OMX]=true
set HNV[OMX]=( 6 )
call SaveInteger(ZA, 0, ( ( OMX ) ), ( IOX(OJX , OKX) ))
set OJX=OAX + ( CCE * .5 ) * Cos(OLX)
set OKX=ONX + ( CCE * .5 ) * Sin(OLX)
call MoveLocation(VB, OJX, OKX)
call XIX(OMX , OJX , OKX , GetLocationZ(VB) + 600. , 1000. , .15)
set OIX=null
endfunction

function INX takes nothing returns nothing

call RegisterSpellEffectEvent('A021' , function IIX)
endfunction
function IBX takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)

if H0V[RPX] == "war3mapImported\\BluefireBolt.mdx" then
if J2E == HZV[RPX] and UnitAlive(J2E) then

call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , G3V[RPX] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BluefireBolt.mdx", J2E, "origin"))
call EHX(RPX)
endif
endif

if H0V[RPX] == "Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilMissile.mdl" then
if J2E != GZV[RPX] and UnitAlive(J2E) and IsUnitEnemy(J2E, GetOwningPlayer(GZV[RPX])) and not IsUnitType(J2E, UNIT_TYPE_ANCIENT) then
if OEX(HKV[RPX] , J2E) then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", J2E, "origin"))
if IsUnitType(J2E, UNIT_TYPE_HERO) then
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , .03 * ( ( ZS[GetUnitAbilityLevel(GZV[RPX], 'A035')] ) * 1. ) + ( GetUnitAbilityLevel(GZV[RPX], 'A035') * .2 * GetHeroInt(GZV[RPX], true) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( ZS[GetUnitAbilityLevel(GZV[RPX], 'A035')] ) * 1. ) + ( GetUnitAbilityLevel(GZV[RPX], 'A035') * 2. * GetHeroInt(GZV[RPX], true) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
call EHX(RPX)
endif
endif
if J2E != GZV[RPX] and UnitAlive(J2E) and IsUnitEnemy(J2E, GetOwningPlayer(GZV[RPX])) and IsUnitType(J2E, UNIT_TYPE_ANCIENT) and BRTON then
if OEX(HKV[RPX] , J2E) then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", J2E, "origin"))
if IsUnitType(J2E, UNIT_TYPE_HERO) then
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( ( ZS[GetUnitAbilityLevel(GZV[RPX], 'A035')] ) * 1. ) + ( GetUnitAbilityLevel(GZV[RPX], 'A035') * .2 * GetHeroInt(GZV[RPX], true) ) ) * .03 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( ( ZS[GetUnitAbilityLevel(GZV[RPX], 'A035')] ) * 2. ) + ( GetUnitAbilityLevel(GZV[RPX], 'A035') * 4. * GetHeroInt(GZV[RPX], true) ) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
call EHX(RPX)
endif
endif
endif
endfunction
function ICX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0

if GetSpellTargetUnit() != null then
set EXX=GetSpellTargetUnit()
endif

call MoveLocation(EB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , Deg2Rad(GetUnitFacing(OIX)))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilMissile.mdl")
call V8X(OMX , 1.)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 6 )
set G4V[OMX]=30.
set G9V[OMX]=true
call EMX(OMX , G1V[OMX])
call MoveLocation(EB, OJX, OKX)
if GetSpellTargetUnit() != null then
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1000.)
else
set HEV[OMX]=false
set OJX=GetSpellTargetX()
set OKX=GetSpellTargetY()
call MoveLocation(EB, OJX, OKX)
call XRX(OMX , OJX , OKX , GetLocationZ(EB) + 65. , 1000.)
endif
set OIX=null
set EXX=null
endfunction

function IFX takes nothing returns nothing

call RegisterSpellEffectEvent('A035' , function ICX)
endfunction
function IGX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetEventDamageSource()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
local location IHX
local location IJX
set OJX=GetUnitX(EXX)
set OKX=GetUnitY(EXX)
set IHX=Location(OJX, OKX)
set IJX=CNE(IHX , GetRandomReal(150., 200.) , GetRandomReal(.0, 360.))
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(XB, OJX, OKX)
set OMX=XAX(GetLocationX(IJX) , GetLocationY(IJX) , 1800. + GetLocationZ(XB) , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Weapons\\RockBoltMissile\\RockBoltMissile.mdl")
call V8X(OMX , 1.)
set G2V[OMX]=.0
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=false
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HBV[OMX]=( 7 )
set HCV[OMX]=( 8 )
call EMX(OMX , G1V[OMX])
call MoveLocation(XB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1500.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl", EXX, "chest"))
call RemoveLocation(IHX)
call RemoveLocation(IJX)
set IHX=null
set IJX=null
set OIX=null
set EXX=null
endfunction
function IKX takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'B01S') != 0 and GetRandomInt(1, 100) <= GetUnitAbilityLevel(GetTriggerUnit(), 'A03M') * 2 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) and (CI[NI]) then // INLINED!!
call IGX()
endif
return false
endfunction
function ILX takes nothing returns nothing
local trigger X_X=CreateTrigger()
call TriggerAddCondition(X_X, Condition(function IKX))
call MOE(II , ( X_X ))
set X_X=null
endfunction
function IMX takes nothing returns boolean
local unit IPX
local real x
local real y
local integer lvl
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RB)) then
set x=GetUnitX(RB)
set y=GetUnitY(RB)
set lvl=GetUnitAbilityLevel(RB, 'A006')
set IPX=CreateUnit(( GetOwningPlayer(RB) ), 'h007', x, y, .0)
call UnitApplyTimedLife(IPX, 'BTLF', 1.)
call UnitAddAbility(IPX, 'A0CT')
call SetUnitAbilityLevel(IPX, 'A0CT', lvl)
call IssueTargetOrderById(IPX, 852231, GetFilterUnit())
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Flameshock.mdx", GetFilterUnit(), "chest"))
call UnitDamageTargetEx(RB , GetFilterUnit() , ( ( GetHeroStr(RB, true) + GetHeroInt(RB, true) ) * 2. * lvl ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call UnitDamageTargetEx(RB , GetFilterUnit() , ( ( GetUnitState(RB, UNIT_STATE_MAX_MANA) - GetUnitState(RB, UNIT_STATE_MANA) ) * .5 ) , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
endif
set IPX=null
return false
endfunction
function IQX takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)
if IsUnitEnemy(J2E, GetOwningPlayer(GZV[RPX])) and UnitAlive(J2E) then
if OEX(HKV[RPX] , J2E) then
set RB=GZV[RPX]
call GroupEnumUnitsInRange(OB, RQX, RSX, 225., Filter(function IMX))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firaga.mdx", J2E, "origin"))
call EHX(RPX)
endif
endif
endfunction
function ISX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(IB, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , ( Deg2Rad(GetUnitFacing(OIX)) ))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\OrbOfFire.mdx")
call V8X(OMX , 1.)
set G4V[OMX]=20.
set G9V[OMX]=true
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 7 )
call EMX(OMX , G1V[OMX])
call MoveLocation(IB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 650.)
set OIX=null
set EXX=null
endfunction

function IUX takes nothing returns nothing

call RegisterSpellEffectEvent('A006' , function ISX)
endfunction
function IWX takes nothing returns boolean
local unit u
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(NB)) then
set u=CreateUnit(GetOwningPlayer(NB), 'h007', GetUnitX(NB), GetUnitY(NB), .0)
call UnitAddAbility(u, 'A028')
call SetUnitAbilityLevel(u, 'A028', GetUnitAbilityLevel(NB, 'A017'))
call IssueTargetOrderById(u, 852095, GetFilterUnit())
call UnitApplyTimedLife(u, 'BTLF', 1.)
endif
set u=null
return false
endfunction
function IYX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
local location IHX
local location IJX
set OJX=GetSpellTargetX()
set OKX=GetSpellTargetY()
set IHX=Location(OJX, OKX)
set IJX=CNE(IHX , GetRandomReal(800., 1000.) , GetRandomReal(.0, 360.))
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(BB, OJX, OKX)
set OMX=XAX(GetLocationX(IJX) , GetLocationY(IJX) , 1200. + GetLocationZ(BB) , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\LivingMeteor.mdx")
call V8X(OMX , 1.2)
set G2V[OMX]=.0
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=false
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HBV[OMX]=( 9 )
call MoveLocation(BB, OJX, OKX)
call XRX(OMX , OJX , OKX , GetLocationZ(BB) , 1200.)
call RemoveLocation(IHX)
call RemoveLocation(IJX)
set IHX=null
set IJX=null
set OIX=null
endfunction

function I_X takes nothing returns nothing

call RegisterSpellEffectEvent('A017' , function IYX)
endfunction
function I0X takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)
local unit IPX
if J2E == ( HZV[( RPX )] ) and IsUnitAliveBJ(J2E) then
if OEX(HKV[RPX] , J2E) then
set IPX=CreateUnit(( GetOwningPlayer(GZV[RPX]) ), 'h007', RQX, RSX, .0)
call UnitApplyTimedLife(IPX, 'BTLF', 1.)
call UnitAddAbility(IPX, 'A09O')
call SetUnitAbilityLevel(IPX, 'A09O', GetUnitAbilityLevel(GZV[RPX], 'A02E'))
if IsUnitType(J2E, UNIT_TYPE_ANCIENT) then
if BRTON then
call UnitDamageTargetEx(GZV[RPX] , J2E , ( GetUnitAbilityLevel(GZV[RPX], 'A02E') * 1.6 * GetUnitAbilityLevel(GZV[RPX], 'A02E') * GetHeroInt(GZV[RPX], true) ) + 40. , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(GZV[RPX] , J2E , ( GetUnitAbilityLevel(GZV[RPX], 'A02E') * .20 * GetUnitAbilityLevel(GZV[RPX], 'A02E') * GetHeroInt(GZV[RPX], true) ) + 40. , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
else
call UnitDamageTargetEx(GZV[RPX] , J2E , GetUnitAbilityLevel(GZV[RPX], 'A02E') * .40 * GetUnitAbilityLevel(GZV[RPX], 'A02E') * GetHeroInt(GZV[RPX], true) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
call IssueTargetOrderById(IPX, 852095, J2E)
call EHX(RPX)
endif
endif
set IPX=null
endfunction
function I1X takes nothing returns nothing
local unit OIX=LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local real CDE=Atan2(GetUnitY(EXX) - GetUnitY(OIX), GetUnitX(EXX) - GetUnitX(OIX))
local integer OMX=0
call MoveLocation(CB, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , CDE)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
if IsAMChonk[GetUnitUserData(OIX)] then
call V9X(OMX , "war3mapImported\\ChomusukeBlue.mdx")
call V8X(OMX , 1.5)
else
call V9X(OMX , "Abilities\\Spells\\Other\\FrostBolt\\FrostBoltMissile.mdl")
call V8X(OMX , 1.)
endif
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 8 )
set G4V[OMX]=20.
set G9V[OMX]=true
call EMX(OMX , G1V[OMX])
call MoveLocation(CB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1500.)
set OIX=null
set EXX=null
endfunction

function I3X takes nothing returns nothing

call RegisterSpellEffectEvent('A02E' , function I1X)
endfunction
function I4X takes integer RPX,unit uu returns nothing
local unit u2=uu
local unit su
if UnitAlive(u2) and IsUnitEnemy(u2, G_V[RPX]) then
call UnitDamageTargetEx(( GZV[RPX] ) , ( u2 ) , ( ( G3V[RPX] ) * 1. ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
if IsUnitType(u2, UNIT_TYPE_ANCIENT) == false then
set su=CreateUnit(G_V[RPX], 'h007', HHV[RPX], HJV[RPX], .0)
call UnitApplyTimedLife(su, 'BTLF', 1.)
call UnitAddAbility(su, 'A040')
call IssueTargetOrderById(su, 852226, u2)
endif
call EHX(RPX)
endif
set u2=null
set su=null
endfunction
function I5X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local integer p=0
local real tx
local real ty
local real a
local real tf
local real I6X
if LOV[PXE] == 0 then
call JRE(PXE)
call ReleaseTimer(t)
call EHX(p)
else
set tf=GetRandomReal(LVV[PXE] - K8V[PXE], LVV[PXE] + K8V[PXE])
set tx=( ( ( LEV[PXE] ) * 1. ) + ( ( 3000. ) * 1. ) * Cos(( ( tf ) * 1. ) * bj_DEGTORAD) )
set ty=( ( ( LXV[PXE] ) * 1. ) + ( ( 3000. ) * 1. ) * Sin(( ( tf ) * 1. ) * bj_DEGTORAD) )
set a=tf * bj_DEGTORAD
call MoveLocation(DB, LEV[PXE], LXV[PXE])
set p=XAX(LEV[PXE] , LXV[PXE] , 65. , a)
set GZV[p]=K9V[PXE]
set G_V[p]=GetOwningPlayer(K9V[PXE])
if IsAMChonk[GetUnitUserData(K9V[PXE])] then
call V9X(p , "war3mapImported\\Chomusuke.mdx")
call V8X(p , 2.)
else
call V9X(p , "war3mapImported\\BlizMissile.mdx")
call V8X(p , .8)
endif
set G3V[p]=AT[GetUnitAbilityLevel(K9V[PXE], 'A041')]
set G2V[p]=60.
set G8V[p]=true
set HVV[p]=true
set HOV[p]=true
set G1V[p]=72.
set HCV[p]=( 9 )
set HBV[p]=( 10 )
call MoveLocation(DB, tx, ty)
set I6X=GetLocationZ(DB)
if I6X <= 0 then
set I6X=- I6X
endif
call XRX(p , tx , ty , 65. + I6X , 800.)
set LOV[PXE]=LOV[PXE] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function I5X)
endif
set t=null
endfunction
function I7X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local integer I8X=20 + ( 3 * GetUnitAbilityLevel(OIX, 'A041') )
local real cx=( ( ( GetUnitX(OIX) ) * 1. ) + ( ( 80. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real cy=( ( ( GetUnitY(OIX) ) * 1. ) + ( ( 80. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real x=GetSpellTargetX()
local real y=GetSpellTargetY()
local real UAE=QTE(GetUnitX(OIX) , GetUnitY(OIX) , x , y) - 180.
local real CDE
local real K0E=GetUnitFacing(OIX)
local real tx
local real ty
local real tf
local real a
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=JOE()
if UAE >= 820 then
set UAE=820.
endif
if UAE <= .0 then
set UAE=.0
endif
set CDE=( 180. - UAE * .213414634 ) / 2.
set K7V[PXE]=UAE
set K8V[PXE]=CDE
set K9V[PXE]=OIX
set LVV[PXE]=K0E
set LEV[PXE]=cx
set LXV[PXE]=cy
set LOV[PXE]=I8X
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function I5X)
set t=null
set OIX=null
endfunction

function AVX takes nothing returns nothing

call RegisterSpellEffectEvent('A041' , function I7X)
endfunction
function AEX takes integer p,unit u returns nothing
local real x=GetUnitX(u)
local real y=GetUnitY(u)
local real a
if UnitAlive(u) and u != GZV[p] and IsUnitEnemy(u, GetOwningPlayer(GZV[p])) then
call UnitDamageTargetEx(( GZV[p] ) , ( u ) , ( ( G3V[p] ) * 1. ) , false , false , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)


set a=Atan2(HJV[p] - y, HHV[p] - x)

call SetUnitX(u, x + ( 425. * .03125 ) * Cos(a))
call SetUnitY(u, y + ( 425. * .03125 ) * Sin(a))
call EKX(p , u)
endif
endfunction
function AXX takes integer p,destructable d returns nothing
call KillDestructable(d)
endfunction
function GravityBall___ProjColl takes nothing returns nothing
local integer E3X=MA
local integer TBE=( PA )
//if GZV[E3X]!=GZV[TBE]then
//call ECX(E3X,HHV[E3X]+((425.*2.75)*.03125)*Cos(EOX(TBE)),HJV[E3X]+((425.*2.75)*.03125)*Sin(EOX(TBE)),HKV[E3X],true)
//endif
endfunction
function AOX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetSpellTargetX()
local real ONX=GetSpellTargetY()
local real OJX=GetUnitX(OIX)
local real OKX=GetUnitY(OIX)
local real OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
local integer lvl= GetUnitAbilityLevel(OIX, GetSpellAbilityId())
local integer OMX=0
local unit d= CreateUnit(GetOwningPlayer(OIX), 'h025', OAX, ONX, GetUnitFacing(OIX) - 180.)
call UnitApplyTimedLife(d, 'BTLF', ( SquareRoot(( OJX - OAX ) * ( OJX - OAX ) + ( OKX - ONX ) * ( OKX - ONX )) ) / 300.)
set d=CreateUnit(GetOwningPlayer(OIX), 'h025', OJX, OKX, GetUnitFacing(OIX))
call UnitApplyTimedLife(d, 'BTLF', ( SquareRoot(( OJX - OAX ) * ( OJX - OAX ) + ( OKX - ONX ) * ( OKX - ONX )) ) / 300.)
call MoveLocation(FB, OAX, ONX)
set OMX=XAX(OAX , ONX , GetUnitFlyHeight(OIX) + 50. + GetLocationZ(FB) , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\Void2.mdx")
set G3V[OMX]=( ( GetHeroAgi(OIX, true) * .25 * lvl ) + ( GetHeroInt(OIX, true) * .5 * lvl ) ) * .03125
call V8X(OMX , 2.5)
set G2V[OMX]=50.
set G4V[OMX]=( SquareRoot(( OJX - OAX ) * ( OJX - OAX ) + ( OKX - ONX ) * ( OKX - ONX )) ) / 300.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=true
set G1V[OMX]=225.
set G0V[OMX]=225.
set HIV[OMX]=( 11 )
set HCV[OMX]=( 10 )
//set HBV[OMX]=(12)
set HDV[OMX]=( 1 )
set HNV[OMX]=( 666 )
call MoveLocation(FB, OJX, OKX)
call XRX(OMX , OJX , OKX , 50. + GetLocationZ(FB) , 300.)
set d=null
set OIX=null
endfunction

function AIX takes nothing returns nothing

call RegisterSpellEffectEvent('A0N6' , function AOX)
endfunction
function AAX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local location IHX=GetSpellTargetLoc()
local location IJX=CNE(IHX , 400. , GetUnitFacing(OIX) - 90.)
local location ANX=CNE(IHX , 400. , GetUnitFacing(OIX) + 90.)
local integer OMX=0
local integer ABX=0
local integer ACX=0
if EXX == null then
set OJX=GetSpellTargetX()
set OKX=GetSpellTargetY()
else
set OJX=GetUnitX(EXX)
set OKX=GetUnitY(EXX)
endif
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(GB, OAX, ONX)
set OMX=XAX(OAX , ONX , GetUnitFlyHeight(OIX) + 50. + GetLocationZ(GB) , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
set G3V[OMX]=( 500 * GetUnitAbilityLevel(OIX, 'A022') * GetUnitAbilityLevel(OIX, 'A022') ) + ( 2 * GetHeroStr(OIX, true) * GetUnitAbilityLevel(OIX, 'A022') )
call V8X(OMX , 2.)
set G2V[OMX]=50.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=false
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HBV[OMX]=( 13 )
call EMX(OMX , G1V[OMX])
call MoveLocation(GB, OJX, OKX)
if EXX != null then
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 50. + GetLocationZ(GB) , 1000.)
else
set JFV[OMX]=true
set JGV[OMX]=40 + ( GetUnitAbilityLevel(OIX, 'A022') * 5 )
set JCV[OMX]=.01
set JDV[OMX]=.01
call XIX(OMX , OJX , OKX , GetLocationZ(GB) , 1000. , .35)
endif
set ABX=XAX(OAX , ONX , GetUnitFlyHeight(OIX) + 50. + GetLocationZ(GB) , OLX)
set GZV[ABX]=OIX
set G_V[ABX]=GetOwningPlayer(OIX)
call V9X(ABX , "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
set G3V[ABX]=500 * GetUnitAbilityLevel(OIX, 'A022')
call V8X(ABX , 2.)
set G2V[ABX]=50.
set G8V[ABX]=true
set HVV[ABX]=true
set HOV[ABX]=false
set HXV[ABX]=false
set G1V[ABX]=64.
set G0V[ABX]=64.
set HBV[ABX]=( 13 )
call EMX(ABX , G1V[ABX])
call MoveLocation(GB, OJX, OKX)
if EXX != null then
call EEX(ABX , EXX)
set HEV[ABX]=true
call XRX(ABX , OJX , OKX , GetUnitFlyHeight(EXX) + 50. + GetLocationZ(GB) , 1000.)
else
set JFV[ABX]=true
set JGV[ABX]=30 + ( GetUnitAbilityLevel(OIX, 'A022') * 5 )
set JCV[ABX]=.0
set JDV[ABX]=.0
call XIX(ABX , GetLocationX(IJX) , GetLocationY(IJX) , GetLocationZ(GB) , 1000. , .35)
endif
set ACX=XAX(OAX , ONX , GetUnitFlyHeight(OIX) + 50. + GetLocationZ(GB) , OLX)
set GZV[ACX]=OIX
set G_V[ACX]=GetOwningPlayer(OIX)
call V9X(ACX , "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
set G3V[ACX]=500 * GetUnitAbilityLevel(OIX, 'A022')
call V8X(ACX , 2.)
set G2V[ACX]=50.
set G8V[ACX]=true
set HVV[ACX]=true
set HOV[ACX]=false
set HXV[ACX]=false
set G1V[ACX]=64.
set G0V[ACX]=64.
set HBV[ACX]=( 13 )
call EMX(ACX , G1V[ACX])
call MoveLocation(GB, OJX, OKX)
if EXX != null then
call EEX(ACX , EXX)
set HEV[ACX]=true
call XRX(ACX , OJX , OKX , GetUnitFlyHeight(EXX) + 50. + GetLocationZ(GB) , 1000.)
else
set JFV[ACX]=true
set JGV[ACX]=30 + ( GetUnitAbilityLevel(OIX, 'A022') * 5 )
set JCV[ACX]=.0
set JDV[ACX]=.0
call XIX(ACX , GetLocationX(ANX) , GetLocationY(ANX) , GetLocationZ(GB) , 1000. , .35)
endif
call RemoveLocation(IHX)
call RemoveLocation(IJX)
call RemoveLocation(ANX)
set IHX=null
set IJX=null
set ANX=null
set OIX=null
set EXX=null
endfunction

function AFX takes nothing returns nothing

call RegisterSpellEffectEvent('A022' , function AAX)
endfunction
function AGX takes integer RPX,unit uu returns nothing
local unit u2=uu
local real a=bj_RADTODEG * Atan2(GetUnitY(u2) - HJV[RPX], GetUnitX(u2) - HHV[RPX])
if UnitAlive(u2) and IsUnitEnemy(u2, G_V[RPX]) and not IsUnitType(u2, UNIT_TYPE_STRUCTURE) then
if IsUnitType(u2, UNIT_TYPE_ANCIENT) and not BRTON then
call UnitDamageTargetEx(( GZV[RPX] ) , ( u2 ) , ( ( G3V[RPX] ) / 3. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
if BRTON and IsUnitType(u2, UNIT_TYPE_ANCIENT) then
call UnitDamageTargetEx(( GZV[RPX] ) , ( u2 ) , ( ( G3V[RPX] ) * 6. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(( GZV[RPX] ) , ( u2 ) , ( ( G3V[RPX] ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
endif
call M6E(u2 , 25. + ( 5. * GetUnitAbilityLevel(GZV[RPX], 'A06S') ) + ( ( ( H4V[( RPX )] / .03125 ) - 1300. ) / 20. ) , .2 , a , "war3mapImported\\SlideWater.mdx" , .0 , false , false)
call EHX(RPX)
endif
set u2=null
endfunction
function AHX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local integer p=0
local real tx
local real ty
local real a
local real tf
local real I6X
local real cx=( ( ( GetUnitX(LCV[PXE]) ) * 1. ) + ( ( 80. ) * 1. ) * Cos(( ( GetUnitFacing(LCV[PXE]) ) * 1. ) * bj_DEGTORAD) )
local real cy=( ( ( GetUnitY(LCV[PXE]) ) * 1. ) + ( ( 80. ) * 1. ) * Sin(( ( GetUnitFacing(LCV[PXE]) ) * 1. ) * bj_DEGTORAD) )
if LHV[PXE] == 0 then
call JXE(PXE)
call ReleaseTimer(t)
call EHX(p)
else
set tf=GetRandomReal(LDV[PXE] - LBV[PXE], LDV[PXE] + LBV[PXE])
set tx=( ( ( LFV[PXE] ) * 1. ) + ( ( 3000. ) * 1. ) * Cos(( ( tf ) * 1. ) * bj_DEGTORAD) )
set ty=( ( ( LGV[PXE] ) * 1. ) + ( ( 3000. ) * 1. ) * Sin(( ( tf ) * 1. ) * bj_DEGTORAD) )
set a=tf * bj_DEGTORAD
call MoveLocation(HB, LFV[PXE], LGV[PXE])
set p=XAX(cx , cy , 65. , a)
set GZV[p]=LCV[PXE]
set G_V[p]=GetOwningPlayer(LCV[PXE])
call V9X(p , "Abilities\\Weapons\\WaterElementalMissile\\WaterElementalMissile.mdl")
set G3V[p]=GetHeroInt(LCV[PXE], true) * GetUnitAbilityLevel(LCV[PXE], 'A06S')
call V8X(p , 1.)
set G2V[p]=60.
set G8V[p]=true
set HVV[p]=true
set HOV[p]=true
set G1V[p]=72.
set HIV[p]=( 14 )
set HCV[p]=( 11 )
set HBV[p]=( 15 )
set JGV[p]=1300
call MoveLocation(HB, tx, ty)
set I6X=GetLocationZ(HB)
if I6X <= 0 then
set I6X=- I6X
endif
call XRX(p , tx , ty , 65. + I6X , 1300.)
call M6E(LCV[PXE] , 5. , .02 , GetUnitFacing(LCV[PXE]) - 180. , "war3mapImported\\SlideWater.mdx" , .0 , false , false)
set LHV[PXE]=LHV[PXE] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function AHX)
endif
set t=null
endfunction
function AJX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local integer I8X=30
local real cx=( ( ( GetUnitX(OIX) ) * 1. ) + ( ( 80. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real cy=( ( ( GetUnitY(OIX) ) * 1. ) + ( ( 80. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real x=GetSpellTargetX()
local real y=GetSpellTargetY()
local real UAE=QTE(GetUnitX(OIX) , GetUnitY(OIX) , x , y) - 180.
local real CDE
local real K0E=GetUnitFacing(OIX)
local real tx
local real ty
local real tf
local real a
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=JEE()
if UAE >= 820 then
set UAE=820.
endif
if UAE <= .0 then
set UAE=.0
endif
set CDE=( 180. - UAE * .213414634 ) / 2.
set LNV[PXE]=UAE
set LBV[PXE]=CDE
set LCV[PXE]=OIX
set LDV[PXE]=K0E
set LFV[PXE]=cx
set LGV[PXE]=cy
set LHV[PXE]=I8X
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function AHX)
set t=null
set OIX=null
endfunction

function ALX takes nothing returns nothing

call RegisterSpellEffectEvent('A06S' , function AJX)
endfunction
function AMX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call UnitPauseTimedLife(LMV[PXE], false)
call UnitRemoveAbility(LMV[PXE], 'A05H')
call DestroyEffect(LPV[PXE])
call ReleaseTimer(GetExpiredTimer())
call JVE(PXE)
set t=null
endfunction
function APX takes integer RPX,unit J2E returns nothing
local timer t
local integer i
local integer PXE=0
if J2E == ( HZV[( RPX )] ) then
if UnitAlive(J2E) and GetUnitAbilityLevel(J2E, 'A05H') != 1 then
call UnitPauseTimedLife(J2E, true)
call UnitAddAbility(J2E, 'A05H')
set t=(NewTimerEx(0)) // INLINED!!
set PXE=H9E()
set LMV[PXE]=J2E
set LPV[PXE]=AddSpecialEffectTarget("war3mapImported\\AirEssence.mdx", J2E, "origin")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 10. * I2R(GetUnitAbilityLevel(GZV[RPX], 'A04Y')), false, function AMX)
if GetRandomInt(1, 100) <= 2 * GetUnitAbilityLevel(GZV[RPX], 'A04Y') then
call UnitRemoveAbility(GZV[RPX], 'A04W')
call UnitAddAbility(GZV[RPX], 'A04W')
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", GZV[RPX], "chest"))
endif
if GetRandomInt(1, 100) <= GetUnitAbilityLevel(GZV[RPX], 'A04Y') and GetUnitAbilityLevel(GZV[RPX], 'A04X') != 0 then
set i=GetUnitAbilityLevel(GZV[RPX], 'A04X')
call UnitRemoveAbility(GZV[RPX], 'A04X')
call UnitAddAbility(GZV[RPX], 'A04X')
call SetUnitAbilityLevel(GZV[RPX], 'A04X', i)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\s_Nature'sBloom Effect.mdx", GZV[RPX], "chest"))
endif
endif
call EHX(RPX)
elseif GetOwningPlayer(J2E) == GetOwningPlayer(GZV[RPX]) and not IsUnitType(J2E, UNIT_TYPE_HERO) and UnitAlive(J2E) and GetUnitAbilityLevel(J2E, 'A05H') != 1 then
call UnitPauseTimedLife(J2E, true)
call UnitAddAbility(J2E, 'A05H')
set t=(NewTimerEx(0)) // INLINED!!
set PXE=H9E()
set LMV[PXE]=J2E
set LPV[PXE]=AddSpecialEffectTarget("war3mapImported\\AirEssence.mdx", J2E, "origin")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 5. * I2R(GetUnitAbilityLevel(GZV[RPX], 'A04Y')), false, function AMX)
endif
set t=null
endfunction
function AQX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(JB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , Deg2Rad(GetUnitFacing(OIX)))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Weapons\\SorceressMissile\\SorceressMissile.mdl")
call V8X(OMX , 3.5)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=128.
set G0V[OMX]=64.
set HCV[OMX]=( 12 )
call EMX(OMX , G1V[OMX])
call MoveLocation(JB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1000.)
set OIX=null
set EXX=null
endfunction

function ATX takes nothing returns nothing

call RegisterSpellEffectEvent('A04Y' , function AQX)
endfunction
function AUX takes nothing returns boolean
if GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(LB) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) and UnitAlive(GetFilterUnit()) then
if MB + GetWidgetLife(GetFilterUnit()) >= GetUnitState(GetFilterUnit(), UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(GetFilterUnit(), GetUnitState(GetFilterUnit(), UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(GetFilterUnit(), GetWidgetLife(GetFilterUnit()) + MB)
endif
endif
return false
endfunction
function AWX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if LYV[PXE] == 1000 then
call DestroyEffect(LWV[PXE])
call ReleaseTimer(GetExpiredTimer())
call H8E(PXE)
else
set LB=LUV[PXE]
set MB=LZV[PXE]
call GroupEnumUnitsInRange(KB, GetUnitX(LUV[PXE]), GetUnitY(LUV[PXE]), 600., Filter(function AUX))
set LYV[PXE]=LYV[PXE] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function AWX)
endif
set t=null
endfunction
function AYX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if LYV[PXE] == 1000 then
call DestroyEffect(LWV[PXE])
call ReleaseTimer(GetExpiredTimer())
call H8E(PXE)
else
if LZV[PXE] + GetWidgetLife(LUV[PXE]) >= GetUnitState(LUV[PXE], UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(LUV[PXE], GetUnitState(LUV[PXE], UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(LUV[PXE], GetWidgetLife(LUV[PXE]) + LZV[PXE])
endif
set LYV[PXE]=LYV[PXE] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function AYX)
endif
set t=null
endfunction
function AZX takes integer RPX,unit J2E returns nothing
local integer li=0
local integer hp=( 7 * GetUnitAbilityLevel(GZV[RPX], 'A05B') ) + 2 * PC
local timer t
local integer PXE=0
if LWMON and not GAMEM then
set hp=( 7 * GetUnitAbilityLevel(GZV[RPX], 'A05B') ) + ( GetHeroLevel(GZV[RPX]) / 3 )
endif
if J2E == ( HZV[( RPX )] ) and UnitAlive(J2E) then
if GetRandomInt(1, 100) <= GetUnitAbilityLevel(GZV[RPX], 'A05B') then
set t=(NewTimerEx(0)) // INLINED!!
set PXE=H7E()
set LUV[PXE]=J2E
set LWV[PXE]=AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl", J2E, "origin")
set LYV[PXE]=0
set LZV[PXE]=I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) * 20. * I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) / 2000.
if ( LZV[PXE] * 2000. ) + GetWidgetLife(J2E) >= GetUnitState(J2E, UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(J2E, GetUnitState(J2E, UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(J2E, GetWidgetLife(J2E) + ( LZV[PXE] * 2000. ))
endif
loop
exitwhen li == hp
if GetUnitAbilityLevel(J2E, 'BTLF') != 0 then
call UnitAddItemById(J2E, 'I021')
endif
set li=li + 1
endloop
set li=0
call UnitAddAbility(J2E, 'A04Z')
call SetUnitAbilityLevel(J2E, 'A04Z', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call UnitAddAbility(J2E, 'A052')
call SetUnitAbilityLevel(J2E, 'A052', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ForestBolt.mdx", J2E, "origin"))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function AWX)
call EHX(RPX)
else
set t=(NewTimerEx(0)) // INLINED!!
set PXE=H7E()
set LUV[PXE]=J2E
set LWV[PXE]=AddSpecialEffectTarget("war3mapImported\\EmeraldPortal.mdx", J2E, "origin")
set LYV[PXE]=0
set LZV[PXE]=I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) * 20. * I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) / 2000.
if ( LZV[PXE] * 2000. ) + GetWidgetLife(J2E) >= GetUnitState(J2E, UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(J2E, GetUnitState(J2E, UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(J2E, GetWidgetLife(J2E) + ( LZV[PXE] * 2000. ))
endif
loop
exitwhen li == hp
if GetUnitAbilityLevel(J2E, 'BTLF') != 0 then
call UnitAddItemById(J2E, 'I021')
endif
set li=li + 1
endloop
set li=0
call UnitAddAbility(J2E, 'A04Z')
call SetUnitAbilityLevel(J2E, 'A04Z', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call UnitAddAbility(J2E, 'A052')
call SetUnitAbilityLevel(J2E, 'A052', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ForestBolt.mdx", J2E, "origin"))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function AYX)
call EHX(RPX)
endif
else
if GetOwningPlayer(J2E) == GetOwningPlayer(GZV[RPX]) and not IsUnitType(J2E, UNIT_TYPE_HERO) and UnitAlive(J2E) and GetUnitTypeId(J2E) != 'n01C' and GetUnitTypeId(J2E) != 'n01G' then
set t=(NewTimerEx(0)) // INLINED!!
set PXE=H7E()
set LUV[PXE]=J2E
set LWV[PXE]=AddSpecialEffectTarget("war3mapImported\\EmeraldPortal.mdx", J2E, "origin")
set LYV[PXE]=0
set LZV[PXE]=I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) * 10. * I2R(GetUnitAbilityLevel(GZV[RPX], 'A05B')) / 2000.
if ( LZV[PXE] * 2000. ) + GetWidgetLife(J2E) >= GetUnitState(J2E, UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(J2E, GetUnitState(J2E, UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(J2E, GetWidgetLife(J2E) + ( LZV[PXE] * 2000. ))
endif
call UnitAddAbility(J2E, 'A050')
call SetUnitAbilityLevel(J2E, 'A050', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call UnitAddAbility(J2E, 'A053')
call SetUnitAbilityLevel(J2E, 'A053', GetUnitAbilityLevel(GZV[RPX], 'A05B'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ForestBolt.mdx", J2E, "origin"))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function AYX)
endif
endif
set t=null
endfunction
function A_X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(PB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , Deg2Rad(GetUnitFacing(OIX)))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Weapons\\KeeperGroveMissile\\KeeperGroveMissile.mdl")
call V8X(OMX , 2.5)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=128.
set G0V[OMX]=64.
set HCV[OMX]=( 13 )
call EMX(OMX , G1V[OMX])
call MoveLocation(PB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1000.)
set OIX=null
set EXX=null
endfunction

function A1X takes nothing returns nothing

call RegisterSpellEffectEvent('A05B' , function A_X)
endfunction
function A2X takes integer RPX,unit J2E returns nothing
local unit u
local integer li=0
local integer SVE=( 2 * GetUnitAbilityLevel(GZV[RPX], 'A054') ) + PC
if LWMON and not GAMEM then
set SVE=( 2 * GetUnitAbilityLevel(GZV[RPX], 'A054') ) + ( GetHeroLevel(GZV[RPX]) * 3 / 2 )
endif
if J2E == ( HZV[( RPX )] ) and UnitAlive(J2E) then
if GetRandomInt(1, 100) <= GetUnitAbilityLevel(GZV[RPX], 'A054') then
call UnitAddAbility(J2E, 'A056')
call SetUnitAbilityLevel(J2E, 'A056', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call UnitAddAbility(J2E, 'A058')
call SetUnitAbilityLevel(J2E, 'A058', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BlessingofElun.mdx", J2E, "origin"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\RedCharkaExplosion.mdx", J2E, "origin"))
loop
exitwhen li == SVE
if GetUnitAbilityLevel(J2E, 'BTLF') != 0 then
call UnitAddItemById(J2E, 'I022')
endif
set li=li + 1
endloop
set li=0
set u=CreateUnit(GetOwningPlayer(J2E), 'h007', GetUnitX(J2E), GetUnitY(J2E), .0)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitAddAbility(u, 'A055')
call SetUnitAbilityLevel(u, 'A055', 'A054')
call IssueImmediateOrderById(u, 852164)
call EHX(RPX)
else
call UnitAddAbility(J2E, 'A056')
call SetUnitAbilityLevel(J2E, 'A056', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call UnitAddAbility(J2E, 'A058')
call SetUnitAbilityLevel(J2E, 'A058', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BlessingofElun.mdx", J2E, "origin"))
loop
exitwhen li == SVE
if GetUnitAbilityLevel(J2E, 'BTLF') != 0 then
call UnitAddItemById(J2E, 'I022')
endif
set li=li + 1
endloop
set li=0
call EHX(RPX)
endif
else
if GetOwningPlayer(J2E) == GetOwningPlayer(GZV[RPX]) and not IsUnitType(J2E, UNIT_TYPE_HERO) and UnitAlive(J2E) then
call UnitAddAbility(J2E, 'A057')
call SetUnitAbilityLevel(J2E, 'A057', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call UnitAddAbility(J2E, 'A059')
call SetUnitAbilityLevel(J2E, 'A059', GetUnitAbilityLevel(GZV[RPX], 'A054'))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BlessingofElun.mdx", J2E, "origin"))
endif
endif
endfunction
function A3X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(QB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , Deg2Rad(GetUnitFacing(OIX)))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Weapons\\BlackKeeperMissile\\BlackKeeperMissile.mdl")
call V8X(OMX , 2.5)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=128.
set G0V[OMX]=64.
set HCV[OMX]=( 14 )
call EMX(OMX , G1V[OMX])
call MoveLocation(QB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1000.)
set OIX=null
set EXX=null
endfunction

function A5X takes nothing returns nothing

call RegisterSpellEffectEvent('A054' , function A3X)
endfunction
function A6X takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)
local unit IPX
if J2E == ( HZV[( RPX )] ) and IsUnitAliveBJ(J2E) then
if OEX(HKV[RPX] , J2E) then
set IPX=CreateUnit(( GetOwningPlayer(GZV[RPX]) ), 'h007', RQX, RSX, .0)
call UnitApplyTimedLife(IPX, 'BTLF', 1.)
call UnitAddAbility(IPX, 'A08A')
call IssueTargetOrderById(IPX, 852585, J2E)
call EHX(RPX)
endif
endif
set IPX=null
endfunction
function A7X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
call MoveLocation(SB, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , ( Deg2Rad(GetUnitFacing(OIX)) ))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\StrongDrink\\BrewmasterMissile.mdl")
call V8X(OMX , 1.)
set G2V[OMX]=60.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 15 )
call EMX(OMX , G1V[OMX])
call MoveLocation(SB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XIX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1500. , .15)
set OIX=null
set EXX=null
endfunction

function A9X takes nothing returns nothing

call RegisterSpellEffectEvent('A02R' , function A7X)
endfunction
function NVX takes integer RPX,unit J2E returns nothing
if UnitAlive(J2E) and J2E != GZV[RPX] and GetUnitTypeId(J2E) != 'hpea' then
if OEX(HKV[RPX] , J2E) then
if J2E == ( HZV[( RPX )] ) then
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( G3V[RPX] ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(( GZV[RPX] ) , ( J2E ) , ( ( G3V[RPX] / 2. ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
endif
call EHX(RPX)
else
call EKX(RPX , J2E)
endif
endif
endfunction
function NEX takes integer RPX,destructable MGE returns nothing
call KillDestructable(MGE)
call EHX(RPX)
endfunction
function NXX takes nothing returns nothing
local integer OMX=0
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local unit EXX=GetOrderTargetUnit()
local real OJX=GetOrderPointX()
local real OKX=GetOrderPointY()
local real angl=.0
if EXX != null then
set OJX=GetUnitX(EXX)
set OKX=GetUnitY(EXX)
elseif GetOrderTargetDestructable() != null then
set OJX=GetDestructableX(GetOrderTargetDestructable())
set OKX=GetDestructableY(GetOrderTargetDestructable())
endif
set OMX=XAX(OAX , ONX , GetUnitFlyHeight(OIX) + 50. , Atan2(( OKX - ONX ), ( OJX - OAX )))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
set G3V[OMX]=10.
call V9X(OMX , "Abilities\\Weapons\\WyvernSpear\\WyvernSpearMissile.mdl")
call V8X(OMX , .75)
set G2V[OMX]=50.
set G1V[OMX]=32.
set G8V[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set HCV[OMX]=( 16 )
set HBV[OMX]=( 16 )
set HDV[OMX]=( 2 )
set HNV[OMX]=( 17 )
call EMX(OMX , G1V[OMX] * .5)
call MoveLocation(TB, OJX, OKX)
if EXX != null then
call EEX(OMX , EXX)
set HEV[OMX]=true
call XIX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 50. + GetLocationZ(TB) , 600. , .2)
else
set OJX=OJX + GetRandomReal(.0, 200.) * Cos(GetRandomReal(.0, 2. * bj_PI))
set OKX=OKX + GetRandomReal(.0, 200.) * Cos(GetRandomReal(.0, 2. * bj_PI))
call XIX(OMX , OJX , OKX , GetLocationZ(TB) , 600. , .2)
endif
if GetUnitTypeId(OIX) == 'hpea' then
call DisableTrigger(UB)
call PauseUnit(OIX, true)
call IssueImmediateOrderById(OIX, 851972)
call PauseUnit(OIX, false)
call EnableTrigger(UB)
endif
set EXX=null
set OIX=null
endfunction
function NOX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit()) == 'hpea' or GetUnitTypeId(GetTriggerUnit()) == 'hgry' then
call NXX()
endif
return false
endfunction
function NRX takes nothing returns nothing
set UB=CreateTrigger()
call TriggerRegisterPlayerUnitEvent(UB, Player(0), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, null)
call TriggerRegisterPlayerUnitEvent(UB, Player(0), EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, null)
call TriggerAddCondition(UB, Condition(function NOX))
endfunction
function NIX takes integer p,unit u returns nothing
local real x=HHV[p]
local real y=HJV[p]
local location NAX=Location(x, y)
local location NNX=GetUnitLoc(u)
if UnitAlive(u) and u != GZV[p] and IsUnitEnemy(u, GetOwningPlayer(GZV[p])) and not ( GetUnitAbilityLevel(( u ), 'Avul') > 0 ) and not IsUnitType(u, UNIT_TYPE_STRUCTURE) then
call UnitDamageTargetEx(( GZV[p] ) , ( u ) , ( ( G3V[p] ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call M6E(( u ) , ( ( 400. ) * 1. ) , ( ( 1. ) * 1. ) , ( ( AngleBetweenPoints(NAX, NNX) ) * 1. ) , null , 150. , false , false)
call EKX(p , u)
endif
call RemoveLocation(NAX)
call RemoveLocation(NNX)
set NAX=null
set NNX=null
endfunction
function NBX takes integer p,destructable d returns nothing
local real NCX=HHV[p]
local real NDX=HJV[p]
local location NFX=Location(NCX, NDX)
local real NGX=.0
local unit u
local unit u2
local unit u3
local unit CBE=GZV[p]
local real SVE=G3V[p]
local real tx=GetDestructableX(d)
local real ty=GetDestructableY(d)
local real a=QWE(EOX(p) , HHV[p] , HJV[p] , tx , ty) * bj_RADTODEG
local real nx=( ( ( HHV[p] ) * 1. ) + ( ( 500. ) * 1. ) * Cos(( ( a ) * 1. ) * bj_DEGTORAD) )
local real ny=( ( ( HJV[p] ) * 1. ) + ( ( 500. ) * 1. ) * Sin(( ( a ) * 1. ) * bj_DEGTORAD) )
if JGV[p] >= ( 501. + ( I2R(GetUnitAbilityLevel(CBE, 'A04C')) * 100. ) ) then
call EHX(p)
call O2X(CBE , NFX , ( SVE * I2R(GetUnitAbilityLevel(CBE, 'A04C')) ) , 300. , DAMAGE_TYPE_NORMAL , ATTACK_TYPE_NORMAL , false)
set u=CreateUnit(GetOwningPlayer(CBE), 'h00M', NCX, NDX, .0)
call KillUnit(u)
loop
exitwhen NGX == 360.
call O2X(CBE , CNE(NFX , 500. , NGX) , ( SVE * I2R(GetUnitAbilityLevel(CBE, 'A04C')) ) , 300. , DAMAGE_TYPE_NORMAL , ATTACK_TYPE_NORMAL , false)
set u=CreateUnitAtLoc(GetOwningPlayer(CBE), 'h00M', CNE(NFX , 500. , NGX), .0)
call KillUnit(u)
set u2=CreateUnitAtLoc(GetOwningPlayer(CBE), 'h00M', CNE(NFX , 300. , NGX), .0)
call KillUnit(u2)
set u3=CreateUnitAtLoc(GetOwningPlayer(CBE), 'h00M', CNE(NFX , 150. , NGX), .0)
call KillUnit(u3)
set NGX=NGX + ( 360. / 18. )
endloop
else
set JGV[p]=JGV[p] + 50
call MoveLocation(WB, nx, ny)
call EFX(p , false)
call XRX(p , nx , ny , 30. + GetLocationZ(WB) , I2R(JGV[p]))
endif
set CBE=null
set u=null
set u2=null
set u3=null
call RemoveLocation(NFX)
set NFX=null
endfunction
function Shockwave__ProjColl takes nothing returns nothing
local integer E3X=MA
local integer TBE=( PA )
if IsUnitEnemy(GZV[E3X], GetOwningPlayer(GZV[TBE])) then
call ECX(E3X , HHV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Cos(EOX(TBE)) , HJV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Sin(EOX(TBE)) , HKV[E3X] , true)
endif
endfunction
function NHX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local location OFX=GetUnitLoc(OIX)
local real OGX=( I2R(GetUnitAbilityLevelSwapped('A04C', OIX)) * ( 2250. + ( 125. * I2R(GetUnitAbilityLevelSwapped('A04C', OIX)) ) ) )
local location OHX=CNE(OFX , OGX , GetUnitFacing(OIX))
local real OJX=GetLocationX(OHX)
local real OKX=GetLocationY(OHX)
local real OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
local integer OMX=0
call DestroyEffect(AddSpecialEffect("war3mapImported\\FireNova2.mdx", OAX, ONX))
call MoveLocation(WB, OAX, ONX)
set OMX=XAX(OAX , ONX , 30. , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\Tectonicfury.mdx")
set G3V[OMX]=( ( I2R(GetUnitAbilityLevelSwapped('A04C', OIX)) ) * 4000. ) * .03125
call V8X(OMX , .9)
set G2V[OMX]=30.
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=true
set G1V[OMX]=172.
set G0V[OMX]=172.
set HIV[OMX]=( 18 )
set HCV[OMX]=( 17 )
set HDV[OMX]=( 3 )
set JFV[OMX]=false
set JGV[OMX]=350
set JCV[OMX]=.0
set JDV[OMX]=1.
call MoveLocation(WB, OJX, OKX)
call XRX(OMX , OJX , OKX , 30. + GetLocationZ(WB) , 350.)
call RemoveLocation(OFX)
call RemoveLocation(OHX)
set OFX=null
set OHX=null
set OIX=null
endfunction

function NKX takes nothing returns nothing

call RegisterSpellEffectEvent('A04C' , function NHX)
endfunction
function NLX takes integer D0E returns nothing
call RemoveUnit(L2V[D0E])
set L2V[D0E]=null
call H6E(D0E)
endfunction
function NMX takes integer D0E returns nothing
if L3V[D0E] == NX then
call H4E(D0E)
call NLX(D0E)
endif
endfunction
function NPX takes nothing returns boolean
local integer D0E=L4V[( 0 )]
loop
exitwhen D0E == 0
call NMX(D0E)
set D0E=L4V[D0E]
endloop
return false
endfunction
function NQX takes integer D0E returns nothing
set L5V[L4V[( 0 )]]=D0E
set L4V[D0E]=L4V[( 0 )]
set L4V[( 0 )]=D0E
set L5V[D0E]=( 0 )
endfunction
function NSX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function NPX))
endfunction
function NTX takes unit J2E returns nothing
local integer D0E=H5E()
set L2V[D0E]=J2E
set L3V[D0E]=NX + R2I(3. / .03125)
call NQX(D0E)
endfunction
function SlowProjectiles___ResetFunc takes nothing returns nothing
local integer p=MA
set G5V[p]=1.
endfunction
function SlowProjectiles___SlowFunc takes nothing returns nothing
local integer p=MA
set HEV[p]=false
set G5V[p]=.1
endfunction
function NUX takes integer D0E returns nothing
call XJX(MNV[D0E] , ( 5 ))
call NTX(MVV[D0E])
call DestroyEffect(MEV[D0E])
set L9V[D0E]=null
set MVV[D0E]=null
set MEV[D0E]=null
call XDX(MNV[D0E])
call H3E(D0E)
endfunction
function NWX takes integer D0E returns nothing
if MOV[D0E] == NX then
call H1E(D0E)
call NUX(D0E)
else
if MXV[D0E] == .0 then
call SetUnitTimeScale(MVV[D0E], .0)
else
set MXV[D0E]=MXV[D0E] - .03125
endif
set YB=L9V[D0E]
call XPX(MNV[D0E] , MRV[D0E] , MIV[D0E] , MAV[D0E] , 700. , D0E , ( 5 ) , ( 6 ))
endif
endfunction
function NYX takes nothing returns boolean
local integer D0E=MBV[( 0 )]
loop
exitwhen D0E == 0
call NWX(D0E)
set D0E=MBV[D0E]
endloop
return false
endfunction
function NZX takes integer D0E returns nothing
set MCV[MBV[( 0 )]]=D0E
set MBV[D0E]=MBV[( 0 )]
set MBV[( 0 )]=D0E
set MCV[D0E]=( 0 )
endfunction
function N_X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function NYX))
endfunction
function N0X takes unit OIX,real x,real y returns integer
local integer D0E=H2E()
call MoveLocation(ZB, x, y)
set L9V[D0E]=OIX
set MVV[D0E]=CreateUnit(GetOwningPlayer(OIX), 'u001', x, y, .0)
set MEV[D0E]=AddSpecialEffectTarget("SlowTime.mdl", MVV[D0E], "origin")
set MOV[D0E]=NX + R2I(15. / .03125)
set MNV[D0E]=XWX()
set MXV[D0E]=1.
set MRV[D0E]=x
set MIV[D0E]=y
set MAV[D0E]=40. + GetLocationZ(ZB)
call SetUnitX(MVV[D0E], x)
call SetUnitY(MVV[D0E], y)
call UnitAddAbility(MVV[D0E], 'Amrf')
call UnitRemoveAbility(MVV[D0E], 'Amrf')
call SetUnitScale(MVV[D0E], 1.66, .0, .0)
call SetUnitFlyHeight(MVV[D0E], 170., .0)
call NZX(D0E)
return D0E
endfunction
function N1X takes nothing returns nothing
//if GetSpellAbilityId()=='A020' then
call N0X(GetTriggerUnit() , GetSpellTargetX() , GetSpellTargetY())
//endif
//return false
endfunction
function N2X takes nothing returns nothing

call RegisterSpellEffectEvent('A020' , function N1X)
endfunction
function N3X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
local location IHX
local location IJX
set OJX=GetSpellTargetX()
set OKX=GetSpellTargetY()
set IHX=Location(OJX, OKX)
set IJX=CNE(IHX , GetRandomReal(800., 1000.) , GetRandomReal(.0, 360.))
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(VC, OJX, OKX)
set OMX=XAX(GetLocationX(IJX) , GetLocationY(IJX) , 900. + GetLocationZ(VC) , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\RollingKegMissle.mdx")
call V8X(OMX , 2.5)
set G2V[OMX]=.0
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=false
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HBV[OMX]=( 19 )
call MoveLocation(VC, OJX, OKX)
call XRX(OMX , OJX , OKX , GetLocationZ(VC) , 1000.)
call RemoveLocation(IHX)
call RemoveLocation(IJX)
set IHX=null
set IJX=null
set OIX=null
endfunction

function N5X takes nothing returns nothing

call RegisterSpellEffectEvent('A03J' , function N3X)
endfunction
function N6X takes integer RPX,unit J2E returns nothing
local real RQX=GetUnitX(J2E)
local real RSX=GetUnitY(J2E)
local unit IPX
if J2E == ( HZV[( RPX )] ) and UnitAlive(J2E) then
if OEX(HKV[RPX] , J2E) then
if GetUnitAbilityLevel(J2E, 'BEsh') != 1 then
set IPX=CreateUnit(( GetOwningPlayer(GZV[RPX]) ), 'h007', RQX, RSX, .0)
call UnitApplyTimedLife(IPX, 'BTLF', 21.)
call UnitAddAbility(IPX, 'A0FA')
call SetUnitAbilityLevel(IPX, 'A0FA', R2I(G3V[RPX]))
call IssueTargetOrderById(IPX, 852527, J2E)
endif
call EHX(RPX)
endif
endif
set IPX=null
endfunction
function N7X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0
set OLX=Atan2(( OKX - ONX ), ( OJX - OAX ))
call MoveLocation(EC, OAX, ONX)
set OMX=XAX(OAX , ONX , 65. , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\EvilMissileofShadowyDOOMV3.mdx")
call V8X(OMX , 1.)
set G2V[OMX]=60.
set G3V[OMX]=I2R(GetUnitAbilityLevel(OIX, 'A088'))
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 18 )
set G4V[OMX]=20.
set G9V[OMX]=true
call EMX(OMX , G1V[OMX])
call MoveLocation(EC, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 500.)
set OIX=null
set EXX=null
endfunction

function N9X takes nothing returns nothing

call RegisterSpellEffectEvent('A088' , function N7X)
endfunction
function BVX takes integer p,unit u returns nothing
local real x=HHV[p]
local real y=HJV[p]
local unit su
if UnitAlive(u) and u != GZV[p] and IsUnitEnemy(u, GetOwningPlayer(GZV[p])) and GetUnitAbilityLevel(u, 'Bcyc') != 1 then
set su=CreateUnit(GetOwningPlayer(GZV[p]), 'h007', x, y, .0)
call UnitApplyTimedLife(su, 'BTLF', 1.)
call UnitAddAbility(su, 'A047')
call SetUnitAbilityLevel(su, 'A047', GetUnitAbilityLevel(GZV[p], 'A046'))
call IssueTargetOrderById(su, 852144, u)
call UnitDamageTargetEx(( GZV[p] ) , ( u ) , ( ( ( G3V[p] ) + ( GetHeroInt(GZV[p], true) * 7.5 * GetUnitAbilityLevel(GZV[p], 'A046') ) ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
set su=null
endfunction
function Vertigo__ProjColl takes nothing returns nothing
local integer E3X=MA
local integer TBE=( PA )
//if IsUnitEnemy(GZV[E3X],GetOwningPlayer(GZV[TBE]))then
//call ECX(E3X,HHV[E3X]+((700.*2.75)*.03125)*Cos(EOX(TBE)),HJV[E3X]+((700.*2.75)*.03125)*Sin(EOX(TBE)),HKV[E3X],true)
//endif
endfunction
function BEX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real BXX=( ( ( OAX ) * 1. ) + ( ( 500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) - 180. ) * 1. ) * bj_DEGTORAD) )
local real BOX=( ( ( ONX ) * 1. ) + ( ( 500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) - 180. ) * 1. ) * bj_DEGTORAD) )
local real BRX
local real BIX
local real OJX=( ( ( BXX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real OKX=( ( ( BOX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
local real OLX=Atan2(( OKX - BOX ), ( OJX - BXX ))
local real I6X
local integer OMX=0
call MoveLocation(XC, OAX, ONX)
set I6X=GetLocationZ(XC)
call MoveLocation(XC, BXX, BOX)
set OMX=XAX(BXX , BOX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=600 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 125. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 125. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=2 * 50 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 250. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 250. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=2 * 50 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 375. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 375. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) - 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 375. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 375. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=2 * 50 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 125. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 125. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=2 * 50 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 250. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 250. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=2 * 50 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set BRX=( ( ( BXX ) * 1. ) + ( ( 375. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set BIX=( ( ( BOX ) * 1. ) + ( ( 375. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) + 90. ) * 1. ) * bj_DEGTORAD) )
set OJX=( ( ( BRX ) * 1. ) + ( ( 4500. ) * 1. ) * Cos(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( BIX ) * 1. ) + ( ( 4500. ) * 1. ) * Sin(( ( GetUnitFacing(OIX) ) * 1. ) * bj_DEGTORAD) )
set OLX=Atan2(( OKX - BIX ), ( OJX - BRX ))
set OMX=XAX(BRX , BIX , 75. + I6X , OLX)
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl")
set G3V[OMX]=400 * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) ) * ( I2R(GetUnitAbilityLevel(OIX, 'A046')) )
call V8X(OMX , 1.)
set G2V[OMX]=50.
set G4V[OMX]=5000. / 1100.
set G9V[OMX]=true
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set G1V[OMX]=125.
set G0V[OMX]=125.
//set HIV[OMX]=(20)
set HCV[OMX]=( 19 )
set HBV[OMX]=( 21 )
call MoveLocation(XC, OJX, OKX)
call XRX(OMX , OJX , OKX , 75. + GetLocationZ(XC) , 1100.)
set OIX=null
endfunction

function BNX takes nothing returns nothing

call RegisterSpellEffectEvent('A046' , function BEX)
endfunction
function BBX takes integer D0E,unittype ut returns nothing
set M1V[D0E]=true
set M2V[D0E]=ut
endfunction
function BCX takes integer D0E,string WEE,string TUE returns nothing
set PIV[D0E]=true
set PAV[D0E]=WEE
set PNV[D0E]=TUE
endfunction
function s__xedamage_isInUse takes nothing returns boolean
return ( PFV > 0 )
endfunction
function BDX takes unit u,attacktype a,damagetype d returns real
local real hp=GetWidgetLife(u)
local real BFX=GetUnitState(u, UNIT_STATE_MANA)
local real r
local real fc=.01
call SetUnitX(OC, GetUnitX(u))
call SetUnitY(OC, GetUnitY(u))
call SetUnitOwner(OC, GetOwningPlayer(u), false)
set r=hp
if ( hp < .01 * 3. ) then
call SetWidgetLife(u, hp + .01 * 3.)
set r=hp + .01 * 3.
set fc=GetWidgetLife(u) - hp + .000000001
endif
set PGV=true
call UnitDamageTarget(OC, u, fc, false, false, a, d, null)
set PGV=false
call SetUnitOwner(OC, Player(PLAYER_NEUTRAL_PASSIVE), false)
if ( BFX > GetUnitState(u, UNIT_STATE_MANA) ) then
call SetUnitState(u, UNIT_STATE_MANA, BFX)
set r=1
else
set r=( r - GetWidgetLife(u) ) / fc
endif
call SetWidgetLife(u, hp)
return r
endfunction
function BGX takes integer D0E,unit CBE,unit YSE,boolean BHX returns real
local player p=GetOwningPlayer(CBE)
local boolean BJX=IsUnitAlly(YSE, p)
local boolean BKX=IsUnitEnemy(YSE, p)
local boolean BLX=BJX
local real f
local real BMX=1.
local integer i
if ( MJV[D0E] != MLV[D0E] ) then
set BLX=BJX and not ( GetPlayerAlliance(GetOwningPlayer(YSE), p, ALLIANCE_HELP_REQUEST) )
set BJX=BJX and not ( BLX )
endif
if ( not MJV[D0E] ) and BJX then
return .0
elseif ( not MKV[D0E] ) and BKX then
return .0
elseif ( ( not MHV[D0E] ) and ( CBE == YSE ) ) then
return .0
elseif ( not MLV[D0E] ) and BLX then
return .0
elseif ( M1V[D0E] and IsUnitType(YSE, M2V[D0E]) ) then
return .0
elseif ( MPV[D0E] and not IsUnitVisible(YSE, p) ) then
return .0
elseif ( MQV[D0E] and not IsUnitType(YSE, UNIT_TYPE_DEAD) ) then
return .0
elseif ( not ( MSV[D0E] ) and IsUnitType(YSE, UNIT_TYPE_DEAD) ) then
return .0
endif
set f=1.
if ( IsUnitAlly(YSE, p) ) then
set f=f * M0V[D0E]
if ( f <= - .000000001 ) then
set f=- f
set BMX=- 1.
endif
endif
if ( M3V[D0E] and not IsUnitType(YSE, M4V[D0E]) ) then
return .0
endif
set i=M9V[D0E] - 1
loop
exitwhen ( i < 0 )
if ( IsUnitType(YSE, M5V[M6V[D0E] + i]) ) then
set f=f * M7V[M8V[D0E] + i]
if ( f <= - .000000001 ) then
set f=- f
set BMX=- 1.
endif
endif
set i=i - 1
endloop
set i=PRV[D0E] - 1
loop
exitwhen ( i < 0 )
if ( GetUnitAbilityLevel(YSE, PVV[PEV[D0E] + i]) > 0 ) then
set f=f * PXV[POV[D0E] + i]
if ( f <= - .000000001 ) then
set f=- f
set BMX=- 1.
endif
endif
set i=i - 1
endloop
set f=f * BMX
if ( f < .000000001 ) and ( f > - .000000001 ) then
return .0
endif
if ( M_V[D0E] or not BHX ) then
return f
endif
set f=f * BDX(YSE , MWV[D0E] , MUV[D0E])
if ( f < .000000001 ) and ( f > - .000000001 ) then
return .0
endif
return f
endfunction
function BPX takes integer D0E,unit CBE,unit YSE,real U6E returns boolean
local damagetype dt=PBV
local attacktype at=PCV
local integer tg=PDV
local real f=BGX(D0E , CBE , YSE , false)
local real pl
if ( f != .0 ) then
set PBV=MUV[D0E]
set PCV=MWV[D0E]
set PDV=MZV[D0E]
set PFV=PFV + 1
set pl=GetWidgetLife(YSE)
call UnitDamageTargetEx(CBE , YSE , f * U6E , false , MMV[D0E] , MWV[D0E] , MUV[D0E] , MYV[D0E])
set PFV=PFV - 1
set PDV=tg
set PBV=dt
set PCV=at
if ( pl != GetWidgetLife(YSE) ) then
if ( PIV[D0E] ) then
call DestroyEffect(AddSpecialEffectTarget(PAV[D0E], YSE, PNV[D0E]))
endif
return true
endif
endif
return false
endfunction
function BQX takes nothing returns boolean
local unit YSE=GetFilterUnit()
local integer D0E=PHV
local real f
local real hp
if ( not IsUnitInRangeXY(YSE, PLV[D0E], PMV[D0E], PPV[D0E]) ) then
set YSE=null
return false
endif
set f=BGX(D0E , PKV[D0E] , YSE , false)
if ( f != .0 ) then
set PJV[D0E]=PJV[D0E] + 1
if ( PIV[D0E] ) then
set hp=GetWidgetLife(YSE)
endif
call UnitDamageTargetEx(PKV[D0E] , YSE , f * PQV[D0E] , false , MMV[D0E] , MWV[D0E] , MUV[D0E] , MYV[D0E])
if ( PIV[D0E] and ( hp > GetWidgetLife(YSE) ) ) then
call DestroyEffect(AddSpecialEffectTarget(PAV[D0E], YSE, PNV[D0E]))
endif
endif
set PHV=D0E
set YSE=null
return false
endfunction
function BSX takes nothing returns boolean
local destructable YSE=GetFilterDestructable()
local integer D0E=PHV
local real dx=PLV[D0E] - GetDestructableX(YSE)
local real dy=PMV[D0E] - GetDestructableY(YSE)
if ( dx * dx + dy * dy >= PPV[D0E] + .000000001 ) then
set YSE=null
return false
endif
set PJV[D0E]=PJV[D0E] + 1
if ( PIV[D0E] ) then
call DestroyEffect(AddSpecialEffectTarget(PAV[D0E], YSE, PNV[D0E]))
endif
call UnitDamageTargetEx(PKV[D0E] , YSE , PQV[D0E] , false , MMV[D0E] , MWV[D0E] , MUV[D0E] , MYV[D0E])
set PHV=D0E
set YSE=null
return false
endfunction
function BWX takes nothing returns nothing
set PWV=Rect(0, 0, 0, 0)
set PSV=Condition(function BQX)
set PTV=Condition(function BSX)
set PUV=CreateGroup()
endfunction
function BYX takes nothing returns nothing
set OC=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'e005', .0, .0, .0)
call UnitAddAbility(OC, 'Aloc')
call BWX()
endfunction
function BZX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
local unit SVE=GetTriggerUnit()
if GetUnitAbilityLevel(RGX, 'A05P') == 1 then
if bj_RADTODEG * Atan2(GetUnitY(SVE) - GetUnitY(RGX), GetUnitX(SVE) - GetUnitX(RGX)) <= ( GetUnitFacing(SVE) - 340. ) or bj_RADTODEG * Atan2(GetUnitY(SVE) - GetUnitY(RGX), GetUnitX(SVE) - GetUnitX(RGX)) >= ( GetUnitFacing(SVE) - 20. ) then
if ( J5V[( ROX(( GetUnitTypeId(RGX) )) )] ) then
if ( BI[NI] ) == ( LN ) then
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(RGX , SVE , GetEventDamage() , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", SVE, "chest"))
endif
else
if ( CI[NI] ) then
call DisableTrigger(GetTriggeringTrigger())
call Y0E(RGX , SVE , GetEventDamage() , ATTACK_TYPE_CHAOS , false , false)
call EnableTrigger(GetTriggeringTrigger())
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", SVE, "chest"))
endif
endif
endif
endif
set RGX=null
set SVE=null
return false
endfunction
function B_X takes nothing returns nothing
local trigger X_X=CreateTrigger()
call MOE(II , ( X_X ))
call TriggerAddCondition(X_X, Condition(function BZX))
endfunction
function B0X takes integer D0E returns nothing
call ShowUnit(P1V[D0E], false)
call KillUnit(P1V[D0E])
set P1V[D0E]=null
set P0V[D0E]=null
call H_E(D0E)
endfunction
function B1X takes integer D0E returns nothing
if P2V[D0E] == NX then
call HYE(D0E)
call B0X(D0E)
else
call SetUnitX(P1V[D0E], GetUnitX(P0V[D0E]))
call SetUnitY(P1V[D0E], GetUnitY(P0V[D0E]))
endif
endfunction
function B2X takes nothing returns boolean
local integer D0E=P3V[( 0 )]
loop
exitwhen D0E == 0
call B1X(D0E)
set D0E=P3V[D0E]
endloop
return false
endfunction
function B3X takes integer D0E returns nothing
set P4V[P3V[( 0 )]]=D0E
set P3V[D0E]=P3V[( 0 )]
set P3V[( 0 )]=D0E
set P4V[D0E]=( 0 )
endfunction
function B4X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function B2X))
endfunction
function B5X takes unit J2E,real CDE returns integer
local integer D0E=HZE()
set P0V[D0E]=J2E
set P1V[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), GetUnitTypeId(J2E), GetUnitX(J2E), GetUnitY(J2E), CDE)
call UnitAddAbility(P1V[D0E], 'Aloc')
call SetUnitPathing(P1V[D0E], false)
call SetUnitTimeScale(P1V[D0E], 3.)
call SetUnitVertexColor(P1V[D0E], 255, 255, 255, 80)
call SetUnitScale(P1V[D0E], 1.5, .0, .0)
call SetUnitX(P1V[D0E], GetUnitX(J2E))
call SetUnitY(P1V[D0E], GetUnitY(J2E))
call SetUnitAnimation(P1V[D0E], "attack")
call SetUnitOwner(P1V[D0E], GetOwningPlayer(P0V[D0E]), true)
call SetUnitOwner(P1V[D0E], Player(PLAYER_NEUTRAL_PASSIVE), false)
call UnitDamageTargetEx(P1V[D0E] , P1V[D0E] , .0 , false , false , null , null , WEAPON_TYPE_METAL_LIGHT_SLICE)
set P2V[D0E]=NX + R2I(.2 / .03125)
call B3X(D0E)
return D0E
endfunction
function Defend___OnImpact takes nothing returns nothing
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(P8V[d])
local real y=GetUnitY(P8V[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( P8V[d] )) )
if GetRandomReal(.0, 1.) <= .5 and not IsUnitAlly(GZV[p], GetOwningPlayer(P8V[d])) and UnitAlive(P8V[d]) then
if not XMX(AC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", P8V[d], "origin"))
call B5X(P8V[d] , a * bj_RADTODEG)
endif
endif
call XLX(AC[j] , p)
endfunction
function B6X takes integer D0E returns nothing
call XUX(AC[( GetUnitUserData(( P8V[D0E] )) )])
call XDX(QVV[D0E])
set RC[( GetUnitUserData(( P8V[D0E] )) )]=false
set IC[( GetUnitUserData(( P8V[D0E] )) )]=0
set P8V[D0E]=null
call HWE(D0E)
endfunction
function B7X takes integer D0E returns nothing
if P9V[D0E] == NX then
call HTE(D0E)
call B6X(D0E)
else
call XQX(QVV[D0E] , GetUnitX(P8V[D0E]) , GetUnitY(P8V[D0E]) , .0 , 200. , D0E , ( 8 ))
endif
endfunction
function B8X takes nothing returns boolean
local integer D0E=QEV[( 0 )]
loop
exitwhen D0E == 0
call B7X(D0E)
set D0E=QEV[D0E]
endloop
return false
endfunction
function B9X takes integer D0E returns nothing
set QXV[QEV[( 0 )]]=D0E
set QEV[D0E]=QEV[( 0 )]
set QEV[( 0 )]=D0E
set QXV[D0E]=( 0 )
endfunction
function CVX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function B8X))
endfunction
function CEX takes unit J2E,integer id returns integer
local integer D0E=HUE()
set P8V[D0E]=J2E
set P9V[D0E]=NX + R2I(15. / .03125)
set QVV[D0E]=XWX()
set RC[id]=true
set IC[id]=D0E
if AC[id] == 0 then
set AC[id]=XWX()
endif
call B9X(D0E)
return D0E
endfunction
function CXX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local integer id=( GetUnitUserData(( OIX )) )
//if GetSpellAbilityId()=='A01Z' then
if not RC[id] then
call CEX(OIX , id)
else
call XUX(AC[id])
set P9V[IC[id]]=NX + R2I(15. / .03125)
endif
//endif
set OIX=null
//return false
endfunction
function COX takes nothing returns nothing

call RegisterSpellEffectEvent('A01Z' , function CXX)
endfunction
function CRX takes integer D0E returns nothing
call ShowUnit(QNV[D0E], false)
call KillUnit(QNV[D0E])
set QNV[D0E]=null
set QAV[D0E]=null
call HSE(D0E)
endfunction
function CIX takes integer D0E returns nothing
if QBV[D0E] == NX then
call HPE(D0E)
call CRX(D0E)
else
call SetUnitX(QNV[D0E], GetUnitX(QAV[D0E]))
call SetUnitY(QNV[D0E], GetUnitY(QAV[D0E]))
endif
endfunction
function CAX takes nothing returns boolean
local integer D0E=QCV[( 0 )]
loop
exitwhen D0E == 0
call CIX(D0E)
set D0E=QCV[D0E]
endloop
return false
endfunction
function CNX takes integer D0E returns nothing
set QDV[QCV[( 0 )]]=D0E
set QCV[D0E]=QCV[( 0 )]
set QCV[( 0 )]=D0E
set QDV[D0E]=( 0 )
endfunction
function CBX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function CAX))
endfunction
function CCX takes unit J2E,real CDE returns integer
local integer D0E=HQE()
set QAV[D0E]=J2E
set QNV[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), GetUnitTypeId(J2E), GetUnitX(J2E), GetUnitY(J2E), CDE)
call UnitAddAbility(QNV[D0E], 'Aloc')
call SetUnitPathing(QNV[D0E], false)
call SetUnitTimeScale(QNV[D0E], 3.)
call SetUnitVertexColor(QNV[D0E], 255, 255, 255, 80)
call SetUnitScale(QNV[D0E], 1.5, .0, .0)
call SetUnitX(QNV[D0E], GetUnitX(J2E))
call SetUnitY(QNV[D0E], GetUnitY(J2E))
call SetUnitAnimation(QNV[D0E], "attack")
call SetUnitOwner(QNV[D0E], GetOwningPlayer(QAV[D0E]), true)
call SetUnitOwner(QNV[D0E], Player(PLAYER_NEUTRAL_PASSIVE), false)
call UnitDamageTargetEx(QNV[D0E] , QNV[D0E] , .0 , false , false , null , null , WEAPON_TYPE_METAL_LIGHT_SLICE)
set QBV[D0E]=NX + R2I(.2 / .03125)
call CNX(D0E)
return D0E
endfunction
function DefendItem___OnImpact takes nothing returns nothing
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(QJV[d])
local real y=GetUnitY(QJV[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( QJV[d] )) )
if GetRandomReal(.0, 1.) <= .5 and not IsUnitAlly(GZV[p], GetOwningPlayer(QJV[d])) and UnitAlive(QJV[d]) then
if not XMX(CC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", QJV[d], "origin"))
call CCX(QJV[d] , a * bj_RADTODEG)
endif
endif
call XLX(CC[j] , p)
endfunction
function CDX takes integer D0E returns nothing
call XUX(CC[( GetUnitUserData(( QJV[D0E] )) )])
call XDX(QLV[D0E])
set NC[( GetUnitUserData(( QJV[D0E] )) )]=false
set BC[( GetUnitUserData(( QJV[D0E] )) )]=0
set QJV[D0E]=null
call HME(D0E)
endfunction
function CFX takes integer D0E returns nothing
if QKV[D0E] == NX then
call HKE(D0E)
call CDX(D0E)
else
call XQX(QLV[D0E] , GetUnitX(QJV[D0E]) , GetUnitY(QJV[D0E]) , .0 , 200. , D0E , ( 9 ))
endif
endfunction
function CGX takes nothing returns boolean
local integer D0E=QMV[( 0 )]
loop
exitwhen D0E == 0
call CFX(D0E)
set D0E=QMV[D0E]
endloop
return false
endfunction
function CHX takes integer D0E returns nothing
set QPV[QMV[( 0 )]]=D0E
set QMV[D0E]=QMV[( 0 )]
set QMV[( 0 )]=D0E
set QPV[D0E]=( 0 )
endfunction
function CJX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function CGX))
endfunction
function CKX takes unit J2E,integer id returns integer
local integer D0E=HLE()
set QJV[D0E]=J2E
set QKV[D0E]=NX + R2I(20. / .03125)
set QLV[D0E]=XWX()
set NC[id]=true
set BC[id]=D0E
if CC[id] == 0 then
set CC[id]=XWX()
endif
call CHX(D0E)
return D0E
endfunction
function CLX takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local integer id=( GetUnitUserData(( OIX )) )
//if GetSpellAbilityId()=='A04E' then
if not NC[id] then
call CKX(OIX , id)
else
call XUX(CC[id])
set QKV[BC[id]]=NX + R2I(20. / .03125)
endif
//endif
set OIX=null
//return false
endfunction
function CMX takes nothing returns nothing

call RegisterSpellEffectEvent('A04E' , function CLX)
endfunction
function CPX takes integer D0E returns nothing
call ShowUnit(QWV[D0E], false)
call KillUnit(QWV[D0E])
set QWV[D0E]=null
set QUV[D0E]=null
call HJE(D0E)
endfunction
function CQX takes integer D0E returns nothing
if QYV[D0E] == NX then
call HGE(D0E)
call CPX(D0E)
else
call SetUnitX(QWV[D0E], GetUnitX(QUV[D0E]))
call SetUnitY(QWV[D0E], GetUnitY(QUV[D0E]))
endif
endfunction
function CSX takes nothing returns boolean
local integer D0E=QZV[( 0 )]
loop
exitwhen D0E == 0
call CQX(D0E)
set D0E=QZV[D0E]
endloop
return false
endfunction
function CTX takes integer D0E returns nothing
set Q_V[QZV[( 0 )]]=D0E
set QZV[D0E]=QZV[( 0 )]
set QZV[( 0 )]=D0E
set Q_V[D0E]=( 0 )
endfunction
function CUX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function CSX))
endfunction
function CWX takes unit J2E,real CDE returns integer
local integer D0E=HHE()
set QUV[D0E]=J2E
set QWV[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), GetUnitTypeId(J2E), GetUnitX(J2E), GetUnitY(J2E), CDE)
call UnitAddAbility(QWV[D0E], 'Aloc')
call SetUnitPathing(QWV[D0E], false)
call SetUnitTimeScale(QWV[D0E], 3.)
call SetUnitVertexColor(QWV[D0E], 255, 255, 255, 80)
call SetUnitScale(QWV[D0E], 1.5, .0, .0)
call SetUnitX(QWV[D0E], GetUnitX(J2E))
call SetUnitY(QWV[D0E], GetUnitY(J2E))
call SetUnitAnimation(QWV[D0E], "attack")
call SetUnitOwner(QWV[D0E], GetOwningPlayer(QUV[D0E]), true)
call SetUnitOwner(QWV[D0E], Player(PLAYER_NEUTRAL_PASSIVE), false)
call UnitDamageTargetEx(QWV[D0E] , QWV[D0E] , .0 , false , false , null , null , WEAPON_TYPE_METAL_LIGHT_SLICE)
set QYV[D0E]=NX + R2I(.2 / .03125)
call CTX(D0E)
return D0E
endfunction
function DefendRockTrolls___OnImpact takes nothing returns nothing
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(Q3V[d])
local real y=GetUnitY(Q3V[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( Q3V[d] )) )
if GetRandomReal(.0, 1.) <= .25 + ( I2R(XT) / 10. ) and not IsUnitAlly(GZV[p], GetOwningPlayer(Q3V[d])) and UnitAlive(Q3V[d]) then
if not XMX(GC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", Q3V[d], "origin"))
call CWX(Q3V[d] , a * bj_RADTODEG)
endif
endif
call XLX(GC[j] , p)
endfunction
function CYX takes integer D0E returns nothing
call XUX(GC[( GetUnitUserData(( Q3V[D0E] )) )])
call XDX(Q5V[D0E])
set DC[( GetUnitUserData(( Q3V[D0E] )) )]=false
set FC[( GetUnitUserData(( Q3V[D0E] )) )]=0
set Q3V[D0E]=null
call HFE(D0E)
endfunction
function CZX takes integer D0E returns nothing
if Q4V[D0E] == NX then
call HCE(D0E)
call CYX(D0E)
else
call XQX(Q5V[D0E] , GetUnitX(Q3V[D0E]) , GetUnitY(Q3V[D0E]) , .0 , 200. , D0E , ( 10 ))
endif
endfunction
function C_X takes nothing returns boolean
local integer D0E=Q6V[( 0 )]
loop
exitwhen D0E == 0
call CZX(D0E)
set D0E=Q6V[D0E]
endloop
return false
endfunction
function C0X takes integer D0E returns nothing
set Q7V[Q6V[( 0 )]]=D0E
set Q6V[D0E]=Q6V[( 0 )]
set Q6V[( 0 )]=D0E
set Q7V[D0E]=( 0 )
endfunction
function C1X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function C_X))
endfunction
function C2X takes unit J2E,integer id returns integer
local integer D0E=HDE()
set Q3V[D0E]=J2E
set Q4V[D0E]=NX + R2I(30. / .03125)
set Q5V[D0E]=XWX()
set DC[id]=true
set FC[id]=D0E
if GC[id] == 0 then
set GC[id]=XWX()
endif
call C0X(D0E)
return D0E
endfunction
function C3X takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local integer id=( GetUnitUserData(( OIX )) )
//if GetSpellAbilityId()=='A08C' then
if not DC[id] then
call C2X(OIX , id)
else
call XUX(GC[id])
set Q4V[FC[id]]=NX + R2I(30. / .03125)
endif
//endif
set OIX=null
//return false
endfunction
function C4X takes nothing returns nothing

call RegisterSpellEffectEvent('A08C' , function C3X)
endfunction
function C5X takes integer D0E returns nothing
local real sx=GetUnitX(SEV[D0E])
local real sy=GetUnitY(SEV[D0E])
local real tx=GetUnitX(SXV[D0E])
local real ty=GetUnitY(SXV[D0E])
local real OLX=Atan2(( ty - sy ), ( tx - sx ))
local integer OMX=0
if IsRangerUseless[GetUnitUserData(SEV[D0E])] then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Polymorph\\PolyMorphDoneGround.mdl", SEV[D0E], "origin"))
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", SEV[D0E], "origin"))
endif
set OMX=XAX(sx , sy , J0V[SIV[D0E]] , OLX)
set GZV[OMX]=SEV[D0E]
call EEX(OMX , SXV[D0E])
set G_V[OMX]=GetOwningPlayer(SEV[D0E])
call V8X(OMX , J1V[SIV[D0E]])
set G1V[OMX]=J2V[SIV[D0E]]
set G2V[OMX]=J3V[SIV[D0E]]
set HEV[OMX]=true
set G8V[OMX]=true
set HOV[OMX]=true
set G4V[OMX]=20.
set G9V[OMX]=true
if GetRandomReal(.0, 1.) <= I2R(GetUnitAbilityLevel(GZV[OMX], 'A026')) * .05 then
if IsRangerUseless[GetUnitUserData(SEV[D0E])] or IsRangerRat[GetUnitUserData(SEV[D0E])] or IsRangerGreen[GetUnitUserData(SEV[D0E])] then

if IsRangerUseless[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "war3mapImported\\MoutonCape.mdx")
endif

if IsRangerRat[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "war3mapImported\\Shot Green Double.mdx")
endif

if IsRangerGreen[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "war3mapImported\\Shot Yellow Double.mdx")
endif

else
call V9X(OMX , "war3mapImported\\s_Enchanted Arrow.mdl")
endif
set G3V[OMX]=SOV[D0E] * ( ( GetUnitAbilityLevel(SEV[D0E], 'A026') ) * 2 )
set HCV[OMX]=( 20 )
else
if IsRangerUseless[GetUnitUserData(SEV[D0E])] or IsRangerRat[GetUnitUserData(SEV[D0E])] or IsRangerGreen[GetUnitUserData(SEV[D0E])] then
if IsRangerUseless[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "units\\critters\\Sheep\\Sheep.mdl")
endif
if IsRangerRat[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "war3mapImported\\Shot Green.mdx")
endif
if IsRangerGreen[GetUnitUserData(SEV[D0E])] then
call V9X(OMX , "war3mapImported\\Shot Yellow.mdx")
endif
else
call V9X(OMX , JYV[SIV[D0E]])
endif
set G3V[OMX]=SOV[D0E]
set HCV[OMX]=( 2 )
endif
set HBV[OMX]=( 2 )
set HAV[OMX]=( 3 )
set HNV[OMX]=( 4 )
if J4V[SIV[D0E]] then
call XRX(OMX , tx , ty , GetUnitFlyHeight(SXV[D0E]) + J0V[SIV[D0E]] , JZV[SIV[D0E]])
else
call XIX(OMX , tx , ty , GetUnitFlyHeight(SXV[D0E]) + J0V[SIV[D0E]] , JZV[SIV[D0E]] , J_V[SIV[D0E]])
endif
set SEV[D0E]=null
set SXV[D0E]=null
call HBE(D0E)
endfunction
function C6X takes integer D0E returns nothing
if SRV[D0E] == NX then
call HAE(D0E)
call C5X(D0E)
endif
endfunction
function C7X takes nothing returns boolean
local integer D0E=SAV[( 0 )]
loop
exitwhen D0E == 0
call C6X(D0E)
set D0E=SAV[D0E]
endloop
return false
endfunction
function C8X takes integer D0E returns nothing
set SNV[SAV[( 0 )]]=D0E
set SAV[D0E]=SAV[( 0 )]
set SAV[( 0 )]=D0E
set SNV[D0E]=( 0 )
endfunction
function C9X takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function C7X))
endfunction
function DVX takes unit DEX,unit DXX,real DOX,integer XHX returns integer
local integer D0E=HNE()
set SEV[D0E]=DEX
set SXV[D0E]=DXX
set SOV[D0E]=DOX
set SIV[D0E]=XHX
set SRV[D0E]=NX + R2I(.15 / .03125)
call C8X(D0E)
return D0E
endfunction
function DRX takes nothing returns boolean
local unit CBE=( QN )
local unit YSE=( SN )
local real U6E=( TN )
local integer ad=( PN )
if GetUnitAbilityLevel(CBE, 'A026') >= 1 and IsUnitEnemy(CBE, GetOwningPlayer(YSE)) then
if GetRandomReal(.0, 1.) <= ( .1 + ( I2R(GetUnitAbilityLevel(CBE, 'A026')) * .08 ) ) then
call DVX(CBE , YSE , U6E , ad)
endif
endif
set CBE=null
set YSE=null
return false
endfunction
function DIX takes nothing returns nothing
local trigger X_X=CreateTrigger()
call MOE(MN , ( X_X ))
call TriggerAddCondition(X_X, Condition(function DRX))
endfunction
function DAX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
if GetUnitAbilityLevel(RGX, 'B049') == 1 and GetUnitTypeId(RGX) != 'U00Z' and IsUnitEnemy(RGX, GetOwningPlayer(GetTriggerUnit())) then
if ( J5V[( ROX(( GetUnitTypeId(RGX) )) )] ) then
if ( BI[NI] ) == ( LN ) then
call SetUnitState(RGX, UNIT_STATE_MANA, GetUnitState(RGX, UNIT_STATE_MANA) + ( GetUnitState(RGX, UNIT_STATE_MAX_MANA) * .005 ))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", RGX, "origin"))
endif
else
if ( CI[NI] ) then
call SetUnitState(RGX, UNIT_STATE_MANA, GetUnitState(RGX, UNIT_STATE_MANA) + ( GetUnitState(RGX, UNIT_STATE_MAX_MANA) * .005 ))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", RGX, "origin"))
endif
endif
endif
set RGX=null
return false
endfunction
function DNX takes nothing returns nothing
local trigger X_X=CreateTrigger()
call MOE(II , ( X_X ))
call TriggerAddCondition(X_X, Condition(function DAX))
endfunction
function DBX takes nothing returns nothing
call RRX('n03A' , "Abilities\\Spells\\Other\\BlackArrow\\BlackArrowMissile.mdl" , 1200. , 0. , 65. , 1. , 64. , 60.)
call RRX('n03N' , "Abilities\\Weapons\\BristleBackMissile\\BristleBackMissile.mdl" , 1500. , .15 , 65. , 1. , 64. , 60.)
call RRX('n039' , "abilities\\weapons\\TuskarSpear\\TuskarSpear.mdl" , 1200. , .15 , 65. , 1. , 64. , 60.)
call RRX('n03S' , "war3mapImported\\Firebrand Shot Green.mdx" , 1750. , .0 , 65. , 1. , 64. , 60.)
call RRX('n03Q' , "war3mapImported\\Firebrand Shot Red.mdx" , 1750. , .0 , 65. , 1. , 64. , 60.)
call RRX('E01R' , "Abilities\\Weapons\\KeeperGroveMissile\\KeeperGroveMissile.mdl" , 1200. , .1 , 65. , 1. , 64. , 60.)
call RRX('E011' , "Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('E013' , "Abilities\\Spells\\Other\\FrostArrows\\NagaColdArrowMissile.mdl" , 1500. , .15 , 65. , 1. , 64. , 60.)
call RRX('n02Z' , "war3mapImported\\Bloodstone Arrow.mdx" , 1500. , .15 , 45. , 1. , 64. , 60.)
call RRX('E00R' , "war3mapImported\\Bloodstone Arrow LSD 2.mdx" , 1500. , .15 , 65. , 1. , 64. , 60.)
call RRX('N01O' , "war3mapImported\\Rain of Fire Vol. II Missile.mdx" , 900. , .25 , 75. , 1. , 64. , 90.)
//call RRX('E01B',"war3mapImported\\OrbOfLightning.mdx",1200.,.15,65.,1.,64.,60.)
//call RRX('E01D',"Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl",900.,.15,65.,1.,64.,60.)
call RRX('E01F' , "Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('E01K' , "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('E01Q' , "Abilities\\Weapons\\GyroCopter\\GyroCopterMissile.mdl" , 1500. , .1 , 65. , 1. , 64. , 60.)
call RRX('U00O' , "darkmissile.mdx" , 900. , .0 , 65. , 1. , 64. , 60.)
call RRX('N01T' , "Abilities\\Weapons\\MoonPriestessMissile\\MoonPriestessMissile.mdl" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('N01S' , "Abilities\\Weapons\\MoonPriestessMissile\\MoonPriestessMissile.mdl" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('N032' , "war3mapImported\\Shot Green.mdx" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('N01Q' , "war3mapImported\\Shot Green.mdx" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('N01M' , "units\\critters\\Sheep\\Sheep.mdl" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('N01L' , "units\\critters\\Sheep\\Sheep.mdl" , 1600. , .15 , 65. , 1. , 64. , 60.)
call RRX('n02H' , "Abilities\\Weapons\\PoisonArrow\\PoisonArrowMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('n03I' , "war3mapImported\\Carrion Bat Blood HD.mdx" , 1200. , .15 , 65. , .8 , 64. , 60.)
call RRX('n01Z' , "war3mapImported\\RuneSpear.mdx" , 1250. , .2 , 90. , 1. , 64. , 60.)
call RRX('E01Z' , "war3mapImported\\SpearOfMars.mdx" , 1000. , .15 , 90. , .8 , 64. , 60.)
call RRX('n03Y' , "war3mapImported\\SpearOfMars.mdx" , 1000. , .15 , 90. , .8 , 64. , 60.)
call RRX('e00X' , "Abilities\\Weapons\\Dryadmissile\\Dryadmissile.mdl" , 1000. , .15 , 65. , 1.3 , 64. , 60.)
call RRX('e00G' , "Abilities\\Weapons\\Dryadmissile\\Dryadmissile.mdl" , 1000. , .15 , 65. , 1.1 , 64. , 60.)
call RRX('n03B' , "war3mapImported\\Carrion Bat Blood HD.mdx" , 1200. , .15 , 65. , 1.4 , 64. , 60.)
call RRX('n03C' , "war3mapImported\\Carrion Bat Jade HD.mdx" , 1200. , .15 , 65. , 1.4 , 64. , 60.)
call RRX('n031' , "war3mapImported\\Enchanted Knife.mdl" , 900. , .0 , 65. , 1. , 64. , 60.)
//call RRX('nwgs',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('E01G',"Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl",900.,.1,65.,1.,64.,60.)
call RRX('n02L' , "Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl" , 800. , .1 , 385. , .8 , 64. , 115.)
call RRX('n02K' , "Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl" , 800. , .1 , 385. , .8 , 64. , 115.)
call RRX('H009' , "Abilities\\Spells\\NightElf\\SpiritOfVengeance\\SpiritOfVengeanceBirthMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('nhrq' , "Abilities\\Weapons\\GargoyleMissile\\GargoyleMissile.mdl" , 1000. , .0 , 240. , 1. , 64. , 50.)
call RRX('nhar' , "Abilities\\Weapons\\HarpyMissile\\HarpyMissile.mdl" , 1500. , .15 , 240. , 1. , 64. , 50.)
call RRX('nhrh' , "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl" , 1200. , .15 , 240. , 1. , 64. , 50.)
call RRX('nfre' , "Abilities\\Weapons\\LichMissile\\LichMissile.mdl" , 1200. , .15 , 65. , 1. , 64. , 60.)
call RRX('nlds' , "Abilities\\Weapons\\MakuraMissile\\MakuraMissile.mdl" , 900. , .0 , 65. , 1. , 64. , 60.)
call RRX('nsll' , "Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 128.)
call RRX('nssp' , "Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl" , 1200. , .15 , 65. , 1. , 64. , 60.)
call RRX('h01D' , "war3mapImported\\Prismatic Missile Fixed.mdx" , 1100. , .15 , 65. , 1. , 64. , 60.)
call RRX('E003' , "Abilities\\Weapons\\DemonHunterMissile\\DemonHunterMissile.mdl" , 900. , .0 , 65. , 1. , 64. , 60.)
//call RRX('n00G',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00R',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00H',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00I',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00J',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00K',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00N',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00O',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00P',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
//call RRX('n00Q',"Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl",1400.,.0,270.,1.,64.,50.)
call RRX('u00U' , "Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdl" , 1500. , .15 , 65. , 1. , 64. , 60.)
call RRX('u00T' , "Abilities\\Spells\\Other\\BlackArrow\\BlackArrowMissile.mdl" , 1050. , .0 , 65. , 1. , 64. , 60.)
call RRX('U003' , "war3mapImported\\BlueBasiliskMissile.mdx" , 700. , .15 , 65. , 1. , 64. , 60.)
call RRX('U000' , "Abilities\\Spells\\NightElf\\SpiritOfVengeance\\SpiritOfVengeanceBirthMissile.mdl" , 1000. , .05 , 110. , 1.2 , 64. , 80.)
call RRX('nskf' , "Abilities\\Weapons\\FlamingArrow\\FlamingArrowMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('nskm' , "Abilities\\Weapons\\Arrow\\ArrowMissile.mdl" , 900. , .15 , 65. , 1. , 64. , 60.)
call RRX('uskm' , "Abilities\\Weapons\\SkeletalMageMissile\\SkeletalMageMissile.mdl" , 900. , .1 , 65. , 1. , 64. , 60.)
call RRX('E00E' , "war3mapImported\\Firebolt Rough Major.mdx" , 1200. , .45 , 65. , 1. , 64. , 60.)
call RRX('n03E' , "war3mapImported\\Voidbolt Rough Medium.mdx" , 1000. , .2 , 65. , 1. , 64. , 60.)
endfunction
function DCX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
if ( J5V[( ROX(( GetUnitTypeId(RGX) )) )] ) then
if ( BI[NI] ) == ( LN ) or ( BI[NI] ) == DAMAGE_TYPE_COLD or ( BI[NI] ) == DAMAGE_TYPE_LIGHTNING or ( BI[NI] ) == DAMAGE_TYPE_MAGIC or ( BI[NI] ) == DAMAGE_TYPE_UNIVERSAL or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) then
set DI[NI]=DI[NI] + GetEventDamage()
endif
else
set DI[NI]=DI[NI] + GetEventDamage()
endif
set RGX=null
return false
endfunction
function DDX takes nothing returns boolean
if ( GetUnitAbilityLevel(GetTriggerUnit(), 'A09D') > 0 or GetUnitAbilityLevel(GetTriggerUnit(), 'A0LA') > 0 or GetUnitAbilityLevel(GetTriggerUnit(), 'A0N9') > 0 or GetUnitAbilityLevel(GetTriggerUnit(), 'B04X') > 0 ) and GetTriggerUnit() != GetEventDamageSource() then
call DCX()
endif
return false
endfunction
function DFX takes nothing returns nothing
local trigger t=CreateTrigger()
call TriggerAddCondition(t, Condition(function DDX))
call MOE(II , ( t ))
set t=null
endfunction
function DGX takes integer D0E returns nothing
if SGV[D0E] != null then
call DestroyEffect(SGV[D0E])
endif
call NTX(SFV[D0E])
set SFV[D0E]=null
set SGV[D0E]=null
call HIE(D0E)
endfunction
function DHX takes integer D0E returns nothing
if SHV[D0E] == NX then
call HOE(D0E)
call DGX(D0E)
endif
endfunction
function DJX takes nothing returns boolean
local integer D0E=SJV[( 0 )]
loop
exitwhen D0E == 0
call DHX(D0E)
set D0E=SJV[D0E]
endloop
return false
endfunction
function DKX takes integer D0E returns nothing
set SKV[SJV[( 0 )]]=D0E
set SJV[D0E]=SJV[( 0 )]
set SJV[( 0 )]=D0E
set SKV[D0E]=( 0 )
endfunction
function DLX takes nothing returns nothing
call TriggerAddCondition(BX, Condition(function DJX))
endfunction
function DMX takes real x,real y returns integer
local integer D0E=HRE()
set SFV[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'e001', x, y, .0)
set SGV[D0E]=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishMana\\ReplenishManaCasterOverhead.mdl", SFV[D0E], "origin")
set SHV[D0E]=NX + R2I(.1 / .03125)
call SetUnitScale(SFV[D0E], 1.5, .0, .0)
call UnitAddAbility(SFV[D0E], 'Amrf')
call UnitRemoveAbility(SFV[D0E], 'Amrf')
call SetUnitFlyHeight(SFV[D0E], 100., .0)
call SetUnitPathing(SFV[D0E], false)
call PauseUnit(SFV[D0E], true)
call SetUnitX(SFV[D0E], x)
call SetUnitY(SFV[D0E], y)
call DKX(D0E)
return D0E
endfunction
function TimeWarp___WarpProjectiles takes nothing returns nothing
local integer p=( MA )
local real x=.0
local real y=.0
set HEV[p]=true
call DestroyEffect(L8E("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl" , HHV[p] , HJV[p] , HKV[p] - 30.))
set x=HHV[p] + 500. * Cos(EOX(p))
set y=HJV[p] + 500. * Sin(EOX(p))
call ECX(p , x , y , HKV[p] , false)
set x=HQV[p] + 500. * Cos(EOX(p))
set y=HSV[p] + 500. * Sin(EOX(p))
call ERX(p , x , y , HTV[p] , false)
call DestroyEffect(L8E("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl" , HHV[p] , HJV[p] , HKV[p] - 30.))
endfunction
function DPX takes nothing returns nothing
//if GetSpellAbilityId()=='A025' then
call DMX(GetSpellTargetX() , GetSpellTargetY())
call XQX(KA , GetSpellTargetX() , GetSpellTargetY() , .0 , 400. , 0 , ( 11 ))
//endif
//return false
endfunction
function DQX takes nothing returns nothing

call RegisterSpellEffectEvent('A025' , function DPX)
endfunction
function DSX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
if GetUnitAbilityLevel(RGX, 'A094') != 0 and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(RGX)) then
if ( CI[NI] ) then
call UnitRemoveAbility(RGX, 'A096')
call UnitRemoveAbility(RGX, 'B02N')
call UnitRemoveAbility(RGX, 'A094')
call BlzSetUnitAttackCooldown(RGX, 1.4, 0)
endif
endif
set RGX=null
return false
endfunction
function DTX takes nothing returns nothing
local trigger X_X=CreateTrigger()
call MOE(II , ( X_X ))
call TriggerAddCondition(X_X, Condition(function DSX))
endfunction
function DUX takes nothing returns boolean
local unit RGX=GetEventDamageSource()
local unit SVE=GetTriggerUnit()
local real r
if GetUnitAbilityLevel(RGX, 'A093') != 0 and IsUnitEnemy(SVE, GetOwningPlayer(RGX)) then
if GetRandomInt(0, 100) <= 8 + 2 * GetUnitAbilityLevel(RGX, 'A093') then
if ( J5V[( ROX(( GetUnitTypeId(RGX) )) )] ) then
if ( BI[NI] ) == ( LN ) then
set r=GetUnitAbilityLevel(RGX, 'A093') * .001 * GetEventDamage()
call UnitDamageTargetEx(SVE , RGX , r , true , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\BrewmasterMissile\\BrewmasterMissile.mdl", RGX, "chest"))
call UnitAddAbility(RGX, 'A094')
call UnitAddAbility(RGX, 'A096')
call BlzSetUnitAttackCooldown(RGX, .15, 0)
endif
else
if ( CI[NI] ) then
set r=GetUnitAbilityLevel(RGX, 'A093') * .001 * GetEventDamage()
call UnitDamageTargetEx(SVE , RGX , r , true , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\BrewmasterMissile\\BrewmasterMissile.mdl", RGX, "chest"))
call UnitAddAbility(RGX, 'A094')
call UnitAddAbility(RGX, 'A096')
call BlzSetUnitAttackCooldown(RGX, .15, 0)
endif
endif
endif
else
if GetUnitAbilityLevel(SVE, 'A093') != 0 then
if GetRandomInt(0, 100) <= 8 + 2 * GetUnitAbilityLevel(SVE, 'A093') then
if ( J5V[( ROX(( GetUnitTypeId(RGX) )) )] ) then
if ( BI[NI] ) == ( LN ) then
set r=GetUnitAbilityLevel(SVE, 'A093') * 10
call UnitDamageTargetEx(RGX , SVE , r , true , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\BrewmasterMissile\\BrewmasterMissile.mdl", SVE, "chest"))
call UnitAddAbility(SVE, 'A094')
call UnitAddAbility(SVE, 'A096')
call BlzSetUnitAttackCooldown(SVE, .15, 0)
endif
else
if ( CI[NI] ) then
set r=GetUnitAbilityLevel(SVE, 'A093') * 10
call UnitDamageTargetEx(RGX , SVE , r , true , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\BrewmasterMissile\\BrewmasterMissile.mdl", SVE, "chest"))
call UnitAddAbility(SVE, 'A094')
call UnitAddAbility(SVE, 'A096')
call BlzSetUnitAttackCooldown(SVE, .15, 0)
endif
endif
endif
endif
endif
set RGX=null
set SVE=null
return false
endfunction
function DWX takes nothing returns nothing
local trigger X_X=CreateTrigger()
call MOE(II , ( X_X ))
call TriggerAddCondition(X_X, Condition(function DUX))
endfunction
constant function DYX takes integer DZX,integer D_X returns real
return ( D_X * DZX * .5 )
endfunction
function D0X takes integer D1X returns nothing
set MUV[D1X]=DAMAGE_TYPE_MAGIC
set MWV[D1X]=ATTACK_TYPE_NORMAL
call BBX(D1X , UNIT_TYPE_STRUCTURE)
set MPV[D1X]=true
set MHV[D1X]=true
set MJV[D1X]=true
set M0V[D1X]=- 1.
endfunction
function D2X takes unit u,integer s returns boolean
return not IsUnitType(u, UNIT_TYPE_DEAD) and GetUnitTypeId(u) != 0 and IsUnitType(u, UNIT_TYPE_STRUCTURE) == false and IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) == false and IsUnitEnemy(u, GetOwningPlayer(SQV[s])) and IsUnitVisible(u, GetOwningPlayer(SQV[s]))
endfunction
function D3X takes unit c,unit o returns integer
local integer D0E=HEE()
local integer i=0
local real x=GetUnitX(c)
local real y=GetUnitY(c)
local real a
set TIV[D0E]=GetUnitAbilityLevel(o, 'A08L')
set TRV[D0E]=12
set TVV[D0E]=( 25. + ( 2. * TIV[D0E] ) )
set SQV[D0E]=c
set SSV[D0E]=o
set TOV[D0E]=(NewTimerEx(0)) // INLINED!!
loop
exitwhen i == TRV[D0E]
set a=i * HC / TRV[D0E]
set SWV[SYV[D0E] + i]=YBE(x , y , a)
call YHE(SWV[SYV[D0E] + i] , "Abilities\\Weapons\\SpiritOfVengeanceMissile\\SpiritOfVengeanceMissile.mdl")
call YCE(SWV[SYV[D0E] + i] , 1.4)
call SetUnitFlyHeight(DPV[( SWV[SYV[D0E] + i] )], ( ( 100. ) * 1. ), 0)
set S4V[S5V[D0E] + i]=a
set i=i + 1
endloop
call GroupAddUnit(KC, c)
return D0E
endfunction
function D4X takes nothing returns boolean
return D2X(GetFilterUnit() , TAV)
endfunction
function D5X takes nothing returns nothing
local integer D0E=(LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer())))) // INLINED!!
local real x=GetUnitX(SQV[D0E])
local real y=GetUnitY(SQV[D0E])
local integer i=0
local real x1
local real y1
local real x2
local real y2
local real OLX
local real M3E
local real M4E
local real dx
local real dy
local real CCE
if TVV[D0E] > .0 and not IsUnitType(SQV[D0E], UNIT_TYPE_DEAD) then
set TVV[D0E]=TVV[D0E] - .025
loop
exitwhen i == TRV[D0E]
set S4V[S5V[D0E] + i]=S4V[S5V[D0E] + i] + .15
set S6V[S7V[D0E] + i]=x + ( 150. + ( TIV[D0E] ) * 0 ) * Cos(S4V[S5V[D0E] + i])
set S8V[S9V[D0E] + i]=y + ( 150. + ( TIV[D0E] ) * 0 ) * Sin(S4V[S5V[D0E] + i])
if not SZV[S_V[D0E] + i] then
call SetUnitX(DPV[( SWV[SYV[D0E] + i] )], ( ( S6V[S7V[D0E] + i] ) * 1. ))
call SetUnitY(DPV[( SWV[SYV[D0E] + i] )], ( ( S8V[S9V[D0E] + i] ) * 1. ))
set TAV=D0E
set STV[SUV[D0E] + i]=( ZEE(null , ( ( ( GetUnitX(DPV[( SWV[SYV[D0E] + i] )]) ) ) * 1. ) , ( ( ( GetUnitY(DPV[( SWV[SYV[D0E] + i] )]) ) ) * 1. ) , ( ( ( 500. + ( TIV[D0E] ) * 0 ) ) * 1. ) , ( Condition(function D4X) )) )
if STV[SUV[D0E] + i] != null then
set SZV[S_V[D0E] + i]=true
endif
else
if not S0V[S1V[D0E] + i] then
set x1=( GetUnitX(DPV[( SWV[SYV[D0E] + i] )]) )
set y1=( GetUnitY(DPV[( SWV[SYV[D0E] + i] )]) )
set x2=GetUnitX(STV[SUV[D0E] + i])
set y2=GetUnitY(STV[SUV[D0E] + i])
set dx=x2 - x1
set dy=y2 - y1
set OLX=Atan2(dy, dx)
set M3E=x1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Cos(OLX)
set M4E=y1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Sin(OLX)
set CCE=SquareRoot(dx * dx + dy * dy)
if ( CCE > 80. ) then
call SetUnitX(DPV[( SWV[SYV[D0E] + i] )], ( ( M3E ) * 1. ))
call SetUnitY(DPV[( SWV[SYV[D0E] + i] )], ( ( M4E ) * 1. ))
call SetUnitFacing(DPV[( SWV[SYV[D0E] + i] )], ( ( OLX ) * 1. ) * bj_RADTODEG)
if CCE > 1000. or IsUnitType(STV[SUV[D0E] + i], UNIT_TYPE_DEAD) then
set S0V[S1V[D0E] + i]=true
set STV[SUV[D0E] + i]=null
endif
else
if not IsUnitType(STV[SUV[D0E] + i], UNIT_TYPE_DEAD) then
call BCX(JC , "" , "origin")
call BPX(JC , SSV[D0E] , STV[SUV[D0E] + i] , DYX(TIV[D0E] , GetHeroInt(SSV[D0E], true)))
set TEV[TXV[D0E] + i]=true
endif
set S0V[S1V[D0E] + i]=true
set STV[SUV[D0E] + i]=null
endif
else
if not S2V[S3V[D0E] + i] then
set x1=( GetUnitX(DPV[( SWV[SYV[D0E] + i] )]) )
set y1=( GetUnitY(DPV[( SWV[SYV[D0E] + i] )]) )
set x2=GetUnitX(SQV[D0E])
set y2=GetUnitY(SQV[D0E])
set dx=x2 - x1
set dy=y2 - y1
set OLX=Atan2(dy, dx)
set M3E=x1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Cos(OLX)
set M4E=y1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Sin(OLX)
set CCE=SquareRoot(dx * dx + dy * dy)
if ( CCE > 80. ) then
call SetUnitX(DPV[( SWV[SYV[D0E] + i] )], ( ( M3E ) * 1. ))
call SetUnitY(DPV[( SWV[SYV[D0E] + i] )], ( ( M4E ) * 1. ))
call SetUnitFacing(DPV[( SWV[SYV[D0E] + i] )], ( ( OLX ) * 1. ) * bj_RADTODEG)
else
if not IsUnitType(SQV[D0E], UNIT_TYPE_DEAD) and TEV[TXV[D0E] + i] then
call BCX(JC , "" , "origin")
call BPX(JC , SSV[D0E] , SQV[D0E] , DYX(TIV[D0E] , GetHeroInt(SSV[D0E], true)) * ( .05 + ( TIV[D0E] ) * .01 ))
endif
set S2V[S3V[D0E] + i]=true
endif
else
set x1=( GetUnitX(DPV[( SWV[SYV[D0E] + i] )]) )
set y1=( GetUnitY(DPV[( SWV[SYV[D0E] + i] )]) )
set x2=S6V[S7V[D0E] + i]
set y2=S8V[S9V[D0E] + i]
set dx=x2 - x1
set dy=y2 - y1
set OLX=Atan2(dy, dx)
set M3E=x1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Cos(OLX)
set M4E=y1 + ( 800. * .025 + ( TIV[D0E] ) * .0 ) * Sin(OLX)
set CCE=SquareRoot(dx * dx + dy * dy)
if ( CCE > 80. ) then
call SetUnitX(DPV[( SWV[SYV[D0E] + i] )], ( ( M3E ) * 1. ))
call SetUnitY(DPV[( SWV[SYV[D0E] + i] )], ( ( M4E ) * 1. ))
call SetUnitFacing(DPV[( SWV[SYV[D0E] + i] )], ( ( OLX ) * 1. ) * bj_RADTODEG)
else
set S2V[S3V[D0E] + i]=false
set S0V[S1V[D0E] + i]=false
set SZV[S_V[D0E] + i]=false
set TEV[TXV[D0E] + i]=false
call SetUnitX(DPV[( SWV[SYV[D0E] + i] )], ( ( S6V[S7V[D0E] + i] ) * 1. ))
call SetUnitY(DPV[( SWV[SYV[D0E] + i] )], ( ( S8V[S9V[D0E] + i] ) * 1. ))
endif
endif
endif
endif
set i=i + 1
endloop
else
call HXE(D0E)
endif
endfunction
function D7X takes nothing returns nothing
local integer D0E
//if(GetSpellAbilityId()=='A08L')then
set D0E=D3X(GetSpellTargetUnit() , GetTriggerUnit())
call SaveInteger(TimerUtils___ht, 0, GetHandleId((( ( TOV[D0E] ) ) )), ( ( D0E ))) // INLINED!!
call TimerStart(TOV[D0E], .025, true, function D5X)
//endif
//return false
endfunction
function D8X takes nothing returns boolean
local unit c=GetSpellTargetUnit()
local unit u=GetTriggerUnit()
if GetSpellAbilityId() == 'A08L' and IsUnitInGroup(c, KC) then
call Q_E(GetOwningPlayer(u) , "Another instance is running for this unit.")
call PauseUnit(u, true)
call IssueImmediateOrderById(u, 851972)
call PauseUnit(u, false)
endif
set c=null
set u=null
return false
endfunction
function D9X takes nothing returns nothing
local trigger t

call RegisterSpellEffectEvent('A08L' , function D7X)
set t=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_CHANNEL)
call TriggerAddCondition(t, Condition(function D8X))
set JC=H0E()
call D0X(JC)
endfunction
function FVX takes nothing returns nothing
local player p=Player(0)
local unit u
local integer unitID
local trigger t
local real O5X
set X6V=CreateUnit(p, 'h007', - 508.6, - 4608.7, 139.575)
endfunction
function FEX takes nothing returns nothing
local player p=Player(PLAYER_NEUTRAL_PASSIVE)
local unit u
local integer unitID
local trigger t
local real O5X
set XZV=CreateUnit(p, 'ncop', 8000., - 4480., 270.)
set X_V=CreateUnit(p, 'ncop', 4800., - 4480., 270.)
set OVV=CreateUnit(p, 'ncop', 1280., - 3840., 270.)
set XQV=CreateUnit(p, 'ncop', - 1280., - 6400., 270.)
set X0V=CreateUnit(p, 'ncop', - 4800., - 4480., 270.)
set X1V=CreateUnit(p, 'ncop', - 8000., - 4480., 270.)
set X2V=CreateUnit(p, 'ncop', - 8704., 576., 270.)
set X3V=CreateUnit(p, 'ncop', - 4096., 576., 270.)
set X4V=CreateUnit(p, 'ncop', 4096., 576., 270.)
set XYV=CreateUnit(p, 'ncop', 8704., 576., 270.)
set X7V=CreateUnit(p, 'ncop', 1280., - 4864., 270.)
set X8V=CreateUnit(p, 'ncop', .0, - 6400., 270.)
set X9V=CreateUnit(p, 'ncop', - 1280., - 4928., 270.)
set u=CreateUnit(p, 'ncp3', - 6400., - 3072., 270.)
set u=CreateUnit(p, 'ncp3', 6400., - 3072., 270.)
set XDV=CreateUnit(p, 'ncop', - 256., - 3840., 270.)
//set XCV=CreateUnit(p,'ncop',1280.,-6400.,270.)
set XBV=CreateUnit(p, 'ncop', 1280., - 4608., 270.)
set XNV=CreateUnit(p, 'ncop', - 1280., - 4672., 270.)
set XAV=CreateUnit(p, 'ncop', - 1280., - 4416., 270.)
set QoBC=CreateUnit(p, 'ncop', - 1280., - 3950., 270.)
set XIV=CreateUnit(p, 'ncop', - 1280., - 5440., 270.)
set XRV=CreateUnit(p, 'ncop', - 1280., - 5952., 270.)
set XOV=CreateUnit(p, 'ncop', - 1280., - 6208., 270.)
set XXV=CreateUnit(p, 'ncop', - 512., - 3840., 270.)
set XFV=CreateUnit(p, 'ncop', - 768., - 3840., 270.)
set XJV=CreateUnit(p, 'ncop', .0, - 3840., 270.)
set XKV=CreateUnit(p, 'ncop', 256., - 3840., 270.)
set XLV=CreateUnit(p, 'ncop', 256., - 6400., 270.)
set XUV=CreateUnit(p, 'ncop', - 512., - 6400., 270.)
set XTV=CreateUnit(p, 'ncop', - 768., - 6400., 270.)
set XSV=CreateUnit(p, 'ncop', 512., - 6400., 270.)
set XEV=CreateUnit(p, 'ncop', 1280., - 4352., 270.)
set XVV=CreateUnit(p, 'ncop', 1280., - 5632., 270.)
set E9V=CreateUnit(p, 'ncop', 1280., - 4096., 270.)
set E8V=CreateUnit(p, 'ncop', 1280., - 5120., 270.)
set E6V=CreateUnit(p, 'ncop', - 256., - 6400., 270.)
set E5V=CreateUnit(p, 'ncop', 768., - 6400., 270.)
set E1V=CreateUnit(p, 'ncop', - 1280., - 5696., 270.)
set XGV=CreateUnit(p, 'ncop', 1280., - 5376., 270.)
set E3V=CreateUnit(p, 'ncop', - 1280., - 4160., 270.)
set XHV=CreateUnit(p, 'ncop', - 1024., - 3840., 270.)
set OXV=CreateUnit(p, 'ncop', 1280., - 5888., 270.)
set OEV=CreateUnit(p, 'ncop', 1024., - 3840., 270.)
set E2V=CreateUnit(p, 'ncop', 768., - 3840., 270.)
set OOV=CreateUnit(p, 'ncop', 1024., - 6400., 270.)
set XPV=CreateUnit(p, 'ncop', 512., - 3840., 270.)
set X5V=CreateUnit(p, 'ncop', - 1280., - 5184., 270.)
set XWV=CreateUnit(p, 'ncop', - 1024., - 6400., 270.)
set PeHC=CreateUnit(p, 'ncop', 1280., - 6400., 270.)
set FIRELORDCIRCLE=CreateUnit(p, 'ncop', - 10., - 6118.9, 270.)
set TRITUSCIRCLE=CreateUnit(p, 'ncop', - 1050., - 5125., 270.)
set MOLOCHCIRCLE=CreateUnit(p, 'ncop', - 10., - 4100., 270.)

endfunction
function FXX takes nothing returns nothing
local player p=Player(PLAYER_NEUTRAL_PASSIVE)
local unit u
local integer unitID
local trigger t
local real O5X
set u=CreateUnit(p, 'n014', - 4930., - 256., 270.)
set u=CreateUnit(p, 'n014', 7890., - 256., 270.)
set u=CreateUnit(p, 'n015', 5056., - 256., 270.)
set u=CreateUnit(p, 'n015', - 7776., - 256., 270.)
set u=CreateUnit(p, 'n00X', 5912.6, - 2795.3, 270.)
set u=CreateUnit(p, 'n00F', - 7424., - 2816., 270.)
set u=CreateUnit(p, 'n00F', 5376., - 2816., 270.)
set u=CreateUnit(p, 'n008', - 5376., - 2752., 270.)
set u=CreateUnit(p, 'n008', 7424., - 2752., 270.)
set u=CreateUnit(p, 'h00P', 4343.7, 6583.3, 99.03)
set u=CreateUnit(p, 'n00V', - 6400., - 2752., 270.)
set u=CreateUnit(p, 'n00V', 6400., - 2752., 270.)
set u=CreateUnit(p, 'n00A', - 5888., - 2752., 270.)
set u=CreateUnit(p, 'n00A', 6912., - 2752., 270.)
set u=CreateUnit(p, 'h00P', 8451.6, 6568.6, 81.35)
set u=CreateUnit(p, 'h00P', - 4345.3, 6549.4, 87.75)
set u=CreateUnit(p, 'h00P', - 8443.3, 6562.7, 175.83)
set E4V=CreateUnit(p, 'n00T', - 5461.8, - 2841.6, 154.164)
set u=CreateUnit(p, 'n00W', 7005.1, - 2668.5, 332.152)
set u=CreateUnit(p, 'n00W', 6678.2, - 2753.6, 33.242)
set E7V=CreateUnit(p, 'n00T', 7347.9, - 2833.5, 152.812)
set u=CreateUnit(p, 'n00X', - 6935.7, - 2761.4, 270.)
set u=CreateUnit(p, 'n012', 6392.1, - 2714.8, 269.43)
set u=CreateUnit(p, 'n00W', - 5797.1, - 2695.3, 335.062)
set u=CreateUnit(p, 'n00W', - 6121., - 2800., 41.582)
set u=CreateUnit(p, 'n00Y', - 7446.6, - 2740.8, 285.488)
set u=CreateUnit(p, 'n00Y', 5355.3, - 2720.5, 284.201)
set u=CreateUnit(p, 'n00Z', 5371.6, - 2765.2, 270.031)
set u=CreateUnit(p, 'n00Z', - 7444.1, - 2767.1, 358.778)
set u=CreateUnit(p, 'n00Z', - 6914.4, - 2767.4, 107.362)
set u=CreateUnit(p, 'n00Z', - 6403.8, - 2765., 179.154)
set u=CreateUnit(p, 'n00Z', - 5891.9, - 2759.2, 90.267)
set u=CreateUnit(p, 'n00Z', - 5392.2, - 2762.2, 87.966)
set u=CreateUnit(p, 'n00Z', 5888.9, - 2756.6, 276.534)
set u=CreateUnit(p, 'n00Z', 6388.4, - 2774.7, .755)
set u=CreateUnit(p, 'n00Z', 7415.7, - 2761.2, 269.231)
set u=CreateUnit(p, 'n00Z', 6899.3, - 2767.3, 359.794)
set u=CreateUnit(p, 'n00Z', 7846.5, - 277.1, 180.02)
set u=CreateUnit(p, 'n00Z', 4970.6, - 259.2, 180.725)
set u=CreateUnit(p, 'n00Z', - 7837.4, - 246.7, 270.19)
set u=CreateUnit(p, 'n00Z', - 4952., - 276., 89.753)
set u=CreateUnit(p, 'n00Z', - 2., - 5120.6, 41.12)
set u=CreateUnit(p, 'n010', - 7734.4, - 262.8, 269.539)
set u=CreateUnit(p, 'n010', 5069.8, - 256.6, 271.808)
set u=CreateUnit(p, 'n010', 4902.1, - 259.2, 271.494)
set u=CreateUnit(p, 'n010', - 7899.7, - 260.6, 268.611)
set u=CreateUnit(p, 'n011', - 7038.8, - 2701.4, 302.079)
set u=CreateUnit(p, 'n011', 5979.9, - 2711.2, 215.388)
set u=CreateUnit(p, 'n011', - 6804.6, - 2671.9, 234.768)
set u=CreateUnit(p, 'n011', 5779.5, - 2716.4, 311.923)
set u=CreateUnit(p, 'n012', - 6410.5, - 2712.7, 269.43)

set u=null
endfunction
function FOX takes nothing returns nothing
local player p
local unit u
local integer unitID
local trigger t
local real O5X
set p=Player(0)
set u=CreateUnit(p, 'h000', 6400., 2816., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(1)
set u=CreateUnit(p, 'h000', 6400., 3328., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(2)
set u=CreateUnit(p, 'h000', 6400., 3840., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(3)
set u=CreateUnit(p, 'h000', 6400., 4352., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(4)
set u=CreateUnit(p, 'h000', 6400., 4864., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(5)
set u=CreateUnit(p, 'h000', - 6400., 2816., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(6)
set u=CreateUnit(p, 'h000', - 6400., 3328., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(7)
set u=CreateUnit(p, 'h000', - 6400., 3840., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(8)
set u=CreateUnit(p, 'h000', - 6400., 4352., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=Player(9)
set u=CreateUnit(p, 'h000', - 6400., 4864., 270.)
call UnitAddItemToSlotById(u, 'wcyc', 0)
call UnitAddItemToSlotById(u, 'wshs', 1)
call UnitAddItemToSlotById(u, 'woms', 2)
call UnitAddItemToSlotById(u, 'wlsd', 3)
set p=null
set u=null
endfunction

function FRX takes nothing returns nothing
local weathereffect we
set GU=Rect(- 6592., - 3264., - 6208., - 2880.)
set HU=Rect(6208., - 3264., 6592., - 2880.)
set JU=Rect(- 9088., 6528., - 7808., 6784.)
set KU=Rect(- 4992., 6528., - 3712., 6784.)
set LU=Rect(3712., 6528., 4992., 6784.)
set MU=Rect(7808., 6528., 9088., 6784.)
set PU=Rect(- 1536., - 6656., 1536., - 3584.)
set QU=Rect(- 9472., - 6912., - 3328., 7520.)
set SU=Rect(3328., - 6880., 9472., 7552.)
set TU=Rect(- 7168., 2560., - 5632., 6880.)
set UU=Rect(5632., 2688., 7168., 7008.)
set WU=Rect(- 1472., - 3808., - 1344., - 3680.)
set YU=Rect(- 1088., - 3776., - 960., - 3648.)
set ZU=Rect(- 832., - 3776., - 704., - 3648.)
set VW=Rect(- 576., - 3776., - 448., - 3648.)
set EW=Rect(- 320., - 3776., - 192., - 3648.)
set XW=Rect(- 64., - 3776., 64., - 3648.)
set OW=Rect(192., - 3776., 320., - 3648.)
set RW=Rect(448., - 3776., 576., - 3648.)
set IW=Rect(704., - 3776., 832., - 3648.)
set AW=Rect(960., - 3776., 1088., - 3648.)
set NW=Rect(1344., - 3808., 1472., - 3680.)
set BW=Rect(1344., - 4160., 1472., - 4032.)
set CW=Rect(1344., - 4416., 1472., - 4288.)
set DW=Rect(1344., - 4672., 1472., - 4544.)
set FW=Rect(1344., - 4928., 1472., - 4800.)
set GW=Rect(1344., - 5184., 1472., - 5056.)
set HW=Rect(1344., - 5440., 1472., - 5312.)
set JW=Rect(1344., - 5696., 1472., - 5568.)
set KW=Rect(1344., - 5952., 1472., - 5824.)
set LW=Rect(1344., - 6560., 1472., - 6432.)
set MW=Rect(960., - 6592., 1088., - 6464.)
set PW=Rect(704., - 6592., 832., - 6464.)
set QW=Rect(448., - 6592., 576., - 6464.)
set SW=Rect(192., - 6592., 320., - 6464.)
set TW=Rect(- 64., - 6592., 64., - 6464.)
set UW=Rect(- 320., - 6592., - 192., - 6464.)
set WW=Rect(- 576., - 6592., - 448., - 6464.)
set YW=Rect(- 832., - 6592., - 704., - 6464.)
set ZW=Rect(- 1088., - 6592., - 960., - 6464.)
set VY=Rect(- 1440., - 6624., - 1312., - 6496.)
set EY=Rect(- 1472., - 6304., - 1344., - 6176.)
set XY=Rect(- 1472., - 6016., - 1344., - 5888.)
set OY=Rect(- 1472., - 5760., - 1344., - 5632.)
set RY=Rect(- 1472., - 5504., - 1344., - 5376.)
set IY=Rect(- 1472., - 5248., - 1344., - 5120.)
set AY=Rect(- 1472., - 4992., - 1344., - 4864.)
set NY=Rect(- 1472., - 4736., - 1344., - 4608.)
set BY=Rect(- 1472., - 4480., - 1344., - 4320.)
set CY=Rect(- 1472., - 4256., - 1344., - 4096.)
endfunction
function FIX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[1] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function FAX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 1 )
endfunction
function FNX takes nothing returns boolean
return ( ST == false )
endfunction
function FBX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function FCX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('A00O', GetTriggerUnit(), XT)
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'SCae')
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', XT)
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'SCae')
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', XT)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
call UnitAddAbility(GetTriggerUnit(), 'A04K')
call UnitAddAbility(GetTriggerUnit(), 'A01R')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A01R', 5)
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'A00O')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 1) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function FFX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[2] )
endfunction
function FGX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 2 )
endfunction
function FHX takes nothing returns boolean
return ( ST == false )
endfunction
function FJX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function FKX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('AIcb', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'AIcb')
call UnitRemoveAbility(GetTriggerUnit(), 'Afzy')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 2) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function FMX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[3] )
endfunction
function FPX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 3 )
endfunction
function FQX takes nothing returns boolean
return ( ST == false )
endfunction
function FSX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function FTX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('AEar', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'AEar')
endif
if XT == 2 then
call SetUnitAbilityLevelSwapped('AEar', GetTriggerUnit(), 1)
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('AEar', GetTriggerUnit(), 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'SCae')
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', XT)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
call UnitAddAbility(GetTriggerUnit(), 'SCae')
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', XT)
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'AEar')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 3) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function FWX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[4] )
endfunction
function FYX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 4 )
endfunction
function FZX takes nothing returns boolean
return ( ST == false )
endfunction
function F_X takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function F0X takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), XT)
call SetUnitAbilityLevel(GetTriggerUnit(), 'AChv', XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
call UnitRemoveAbility(GetTriggerUnit(), 'A03R')
endif
if XT == 2 then
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), 1)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 1)
call SetUnitAbilityLevel(GetTriggerUnit(), 'AChv', 1)
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'AChv', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A08F')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A08F')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
call UnitRemoveAbility(GetTriggerUnit(), 'A03R')
call UnitRemoveAbility(GetTriggerUnit(), 'AChv')
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 4) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function F2X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[5] )
endfunction
function F3X takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 5 )
endfunction
function F4X takes nothing returns boolean
return ( ST == false )
endfunction
function F5X takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function F6X takes nothing returns nothing
local unit u
local real x
local real y
local integer playern
if ( (ST == false) ) then // INLINED!!
//call SetUnitAbilityLevelSwapped('Aenr',GetTriggerUnit(),XT)
if BRTON then
set x=GetUnitX(GetTriggerUnit())
set y=GetUnitY(GetTriggerUnit())
set playern=GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
call RemoveUnit(GetTriggerUnit())
set u=CreateUnit(Player(playern), 'n01B', x, y, 270.)
call RemoveGuardPosition(u)
call SetUnitPathing(u, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, u, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, u)
call SetUnitAcquireRange(u, 900.)

if XT == 4 then
call SetUnitScale(u, 1.1, 1.1, 1.1)
call UnitAddAbility(u, 'A0BH')
call UnitAddAbility(u, 'A01X')
endif
if XT == 5 then
call SetUnitScale(u, 1.3, 1.3, 1.3)
call UnitAddAbility(u, 'A0BH')
call SetUnitAbilityLevel(u, 'A0BH', 2)
call UnitAddAbility(u, 'Absk')
call UnitAddAbility(u, 'A01X')
endif
call UnitAddAbility(u, 'A06Q')
else
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A034')
endif
if XT == 2 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A034', 1)
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A034', 2)
endif
if XT == 4 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A034', 3)
endif
if XT == 5 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A034', 3)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endif
else
//call UnitRemoveAbility(GetTriggerUnit(),'Aenr')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 5) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
set u=null
endfunction
function F8X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[6] )
endfunction
function F9X takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 6 )
endfunction
function GVX takes nothing returns boolean
return ( ST == false )
endfunction
function GEX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function GXX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('Afbt', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('AIcb', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACct', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'ACct')
call UnitRemoveAbility(GetTriggerUnit(), 'Afbt')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call SetUnitAbilityLevel(GetTriggerUnit(), 'ACct', 1)
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'ACct', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BH', 2)
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'Afbt')
call UnitRemoveAbility(GetTriggerUnit(), 'AIcb')
call UnitRemoveAbility(GetTriggerUnit(), 'ACvp')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'Apiv')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EV')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 6) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function GRX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[7] )
endfunction
function GIX takes nothing returns boolean
return ( bj_forLoopAIndex == ModuloInteger(bj_forLoopAIndex, 40) ) and ( ModuloInteger(bj_forLoopAIndex, 40) == 7 )
endfunction
function GAX takes nothing returns boolean
return ( ST == false )
endfunction
function GNX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function GBX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A01R', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Afbt', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'Afbt')
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A01R', 1)
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A01R', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'Afbt')
call UnitRemoveAbility(GetTriggerUnit(), 'AIcb')
call UnitRemoveAbility(GetTriggerUnit(), 'ACvp')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'Apiv')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EV')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (( bj_forLoopAIndex == ModuloInteger(bj_forLoopAIndex, 40) ) and ( ModuloInteger(bj_forLoopAIndex, 40) == 7 )) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function GDX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[8] )
endfunction
function GFX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 8 )
endfunction
function GGX takes nothing returns boolean
return ( ST == false )
endfunction
function GHX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function GJX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('ACen', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A06A')
call UnitRemoveAbility(GetTriggerUnit(), 'Aspd')
endif
if TRUEENFOS then
call UnitAddAbility(GetTriggerUnit(), 'A06A')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06A')
call UnitAddAbility(GetTriggerUnit(), 'A0BK')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06A')
call UnitAddAbility(GetTriggerUnit(), 'A0BK')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BK', 2)
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'ACen', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A08K')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A08E')
call UnitAddAbility(GetTriggerUnit(), 'A08K')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'A03R')
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'ACen')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 8) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function GLX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( ( GetUnitTypeId(GetTriggerUnit()) == PK[10] and not TRUEENFOS ) or ( GetUnitTypeId(GetTriggerUnit()) == PK[9] and TRUEENFOS ) )
endfunction
function GMX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 10 )
endfunction
function GPX takes nothing returns boolean
return ( ST == false )
endfunction
function GQX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function GSX takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACav', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A08C')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A03R')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'Ansk', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'ACav', 2)
endif
if XT == 4 then
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'ACav')
call UnitRemoveAbility(GetTriggerUnit(), 'A03R')
call UnitRemoveAbility(GetTriggerUnit(), 'A01Z')
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 10) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function GUX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( ( GetUnitTypeId(GetTriggerUnit()) == PK[9] and not TRUEENFOS ) or ( GetUnitTypeId(GetTriggerUnit()) == PK[10] and TRUEENFOS ) )
endfunction
function GWX takes nothing returns boolean
return ( ModuloInteger(bj_forLoopAIndex, 40) == 9 )
endfunction
function GYX takes nothing returns boolean
return ( ST == false )
endfunction
function GZX takes nothing returns boolean
return ( (ST == false) ) // INLINED!!
endfunction
function G_X takes nothing returns nothing
if ( (ST == false) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('Ahea', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A0L0', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
call UnitRemoveAbility(GetTriggerUnit(), 'Ahea')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
call SetUnitAbilityLevel(GetTriggerUnit(), 'Ahea', 1)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 1)
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'Ahea', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'ANic')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'ANic')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
endif
else
call UnitRemoveAbility(GetTriggerUnit(), 'Ahea')
call UnitRemoveAbility(GetTriggerUnit(), 'SCae')
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (ModuloInteger(bj_forLoopAIndex, 40) == 9) ) then // INLINED!!
call UnitAddAbility(GetTriggerUnit(), PT[bj_forLoopAIndex])
call SetUnitAbilityLevelSwapped(PT[bj_forLoopAIndex], GetTriggerUnit(), XT)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function G1X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[11] )
endfunction
function G2X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACua', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Ambd', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'Ambd', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function G4X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[12] )
endfunction
function G5X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'ANic')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 3 then
call SetUnitAbilityLevel(GetTriggerUnit(), 'Ansk', 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BH', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function G7X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[13] )
endfunction
function G8X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A01T')
endif
if XT == 2 then
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 2)
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 3)
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), 3)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 3)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 4)
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), 4)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 4)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 3)
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 5)
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), 5)
call SetUnitAbilityLevel(GetTriggerUnit(), 'SCae', 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HVX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[14] )
endfunction
function HEX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ANbh', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A06P', GetTriggerUnit(), 100)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06O')
call UnitRemoveAbility(GetTriggerUnit(), 'ANic')
call UnitRemoveAbility(GetTriggerUnit(), 'ANbh')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06O')
endif
if XT == 4 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06P')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitRemoveAbility(GetTriggerUnit(), 'A06P')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HOX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[15] )
endfunction
function HRX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A01W', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A01T')
call UnitRemoveAbility(GetTriggerUnit(), 'A01W')
endif
if XT == 2 then
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A01W', GetTriggerUnit(), 2)
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), 3)
call SetUnitAbilityLevelSwapped('A01W', GetTriggerUnit(), 3)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call UnitAddAbility(GetTriggerUnit(), 'A0BM')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BM', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HAX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[16] )
endfunction
function HNX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACav', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A03R')
//call UnitRemoveAbility(GetTriggerUnit(),'A04H')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
//call UnitRemoveAbility(GetTriggerUnit(),'A04H')
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), 3)
call SetUnitAbilityLevelSwapped('ACav', GetTriggerUnit(), 3)
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
call UnitAddAbility(GetTriggerUnit(), 'A04H')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HCX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 ) and ( GetUnitTypeId(GetTriggerUnit()) == PK[17] )
endfunction
function HDX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A04K')
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), 2)
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), 3)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), 3)
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 4)
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), 4)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), 4)
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BH', 5)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 5)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 5)
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), 5)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HGX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[18] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function HHX takes nothing returns boolean
return ( XT == 1 )
endfunction
function HJX takes nothing returns nothing
if TRUEENFOS then
call UnitAddType(GetTriggerUnit(), UNIT_TYPE_TAUREN)
endif

call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A01R', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'SCae')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('A01R', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), 3)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'ANic')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'ANic')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
if ( (XT == 1) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HLX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[19] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function HMX takes nothing returns boolean
return ( XT == 1 )
endfunction
function HPX takes nothing returns boolean
return ( XT == 1 )
endfunction
function HQX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACev')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACev')
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), 3)
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), 3)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
if ( (XT == 1) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
if ( (XT == 1) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'A04R')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HTX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[20] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function HUX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'ACbn')
call UnitRemoveAbility(GetTriggerUnit(), 'A06N')
call UnitRemoveAbility(GetTriggerUnit(), 'Aspo')
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06N')
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), 3)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'Ambd')
call SetUnitAbilityLevelSwapped('Ambd', GetTriggerUnit(), 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function HYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[21] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function HZX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACcb', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACba', GetTriggerUnit(), XT)
if BRTON then
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
endif
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'ACnr')
call UnitRemoveAbility(GetTriggerUnit(), 'A08I')
call UnitRemoveAbility(GetTriggerUnit(), 'A08J')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 5)
call SetUnitAbilityLevelSwapped('A0BC', GetTriggerUnit(), 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function H0X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[22] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function H1X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Afbt', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A01R', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'Afbt')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A01R')
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 3 then
call SetUnitAbilityLevelSwapped('A01R', GetTriggerUnit(), 2)
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call SetUnitAbilityLevelSwapped('A0BH', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function H3X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[23] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function H4X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A0KP', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0KP')
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
call UnitRemoveAbility(GetTriggerUnit(), 'ACcs')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0KP')
call UnitRemoveAbility(GetTriggerUnit(), 'A04H')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'Absk')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function H6X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[24] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function H7X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACf2', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACcw', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06N')
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A06N')
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BM')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call UnitAddAbility(GetTriggerUnit(), 'A0BM')
call SetUnitAbilityLevelSwapped('A0BM', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function H9X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[26] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JVX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACpv', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'ANic')
call UnitRemoveAbility(GetTriggerUnit(), 'ACpv')
call UnitRemoveAbility(GetTriggerUnit(), 'Afzy')
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'ANic')
call UnitRemoveAbility(GetTriggerUnit(), 'ACpv')
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call SetUnitAbilityLevelSwapped('A0BH', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A0BC', GetTriggerUnit(), 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JXX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[27] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JOX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Afbt', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACcs')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACcs')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'Absk')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JIX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[28] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JAX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A037', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A037')
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A037')
call UnitRemoveAbility(GetTriggerUnit(), 'Ansk')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A03Z')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A01Z')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A03Z')
call UnitAddAbility(GetTriggerUnit(), 'A01Z')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 5)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JBX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[29] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JCX takes nothing returns boolean
return ( XT == 1 )
endfunction
function JDX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Apoi', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Ambd', GetTriggerUnit(), XT)
if XT == 1 then
call UnitAddAbility(GetTriggerUnit(), 'A0BK')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BK', 2)
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'Apoi')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'Apoi')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 3)
endif
if ( (XT == 1) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'A04R')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JGX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[30] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JHX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A01T')
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A01T')
call UnitRemoveAbility(GetTriggerUnit(), 'A08K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 2)
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BD')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BD', 3)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JKX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[31] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JLX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Ambd', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'ACcs')
call UnitRemoveAbility(GetTriggerUnit(), 'ACuf')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
call UnitRemoveAbility(GetTriggerUnit(), 'ACcs')
call UnitRemoveAbility(GetTriggerUnit(), 'ACuf')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call UnitAddAbility(GetTriggerUnit(), 'A0BM')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A0BM')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A04H')
call UnitAddAbility(GetTriggerUnit(), 'S009')
call UnitAddAbility(GetTriggerUnit(), 'A01X')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BM', 2)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A04P', 3)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JPX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[32] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JQX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACat', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'SCae')
call UnitRemoveAbility(GetTriggerUnit(), 'A0F6')
call UnitRemoveAbility(GetTriggerUnit(), 'ACuf')
call UnitRemoveAbility(GetTriggerUnit(), 'ACbl')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
call UnitRemoveAbility(GetTriggerUnit(), 'A0F6')
call UnitRemoveAbility(GetTriggerUnit(), 'ACuf')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'AEar')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'AEar')
call SetUnitAbilityLevel(GetTriggerUnit(), 'AEar', 3)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JTX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[33] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JUX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACac', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('SCae', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACac')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04K')
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'ACac')
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Afzy')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function JYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[35] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function JZX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACvp', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
call UnitRemoveAbility(GetTriggerUnit(), 'ACvp')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'S009')
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Afzy')
call UnitAddAbility(GetTriggerUnit(), 'A04K')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevel(GetTriggerUnit(), 'A0BC', 2)
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function J0X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[36] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function J1X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A037', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('AIcb', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
call UnitRemoveAbility(GetTriggerUnit(), 'A037')
call UnitRemoveAbility(GetTriggerUnit(), 'AIcb')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
call UnitRemoveAbility(GetTriggerUnit(), 'A037')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
call UnitAddAbility(GetTriggerUnit(), 'A04S')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function J3X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[37] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function J4X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A0EJ', GetTriggerUnit(), XT)
call SetUnitAbilityLevel(GetTriggerUnit(), 'A01R', XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EJ')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'AIsr')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EJ')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function J6X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[39] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function J7X takes nothing returns nothing
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EJ')
call UnitRemoveAbility(GetTriggerUnit(), 'ACev')
call UnitRemoveAbility(GetTriggerUnit(), 'ACct')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04S')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EJ')
call UnitRemoveAbility(GetTriggerUnit(), 'ACev')
call UnitRemoveAbility(GetTriggerUnit(), 'ACct')
call UnitRemoveAbility(GetTriggerUnit(), 'Ambd')
endif
if XT == 4 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
if XT == 5 then
call UnitAddAbility(GetTriggerUnit(), 'A04K')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function J9X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == PK[25] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KVX takes nothing returns boolean
return ( XT == 1 )
endfunction
function KEX takes nothing returns nothing
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACmi')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A08F')
call UnitRemoveAbility(GetTriggerUnit(), 'A083')
call UnitRemoveAbility(GetTriggerUnit(), 'ACmi')
call UnitRemoveAbility(GetTriggerUnit(), 'A08E')
endif
if XT == 4 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BH')
call UnitAddAbility(GetTriggerUnit(), 'A04S')
endif
if XT == 5 then
call SetUnitScale(GetTriggerUnit(), 1.5, 1.5, 1.5)
call UnitAddAbility(GetTriggerUnit(), 'Absk')
call UnitAddAbility(GetTriggerUnit(), 'A04S')
call UnitAddAbility(GetTriggerUnit(), 'A04P')
call UnitAddAbility(GetTriggerUnit(), 'A0BC')
call SetUnitAbilityLevelSwapped('A0BC', GetTriggerUnit(), 2)
call SetUnitAbilityLevelSwapped('A04P', GetTriggerUnit(), 3)
endif
if ( (XT == 1) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'A04R')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KOX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[4] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KRX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ANak', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KAX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[5] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KNX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KCX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[7] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KDX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACct', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KGX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[13] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KHX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A0EG', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KKX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[14] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KLX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACbh', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KPX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[15] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KQX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KTX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[16] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KUX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[17] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KYYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[8] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function KZZX takes nothing returns nothing
if XT == 1 or XT == 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0K9')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function KZX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACpv', GetTriggerUnit(), XT)
if XT == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'ACpv')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function K0X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[18] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function K0XX takes nothing returns boolean
return ( ( GetUnitTypeId(GetTriggerUnit()) == MC[9] and not TRUEENFOS ) or ( GetUnitTypeId(GetTriggerUnit()) == MC[10] and TRUEENFOS ) ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function K0XXX takes nothing returns boolean
return ( ( GetUnitTypeId(GetTriggerUnit()) == MC[10] and not TRUEENFOS ) or ( GetUnitTypeId(GetTriggerUnit()) == MC[9] and TRUEENFOS ) ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function K1X takes nothing returns boolean
return ( XT <= 2 )
endfunction
function K2X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACbh', GetTriggerUnit(), XT)
if ( (XT <= 2) ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function K2XX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A0L0', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function K2XXX takes nothing returns nothing
if TRUEENFOS then
call UnitAddAbility(GetTriggerUnit(), 'A0HS')
endif
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function K4X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[20] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function K5X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function K7X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[21] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function K8X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACcb', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LVX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[22] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LEX takes nothing returns nothing
if XT <= 2 then
call UnitRemoveAbility(GetTriggerUnit(), 'Absk')
endif
call SetUnitAbilityLevelSwapped('ACct', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LOX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[24] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LRX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AChv', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('ACcw', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LAX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[26] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LNX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACpv', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LCX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[27] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LDX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Afbt', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LGX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[28] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LHX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A037', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Ansk', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LKX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[29] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LLX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Apoi', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LPX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[30] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LQX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A01T', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LTX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[32] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LUX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function LYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[36] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function LZX takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A037', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function L0X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[37] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function L1X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('AIsr', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('A0EJ', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function L3X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[38] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function L4X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('ACsw', GetTriggerUnit(), XT)
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function L6X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == MC[39] ) and ( GetUnitAbilityLevelSwapped('A06Q', GetTriggerUnit()) == 0 )
endfunction
function L7X takes nothing returns nothing
call SetUnitAbilityLevelSwapped('Aspo', GetTriggerUnit(), XT)
call UnitAddAbility(GetTriggerUnit(), 'A06Q')
endfunction
function Trig_AMSettings_Func080002001001001 takes nothing returns boolean
return ( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER )
endfunction
function Trig_AMSettings_Func080002001001002 takes nothing returns boolean
return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_AMSettings_Func080002001001 takes nothing returns boolean
return GetBooleanAnd(( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER ), ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING ))
endfunction
function Trig_AMSettings_Func080002001002 takes nothing returns boolean
return ( IsPlayerAlly(GetFilterPlayer(), Player(0)) )
endfunction
function MVX takes nothing returns boolean
return GetBooleanAnd(( GetBooleanAnd(( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER ), ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )) ), ( IsPlayerAlly(GetFilterPlayer(), Player(0)) ))
endfunction
function Trig_AMSettings_Func081002001001001 takes nothing returns boolean
return ( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER )
endfunction
function Trig_AMSettings_Func081002001001002 takes nothing returns boolean
return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_AMSettings_Func081002001001 takes nothing returns boolean
return GetBooleanAnd(( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER ), ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING ))
endfunction
function Trig_AMSettings_Func081002001002 takes nothing returns boolean
return ( IsPlayerAlly(GetFilterPlayer(), Player(5)) )
endfunction
function MEX takes nothing returns boolean
return GetBooleanAnd(( GetBooleanAnd(( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER ), ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )) ), ( IsPlayerAlly(GetFilterPlayer(), Player(5)) ))
endfunction
function Trig_AMSettings_Func082002001001 takes nothing returns boolean
return ( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER )
endfunction
function Trig_AMSettings_Func082002001002 takes nothing returns boolean
return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function MXX takes nothing returns boolean
return GetBooleanAnd(( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER ), ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING ))
endfunction
function MOX takes nothing returns nothing
call LeaderboardAddItemBJ(GetEnumPlayer(), NS[1], GetPlayerName(GetEnumPlayer()), 0)
endfunction
function MRX takes nothing returns nothing
call LeaderboardAddItemBJ(GetEnumPlayer(), NS[2], GetPlayerName(GetEnumPlayer()), 0)
endfunction
function MIX takes nothing returns nothing
set PQ="% Badassery: "
set QQ[1]='E00Y'
set QQ[2]='E010'
set QQ[3]='E011'
set QQ[4]='E012'
set QQ[5]='E013'
set QQ[6]='E014'
set QQ[7]='E015'
set QQ[8]='E016'
set QQ[9]='E017'
set QQ[10]='E018'
set QQ[11]='E019'
set QQ[12]='E01A'
set QQ[13]='E01B'
set QQ[14]='E000'
set QQ[15]='E01C'
set QQ[16]='E01D'
set QQ[17]='E01E'
set QQ[18]='E01F'
set QQ[19]='E01G'
set QQ[20]='E01H'
set QQ[21]='E01J'
set QQ[22]='E01K'
set QQ[23]='E01L'
set QQ[24]='E01M'
set QQ[25]='E01N'
set QQ[26]='E01O'
set QQ[27]='E01P'
set QQ[28]='E01Q'
set QQ[29]='H00F'
set QQ[30]='U00Z'
set QQ[31]='U00O'
set QQ[32]='U003'
set QQ[33]='U00N'
set QQ[34]='N00D'
set QQ[35]='N01S'
set QQ[36]='E00E'
set QQ[37]='E004'
set QQ[38]='E006'
set QQ[39]='U004'
set QQ[40]='U000'
set QQ[41]='H01F'
set QQ[42]='N01M'
set QQ[43]='E00Q'
set QQ[44]='E00R'
set QQ[45]='E00U'
set QQ[46]='N01O'
set QQ[47]='N01Q'
set QQ[48]='O00B'
set QQ[49]='E01M'
set QQ[50]='E01I'
set QQ[51]='E01R'
set QQ[52]='O00E'
set QQ[53]='N03U'
set QQ[54]='E01X'
set QQ[55]='E01Y'
set QQ[56]='E01Z'
set QQ[57]='E020'
set SQ[1]="ReplaceableTextures\\CommandButtons\\BTNProudmoore.blp"
set SQ[2]="ReplaceableTextures\\CommandButtons\\BTNArthas.tga"
set SQ[3]="ReplaceableTextures\\CommandButtons\\BTNSorceress.tga"
set SQ[4]="ReplaceableTextures\\CommandButtons\\BTNBeastMaster.tga"
set SQ[5]="ReplaceableTextures\\CommandButtons\\BTNNagaSeaWitch.blp"
set SQ[6]="ReplaceableTextures\\CommandButtons\\BTNDwarfMonkPilgrim.blp"
set SQ[7]="ReplaceableTextures\\CommandButtons\\BTNChaosBlademaster.blp"
set SQ[8]="ReplaceableTextures\\CommandButtons\\BTNFireBrewmaster.blp"
set SQ[9]="ReplaceableTextures\\CommandButtons\\BTNAscensionBlade.blp"
set SQ[10]="ReplaceableTextures\\CommandButtons\\BTNGarithos.blp"
set SQ[11]="ReplaceableTextures\\CommandButtons\\BTNJaina.tga"
set SQ[12]="ReplaceableTextures\\CommandButtons\\BTNEarthBrewmaster.blp"
set SQ[13]="ReplaceableTextures\\CommandButtons\\BTNStormBrewmaster.blp"
set SQ[14]="ReplaceableTextures\\CommandButtons\\BTN_EyeOfShadows.blp"
set SQ[15]="ReplaceableTextures\\CommandButtons\\BTNTheCaptain.tga"
set SQ[16]="ReplaceableTextures\\CommandButtons\\BTNDarkTrollWarlord.blp"
set SQ[17]="ReplaceableTextures\\CommandButtons\\BTNSpellBreaker.tga"
set SQ[18]="ReplaceableTextures\\CommandButtons\\BTNAssassin.tga"
set SQ[19]="ReplaceableTextures\\CommandButtons\\BTNHuntress.blp"
set SQ[20]="ReplaceableTextures\\CommandButtons\\BTNHeroWarden.tga"
set SQ[21]="ReplaceableTextures\\CommandButtons\\BTNTauren.blp"
set SQ[22]="ReplaceableTextures\\CommandButtons\\BTNDruidOfTheTalon.blp"
set SQ[23]="ReplaceableTextures\\CommandButtons\\BTNHeroDemonHunter.tga"
set SQ[24]="ReplaceableTextures\\CommandButtons\\BTNEredarRed.blp"
set SQ[25]="ReplaceableTextures\\CommandButtons\\BTNMilitia.tga"
set SQ[26]="ReplaceableTextures\\CommandButtons\\BTNChaosWarlockGreen.tga"
set SQ[27]="ReplaceableTextures\\CommandButtons\\BTNHeroPaladin.blp"
set SQ[28]="ReplaceableTextures\\CommandButtons\\BTNHeroTinker.blp"
set SQ[29]="ReplaceableTextures\\CommandButtons\\BTNHeroMountainKing.blp"
set SQ[30]="ReplaceableTextures\\CommandButtons\\BTNRedDemon.blp"
set SQ[31]="ReplaceableTextures\\CommandButtons\\BTNLichVersion2.blp"
set SQ[32]="ReplaceableTextures\\CommandButtons\\BTNnagaWow1.blp"
set SQ[33]="ReplaceableTextures\\CommandButtons\\BTNWraith2.blp"
set SQ[34]="ReplaceableTextures\\CommandButtons\\BTNBansheeRanger.blp"
set SQ[35]="ReplaceableTextures\\CommandButtons\\BTNSylvanusWindrunner.blp"
set SQ[36]="ReplaceableTextures\\CommandButtons\\BTNTier1.blp"
set SQ[37]="ReplaceableTextures\\CommandButtons\\BTNbonecrusherGS.blp"
set SQ[38]="ReplaceableTextures\\CommandButtons\\BTNicons_4202_btn.blp"
set SQ[39]="ReplaceableTextures\\CommandButtons\\BTNicons_4953_btn.blp"
set SQ[40]="ReplaceableTextures\\CommandButtons\\BTNAetherConstructIcon.blp"
set SQ[41]="ReplaceableTextures\\CommandButtons\\BTNDragonKnight.blp"
set SQ[42]="ReplaceableTextures\\CommandButtons\\BTNBanshee.blp"
set SQ[43]="ReplaceableTextures\\CommandButtons\\BTNPitLord.blp"
set SQ[44]="ReplaceableTextures\\CommandButtons\\BTNvashjnew.blp"
set SQ[45]="ReplaceableTextures\\CommandButtons\\BTNHeroDullahanOmega.blp"
set SQ[46]="ReplaceableTextures\\CommandButtons\\BTN_CW_MagmaLord.blp"
set SQ[47]="ReplaceableTextures\\CommandButtons\\BTNratling.blp"
set SQ[48]="ReplaceableTextures\\CommandButtons\\BTNjezzail.blp"
set SQ[49]="ReplaceableTextures\\CommandButtons\\BTNclanicon.blp"
set SQ[50]="ReplaceableTextures\\CommandButtons\\BTNNzothIcon.blp"
set SQ[51]="ReplaceableTextures\\CommandButtons\\BTNT90SM.blp"
set SQ[52]="ReplaceableTextures\\CommandButtons\\BTNChomosuke.blp"
set SQ[53]="ReplaceableTextures\\CommandButtons\\BTNgreenarmysniper.blp"
set SQ[54]="ReplaceableTextures\\CommandButtons\\BTNTyrael.blp"
set SQ[55]="ReplaceableTextures\\CommandButtons\\BTNUntitledmecha.blp"
set SQ[56]="ReplaceableTextures\\CommandButtons\\BTNspartan.blp"
set SQ[57]="ReplaceableTextures\\CommandButtons\\BTNLordOfDarknessPurple1.blp"
set TQ=57
set WQ="Enfo FFB"
set YQ="West Side"
set ZQ="East Side"
call DestroyTrigger(R1)
endfunction
function MNX takes nothing returns nothing
if GetPlayerName(GetEnumPlayer()) == "Strikest#1504" or GetPlayerName(GetEnumPlayer()) == "Coffee#0217" or GetPlayerName(GetEnumPlayer()) == "tyreal#11180" or GetPlayerName(GetEnumPlayer()) == "Waffle(est)" or GetPlayerName(GetEnumPlayer()) == "Mike#22559" or GetPlayerName(GetEnumPlayer()) == "kicka55#21791" or GetPlayerName(GetEnumPlayer()) == "MokT#1639" or GetPlayerName(GetEnumPlayer()) == "Fabs#1762" or GetPlayerName(GetEnumPlayer()) == "dkang#1347" or GetPlayerName(GetEnumPlayer()) == "Vision#2578" or GetPlayerName(GetEnumPlayer()) == "SpeedMachine#11873" or GetPlayerName(GetEnumPlayer()) == "useless#1203" or GetPlayerName(GetEnumPlayer()) == "KindInMind#2657" or GetPlayerName(GetEnumPlayer()) == "DrunkPenguin#21498" or GetPlayerName(GetEnumPlayer()) == "Rat#21173" or GetPlayerName(GetEnumPlayer()) == "Fumandra#2247" or GetPlayerName(GetEnumPlayer()) == "UraharaNZ#1467" or GetPlayerName(GetEnumPlayer()) == "Loona#1398" or GetPlayerName(GetEnumPlayer()) == "DrunkCat#1765" then
if GetPlayerName(GetEnumPlayer()) == "Coffee#0217" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFFFF0303C|r|cFFFF1603o|r|cFFFF2903f|r|cFFFF3C03f|r|cFFFF5002e|r|cFFFF6302e|r|cFFFF7602_|r|cFFFF8902C|r|cFFFF9C02u|r|cFFFFAF02l|r|cFFFFC301t|r|cFFFFD601u|r|cFFFFE901r|r|cFFFFFC01e|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFFFF0303C|r|cFFFF1603o|r|cFFFF2903f|r|cFFFF3C03f|r|cFFFF5002e|r|cFFFF6302e|r|cFFFF7602_|r|cFFFF8902C|r|cFFFF9C02u|r|cFFFFAF02l|r|cFFFFC301t|r|cFFFFD601u|r|cFFFFE901r|r|cFFFFFC01e|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Fabs#1762" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c000041A4F|r|c005580C2a|r|c00AAC0E1b|r|c00FFFFFFs|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c000041A4F|r|c005580C2a|r|c00AAC0E1b|r|c00FFFFFFs|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Fumandra#2247" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00F2AED8F|r|c00F49ED3u|r|c00F68FCFm|r|c00F87FCAa|r|c00F970C5n|r|c00FB60C0d|r|c00FD51BCr|r|c00FF41B7a|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00F2AED8F|r|c00F49ED3u|r|c00F68FCFm|r|c00F87FCAa|r|c00F970C5n|r|c00FB60C0d|r|c00FD51BCr|r|c00FF41B7a|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Rat#21173" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
endif
if GetPlayerName(GetEnumPlayer()) == "DrunkCat#1765" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
endif

if GetPlayerName(GetEnumPlayer()) == "Loona#1398" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c02015DFFL|r|c01804A9Bo|r|c00FF3737o|r|c31FF2C71n|r|c62FF21ABa|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c02015DFFL|r|c01804A9Bo|r|c00FF3737o|r|c31FF2C71n|r|c62FF21ABa|r")
endif
if GetPlayerName(GetEnumPlayer()) == "UraharaNZ#1467" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0001FF90U|r|c000AF99Dr|r|c0013F3AAa|r|c001BEDB7h|r|c0024E6C4a|r|c002DE0D0r|r|c0036DADDa|r|c003ED4EAN|r|c0047CEF7Z|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0001FF90U|r|c000AF99Dr|r|c0013F3AAa|r|c001BEDB7h|r|c0024E6C4a|r|c002DE0D0r|r|c0036DADDa|r|c003ED4EAN|r|c0047CEF7Z|r")
endif
if GetPlayerName(GetEnumPlayer()) == "KindInMind#2657" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0007EAFFK|r|c0023ECFFi|r|c003EEFFFn|r|c005AF1FFd|r|c0075F3FFI|r|c0091F6FFn|r|c00ACF8FFM|r|c00C8FAFFi|r|c00E3FDFFn|r|c00FFFFFFd|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0007EAFFK|r|c0023ECFFi|r|c003EEFFFn|r|c005AF1FFd|r|c0075F3FFI|r|c0091F6FFn|r|c00ACF8FFM|r|c00C8FAFFi|r|c00E3FDFFn|r|c00FFFFFFd|r")
endif
if GetPlayerName(GetEnumPlayer()) == "DrunkPenguin#21498" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c002DFF01D|r|c002AFD18r|r|c0026FB2Fu|r|c0023F946n|r|c001FF75Dk|r|c001CF574P|r|c0018F48Ce|r|c0015F2A3n|r|c0011F0BAg|r|c000EEED1u|r|c000AECE8i|r|c0007EAFFn|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c002DFF01D|r|c002AFD18r|r|c0026FB2Fu|r|c0023F946n|r|c001FF75Dk|r|c001CF574P|r|c0018F48Ce|r|c0015F2A3n|r|c0011F0BAg|r|c000EEED1u|r|c000AECE8i|r|c0007EAFFn|r")
endif
if GetPlayerName(GetEnumPlayer()) == "tyreal#11180" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF20C000t|r|cFF44DA05y|r|cFF68F40Are|r|cFF44DA05a|r|cFF20C0001|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF20C000t|r|cFF44DA05y|r|cFF68F40Are|r|cFF44DA05a|r|cFF20C0001|r")
endif
if GetPlayerName(GetEnumPlayer()) == "MokT#1639" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00FF0101D|r|c00EA0116a|r|c00D4012Br|r|c00BF0041A|r|c00AA0056i|r|c0094006Be|r|c007F0080l|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00FF0101D|r|c00EA0116a|r|c00D4012Br|r|c00BF0041A|r|c00AA0056i|r|c0094006Be|r|c007F0080l|r")
endif
if GetPlayerName(GetEnumPlayer()) == "useless#1203" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00800000U|r|c00550000s|r|c002B0000e|r|c00000000l|r|c00320000e|r|c00640000s|r|c00960000s|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00800000U|r|c00550000s|r|c002B0000e|r|c00000000l|r|c00320000e|r|c00640000s|r|c00960000s|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Vision#2578" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00EC88C6V|r|c00BBA5FBi|r|c00C0B8FCs|r|c00C5CAFDi|r|c00CADDFEo|r|c00CFEFFFn|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00EC88C6V|r|c00BBA5FBi|r|c00C0B8FCs|r|c00C5CAFDi|r|c00CADDFEo|r|c00CFEFFFn|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Waffle(est)" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF214BF6W|r|cFF1C6AF6a|r|cFF1788F7f|r|cFF12A7F7f|r|cFF0DC5F8l|r|cFF08E4F8e|r|cFF0DC5F8(|r|cFF12A7F7e|r|cFF1788F7s|r|cFF1C6AF6t|r|cFF214BF6)|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF214BF6W|r|cFF1C6AF6a|r|cFF1788F7f|r|cFF12A7F7f|r|cFF0DC5F8l|r|cFF08E4F8e|r|cFF0DC5F8(|r|cFF12A7F7e|r|cFF1788F7s|r|cFF1C6AF6t|r|cFF214BF6)|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Mike#22559" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c006f0000C|r|c007e0034a|r|c008d0068l|r|c00800080uh|r|c00ab5556a|r|c00d5aa2bl|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c006f0000C|r|c007e0034a|r|c008d0068l|r|c00800080uh|r|c00ab5556a|r|c00d5aa2bl|r")
endif
if GetPlayerName(GetEnumPlayer()) == "kicka55#21791" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0000ff00k|r|c0025ff00i|r|c0049ff00c|r|c006eff00k|r|c0092ff00a|r|c00b7ff005|r|c00dbff005|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c0000ff00k|r|c0025ff00i|r|c0049ff00c|r|c006eff00k|r|c0092ff00a|r|c00b7ff005|r|c00dbff005|r")
endif
if GetPlayerName(GetEnumPlayer()) == "dkang#1347" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00ff9900D|r|c00c0a640a|r|c0080b380n|r|c0040c0c0k|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00ff9900D|r|c00c0a640a|r|c0080b380n|r|c0040c0c0k|r")
endif
if GetPlayerName(GetEnumPlayer()) == "SpeedMachine#11873" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00FF0101S|r|c00FF1E04p|r|c00FF3A07e|r|c00FF5709e|r|c00FF730Ce|r|c00FF900Fe|r|c00EAB007e|r|c00D6D000e|r|c006B6800e|r|c00000000d|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|c00FF0101S|r|c00FF1E04p|r|c00FF3A07e|r|c00FF5709e|r|c00FF730Ce|r|c00FF900Fe|r|c00EAB007e|r|c00D6D000e|r|c006B6800e|r|c00000000d|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Strikest#1504" then
if GetRandomInt(0, 100) >= 50 then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF08B7F2S|r|cFF2B9DF3t|r|cFF4D83F3r|r|cFF7069F4i|r|cFF934EF5k|r|cFFB634F6e|r|cFFD81AF6s|r|cFFFB00F7t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF08B7F2S|r|cFF2B9DF3t|r|cFF4D83F3r|r|cFF7069F4i|r|cFF934EF5k|r|cFFB634F6e|r|cFFD81AF6s|r|cFFFB00F7t|r")
else
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF540081S|r|cFF6B0082t|r|cFF830082r|r|cFF9A0083i|r|cFFB20183k|r|cFFC90184e|r|cFFE10184s|r|cFFF80185t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), "|cFF540081S|r|cFF6B0082t|r|cFF830082r|r|cFF9A0083i|r|cFFB20183k|r|cFFC90184e|r|cFFE10184s|r|cFFF80185t|r")
endif
endif
else
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), ( BS[( 1 + GetPlayerId(GetEnumPlayer()) )] + ( GetPlayerName(GetEnumPlayer()) + "|r" ) ))
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[1]) + 2 ), ( BS[( 1 + GetPlayerId(GetEnumPlayer()) )] + ( GetPlayerName(GetEnumPlayer()) + "|r" ) ))
endif
set WS[( 1 + GetPlayerId(GetEnumPlayer()) )]=YS
set CT[( 1 + GetPlayerId(GetEnumPlayer()) )]=( YS + 2 )
set YS=( YS + 1 )
endfunction
function MBX takes nothing returns nothing
if GetPlayerName(GetEnumPlayer()) != "Strikest#1504" and GetPlayerName(GetEnumPlayer()) != "Coffee#0217" and GetPlayerName(GetEnumPlayer()) != "tyreal#11180" and GetPlayerName(GetEnumPlayer()) != "Waffle(est)" and GetPlayerName(GetEnumPlayer()) != "Mike#22559" and GetPlayerName(GetEnumPlayer()) != "kicka55#21791" and GetPlayerName(GetEnumPlayer()) != "MokT#1639" and GetPlayerName(GetEnumPlayer()) != "Fabs#1762" and GetPlayerName(GetEnumPlayer()) != "dkang#1347" and GetPlayerName(GetEnumPlayer()) != "MokT#1639" and GetPlayerName(GetEnumPlayer()) != "Fabs#1762" and GetPlayerName(GetEnumPlayer()) != "Vision#2578" and GetPlayerName(GetEnumPlayer()) != "SpeedMachine#11873" and GetPlayerName(GetEnumPlayer()) != "useless#1203" and GetPlayerName(GetEnumPlayer()) != "KindInMind#2657" and GetPlayerName(GetEnumPlayer()) != "DrunkPenguin#21498" and GetPlayerName(GetEnumPlayer()) != "Rat#21173" and GetPlayerName(GetEnumPlayer()) != "Fumandra#2247" and GetPlayerName(GetEnumPlayer()) != "UraharaNZ#1467" and GetPlayerName(GetEnumPlayer()) != "Loona#1398" and GetPlayerName(GetEnumPlayer()) != "DrunkCat#1765" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), ( BS[( 1 + GetPlayerId(GetEnumPlayer()) )] + ( GetPlayerName(GetEnumPlayer()) + "|r" ) ))
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), ( BS[( 1 + GetPlayerId(GetEnumPlayer()) )] + ( GetPlayerName(GetEnumPlayer()) + "|r" ) ))
else
if GetPlayerName(GetEnumPlayer()) == "Coffee#0217" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFFFF0303C|r|cFFFF1603o|r|cFFFF2903f|r|cFFFF3C03f|r|cFFFF5002e|r|cFFFF6302e|r|cFFFF7602_|r|cFFFF8902C|r|cFFFF9C02u|r|cFFFFAF02l|r|cFFFFC301t|r|cFFFFD601u|r|cFFFFE901r|r|cFFFFFC01e|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFFFF0303C|r|cFFFF1603o|r|cFFFF2903f|r|cFFFF3C03f|r|cFFFF5002e|r|cFFFF6302e|r|cFFFF7602_|r|cFFFF8902C|r|cFFFF9C02u|r|cFFFFAF02l|r|cFFFFC301t|r|cFFFFD601u|r|cFFFFE901r|r|cFFFFFC01e|r")
endif
if GetPlayerName(GetEnumPlayer()) == "tyreal#11180" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF20C000t|r|cFF44DA05y|r|cFF68F40Are|r|cFF44DA05a|r|cFF20C0001|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF20C000t|r|cFF44DA05y|r|cFF68F40Are|r|cFF44DA05a|r|cFF20C0001|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Rat#21173" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
endif
if GetPlayerName(GetEnumPlayer()) == "DrunkCat#1765" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Loona#1398" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c02015DFFL|r|c01804A9Bo|r|c00FF3737o|r|c31FF2C71n|r|c62FF21ABa|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c02015DFFL|r|c01804A9Bo|r|c00FF3737o|r|c31FF2C71n|r|c62FF21ABa|r")
endif
if GetPlayerName(GetEnumPlayer()) == "UraharaNZ#1467" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0001FF90U|r|c000AF99Dr|r|c0013F3AAa|r|c001BEDB7h|r|c0024E6C4a|r|c002DE0D0r|r|c0036DADDa|r|c003ED4EAN|r|c0047CEF7Z|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0001FF90U|r|c000AF99Dr|r|c0013F3AAa|r|c001BEDB7h|r|c0024E6C4a|r|c002DE0D0r|r|c0036DADDa|r|c003ED4EAN|r|c0047CEF7Z|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Fumandra#2247" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00F2AED8F|r|c00F49ED3u|r|c00F68FCFm|r|c00F87FCAa|r|c00F970C5n|r|c00FB60C0d|r|c00FD51BCr|r|c00FF41B7a|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00F2AED8F|r|c00F49ED3u|r|c00F68FCFm|r|c00F87FCAa|r|c00F970C5n|r|c00FB60C0d|r|c00FD51BCr|r|c00FF41B7a|r")
endif
if GetPlayerName(GetEnumPlayer()) == "DrunkPenguin#21498" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c002DFF01D|r|c002AFD18r|r|c0026FB2Fu|r|c0023F946n|r|c001FF75Dk|r|c001CF574P|r|c0018F48Ce|r|c0015F2A3n|r|c0011F0BAg|r|c000EEED1u|r|c000AECE8i|r|c0007EAFFn|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c002DFF01D|r|c002AFD18r|r|c0026FB2Fu|r|c0023F946n|r|c001FF75Dk|r|c001CF574P|r|c0018F48Ce|r|c0015F2A3n|r|c0011F0BAg|r|c000EEED1u|r|c000AECE8i|r|c0007EAFFn|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Waffle(est)" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF214BF6W|r|cFF1C6AF6a|r|cFF1788F7f|r|cFF12A7F7f|r|cFF0DC5F8l|r|cFF08E4F8e|r|cFF0DC5F8(|r|cFF12A7F7e|r|cFF1788F7s|r|cFF1C6AF6t|r|cFF214BF6)|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF214BF6W|r|cFF1C6AF6a|r|cFF1788F7f|r|cFF12A7F7f|r|cFF0DC5F8l|r|cFF08E4F8e|r|cFF0DC5F8(|r|cFF12A7F7e|r|cFF1788F7s|r|cFF1C6AF6t|r|cFF214BF6)|r")
endif
if GetPlayerName(GetEnumPlayer()) == "KindInMind#2657" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0007EAFFK|r|c0023ECFFi|r|c003EEFFFn|r|c005AF1FFd|r|c0075F3FFI|r|c0091F6FFn|r|c00ACF8FFM|r|c00C8FAFFi|r|c00E3FDFFn|r|c00FFFFFFd|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0007EAFFK|r|c0023ECFFi|r|c003EEFFFn|r|c005AF1FFd|r|c0075F3FFI|r|c0091F6FFn|r|c00ACF8FFM|r|c00C8FAFFi|r|c00E3FDFFn|r|c00FFFFFFd|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Mike#22559" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c006f0000C|r|c007e0034a|r|c008d0068l|r|c00800080uh|r|c00ab5556a|r|c00d5aa2bl|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c006f0000C|r|c007e0034a|r|c008d0068l|r|c00800080uh|r|c00ab5556a|r|c00d5aa2bl|r")
endif
if GetPlayerName(GetEnumPlayer()) == "kicka55#21791" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0000ff00k|r|c0025ff00i|r|c0049ff00c|r|c006eff00k|r|c0092ff00a|r|c00b7ff005|r|c00dbff005|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c0000ff00k|r|c0025ff00i|r|c0049ff00c|r|c006eff00k|r|c0092ff00a|r|c00b7ff005|r|c00dbff005|r")
endif
if GetPlayerName(GetEnumPlayer()) == "useless#1203" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00800000U|r|c00550000s|r|c002B0000e|r|c00000000l|r|c00320000e|r|c00640000s|r|c00960000s|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00800000U|r|c00550000s|r|c002B0000e|r|c00000000l|r|c00320000e|r|c00640000s|r|c00960000s|r")
endif
if GetPlayerName(GetEnumPlayer()) == "MokT#1639" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00FF0101D|r|c00EA0116a|r|c00D4012Br|r|c00BF0041A|r|c00AA0056i|r|c0094006Be|r|c007F0080l|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00FF0101D|r|c00EA0116a|r|c00D4012Br|r|c00BF0041A|r|c00AA0056i|r|c0094006Be|r|c007F0080l|r")
endif
if GetPlayerName(GetEnumPlayer()) == "dkang#1347" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00ff9900D|r|c00c0a640a|r|c0080b380n|r|c0040c0c0k|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00ff9900D|r|c00c0a640a|r|c0080b380n|r|c0040c0c0k|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Vision#2578" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00EC88C6V|r|c00BBA5FBi|r|c00C0B8FCs|r|c00C5CAFDi|r|c00CADDFEo|r|c00CFEFFFn|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00EC88C6V|r|c00BBA5FBi|r|c00C0B8FCs|r|c00C5CAFDi|r|c00CADDFEo|r|c00CFEFFFn|r")
endif
if GetPlayerName(GetEnumPlayer()) == "Fabs#1762" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c000041A4F|r|c005580C2a|r|c00AAC0E1b|r|c00FFFFFFs|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c000041A4F|r|c005580C2a|r|c00AAC0E1b|r|c00FFFFFFs|r")
endif

if GetPlayerName(GetEnumPlayer()) == "SpeedMachine#11873" then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00FF0101S|r|c00FF1E04p|r|c00FF3A07e|r|c00FF5709e|r|c00FF730Ce|r|c00FF900Fe|r|c00EAB007e|r|c00D6D000e|r|c006B6800e|r|c00000000d|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|c00FF0101S|r|c00FF1E04p|r|c00FF3A07e|r|c00FF5709e|r|c00FF730Ce|r|c00FF900Fe|r|c00EAB007e|r|c00D6D000e|r|c006B6800e|r|c00000000d|r")
endif

if GetPlayerName(GetEnumPlayer()) == "Strikest#1504" then
if GetRandomInt(0, 100) >= 50 then
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF08B7F2S|r|cFF2B9DF3t|r|cFF4D83F3r|r|cFF7069F4i|r|cFF934EF5k|r|cFFB634F6e|r|cFFD81AF6s|r|cFFFB00F7t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF08B7F2S|r|cFF2B9DF3t|r|cFF4D83F3r|r|cFF7069F4i|r|cFF934EF5k|r|cFFB634F6e|r|cFFD81AF6s|r|cFFFB00F7t|r")
else
call MultiboardSetItemValueBJ(AS[1], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF540081S|r|cFF6B0082t|r|cFF830082r|r|cFF9A0083i|r|cFFB20183k|r|cFFC90184e|r|cFFE10184s|r|cFFF80185t|r")
call MultiboardSetItemValueBJ(AS[2], 1, ( LeaderboardGetPlayerIndexBJ(GetEnumPlayer(), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), "|cFF540081S|r|cFF6B0082t|r|cFF830082r|r|cFF9A0083i|r|cFFB20183k|r|cFFC90184e|r|cFFE10184s|r|cFFF80185t|r")
endif
endif
endif
set WS[( 1 + GetPlayerId(GetEnumPlayer()) )]=YS
set CT[( 1 + GetPlayerId(GetEnumPlayer()) )]=( YS + 2 )
set YS=( YS + 1 )
endfunction
function MCX takes nothing returns nothing
call TriggerRegisterPlayerEventLeave(N1, GetEnumPlayer())
endfunction
function MDX takes nothing returns nothing
set VS[1]=C4E(Condition(function MVX))
set VS[2]=C4E(Condition(function MEX))
set ES=C4E(Condition(function MXX))
set XS[1]="|cffff0303"
set XS[2]="|cff999999"
set OS=10
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=OS
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set RS=( RS + "l" )
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call CreateLeaderboardBJ(VS[1], "T1 LEADERBOARD")
call LeaderboardDisplayBJ(false, bj_lastCreatedLeaderboard)
set NS[1]=bj_lastCreatedLeaderboard
call CreateLeaderboardBJ(VS[2], "T2 LEADERBOARD")
call LeaderboardDisplayBJ(false, bj_lastCreatedLeaderboard)
set NS[2]=bj_lastCreatedLeaderboard
call ForForce(VS[1], function MOX)
call ForForce(VS[2], function MRX)
//call CreateMultiboardBJ(4,(CountPlayersInForceBJ(ES)+6),(WQ+(" [ "+((BS[1]+("0|r : "+(BS[7]+"00|r")))+("]"+("- "+RT))))))
call CreateMultiboardBJ(4, ( CountPlayersInForceBJ(ES) + 4 ), ( WQ + ( " [ " + ( ( BS[1] + ( "0|r : " + ( BS[7] + "00|r" ) ) ) + ( "]" + ( "- " + RT ) ) ) ) ))
call MultiboardDisplay(bj_lastCreatedMultiboard, false)
set AS[1]=bj_lastCreatedMultiboard
//call CreateMultiboardBJ(4,(CountPlayersInForceBJ(ES)+6),(WQ+(" [ "+((BS[1]+("0|r : "+(BS[7]+"00|r")))+("]"+("- "+RT))))))
call CreateMultiboardBJ(4, ( CountPlayersInForceBJ(ES) + 4 ), ( WQ + ( " [ " + ( ( BS[1] + ( "0|r : " + ( BS[7] + "00|r" ) ) ) + ( "]" + ( "- " + RT ) ) ) ) ))
call MultiboardDisplay(bj_lastCreatedMultiboard, false)
set AS[2]=bj_lastCreatedMultiboard
call MultiboardSetItemStyleBJ(AS[1], 0, 0, true, false)
call MultiboardSetItemStyleBJ(AS[2], 0, 0, true, false)
call MultiboardSetItemWidthBJ(AS[1], 0, 0, 9.)
call MultiboardSetItemWidthBJ(AS[2], 0, 0, 9.)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemColorBJ(AS[bj_forLoopAIndex], 2, 0, 80., 80., 80., 0)
call MultiboardSetItemColorBJ(AS[bj_forLoopAIndex], 3, 0, 80., 25., 15., 0)
call MultiboardSetItemColorBJ(AS[bj_forLoopAIndex], 4, 0, 10., 55., 10., 0)
call MultiboardSetItemColorBJ(AS[bj_forLoopAIndex], 0, 2, 100, 70., 70., 0)
call MultiboardSetItemColorBJ(AS[bj_forLoopAIndex], 0, ( CountPlayersInForceBJ(VS[1]) + 4 ), 70., 70., 100., 0)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call MultiboardSetItemValueBJ(AS[1], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[1], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if not LWMON then
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 2, 1, ( BS[9] + "L|r" ))
else
//call MultiboardSetItemWidthBJ(AS[bj_forLoopAIndex], 2, 1, 12. )
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 2, 1, ( BS[9] + "$$$|r" ))
endif
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 3, 1, ( BS[15] + "K|r" ))
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 4, 1, ( BS[15] + "D|r" ))
//call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex],1,(CountPlayersInForceBJ(ES)+6),PQ)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call ForForce(VS[1], function MNX)
set YS=( YS + 2 )
call ForForce(VS[2], function MBX)
set bj_forLoopBIndex=2
set bj_forLoopBIndexEnd=4
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemWidthBJ(AS[1], bj_forLoopBIndex, 0, 2.)
call MultiboardSetItemWidthBJ(AS[2], bj_forLoopBIndex, 0, 2.)
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
//call MultiboardSetItemValueBJ(AS[1],2,(CountPlayersInForceBJ(ES)+6),"0%")
//call MultiboardSetItemValueBJ(AS[2],2,(CountPlayersInForceBJ(ES)+6),"0%")
set bj_forLoopBIndex=2
set bj_forLoopBIndexEnd=( 2 + CountPlayersInForceBJ(VS[1]) )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemValueBJ(AS[1], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 4, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 4, bj_forLoopBIndex, "0")
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopBIndex=( CountPlayersInForceBJ(VS[1]) + 4 )
set bj_forLoopBIndexEnd=( CountPlayersInForceBJ(ES) + 4 )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemValueBJ(AS[1], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 4, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 4, bj_forLoopBIndex, "0")
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopAIndex=0
set bj_forLoopAIndexEnd=4
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( GetLocalPlayer() == Player(bj_forLoopAIndex) ) then
call MultiboardDisplay(AS[1], true)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=5
set bj_forLoopAIndexEnd=8
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( GetLocalPlayer() == Player(bj_forLoopAIndex) ) then
call MultiboardDisplay(AS[2], true)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call ForForce(ES, function MCX)
call EnableTrigger(A1)
call EnableTrigger(N1)
call EnableTrigger(B1)
call DestroyTrigger(I1)
call MultiboardDisplay(AS[1], true)
endfunction
function MGX takes nothing returns boolean
return ( DS )
endfunction
function MHX takes nothing returns boolean
return ( CS == 60 )
endfunction
function MJX takes nothing returns boolean
return ( CS >= 10 )
endfunction
function MKX takes nothing returns boolean
return ( GetUnitTypeId(MQ[( 1 + GetPlayerId(GetEnumPlayer()) )]) == QQ[bj_forLoopAIndex] )
endfunction
function MLX takes nothing returns nothing
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=TQ
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (GetUnitTypeId(MQ[( 1 + GetPlayerId(GetEnumPlayer()) )]) == QQ[bj_forLoopAIndex]) ) then // INLINED!!
set IS[( 1 + GetPlayerId(GetEnumPlayer()) )]=bj_forLoopAIndex
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction
function MMX takes nothing returns nothing
if ( (DS) ) then // INLINED!!
set CS=( CS + 1 )
endif
if ( (CS == 60) ) then // INLINED!!
set CS=0
set FS=( FS + 1 )
endif
if ( (CS >= 10) ) then // INLINED!!
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetTitleText(AS[bj_forLoopAIndex], ( WQ + ( " [" + ( ( BS[14] + ( ( I2S(FS) + "|r : " ) + ( BS[14] + ( ( I2S(CS) + "|r" ) + ( "] - " + RT ) ) ) ) ) + "" ) ) ))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
else
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetTitleText(AS[bj_forLoopAIndex], ( WQ + ( " [" + ( ( BS[14] + ( ( I2S(FS) + "|r : " ) + ( BS[14] + ( ( I2S(CS) + "|r" ) + ( "] - " + RT ) ) ) ) ) + "" ) ) ))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call ForForce(ES, function MLX)
endfunction
function MQX takes nothing returns nothing
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=4
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemColorBJ(AS[1], bj_forLoopAIndex, CT[( 1 + GetPlayerId(GetTriggerPlayer()) )], 20., 20., 20, 0)
call MultiboardSetItemColorBJ(AS[2], bj_forLoopAIndex, CT[( 1 + GetPlayerId(GetTriggerPlayer()) )], 20., 20., 20, 0)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call MultiboardSetItemValueBJ(AS[1], 1, CT[( 1 + GetPlayerId(GetTriggerPlayer()) )], ( ( "|cff333333" + GetPlayerName(GetTriggerPlayer()) ) + "|r" ))
call MultiboardSetItemValueBJ(AS[2], 1, CT[( 1 + GetPlayerId(GetTriggerPlayer()) )], ( ( "|cff333333" + GetPlayerName(GetTriggerPlayer()) ) + "|r" ))
endfunction
function MTX takes nothing returns boolean
return ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) ) != null
endfunction
function MUX takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0)) )
endfunction
function MWX takes nothing returns nothing
if not LWMON then
if ( (IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0))) ) then // INLINED!!
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 2, ( LeaderboardGetPlayerIndexBJ(GetOwningPlayer(GetTriggerUnit()), NS[1]) + 2 ), I2S(GetHeroLevel(GetTriggerUnit())))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
else
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 2, ( LeaderboardGetPlayerIndexBJ(GetOwningPlayer(GetTriggerUnit()), NS[2]) + ( CountPlayersInForceBJ(VS[1]) + 4 ) ), I2S(GetHeroLevel(GetTriggerUnit())))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
endif
endfunction
function MZX takes nothing returns boolean
return ( ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) ) and ( ( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) ) <= 10 ) ) != null
endfunction
function M_X takes nothing returns boolean
return ( (( ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) ) and ( ( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) ) <= 10 ) ) != null) ) // INLINED!!
endfunction
function M0X takes nothing returns boolean
return ( ( 1 + GetPlayerId(GetOwningPlayer(GetDyingUnit())) ) <= 5 )
endfunction
function M1X takes nothing returns nothing
if ( (( 1 + GetPlayerId(GetOwningPlayer(GetDyingUnit())) ) <= 5) ) then // INLINED!!
set HT[1]=( HT[1] + 1 )
else
set HT[2]=( HT[2] + 1 )
endif
set BT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=( BT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] + 1 )
call MultiboardSetItemValueBJ(AS[1], 4, CT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], I2S(BT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]))
call MultiboardSetItemValueBJ(AS[2], 4, CT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], I2S(BT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]))
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 4, 2, I2S(HT[1]))
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 4, ( CountPlayersInForceBJ(VS[1]) + 4 ), I2S(HT[2]))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction
function M3X takes nothing returns boolean
return ( ( GetOwningPlayer(GetTriggerUnit()) == Player(10) ) or ( GetOwningPlayer(GetTriggerUnit()) == Player(11) ) ) and GetPlayerController(GetOwningPlayer(GetKillingUnit())) == MAP_CONTROL_USER and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(GetKillingUnit()) and GetKillingUnit() != null
endfunction
function M4X takes nothing returns boolean
return ( (( ( GetOwningPlayer(GetTriggerUnit()) == Player(10) ) or ( GetOwningPlayer(GetTriggerUnit()) == Player(11) ) ) and GetPlayerController(GetOwningPlayer(GetKillingUnit())) == MAP_CONTROL_USER and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(GetKillingUnit()) and GetKillingUnit() != null) ) // INLINED!!
endfunction
function M5X takes nothing returns boolean
return ( ( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) ) <= 5 )
endfunction
function M6X takes nothing returns boolean
return ( ( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) ) <= 10 )
endfunction
function M7X takes nothing returns nothing
if ( (( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) ) <= 10) ) then // INLINED!!
if ( (( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) ) <= 5) ) then // INLINED!!
set GT[1]=( GT[1] + 1 )
else
set GT[2]=( GT[2] + 1 )
endif
set FT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=( FT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] + 1 )
call MultiboardSetItemValueBJ(AS[1], 3, CT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], I2S(FT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]))
call MultiboardSetItemValueBJ(AS[2], 3, CT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], I2S(FT[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]))
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 3, 2, I2S(GT[1]))
call MultiboardSetItemValueBJ(AS[bj_forLoopAIndex], 3, ( CountPlayersInForceBJ(VS[1]) + 4 ), I2S(GT[2]))
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
endfunction
function M9X takes nothing returns boolean
return ( SubStringBJ(GetEventPlayerChatString(), 10, 11) == I2S(( 1 + GetPlayerId(GetTriggerPlayer()) )) )
endfunction
function PVX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function PEX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function PXX takes nothing returns boolean
return ( WT[( 1 + GetPlayerId(GetTriggerPlayer()) )] == false )
endfunction
function POX takes nothing returns nothing
if ( (WT[( 1 + GetPlayerId(GetTriggerPlayer()) )] == false) ) then // INLINED!!
set WT[( 1 + GetPlayerId(GetTriggerPlayer()) )]=true
call DisplayTimedTextToForce(C4E(Condition(function PEX)), 10., "|cffffcc00You have been promoted to pick advanced heroes.|r")
else
call DisplayTimedTextToForce(C4E(Condition(function PVX)), 10., "|cffffcc00You already are promoted.|r")
endif
endfunction
function PIX takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function PAX takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function PNX takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function PBX takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function PCX takes nothing returns nothing
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., ( "West Side: " + I2S(CountUnitsInGroup(CUE(Player(11) , Condition(function PIX)))) ))
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,10.,("West 2: "+I2S(CountUnitsInGroup(CUE(Player(11),Condition(function PAX))))))
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., ( "East Side: " + I2S(CountUnitsInGroup(CUE(Player(10) , Condition(function PNX)))) ))
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,10.,("East 2: "+I2S(CountUnitsInGroup(CUE(Player(9),Condition(function PBX))))))
endfunction
function PFX takes nothing returns boolean
return ( IsUnitAliveBJ(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]) ) and ( OD[( 1 + GetPlayerId(GetTriggerPlayer()) )] == false ) and ( JT[( 1 + GetPlayerId(GetTriggerPlayer()) )] == false )
endfunction
function PGX takes nothing returns boolean
return ( VL[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null )
endfunction
function PHX takes nothing returns boolean
return ( PL[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null )
endfunction
function PJX takes nothing returns nothing
call RemoveUnit(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=null
set MT[( 1 + GetPlayerId(GetTriggerPlayer()) )]=0
set LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]=null
call CreateNUnitsAtLoc(1, 'ushd', GetTriggerPlayer(), GetPlayerStartLocationLoc(GetTriggerPlayer()), bj_UNIT_FACING)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), GetPlayerStartLocationLoc(GetTriggerPlayer()), .3)
if ( (VL[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null) ) then // INLINED!!
call KillUnit(VL[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set VL[( 1 + GetPlayerId(GetTriggerPlayer()) )]=null
endif
if ( (PL[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null) ) then // INLINED!!
call KillUnit(PL[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set PL[( 1 + GetPlayerId(GetTriggerPlayer()) )]=null
endif
endfunction
function PLX takes nothing returns boolean
return ( SubStringBJ(GetEventPlayerChatString(), 1, 5) == "-zoom" )
endfunction
function PMX takes nothing returns boolean
return ( SubStringBJ(GetEventPlayerChatString(), 7, StringLength(GetEventPlayerChatString())) == "" )
endfunction
function PPX takes nothing returns boolean
return ( WD >= 3000. )
endfunction
function PQX takes nothing returns boolean
return ( WD <= 500. )
endfunction
function PSX takes nothing returns nothing
if ( (SubStringBJ(GetEventPlayerChatString(), 7, StringLength(GetEventPlayerChatString())) == "") ) then // INLINED!!
return
endif
set WD=S2R(SubStringBJ(GetEventPlayerChatString(), 7, StringLength(GetEventPlayerChatString())))
call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, WD, .2)
if ( (WD >= 3000.) ) then // INLINED!!
call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 3000., .2)
set WD=3000.
endif
if ( (WD <= 500.) ) then // INLINED!!
call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 500., .2)
set WD=500.
endif
endfunction
function PUX takes nothing returns boolean
return ( not ( SubStringBJ(GetEventPlayerChatString(), 5, StringLength(GetEventPlayerChatString())) == "" or GetUnitTypeId(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]) != 'E011' ) )
endfunction
function PWX takes nothing returns nothing
local real r=S2R(SubStringBJ(GetEventPlayerChatString(), 5, StringLength(GetEventPlayerChatString())))
local real PYX=( I2R(GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A02E')) * 100. ) + 500.
if r <= 300. then
set r=300.
endif
if r >= PYX then
set r=PYX
endif
set CQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=r
call DisplayTextToPlayer(GetTriggerPlayer(), 0, 0, "Targeting range of Targeted Magic set to " + I2S(R2I(r)))
endfunction
function P_X takes nothing returns boolean
return ( SubStringBJ(GetEventPlayerChatString(), 8, StringLength(GetEventPlayerChatString())) == "" )
endfunction
function P0X takes nothing returns nothing
call SetUnitAcquireRange(GetEnumUnit(), YD)
endfunction
function P1X takes nothing returns nothing
call SetUnitAcquireRange(GetEnumUnit(), 60.)
endfunction
function P2X takes nothing returns boolean
return ( YD <= 60. )
endfunction
function P3X takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function P4X takes nothing returns nothing
if ( (SubStringBJ(GetEventPlayerChatString(), 8, StringLength(GetEventPlayerChatString())) == "") ) then // INLINED!!
return
endif
set YD=S2R(SubStringBJ(GetEventPlayerChatString(), 8, StringLength(GetEventPlayerChatString())))
set BK=CYE(GetTriggerPlayer())
call ForGroupBJ(BK, function P0X)
if ( (YD <= 60.) ) then // INLINED!!
call ForGroupBJ(BK, function P1X)
set YD=60.
endif
call DisplayTextToForce(C4E(Condition(function P3X)), ( "Acquisition Range set to " + R2S(YD) ))
call DestroyGroup(BK)
endfunction
function P6X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if UnitAlive(TDV[PXE]) then
call KillUnit(TDV[PXE])
endif
call HVE(PXE)
call ReleaseTimer(GetExpiredTimer())
set t=null
endfunction
function P7X takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=G9E()
set TDV[PXE]=LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 10., false, function P6X)
call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0, 0, 10., "Your hero will be killed in ten seconds.")
set t=null
endfunction
function P9X takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QVX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QEX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QXX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QOX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QRX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QIX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QAX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QNX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QBX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QCX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QDX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QFX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QGX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QHX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QJX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QKX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QLX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QMX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QPX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QQX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QSX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QTX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QUX takes nothing returns boolean
return ( GetTriggerPlayer() == GetFilterPlayer() )
endfunction
function QWX takes nothing returns nothing
call DisplayTimedTextToForce(C4E(Condition(function P9X)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QVX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QEX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QXX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QOX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QRX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QIX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QAX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QNX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QBX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QCX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QDX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QFX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QGX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QHX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QJX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QKX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QLX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QMX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QPX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QQX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QSX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QTX)), .01, " ")
call DisplayTimedTextToForce(C4E(Condition(function QUX)), .01, " ")
endfunction
function QZX takes nothing returns nothing
set DQ[1]='I009'
set FQ[1]='I008'
set HQ[1]='I007'
set GQ[1]='I000'
set DQ[2]='I00I'
set FQ[2]='I00H'
set HQ[2]='I00F'
set GQ[2]='I00W'
set DQ[3]='I00O'
set FQ[3]='I00O'
set HQ[3]='I00O'
set JQ[3]='I00O'
set GQ[3]='I012'
set DQ[4]='I00X'
set FQ[4]='I00Y'
set GQ[4]='I01L'
set DQ[5]='I00I'
set FQ[5]='I01M'
set GQ[5]='I01N'
set DQ[6]='I00S'
set FQ[6]='I002'
set HQ[6]='I00Q'
set JQ[6]='I00P'
set GQ[6]='I01Q'
set DQ[7]='I01Q'
set FQ[7]='I012'
set GQ[7]='I01R'
set DQ[8]='I007'
set FQ[8]='I007'
set HQ[8]='I007'
set GQ[8]='I01T'
set DQ[9]='I01T'
set FQ[9]='I000'
set GQ[9]='I01S'
set DQ[10]='I01S'
set FQ[10]='I024'
set GQ[10]='I01U'
set DQ[11]='I00Q'
set FQ[11]='I00Q'
set GQ[11]='I01V'
set DQ[12]='I01V'
set FQ[12]='I01V'
set GQ[12]='I01W'
set DQ[13]='I01L'
set FQ[13]='I012'
set GQ[13]='I01X'
set DQ[14]='I003'
set FQ[14]='I004'
set HQ[14]='I001'
set GQ[14]='I01Z'
set DQ[15]='I00M'
set FQ[15]='I00M'
set HQ[15]='I00M'
set JQ[15]='I00M'
set GQ[15]='I00Q'
set DQ[16]='I00N'
set FQ[16]='I00N'
set HQ[16]='I00N'
set JQ[16]='I00N'
set GQ[16]='I00P'
set DQ[17]='I00L'
set FQ[17]='I00L'
set HQ[17]='I00L'
set JQ[17]='I00L'
set GQ[17]='I002'
set DQ[18]='I00R'
set FQ[18]='I00R'
set HQ[18]='I00R'
set JQ[18]='I00R'
set GQ[18]='I00S'
set DQ[19]='I00E'
set FQ[19]='I01Y'
set GQ[19]='I020'
set DQ[20]='I00J'
set FQ[20]='I01Y'
set GQ[20]='I023'
set DQ[21]='I00F'
set FQ[21]='I028'
set GQ[21]='I027'
set DQ[22]='I00J'
set FQ[22]='I00N'
set HQ[22]='I00E'
set GQ[22]='I029'
set DQ[23]='I00H'
set FQ[23]='I002'
set HQ[23]='I00J'
set GQ[23]='I02A'
set DQ[24]='I00J'
set FQ[24]='I00Q'
set HQ[24]='I00J'
set GQ[24]='I02C'
set DQ[25]='I01S'
set FQ[25]='I00Q'
set GQ[25]='I02D'
set DQ[26]='I02D'
set FQ[26]='I02C'
set GQ[26]='I02E'
set DQ[27]='I02D'
set FQ[27]='I02D'
set GQ[27]='I02F'
set DQ[28]='I02E'
set FQ[28]='I00X'
set GQ[28]='I02G'
set DQ[29]='I005'
set FQ[29]='I009'
set HQ[29]='I02B'
set GQ[29]='I02H'
set DQ[30]='I00Z'
set FQ[30]='I02H'
set GQ[30]='I02I'
set DQ[31]='I01O'
set FQ[31]='I01O'
set HQ[31]='I00Z'
set GQ[31]='I02J'
set DQ[32]='I01Q'
set FQ[32]='I00Z'
set GQ[32]='I02K'
set DQ[33]='I01W'
set FQ[33]='I02L'
set HQ[33]='I00Q'
set GQ[33]='I02M'
set DQ[34]='I02M'
set FQ[34]='I00H'
set GQ[34]='I02N'
set DQ[35]='I02N'
set FQ[35]='I02N'
set HQ[35]='I02D'
set GQ[35]='I02O'
set DQ[36]='I002'
set FQ[36]='I002'
set HQ[36]='I002'
set JQ[36]='I00O'
set GQ[36]='I02S'
set DQ[37]='I01Z'
set FQ[37]='I002'
set GQ[37]='I02R'
set DQ[38]='I02R'
set FQ[38]='I02S'
set HQ[38]='I02S'
set JQ[38]='I010'
set KQ[38]='I010'
set GQ[38]='I02T'
set DQ[39]='I030'
set FQ[39]='I02T'
set HQ[39]='I00W'
set GQ[39]='I02V'
set DQ[40]='I00X'
set FQ[40]='I00X'
set HQ[40]='I02S'
set JQ[40]='I00W'
set GQ[40]='I02U'
set DQ[41]='I01N'
set FQ[41]='I01N'
set HQ[41]='I02A'
set GQ[41]='I02W'
set DQ[42]='I00D'
set FQ[42]='I00D'
set HQ[42]='I00E'
set JQ[42]='I00E'
set GQ[42]='I02Y'
set DQ[43]='I02S'
set FQ[43]='I02T'
set HQ[43]='I012'
set GQ[43]='I02Z'
set DQ[44]='I02S'
set FQ[44]='I00I'
set HQ[44]='I00I'
set GQ[44]='I030'
set DQ[45]='I00R'
set FQ[45]='I029'
set HQ[45]='I027'
set GQ[45]='I032'
set DQ[46]='I02R'
set FQ[46]='I01Q'
set HQ[46]='I00X'
set GQ[46]='I036'
set DQ[47]='I00E'
set FQ[47]='I00R'
set HQ[47]='I00S'
set GQ[47]='I037'
set DQ[48]='I002'
set FQ[48]='I02A'
set HQ[48]='I02A'
set GQ[48]='I038'
set DQ[49]='I002'
set FQ[49]='I03A'
set HQ[49]='I00L'
set GQ[49]='I039'
set DQ[50]='I039'
set FQ[50]='I039'
set HQ[50]='I012'
set GQ[50]='I03B'
set DQ[51]='I033'
set FQ[51]='I035'
set HQ[51]='I034'
set GQ[51]='I03C'
set DQ[52]='I02F'
set FQ[52]='I029'
set HQ[52]='I01Q'
set GQ[52]='I03D'
set DQ[53]='I00M'
set FQ[53]='I02D'
set HQ[53]='I02B'
set GQ[53]='I03E'
set DQ[54]='I00P'
set FQ[54]='I04N'
set HQ[54]='I00D'
set GQ[54]='I03F'
set DQ[55]='I002'
set FQ[55]='I00D'
set HQ[55]='I00H'
set GQ[55]='I03V'
set DQ[56]='I027'
set FQ[56]='I023'
set HQ[56]='I00H'
set JQ[56]='I00Q'
set KQ[56]='I00P'
set GQ[56]='I040'
set DQ[57]='I01M'
set FQ[57]='I023'
set HQ[57]='I00X'
set GQ[57]='I041'
set DQ[58]='I027'
set FQ[58]='I00N'
set HQ[58]='I00E'
set GQ[58]='I045'
set DQ[59]='I036'
set FQ[59]='I02S'
set HQ[59]='I02S'
set GQ[59]='I048'
set DQ[60]='I039'
set FQ[60]='I039'
set HQ[60]='I039'
set JQ[60]='I039'
set GQ[60]='I049'
set DQ[61]='I041'
set FQ[61]='I00X'
set HQ[61]='I00X'
set GQ[61]='I04A'
set DQ[62]='I02F'
set FQ[62]='I01W'
set HQ[62]='I01W'
set GQ[62]='I04B'
set DQ[63]='I00X'
set FQ[63]='I04B'
set HQ[63]='I04B'
set GQ[63]='I04C'
set DQ[64]='I04F'
set FQ[64]='I04F'
set HQ[64]='I04F'
set JQ[64]='I04F'
set GQ[64]='I04H'
set DQ[65]='I04B'
set FQ[65]='I01U'
set GQ[65]='I04I'
set DQ[66]='I04F'
set FQ[66]='I00N'
set HQ[66]='I00N'
set JQ[66]='I00N'
set GQ[66]='I04N'
set DQ[67]='I005'
set FQ[67]='I00L'
set HQ[67]='I00L'
set JQ[67]='I04H'
set GQ[67]='I04O'
set DQ[68]='I02S'
set FQ[68]='I01O'
set HQ[68]='I01O'
set JQ[68]='I04O'
set GQ[68]='I04P'
set DQ[69]='I00J'
set FQ[69]='I00M'
set HQ[69]='I00L'
set JQ[69]='I04F'
set GQ[69]='I04Q'
set DQ[70]='I02A'
set FQ[70]='I04Q'
set HQ[70]='I04Q'
set GQ[70]='I04R'
set DQ[71]='I020'
set FQ[71]='I00P'
set HQ[71]='I04N'
set GQ[71]='I04T'
set DQ[72]='I02E'
set FQ[72]='I04Q'
set HQ[72]='I04Q'
set GQ[72]='I04U'
set DQ[73]='I02E'
set FQ[73]='I01M'
set HQ[73]='I04B'
set GQ[73]='I04V'
set DQ[74]='I038'
set FQ[74]='I04H'
set HQ[74]='I04R'
set GQ[74]='I04W'
set DQ[75]='I03D'
set FQ[75]='I01Q'
set HQ[75]='I01Q'
set JQ[75]='I01Q'
set GQ[75]='I04Y'
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=75
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call WRE(( DQ[bj_forLoopAIndex] ) , ( FQ[bj_forLoopAIndex] ) , ( HQ[bj_forLoopAIndex] ) , ( JQ[bj_forLoopAIndex] ) , ( KQ[bj_forLoopAIndex] ) , ( LQ[bj_forLoopAIndex] ) , ( GQ[bj_forLoopAIndex] ) , "" , "" , false , 0)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction

function SEX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if QTE(TKV[PXE] , TLV[PXE] , TQV[PXE] , TSV[PXE]) < 60. or TTV[PXE] <= .0 then
call DestroyEffect(TWV[PXE])
call G8E(PXE)
call ReleaseTimer(t)
else
set TMV[PXE]=( ( ( TKV[PXE] ) * 1. ) + ( ( 60. ) * 1. ) * Cos(( ( TUV[PXE] ) * 1. ) * bj_DEGTORAD) )
set TPV[PXE]=( ( ( TLV[PXE] ) * 1. ) + ( ( 60. ) * 1. ) * Sin(( ( TUV[PXE] ) * 1. ) * bj_DEGTORAD) )
call SetUnitX(TJV[PXE], TMV[PXE])
call SetUnitY(TJV[PXE], TPV[PXE])
set TKV[PXE]=GetUnitX(TJV[PXE])
set TLV[PXE]=GetUnitY(TJV[PXE])
set TTV[PXE]=TTV[PXE] - 60.
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function SEX)
endif
set t=null
endfunction
function SXX takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=G7E()
set TJV[PXE]=GetTriggerUnit()
set TKV[PXE]=GetUnitX(TJV[PXE])
set TLV[PXE]=GetUnitY(TJV[PXE])
set TMV[PXE]=GetSpellTargetX()
set TPV[PXE]=GetSpellTargetY()
set TQV[PXE]=GetSpellTargetX()
set TSV[PXE]=GetSpellTargetY()
set TTV[PXE]=QTE(TKV[PXE] , TLV[PXE] , TMV[PXE] , TPV[PXE])
set TUV[PXE]=QUE(TKV[PXE] , TLV[PXE] , TMV[PXE] , TPV[PXE])
set TWV[PXE]=AddSpecialEffectTarget("war3mapImported\\ShadowRibbon.mdx", TJV[PXE], "chest")
call SetUnitAnimation(TJV[PXE], "spell")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function SEX)
set t=null
endfunction

function SRX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call SetUnitVertexColor(T0V[PXE], 255, 255, 255, 255)
call SetHeroAgi(T0V[PXE], GetHeroAgi(T0V[PXE], false) - T1V[PXE], true)
call UnitRemoveAbility(T0V[PXE], 'A09N')
call DestroyEffect(T2V[PXE])
call G6E(PXE)
call ReleaseTimer(t)
set t=null
endfunction
function SIX takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=G5E()
set T0V[PXE]=GetTriggerUnit()
set T1V[PXE]=GetHeroAgi(T0V[PXE], true) * GetUnitAbilityLevel(T0V[PXE], 'A09K')
set T2V[PXE]=AddSpecialEffectTarget("war3mapImported\\void.mdx", T0V[PXE], "chest")
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "origin"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "hand left"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "hand right"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "head"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "foot left"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadeMissile.mdx", T0V[PXE], "foot right"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadowCannon.mdx", T0V[PXE], "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PeterifyVer.2.mdx", T0V[PXE], "chest"))
call SetHeroAgi(T0V[PXE], GetHeroAgi(T0V[PXE], false) + T1V[PXE], true)
call SetUnitVertexColor(T0V[PXE], 50, 50, 50, 100)
call UnitAddAbility(T0V[PXE], 'A09N')
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 10. + ( 3 * GetUnitAbilityLevel(T0V[PXE], 'A09K') ), false, function SRX)
set t=null
endfunction
function SAX takes nothing returns nothing
//if GetSpellAbilityId()=='A09K' and 
if GetUnitAbilityLevel(GetTriggerUnit(), 'A09N') != 1 then
call SIX()
endif
//return false
endfunction





function SFX takes nothing returns boolean
return ( ZT == 0 )
endfunction
function SGX takes nothing returns boolean
return ( GetSpellTargetUnit() == null )
endfunction
function SHX takes nothing returns nothing
if GetUnitTypeId(GetSpellTargetUnit()) != 'E00E' then

if ( (ZT == 0) ) then // INLINED!!
call EnableTrigger(W1)
endif
if ( (GetSpellTargetUnit() == null) ) then // INLINED!!
set VU=( VU + 1 )
set ZT=( ZT + 1 )
set EU[VU]=true
set XU[VU]=GetTriggerUnit()
call SetUnitPathing(XU[VU], false)
set OU[VU]=1200.
set RU[VU]=GetUnitFacing(XU[VU])
else
set VU=( VU + 1 )
set ZT=( ZT + 1 )
set EU[VU]=true
set XU[VU]=GetSpellTargetUnit()
call SetUnitPathing(XU[VU], false)
if IsUnitEnemy(GetSpellTargetUnit(), GetOwningPlayer(GetTriggerUnit())) and IsUnitType(GetSpellTargetUnit(), UNIT_TYPE_HERO) then
set OU[VU]=425.
else
set OU[VU]=1200.
endif
set RU[VU]=GetUnitFacing(XU[VU])
endif

endif
endfunction
function SKX takes nothing returns boolean
return ( OU[IU] <= .0 ) or ( IsTerrainPathableBJ(NU, PATHING_TYPE_WALKABILITY) )
endfunction
function SLX takes nothing returns boolean
return ( ZT == 0 )
endfunction
function SMX takes nothing returns boolean
return ( (( OU[IU] <= .0 ) or ( IsTerrainPathableBJ(NU, PATHING_TYPE_WALKABILITY) )) ) // INLINED!!
endfunction
function SPX takes nothing returns boolean
return ( EU[IU] )
endfunction
function SQX takes nothing returns nothing
set IU=1
loop
exitwhen IU > VU
if ( (EU[IU]) ) then // INLINED!!
set AU=GetUnitLoc(XU[IU])
set NU=CNE(AU , 20. , RU[IU])
if ( (( OU[IU] <= .0 ) or ( IsTerrainPathableBJ(NU, PATHING_TYPE_WALKABILITY) )) ) then // INLINED!!
call SetUnitPathing(XU[IU], true)
set EU[IU]=false
set ZT=( ZT - 1 )
if ( (ZT == 0) ) then // INLINED!!
set VU=0
call DisableTrigger(GetTriggeringTrigger())
endif
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", GetUnitX(XU[IU]), GetUnitY(XU[IU])))
call RemoveLocation(AU)
call RemoveLocation(NU)
else
call SetUnitX(XU[IU], GetLocationX(NU))
call SetUnitY(XU[IU], GetLocationY(NU))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", GetUnitX(XU[IU]), GetUnitY(XU[IU])))
set OU[IU]=( OU[IU] - 20. )
call RemoveLocation(AU)
call RemoveLocation(NU)
endif
endif
set IU=IU + 1
endloop
endfunction
function STX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'E000' )
endfunction
function SUX takes nothing returns nothing
call KillUnit(PL[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set PL[bj_forLoopAIndex]=null
set TT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=false
endfunction
function SYX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if not UnitAlive(UCV[PXE]) then
call G0E(PXE)
call ReleaseTimer(GetExpiredTimer())
endif
if UDV[PXE] == .0 then
call SetUnitFlyHeight(UCV[PXE], .0, .0)
call UnitDamageTargetEx(UBV[PXE] , UCV[PXE] , ( I2R(GetUnitAbilityLevel(UBV[PXE], 'A062')) * 3 * GetHeroStr(UBV[PXE], true) ) + 250. + ( 650. * I2R(GetUnitAbilityLevel(UBV[PXE], 'A062')) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
call G0E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set UDV[PXE]=UDV[PXE] - 20.
call SetUnitFlyHeight(UCV[PXE], UDV[PXE], .0)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function SYX)
endif
set t=null
endfunction
function SZX takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if not UnitAlive(UCV[PXE]) then
call G0E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
if UDV[PXE] == 400. then
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function SYX)
else
if UDV[PXE] == .0 then
call UnitDamageTargetEx(UBV[PXE] , UCV[PXE] , ( I2R(GetUnitAbilityLevel(UBV[PXE], 'A062')) * GetHeroStr(UBV[PXE], true) * 1. ) + 200. + ( 350. * I2R(GetUnitAbilityLevel(UBV[PXE], 'A062')) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
endif
set UDV[PXE]=UDV[PXE] + 20.
call SetUnitFlyHeight(UCV[PXE], UDV[PXE], .0)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function SZX)
endif
endif
set t=null
endfunction
function S_X takes nothing returns boolean
local timer t
local integer PXE=G_E()
local unit u
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(OIV)) then
set u=CreateUnit(GetOwningPlayer(OIV), 'h007', GetUnitX(GetFilterUnit()), GetUnitY(GetFilterUnit()), .0)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitAddAbility(u, 'A05X')
call SetUnitAbilityLevel(u, 'A05X', GetUnitAbilityLevel(OIV, 'A062'))
call IssueTargetOrderById(u, 852095, GetFilterUnit())
set t=(NewTimerEx(0)) // INLINED!!
set UBV[PXE]=OIV
set UCV[PXE]=GetFilterUnit()
set UDV[PXE]=.0
if GetUnitAbilityLevel(UCV[PXE], 'Amrf') == 0 then
call UnitAddAbility(UCV[PXE], 'Amrf')
call UnitRemoveAbility(UCV[PXE], 'Amrf')
endif
call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdx", GetUnitX(UCV[PXE]), GetUnitY(UCV[PXE])))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function SZX)
else
call G0E(PXE)
endif
set t=null
set u=null
return false
endfunction
function S0X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real r=.0
local real x2
local real y2
if UXV[PXE] >= 1200. then
call G2E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
loop
exitwhen r == 360.
set x2=UOV[PXE] + UXV[PXE] * Cos(r * bj_DEGTORAD)
set y2=URV[PXE] + UXV[PXE] * Sin(r * bj_DEGTORAD)
call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget.mdx", x2, y2))
set OIV=UEV[PXE]
call GroupEnumUnitsInRange(ORV, x2, y2, 150., Filter(function S_X))
set r=r + ( 360. / 12. )
endloop
set UXV[PXE]=UXV[PXE] + 150.
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function S0X)
endif
set t=null
endfunction
function S1X takes nothing returns nothing
local unit u=GetTriggerUnit()
local real x=GetUnitX(u)
local real y=GetUnitY(u)
local integer PXE=G1E()
local timer t=(NewTimerEx(0)) // INLINED!!
set UEV[PXE]=u
set UXV[PXE]=150.
set UOV[PXE]=x
set URV[PXE]=y
set OIV=u
call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget.mdx", x, y))
call GroupEnumUnitsInRange(ORV, x, y, 150., Filter(function S_X))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .03, false, function S0X)
set t=null
set u=null
endfunction

function S3X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call SetUnitAbilityLevel(UJV[PXE], 'A05T', GetUnitAbilityLevel(UJV[PXE], 'A05T') - 1)
call GZE(PXE)
call ReleaseTimer(GetExpiredTimer())
set t=null
endfunction
function S4X takes nothing returns nothing
local timer t
local integer PXE
local unit u=GetTriggerUnit()
if GetRandomInt(0, 100) <= 33 then
if IsMechaSkaar[GetUnitUserData(u)] then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\LightningSphere_FX.mdx", u, "chest"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl", u, "chest"))
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EvilMissileofShadowyDOOMV3.mdx", u, "chest"))
endif
endif
if GetUnitAbilityLevel(u, 'A05T') < ( ( GetUnitAbilityLevel(u, 'A05Z') * 10 ) + 1 ) then
call SetUnitAbilityLevel(u, 'A05T', GetUnitAbilityLevel(u, 'A05T') + 1)
set t=(NewTimerEx(0)) // INLINED!!
set PXE=GYE()
set UJV[PXE]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, I2R(GetUnitAbilityLevel(u, 'A05Z')) * 2., false, function S3X)
endif
set t=null
set u=null
endfunction
function S5X takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'A05Z') != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and GetUnitAbilityLevel(GetTriggerUnit(), 'A05T') < 101 then
call S4X()
endif
return false
endfunction
function S6X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x1
local real x2
local real y1
local real y2
local real dx
local real dy
local real d
local real a
local real nx
local real ny
if not UnitAlive(UPV[PXE]) or not UnitAlive(UQV[PXE]) then
call UnitRemoveAbility(UQV[PXE], 'A05U')
call GWE(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set x1=GetUnitX(UPV[PXE])
set y1=GetUnitY(UPV[PXE])
set x2=GetUnitX(UQV[PXE])
set y2=GetUnitY(UQV[PXE])
set dx=x2 - x1
set dy=y2 - y1
set d=SquareRoot(dx * dx + dy * dy)
set a=Atan2(y2 - y1, x2 - x1) * bj_RADTODEG
if d <= 15. then
set nx=x1 + d * Cos(( a + 1. ) * bj_DEGTORAD)
set ny=y1 + d * Sin(( a + 1. ) * bj_DEGTORAD)
else
set nx=x1 + ( d - ( 1. ) ) * Cos(( a + 1. ) * bj_DEGTORAD)
set ny=y1 + ( d - ( 1. ) ) * Sin(( a + 1. ) * bj_DEGTORAD)
endif
call SetUnitPathing(UQV[PXE], false)
call SetUnitX(UQV[PXE], nx)
call SetUnitY(UQV[PXE], ny)
call SetUnitPathing(UQV[PXE], true)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function S6X)
endif
set t=null
endfunction
function S7X takes nothing returns boolean
local timer t
local integer PXE
local unit S8X=GetFilterUnit()
if IsUnitEnemy(S8X, GetOwningPlayer(OBV)) and UnitAlive(S8X) and GetUnitAbilityLevel(S8X, 'A05U') != 1 then
set t=(NewTimerEx(0)) // INLINED!!
set PXE=GUE()
set UPV[PXE]=OBV
set UQV[PXE]=S8X
set USV[PXE]=GetUnitAbilityLevel(ONV, 'A060')
call UnitAddAbility(S8X, 'A05U')
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function S6X)
endif
set S8X=null
set t=null
return false
endfunction
function S9X takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if not UnitAlive(UYV[PXE]) then
call GTE(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set OBV=UYV[PXE]
set ONV=UZV[PXE]
call GroupEnumUnitsInRange(OAV, U_V[PXE], U0V[PXE], 449., Filter(function S7X))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function S9X)
endif
set t=null
endfunction
function TVX takes nothing returns nothing
local unit u=GetTriggerUnit()
local unit s
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=GSE()
if IsMechaSkaar[GetUnitUserData(u)] then
set s=CreateUnit(GetOwningPlayer(u), 'h021', GetUnitX(u), GetUnitY(u), .0)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Stormfall.mdx", GetUnitX(u), GetUnitY(u)))
else
set s=CreateUnit(GetOwningPlayer(u), 'h00R', GetUnitX(u), GetUnitY(u), .0)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Desecrate2.mdx", GetUnitX(u), GetUnitY(u)))
endif
call SetUnitAbilityLevel(s, 'A05V', GetUnitAbilityLevel(u, 'A060'))
call UnitApplyTimedLife(s, 'BTLF', ( GetUnitAbilityLevel(u, 'A060') * 2 ) + 5.)
set ONV=u
set OBV=s
call GroupEnumUnitsInRange(OAV, GetUnitX(s), GetUnitY(s), 449., Filter(function S7X))
set UYV[PXE]=s
set UZV[PXE]=u
set U_V[PXE]=GetUnitX(s)
set U0V[PXE]=GetUnitY(s)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function S9X)
set t=null
set u=null
set s=null
endfunction


function TNX takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A09C')
call SetUnitAbilityLevelSwapped('A09C', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852189, GetTriggerUnit())
endfunction
function Trig_Eggsacks_Func004001 takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'h00S' )
endfunction
function Trig_Eggsacks_Func004002 takes nothing returns boolean
return ( IsUnitEnemy(GetKillingUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function TCX takes nothing returns boolean
return ( GetBooleanAnd(( GetUnitTypeId(GetTriggerUnit()) == 'h00S' ), ( IsUnitEnemy(GetKillingUnit(), GetOwningPlayer(GetTriggerUnit())) )) )
endfunction
function TDX takes nothing returns nothing
set XK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'n03M', GetOwningPlayer(GetTriggerUnit()), XK, bj_UNIT_FACING)
call RemoveLocation(XK)
endfunction

function THX takes nothing returns nothing
local real x1=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(.0 * bj_DEGTORAD)
local real y1=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(.0 * bj_DEGTORAD)
local real x2=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(45. * bj_DEGTORAD)
local real y2=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(45. * bj_DEGTORAD)
local real x3=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(90. * bj_DEGTORAD)
local real y3=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(90. * bj_DEGTORAD)
local real x4=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(135. * bj_DEGTORAD)
local real y4=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(135. * bj_DEGTORAD)
local real x5=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(180. * bj_DEGTORAD)
local real y5=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(180. * bj_DEGTORAD)
local real x6=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(225. * bj_DEGTORAD)
local real y6=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(225. * bj_DEGTORAD)
local real x7=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(270. * bj_DEGTORAD)
local real y7=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(270. * bj_DEGTORAD)
local real x8=GetUnitX(GetSpellTargetUnit()) + 150. * Cos(315. * bj_DEGTORAD)
local real y8=GetUnitY(GetSpellTargetUnit()) + 150. * Sin(315. * bj_DEGTORAD)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x1, y1, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x2, y2, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x3, y3, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x4, y4, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x5, y5, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x6, y6, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x7, y7, 270.)
call CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h00S', x8, y8, 270.)
endfunction
constant function TKX takes integer DZX returns real
return 3.
endfunction
function TLX takes unit c,unit u returns boolean
if GetUnitState(u, UNIT_STATE_LIFE) > .0 then
if IsUnitType(u, UNIT_TYPE_FLYING) == false then
if GetUnitAbilityLevel(u, 'Avul') <= 0 then
if IsUnitEnemy(u, GetOwningPlayer(c)) then
return IsUnitType(u, UNIT_TYPE_STRUCTURE) == false
endif
endif
endif
endif
return false
endfunction
function TMX takes nothing returns boolean
return GetUnitTypeId(GetAttacker()) == 'n02F'
endfunction
function TPX takes nothing returns nothing
local integer DGE=0
local integer id
loop
exitwhen DGE == WXV
set id=NEE[DGE]
set WIV[NXE[id]]=WIV[NXE[id]] + .5
if WIV[NXE[id]] >= WRV[NXE[id]] then
call UnitRemoveAbility(WOV[NXE[id]], 'A068')
call MNE(WOV[NXE[id]])
set WOV[NXE[id]]=null
call GME(NXE[id])
set WXV=WXV - 1
set NEE[DGE]=NEE[WXV]
elseif not PZE(WOV[NXE[id]]) then
call UnitRemoveAbility(WOV[NXE[id]], 'A068')
call MNE(WOV[NXE[id]])
set WOV[NXE[id]]=null
call GME(NXE[id])
set WXV=WXV - 1
set NEE[DGE]=NEE[WXV]
else
set DGE=DGE + 1
endif
endloop
if WXV == 0 then
call PauseTimer(WEV)
endif
endfunction
function TQX takes unit TSX,real CIE,integer DZX returns nothing
local integer DGE
if WXV == 0 then
call TimerStart(WEV, .5, true, function TPX)
endif
if GetUnitAbilityLevel(TSX, 'A068') > 0 then
set DGE=( LoadInteger(Q, GetHandleId(( TSX )), 0) )
call UnitRemoveAbility(TSX, 'A068')
else
call MAE(TSX)
set DGE=( LoadInteger(Q, GetHandleId(( TSX )), 0) )
set NXE[DGE]=GLE()
set NEE[WXV]=DGE
set WXV=WXV + 1
endif
set WOV[NXE[DGE]]=TSX
set WRV[NXE[DGE]]=CIE
set WIV[NXE[DGE]]=.0
call UnitAddAbility(TSX, 'A068')
call SetUnitAbilityLevel(TSX, 'A068', DZX)
endfunction
function TTX takes integer D0E returns nothing
local integer DZX
local real z
local real cx
local real cy
local real cz
local real UEE
set WJV[D0E]=WJV[D0E] + 40.
if WKV[D0E] >= WJV[D0E] and GetUnitState(WDV[D0E], UNIT_STATE_LIFE) > .0 then
set cx=GetUnitX(WDV[D0E])
set cy=GetUnitY(WDV[D0E])
set cz=PTE(cx , cy)
set WLV[D0E]=WLV[D0E] + WPV[D0E]
set WMV[D0E]=WMV[D0E] + WQV[D0E]
set z=PTE(WLV[D0E] , WMV[D0E])
set UEE=PUE(WSV[WTV[D0E] + 1] , WSV[WTV[D0E]] , WSV[WTV[D0E] + 2] , WJV[D0E] / WKV[D0E]) + ( WSV[WTV[D0E]] - z )
call MoveLightningEx(WGV[D0E], true, cx, cy, cz + 100., WLV[D0E], WMV[D0E], UEE + 55. + z)
call SetUnitPosition(WCV[D0E], WLV[D0E], WMV[D0E])
call SetUnitFlyHeight(WCV[D0E], UEE, 0)
else
if IsUnitEnemy(WCV[D0E], GetOwningPlayer(WDV[D0E])) then
set DZX=GetUnitAbilityLevel(WDV[D0E], 'A069')
call TQX(WCV[D0E] , TKX(1) , 1)
call UnitDamageTarget(WDV[D0E], WCV[D0E], GetUnitState(WCV[D0E], UNIT_STATE_LIFE) / 5., true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
call SpiderPoison_PoisonUnit(WDV[D0E] , WCV[D0E])
endif
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", WLV[D0E], WMV[D0E]))
//call DestroyEffect(AddSpecialEffect("Doodads\\Dungeon\\Terrain\\EggSack\\EggSack1.mdl",WLV[D0E],WMV[D0E]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Blood Massacre.mdx", WLV[D0E], WMV[D0E]))
call SetUnitPathing(WCV[D0E], true)
if GetUnitTypeId(WCV[D0E]) != 'U003' then
call SetUnitFlyHeight(WCV[D0E], GetUnitDefaultFlyHeight(WCV[D0E]), 250.)
else
call SetUnitFlyHeight(WCV[D0E], 0., 250.)
endif
set WYV[D0E]=false
endif
endfunction
function TUX takes integer D0E returns nothing
call DestroyEffect(WFV[D0E])
call DestroyLightning(WGV[D0E])
set WCV[D0E]=null
set WDV[D0E]=null
set WFV[D0E]=null
call GKE(D0E)
endfunction
function TWX takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == WWV
if not WZV[NOE[DGE]] then
if WYV[NOE[DGE]] then
call TTX(NOE[DGE])
set DGE=DGE + 1
else
call TUX(NOE[DGE])
set WWV=WWV - 1
set NOE[DGE]=NOE[WWV]
endif
else
set DGE=DGE + 1
endif
endloop
if WWV == 0 then
call PauseTimer(WUV)
endif
endfunction
function TYX takes integer PXE returns integer
if WWV == 0 then
call TimerStart(WUV, .03, true, function TWX)
endif
set NOE[WWV]=PXE
set WYV[NOE[WWV]]=true
set WZV[NOE[WWV]]=false
set WWV=WWV + 1
return WWV
endfunction
function TZX takes integer D0E returns nothing
if YXV[D0E] > 0 then
set W5V[D0E]=W5V[D0E] + W9V[D0E]
set W6V[D0E]=W6V[D0E] + YVV[D0E]
set YXV[D0E]=YXV[D0E] - 25.
call MoveLightningEx(W4V[D0E], true, W5V[D0E], W6V[D0E], YEV[D0E], W7V[D0E], W8V[D0E], YEV[D0E])
call DestroyEffect(W3V[D0E])
set W3V[D0E]=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageDeathCaster.mdl", W2V[D0E], "chest")
else
set YIV[D0E]=false
endif
endfunction
function T_X takes integer D0E returns nothing
call DestroyEffect(W3V[D0E])
call RemoveUnit(W2V[D0E])
call DestroyLightning(W4V[D0E])
set W3V[D0E]=null
set W2V[D0E]=null
set W4V[D0E]=null
call GHE(D0E)
endfunction
function T0X takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == YRV
if not YAV[NRE[DGE]] then
if YIV[NRE[DGE]] then
call TZX(NRE[DGE])
set DGE=DGE + 1
else
call T_X(NRE[DGE])
set YRV=YRV - 1
set NRE[DGE]=NRE[YRV]
endif
else
set DGE=DGE + 1
endif
endloop
if YRV == 0 then
call PauseTimer(YOV)
endif
endfunction
function T1X takes integer PXE returns integer
if YRV == 0 then
call TimerStart(YOV, .03, true, function T0X)
endif
set NRE[YRV]=PXE
set YIV[NRE[YRV]]=true
set YAV[NRE[YRV]]=false
set YRV=YRV + 1
return YRV
endfunction
function T2X takes integer D0E returns nothing
local integer T3X
local integer T4X
local real x=GetUnitX(YJV[D0E])
local real y=GetUnitY(YJV[D0E])
local real tx
local real ty
local real z
local real CDE=Atan2(YFV[D0E] - y, YDV[D0E] - x)
local boolean T5X=false
local unit t
local unit a
local group g
set YDV[D0E]=YDV[D0E] + 25. * Cos(CDE)
set YFV[D0E]=YFV[D0E] + 25. * Sin(CDE)
set YHV[D0E]=PPE(YDV[D0E] , YFV[D0E] , x , y)
set z=PTE(YDV[D0E] , YFV[D0E])
call MoveLightningEx(YMV[D0E], true, x, y, YGV[D0E], YDV[D0E], YFV[D0E], YGV[D0E])
call PME(YKV[D0E])
call SetUnitFlyHeight(YKV[D0E], YGV[D0E] - z, 0)
call SetUnitX(YKV[D0E], YDV[D0E])
call SetUnitY(YKV[D0E], YFV[D0E])
call SetUnitFacing(YKV[D0E], CDE * 57.2957795)
set g=PSE(150. , YDV[D0E] , YFV[D0E])
call GroupRemoveUnit(g, YJV[D0E])
call GroupRemoveUnit(g, YKV[D0E])
loop
set a=FirstOfGroup(g)
exitwhen a == null
call GroupRemoveUnit(g, a)
if TLX(YJV[D0E] , a) then
set t=a
set T5X=true
endif
endloop
if YHV[D0E] >= 1350. or not RectContainsCoords(OGV, YDV[D0E], YFV[D0E]) or UnitAlive(YJV[D0E]) == false then
set T3X=GGE()
set W2V[T3X]=YKV[D0E]
set W3V[T3X]=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageDeathCaster.mdl", YKV[D0E], "chest")
set W4V[T3X]=YMV[D0E]
set W5V[T3X]=x
set W6V[T3X]=y
set W9V[T3X]=25. * Cos(CDE)
set YVV[T3X]=25. * Sin(CDE)
set W7V[T3X]=YDV[D0E]
set W8V[T3X]=YFV[D0E]
set YEV[T3X]=YGV[D0E]
set YXV[T3X]=PPE(x , y , YDV[D0E] , YFV[D0E])
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl", YJV[D0E], "origin"))
call SetUnitFlyHeight(YKV[D0E], YGV[D0E] - z, 0)
call SetUnitX(YKV[D0E], YDV[D0E])
call SetUnitY(YKV[D0E], YFV[D0E])
call T1X(T3X)
set YSV[D0E]=false
elseif T5X then
set T4X=GJE()
set WCV[T4X]=t
set WDV[T4X]=YJV[D0E]
set WJV[T4X]=.0
set WGV[T4X]=YMV[D0E]
set WHV[T4X]=GetUnitState(t, UNIT_STATE_LIFE) / 4
set WLV[T4X]=GetUnitX(t)
set WMV[T4X]=GetUnitY(t)
set tx=x + OFV * Cos(CDE)
set ty=y + OFV * Sin(CDE)
set CDE=Atan2(ty - WMV[T4X], tx - WLV[T4X])
set WPV[T4X]=40. * Cos(CDE)
set WQV[T4X]=40. * Sin(CDE)
set WKV[T4X]=PPE(WLV[T4X] , WMV[T4X] , tx , ty)
set WSV[WTV[T4X]]=GetUnitDefaultFlyHeight(t) + PTE(WLV[T4X] , WMV[T4X])
set WSV[WTV[T4X] + 1]=( ( ( WKV[T4X] ) * 1. ) * .2 )
set WSV[WTV[T4X] + 2]=PTE(tx , ty)
set WFV[T4X]=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Web\\Web_AirTarget.mdl", t, "chest")
call PME(t)
call TYX(T4X)
call RemoveUnit(YKV[D0E])
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl", YJV[D0E], "origin"))
call SetUnitPathing(t, false)
set YSV[D0E]=false
set t=null
endif
set g=null
endfunction
function T6X takes integer D0E returns nothing
call DestroyEffect(YLV[D0E])
set YJV[D0E]=null
set YKV[D0E]=null
set YLV[D0E]=null
set YMV[D0E]=null
call GFE(D0E)
endfunction
function T7X takes nothing returns nothing
local integer DGE=0
loop
exitwhen DGE == YQV
if not YTV[NIE[DGE]] then
if YSV[NIE[DGE]] then
call T2X(NIE[DGE])
set DGE=DGE + 1
else
call T6X(NIE[DGE])
set YQV=YQV - 1
set NIE[DGE]=NIE[YQV]
endif
else
set DGE=DGE + 1
endif
endloop
if YQV == 0 then
call PauseTimer(YPV)
endif
endfunction
function T8X takes integer PXE returns integer
if YQV == 0 then
call TimerStart(YPV, .03, true, function T7X)
endif
set NIE[YQV]=PXE
set YSV[NIE[YQV]]=true
set YTV[NIE[YQV]]=false
set YQV=YQV + 1
return YQV
endfunction
function T9X takes nothing returns nothing
local real a= GetUnitFacing(GetTriggerUnit())
local real lx=GetUnitX(GetTriggerUnit()) + 70. * Cos(a * bj_DEGTORAD)
local real ly=GetUnitY(GetTriggerUnit()) + 70. * Sin(a * bj_DEGTORAD)
local integer YXE=GDE()
local real CDE
local real x
local real y
local real z
set YJV[YXE]=GetAttacker()
set x=GetUnitX(YJV[YXE])
set y=GetUnitY(YJV[YXE])
set CDE=Atan2(ly - y, lx - x)
set YDV[YXE]=x + 25. * Cos(CDE)
set YFV[YXE]=y + 25. * Sin(CDE)
set z=PTE(YDV[YXE] , YFV[YXE])
set YGV[YXE]=GetUnitDefaultFlyHeight(YJV[YXE]) + 100. + z
set YHV[YXE]=.0
set YMV[YXE]=AddLightningEx("LEAS", true, YDV[YXE], YFV[YXE], YGV[YXE], YDV[YXE], YFV[YXE], YGV[YXE])
call SetLightningColor(YMV[YXE], 1., .1, .15, .82)
set YKV[YXE]=CreateUnit(Player(14), 'h007', YDV[YXE], YFV[YXE], CDE * 57.2957795)
set YLV[YXE]=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Web\\Webmissile.mdl", YKV[YXE], "chest")
call PME(YKV[YXE])
call SetUnitFlyHeight(YKV[YXE], YGV[YXE] - z, 0)
call SetUnitX(YKV[YXE], YDV[YXE])
call SetUnitY(YKV[YXE], YFV[YXE])
call T8X(YXE)
endfunction
function UVX takes nothing returns boolean
return ( GetUnitTypeId(GetAttacker()) == 'H009' )
endfunction
function UEX takes nothing returns boolean
return ( GetRandomInt(1, 100) >= 50 )
endfunction
function UXX takes nothing returns nothing
if ( (GetRandomInt(1, 100) >= 50) ) then // INLINED!!
set XK=GetUnitLoc(GetTriggerUnit())
call IssuePointOrderByIdLoc(GetAttacker(), 852555, XK)
call RemoveLocation(XK)
else
call IssueImmediateOrderById(GetAttacker(), 852599)
endif
endfunction
function URX takes nothing returns nothing
local unit k=GetKillingUnit()
local real x=GetUnitX(k)
local real y=GetUnitY(k)
local integer i=1
local integer p
local real f=GetUnitFacing(k)
local unit u
loop
exitwhen i == 41
if MC[i] == GetUnitTypeId(k) then
set p=GetPlayerId(GetOwningPlayer(k))
call SetUnitOwner(k, Player(PLAYER_NEUTRAL_PASSIVE), true)
call ShowUnit(k, false)
call KillUnit(k)
set u=CreateUnit(Player(p), PK[i], x, y, f)
call DestroyEffect(AddSpecialEffect("war3mapImported\\ChaosExplosion.mdx", x, y))
call UnitAddAbility(u, 'S004')
endif
set i=i + 1
endloop
set i=0
loop
exitwhen i == 41
if PK[i] == GetUnitTypeId(k) then
call ZUE(k , 100.)
call DestroyEffect(AddSpecialEffect("BigBloodEX-NoSplat-NoGutz.mdx", x, y))
//call UnitAddAbility(k,'S004')
endif
set i=i + 1
endloop
if GetUnitAbilityLevel(k, 'S004') > 0 then
call SetUnitAbilityLevel(k, 'S004', GetUnitAbilityLevel(k, 'S004') + 1)
else
call UnitAddAbility(k, 'S004')
endif
if GetUnitAbilityLevel(k, 'S004') == 4 then
call ZWE(k , 500.)
call ZZE(k , 1.)
endif
set k=null
set u=null
endfunction
function UIX takes nothing returns boolean
if not IsUnitType(GetKillingUnit(), UNIT_TYPE_HERO) and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and GetPlayerController(GetOwningPlayer(GetKillingUnit())) == MAP_CONTROL_COMPUTER and NOOBM then
call URX()
endif
return false
endfunction
function UAX takes nothing returns nothing
local unit a=GetEventDamageSource()
local unit u=GetTriggerUnit()
local real RVX=BlzGetUnitArmor(u)
local real SVE=O9X(GetEventDamage() , RVX)
if RVX > 0 then
if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
if ( BI[NI] ) == ( LN ) then
set DI[NI]=DI[NI] + GetEventDamage()
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(( a ) , ( u ) , ( ( SVE ) * 1. ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
endif
else
if ( CI[NI] ) then
set DI[NI]=DI[NI] + GetEventDamage()
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(( a ) , ( u ) , ( ( SVE ) * 1. ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
endif
endif
endif
set a=null
set u=null
endfunction
function UNX takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'B00T') > 0 and ( ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) and GetTriggerUnit() != GetEventDamageSource() and GetUnitAbilityLevel(GetTriggerUnit(), 'B04X') != 1 and GetUnitAbilityLevel(GetTriggerUnit(), 'A09D') != 1 and GetUnitAbilityLevel(GetTriggerUnit(), 'A0LA') != 1 and GetUnitAbilityLevel(GetTriggerUnit(), 'A0N9') != 1 then
call UAX()
endif
return false
endfunction
function UBX takes nothing returns nothing
local unit a=GetEventDamageSource()
local unit u=GetTriggerUnit()
local real d=GetEventDamage() * 2
if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
if ( BI[NI] ) == ( LN ) or ( BI[NI] ) == ( DAMAGE_TYPE_LIGHTNING ) or ( BI[NI] ) == ( DAMAGE_TYPE_MAGIC ) or ( BI[NI] ) == ( DAMAGE_TYPE_COLD ) or ( BI[NI] ) == ( DAMAGE_TYPE_UNIVERSAL ) or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) then
set DI[NI]=DI[NI] + GetEventDamage()
if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
else
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
endif
if GetUnitTypeId(u) == 'n016' then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
else
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
endif
endif
else
set DI[NI]=DI[NI] + GetEventDamage()
if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
else
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
endif
if GetUnitTypeId(u) == 'n016' then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
else
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
endif
endif
set u=null
set a=null
endfunction
function UCX takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'A08B') > 0 and GetTriggerUnit() != GetEventDamageSource() and GetRandomInt(1, 100) <= 40 and GetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE) <= GetEventDamage() then
call UBX()
endif
return false
endfunction
function UDX takes nothing returns nothing
local unit att=GetEventDamageSource()
local unit u=GetTriggerUnit()
local real d=GetEventDamage() * 5
local unit a= LC[( 1 + GetPlayerId(GetOwningPlayer(att)) )]
if ( J5V[( ROX(( GetUnitTypeId(att) )) )] ) then
if ( BI[NI] ) == ( LN ) or ( BI[NI] ) == ( DAMAGE_TYPE_LIGHTNING ) or ( BI[NI] ) == ( DAMAGE_TYPE_MAGIC ) or ( BI[NI] ) == ( DAMAGE_TYPE_COLD ) or ( BI[NI] ) == ( DAMAGE_TYPE_UNIVERSAL ) or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) then
set DI[NI]=DI[NI] + GetEventDamage()
if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
else
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
endif
if GetUnitAbilityLevel(u, 'A08K') != 0 then //GetUnitTypeId(u)=='n029' or GetUnitTypeId(u)=='n01V' or GetUnitTypeId(u)=='n03K' or GetUnitTypeId(u)=='n027' then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
else
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
endif
if UnitHasItemOfTypeBJ(a, 'I033') or UnitHasItemOfTypeBJ(a, 'I03C') then
call UnitRemoveAbility(u, 'A08E')
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Dark Execution.mdx", u, "origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\OrbOfDeath\\OrbOfDeathMissile.mdl", a, "chest"))
if GetUnitAbilityLevel(u, 'A08K') != 0 then
call UnitRemoveAbility(u, 'A08K')
if UnitHasItemOfTypeBJ(a, 'I033') then
call RemoveItem(GetItemOfTypeFromUnitBJ(a, 'I033'))
call UnitAddItemByIdSwapped('I035', a)
endif
else
call UnitRemoveAbility(u, 'A08F')
if UnitHasItemOfTypeBJ(a, 'I033') then
call RemoveItem(GetItemOfTypeFromUnitBJ(a, 'I033'))
call UnitAddItemByIdSwapped('I034', a)
endif
endif
endif
endif
else
set DI[NI]=DI[NI] + GetEventDamage()
if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
else
call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
endif
if GetUnitAbilityLevel(u, 'A08K') != 0 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
else
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
endif
if UnitHasItemOfTypeBJ(a, 'I033') or UnitHasItemOfTypeBJ(a, 'I03C') then
call UnitRemoveAbility(u, 'A08E')
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Dark Execution.mdx", u, "origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\OrbOfDeath\\OrbOfDeathMissile.mdl", a, "chest"))
if GetUnitAbilityLevel(u, 'A08K') != 0 then
call UnitRemoveAbility(u, 'A08K')
if UnitHasItemOfTypeBJ(a, 'I033') then
call RemoveItem(GetItemOfTypeFromUnitBJ(a, 'I033'))
call UnitAddItemByIdSwapped('I035', a)
endif
else
call UnitRemoveAbility(u, 'A08F')
if UnitHasItemOfTypeBJ(a, 'I033') then
call RemoveItem(GetItemOfTypeFromUnitBJ(a, 'I033'))
call UnitAddItemByIdSwapped('I034', a)
endif
endif
endif
endif
set u=null
set a=null
set att=null
endfunction
function UFX takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'A08E') > 0 and GetTriggerUnit() != GetEventDamageSource() and GetRandomInt(1, 100) <= 60 + 5 * XT and GetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE) <= GetEventDamage() then
call UDX()
endif
return false
endfunction
function UJX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n038' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function Trig_Turtle_Boss_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n037' )
endfunction
function Trig_Turtle_Boss_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(10)) )
endfunction
function UKX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n037' ), ( IsUnitAlly(GetFilterUnit(), Player(10)) ))
endfunction
function ULX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A037')
endfunction
function UMX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function UKX)), function ULX)
endfunction
function UQX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n038' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function Trig_Turtle_Boss_2_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n037' )
endfunction
function Trig_Turtle_Boss_2_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(11)) )
endfunction
function USX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n037' ), ( IsUnitAlly(GetFilterUnit(), Player(11)) ))
endfunction
function UTX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A037')
endfunction
function UUX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function USX)), function UTX)
endfunction
function UYX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n025' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function Trig_Tree_Poison_Boss_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n024' )
endfunction
function Trig_Tree_Poison_Boss_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(11)) )
endfunction
function UZX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n024' ), ( IsUnitAlly(GetFilterUnit(), Player(11)) ))
endfunction
function U_X takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'Aspo')
endfunction
function U0X takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function UZX)), function U_X)
endfunction
function U2X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02F' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function Trig_Spider_Boss_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'h00S' )
endfunction
function Trig_Spider_Boss_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(11)) )
endfunction
function U3X takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'h00S' ), ( IsUnitAlly(GetFilterUnit(), Player(11)) ))
endfunction
function U4X takes nothing returns nothing
call ExplodeUnitBJ(GetEnumUnit())
endfunction
function U5X takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function U3X)), function U4X)
endfunction
function U7X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02F' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function Trig_Spider_Boss_2_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'h00S' )
endfunction
function Trig_Spider_Boss_2_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(10)) )
endfunction
function U8X takes nothing returns boolean
if not BRTON then
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'h00S' ), ( IsUnitAlly(GetFilterUnit(), Player(10)) ))
else
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n00S' ), ( IsUnitAlly(GetFilterUnit(), Player(10)) ))
endif
endfunction
function U9X takes nothing returns nothing
call ExplodeUnitBJ(GetEnumUnit())
endfunction
function WVX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function U8X)), function U9X)
endfunction
function WXX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n025' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function Trig_Tree_Poison_Boss_2_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n024' )
endfunction
function Trig_Tree_Poison_Boss_2_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(10)) )
endfunction
function WOX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n024' ), ( IsUnitAlly(GetFilterUnit(), Player(10)) ))
endfunction
function WRX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'Aspo')
endfunction
function WIX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function WOX)), function WRX)
endfunction
function WNX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n023' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function Trig_Invis_Boss_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n022' )
endfunction
function Trig_Invis_Boss_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(11)) )
endfunction
function WBX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n022' ), ( IsUnitAlly(GetFilterUnit(), Player(11)) ))
endfunction
function WCX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A0EV')
endfunction
function WDX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function WBX)), function WCX)
endfunction
function WGX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n023' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function Trig_Invis_Boss_2_Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n022' )
endfunction
function Trig_Invis_Boss_2_Func002001002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), Player(10)) )
endfunction
function WHX takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) == 'n022' ), ( IsUnitAlly(GetFilterUnit(), Player(10)) ))
endfunction
function WJX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A0EV')
endfunction
function WKX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function WHX)), function WJX)
endfunction

function WPX takes nothing returns nothing
call SetUnitPathing(GetTriggerUnit(), false)
endfunction

function WTX takes nothing returns nothing
call SetUnitPathing(GetTriggerUnit(), false)
endfunction
function WWX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'e00X' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function Trig_Ranger_Boss_Armor_Remove_2_Func002001002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) ) != null
endfunction
function Trig_Ranger_Boss_Armor_Remove_2_Func002001002002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), Player(11)) )
endfunction
function WYX takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) ), ( IsUnitEnemy(GetFilterUnit(), Player(11)) )) ) != null
endfunction
function WZX takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A0EQ')
endfunction
function W_X takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function WYX)), function WZX)
endfunction
function W1X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A04S', GetEventDamageSource()) == 1 ) and ( GetEventDamage() >= 1. ) and ( not ( ( BI[NI] ) != ( LN ) ) ) and ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] )
endfunction
function W2X takes nothing returns nothing
set FK=GetUnitLoc(GetEventDamageSource())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), FK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A0D5')
call IssueTargetOrder(bj_lastCreatedUnit, "acidbomb", GetTriggerUnit())
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\Shield Breaker1.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(FK)
endfunction
function W4X takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A04S', GetEventDamageSource()) == 1 ) and ( GetEventDamage() >= 1. ) and ( not ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] ) )
endfunction
function W5X takes nothing returns nothing
set FK=GetUnitLoc(GetEventDamageSource())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), FK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A0D5')
call IssueTargetOrder(bj_lastCreatedUnit, "acidbomb", GetTriggerUnit())
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\Shield Breaker1.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(FK)
endfunction
function W7X takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'e00X' ) and ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function Trig_Ranger_Boss_Armor_Remove_Func002001002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) ) != null
endfunction
function Trig_Ranger_Boss_Armor_Remove_Func002001002002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), Player(10)) )
endfunction
function W8X takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) ), ( IsUnitEnemy(GetFilterUnit(), Player(10)) )) ) != null
endfunction
function W9X takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(), 'A0EQ')
endfunction
function YVX takes nothing returns nothing
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function W8X)), function W9X)
endfunction
function YXX takes nothing returns boolean
return ( GetUnitTypeId(GetAttacker()) == 'h00B' )
endfunction
function Trig_Tank_AI_Func001Func001Func002C takes nothing returns boolean
return true
endfunction
function YOX takes nothing returns boolean
return ( GetRandomInt(1, 100) >= 25 )
endfunction
function YRX takes nothing returns boolean
return ( GetRandomInt(1, 100) >= 50 )
endfunction
function YIX takes nothing returns nothing
local real x= GetUnitX(GetTriggerUnit())
local real y= GetUnitY(GetTriggerUnit())
if ( (GetRandomInt(1, 100) >= 50) ) then // INLINED!!
//set XK=GetUnitLoc(GetTriggerUnit())
//set LK=CNE(XK,256.,GetUnitFacing(GetAttacker()))
call IssueImmediateOrderById(GetAttacker(), 851972)
call IssuePointOrderById(GetAttacker(), 852580, x, y)
//call RemoveLocation(XK)
//call RemoveLocation(LK)
else
if ( (GetRandomInt(1, 100) >= 25) ) then // INLINED!!
//set XK=GetUnitLoc(GetTriggerUnit())
//set LK=CNE(XK,256.,GetUnitFacing(GetAttacker()))
call IssueImmediateOrderById(GetAttacker(), 851972)
call IssuePointOrderById(GetAttacker(), 852592, x, y)
//call RemoveLocation(XK)
//call RemoveLocation(LK)
else
if ( ( true ) ) then
//set XK=GetUnitLoc(GetTriggerUnit())
call IssueImmediateOrderById(GetAttacker(), 851972)
call IssuePointOrderById(GetAttacker(), 852232, x, y)
//call RemoveLocation(XK)
endif
endif
endif
endfunction
function YNX takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'h00B' )
endfunction
function YBX takes nothing returns nothing
call SetUnitAcquireRange(GetTriggerUnit(), 1000.)
endfunction
function YDX takes nothing returns boolean
return ( not ( GetUnitAbilityLevel(GetTriggerUnit(), 'A000') != 1 ) ) and ( not ( GetRandomInt(1, 100) > 1 ) )
endfunction
function YFX takes nothing returns nothing
local item i=( GetItemOfTypeFromUnitBJ(GetTriggerUnit(), 'I01O') )
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shield Breaker1.mdx", GetTriggerUnit(), "origin"))
call RemoveItem(i)
call SetWidgetLife(GetTriggerUnit(), GetWidgetLife(GetTriggerUnit()) / 4.)
set i=null
endfunction
function YHX takes nothing returns boolean
return ( GetItemTypeId(GetManipulatedItem()) == 'I01U' ) or ( GetItemTypeId(GetManipulatedItem()) == 'I04I' )
endfunction
function YJX takes nothing returns nothing
call ZWE(GetTriggerUnit() , 500.)
endfunction
function YLX takes nothing returns boolean
return ( GetItemTypeId(GetManipulatedItem()) == 'I01U' ) or ( GetItemTypeId(GetManipulatedItem()) == 'I04I' )
endfunction
function YMX takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A078', GetTriggerUnit()) != 1 )
endfunction
function YPX takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A078', GetTriggerUnit()) != 1) ) then // INLINED!!
call ZYE(GetTriggerUnit())
endif
endfunction
function YTX takes nothing returns nothing
local integer YUX
//if GetSpellAbilityId()=='A00J' then
set YUX=LFE()
set KHV[( YUX )]=( ( .0 ) * 1. )
set KJV[( YUX )]=( "war3mapImported\\Psionic Shot Teal.mdx" )
set KGV[( YUX )]=( ( 2500 ) * 1. )
set KFV[( YUX )]=( ( 9999 ) * 1. )
set KMV[( YUX )]=( false )
set KPV[( YUX )]=( false )
call R8X(YUX , 5)
call R7X(YUX , GetSpellAbilityUnit() , GetSpellTargetUnit())
//endif
endfunction
function YWX takes nothing returns nothing
local integer YUX
//if GetSpellAbilityId()=='A014' then
set YUX=LGE()
set KHV[( YUX )]=( ( .6 ) * 1. )
set KJV[( YUX )]=( "war3mapImported\\Psionic Shot Teal.mdx" )
set KGV[( YUX )]=( ( 2500 ) * 1. )
set KFV[( YUX )]=( ( 900 ) * 1. )
set KMV[( YUX )]=( false )
set KPV[( YUX )]=( false )
call R8X(YUX , 5)
call R7X(YUX , GetSpellAbilityUnit() , GetSpellTargetUnit())
//endif
endfunction
function YZX takes nothing returns nothing
local integer YUX
//if GetSpellAbilityId()=='A00C' then
set YUX=LDE()
set KHV[( YUX )]=( ( .4 ) * 1. )
if IsEyeRat[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])] then
set KJV[( YUX )]=( "war3mapImported\\CheeseItem.mdx" )
else
set KJV[( YUX )]=( "war3mapImported\\ArcaneMissileComplete.mdx" )
endif
set KGV[( YUX )]=( ( 1400 ) * 1. )
set KFV[( YUX )]=( ( 750 ) * 1. )
set KMV[( YUX )]=( true )
set KPV[( YUX )]=( false )
call R8X(YUX , GetUnitAbilityLevel(GetSpellAbilityUnit(), 'A00C') + 5)
set YYV[YUX]=GetUnitAbilityLevel(GetSpellAbilityUnit(), 'A00C') - 1
call R7X(YUX , GetSpellAbilityUnit() , GetSpellTargetUnit())
//endif
endfunction
function Y_X takes nothing returns nothing
local effect Y0X
set Y0X=bj_lastCreatedEffect
call CRE(2.5)
call DestroyEffect(Y0X)
set Y0X=null
endfunction
function Y2X takes nothing returns boolean
return ( GetUnitTypeId(GetSummonedUnit()) == 'o001' )
endfunction
function Trig_FocusMoonbeam_Func001001 takes nothing returns boolean
return ( GetUnitTypeId(UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) == 'o001' )
endfunction
function Y3X takes nothing returns nothing
if ( ( GetUnitTypeId(UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) == 'o001' ) ) then
call RemoveUnit(UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
endif
set UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=GetSummonedUnit()
endfunction
function Y5X takes nothing returns boolean
return ( GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )], 'B048') == 1 or GetUnitAbilityLevel(GetEventDamageSource(), 'B048') == 1 ) and ( GetRandomInt(1, 100) <= 50 ) and ( GetEventDamage() > 1.0 ) and ( not ( IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) ) ) and ( BI[NI] == LN or BI[NI] == DAMAGE_TYPE_LIGHTNING or BI[NI] == DAMAGE_TYPE_COLD or BI[NI] == DAMAGE_TYPE_MAGIC or BI[NI] == DAMAGE_TYPE_PLANT or BI[NI] == DAMAGE_TYPE_UNIVERSAL or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) ) and ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] )
endfunction
function Y6X takes nothing returns nothing
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(GetEventDamageSource() , GetTriggerUnit() , GetEventDamage() , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( I2S(R2I(( GetEventDamage() * 2. ))) + "!" ), OK, 0, 10., 100., .0, .0, 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction
function Y8X takes nothing returns boolean
return ( GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )], 'B048') == 1 or GetUnitAbilityLevel(GetEventDamageSource(), 'B048') == 1 ) and ( GetRandomInt(1, 100) <= 50 ) and ( GetEventDamage() > 1.0 ) and ( not ( IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) ) ) and ( not ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] ) )
endfunction
function Y9X takes nothing returns nothing
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(GetEventDamageSource() , GetTriggerUnit() , GetEventDamage() , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( I2S(R2I(( GetEventDamage() * 2. ))) + "!" ), OK, 0, 10., 100., .0, .0, 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction

function ZXX takes nothing returns nothing
local unit ZOX=GetTriggerUnit()
local unit ZRX=GetSpellTargetUnit()
local real ZIX=KT[GetUnitAbilityLevel(ZOX, 'A07U')]
local trigger ZAX
local integer loc_integer01
local real ZNX=GetUnitX(ZRX) - 75 * Cos(GetUnitFacing(ZRX) * bj_DEGTORAD)
local real ZBX=GetUnitY(ZRX) - 75 * Sin(GetUnitFacing(ZRX) * bj_DEGTORAD)
call SetUnitX(ZOX, ZNX)
call SetUnitY(ZOX, ZBX)
call SetUnitFacing(ZOX, GetUnitFacing(ZRX))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx", ZOX, "origin"))
if IsUnitEnemy(ZRX, GetOwningPlayer(ZOX)) then
call UnitDamageTarget(ZOX, ZRX, ZIX, true, true, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
call IssueTargetOrderById(ZOX, 851983, ZRX)
endif
set ZOX=null
set ZRX=null
set ZAX=null
endfunction
function ZCX takes nothing returns boolean
return GetSpellAbilityId() == 'A07U'
endfunction
function ZDX takes nothing returns nothing
local unit ZFX=GetTriggerUnit()
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx", ZFX, "origin"))
call SAE('h00J' , GetUnitX(ZFX) , GetUnitY(ZFX) , GetUnitFacing(ZFX) , .5 , "spell" , 2.)
set ZFX=null
endfunction
constant function ZGX takes integer ZHX returns boolean
local boolean array ZJX
set ZJX[1]=true
set ZJX[2]=true
return ZJX[ZHX]
endfunction
constant function ZKX takes integer ZHX returns integer
local integer array ZLX
set ZLX[1]='A07R'
set ZLX[2]=10
set ZLX[3]=900
set ZLX[4]=4
set ZLX[5]='A07S'
return ZLX[ZHX]
endfunction
constant function ZMX takes integer ZHX returns string
local string array ZPX
set ZPX[1]="war3mapImported\\ShadowRibbon.mdx"
set ZPX[2]="war3mapImported\\Doomsday.mdx"
set ZPX[3]=""
set ZPX[4]="war3mapImported\\ShadowbindTarget.mdx"
return ZPX[ZHX]
endfunction
function ZQX takes unit ZSX,unit MME returns boolean
return IsUnitEnemy(MME, GetOwningPlayer(ZSX)) and GetWidgetLife(MME) > .405 and not IsUnitType(MME, UNIT_TYPE_STRUCTURE) and not IsUnitType(MME, UNIT_TYPE_MECHANICAL) and not IsUnitType(MME, UNIT_TYPE_MAGIC_IMMUNE) and IsUnitVisible(MME, GetOwningPlayer(ZSX)) and not ( GetUnitAbilityLevel(( MME ), 'Avul') > 0 )
endfunction
function ZTX takes nothing returns boolean
return GetSpellAbilityId() == ZKX(1)
endfunction
function ZUX takes nothing returns boolean
return R2I(GetEventDamage()) > .0 and GetOwningPlayer(GetEventDamageSource()) != GetOwningPlayer(GetTriggerUnit()) and LoadUnitHandle(FF, GetHandleId(GetEventDamageSource()), 1) == GetEventDamageSource()
endfunction
function ZWX takes nothing returns boolean
return GetUnitAbilityLevel(GetAttacker(), ZKX(1)) > 0 and GetTriggerUnit() == LoadUnitHandle(FF, GetHandleId(GetAttacker()), StringHash("Omnislash Caster Target"))
endfunction
function ZYX takes nothing returns nothing
local unit ZSX=GetEventDamageSource()
local unit MME=GetTriggerUnit()
local integer ZZX=GetHandleId(ZSX)
local unit Z_X=null
local group Z0X=CreateGroup()
local integer Z1X=LoadInteger(FF, ZZX, StringHash("Omnislash Caster Now"))
local trigger Z2X=null
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call DestroyEffect(AddSpecialEffectTarget(ZMX(4), MME, "origin"))
call GroupEnumUnitsInRange(Z0X, GetUnitX(ZSX), GetUnitY(ZSX), I2R(ZKX(3)), null)
loop
set Z_X=GroupPickRandomUnit(Z0X)
exitwhen ZQX(ZSX , Z_X) or Z_X == null
call GroupRemoveUnit(Z0X, Z_X)
endloop
if ( Z_X != null and GetWidgetLife(Z_X) > .405 ) or ZQX(ZSX , LoadUnitHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Target"))) then
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call SaveUnitHandle(FF, ZZX, StringHash("Omnislash Caster Target"), Z_X)
call SaveInteger(FF, ZZX, StringHash("Omnislash Caster Now"), Z1X + 1)
call SaveReal(FF, ZZX, StringHash("Omnislash Caster Time"), .0)
call DestroyEffect(AddSpecialEffect(ZMX(2), GetUnitX(ZSX), GetUnitY(ZSX)))
if Z_X != null then
call SetUnitX(ZSX, ( GetUnitX(Z_X) - 75 * Cos(GetUnitFacing(Z_X) * bj_DEGTORAD) ))
call SetUnitY(ZSX, ( GetUnitY(Z_X) - 75 * Sin(GetUnitFacing(Z_X) * bj_DEGTORAD) ))
endif
call DestroyEffect(AddSpecialEffect(ZMX(3), GetUnitX(ZSX), GetUnitY(ZSX)))
set Z2X=CreateTrigger()
set OHV=Z2X
set OJV=ZZX
call TriggerRegisterUnitEvent(Z2X, Z_X, EVENT_UNIT_ATTACKED)
call SaveTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger"), Z2X)
call TriggerAddCondition(Z2X, Condition(function ZWX))
call ExecuteFunc("Z3X")
else
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Target"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Actions"))
call SaveInteger(FF, ZZX, StringHash("Omnislash Caster Now"), Z1X + 990)
call DestroyEffect(LoadEffectHandle(FF, ZZX, StringHash("Omnislash Caster Effect")))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Effect"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Time"))
call SetUnitVertexColor(ZSX, 112, 128, 144, 255)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, false)
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02A', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02W', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I038', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02A', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02W', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I038', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02A', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02W', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I038', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02A', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02W', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I038', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02A', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02W', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I038', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02A', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02W', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I038', 5)
endif


endif
set ZSX=null
set MME=null
set Z_X=null
call DestroyGroup(Z0X)
set Z0X=null
set Z2X=null
endfunction
function Z4X takes nothing returns nothing
local unit ZSX=GetAttacker()
local integer ZZX=GetHandleId(ZSX)
local trigger Z2X=CreateTrigger()
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call TriggerRegisterUnitEvent(Z2X, GetTriggerUnit(), EVENT_UNIT_DAMAGED)
call SaveTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger"), Z2X)
call TriggerAddCondition(Z2X, Condition(function ZUX))
call SaveTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action"), TriggerAddAction(Z2X, function ZYX))
set ZSX=null
set Z2X=null
endfunction
function Z3X takes nothing returns nothing
call SaveTriggerActionHandle(FF, OJV, StringHash("Omnislash Caster Trigger Action"), TriggerAddAction(OHV, function Z4X))
endfunction
function Z5X takes unit ZSX,boolean Z6X returns nothing
local unit Z_X=null
local group Z0X=CreateGroup()
local integer ZZX=GetHandleId(ZSX)
local integer Z7X=0
local integer Z1X=LoadInteger(FF, ZZX, StringHash("Omnislash Caster Now"))
local trigger Z2X=null
if Z6X == false then
call GroupEnumUnitsInRange(Z0X, GetUnitX(ZSX), GetUnitY(ZSX), I2R(ZKX(3)), null)
loop
set Z_X=GroupPickRandomUnit(Z0X)
exitwhen ZQX(ZSX , Z_X) or Z_X == null
call GroupRemoveUnit(Z0X, Z_X)
endloop
if ( Z_X != null and GetWidgetLife(Z_X) > .405 ) or ZQX(ZSX , LoadUnitHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Target"))) then
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call SaveUnitHandle(FF, ZZX, StringHash("Omnislash Caster Target"), Z_X)
call SaveInteger(FF, ZZX, StringHash("Omnislash Caster Now"), Z1X + 1)
call SaveReal(FF, ZZX, StringHash("Omnislash Caster Time"), .0)
set Z2X=CreateTrigger()
call TriggerRegisterUnitEvent(Z2X, Z_X, EVENT_UNIT_ATTACKED)
call SaveTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger"), Z2X)
call TriggerAddCondition(Z2X, Condition(function ZWX))
call SaveTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action"), TriggerAddAction(Z2X, function Z4X))
call DestroyEffect(AddSpecialEffect(ZMX(2), GetUnitX(ZSX), GetUnitY(ZSX)))
call SetUnitX(ZSX, ( GetUnitX(Z_X) - 75 * Cos(GetUnitFacing(Z_X) * bj_DEGTORAD) ))
call SetUnitY(ZSX, ( GetUnitY(Z_X) - 75 * Sin(GetUnitFacing(Z_X) * bj_DEGTORAD) ))
call DestroyEffect(AddSpecialEffect(ZMX(3), GetUnitX(ZSX), GetUnitY(ZSX)))
else
call TriggerRemoveAction(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, ZZX, StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, ZZX, StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Target"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Actions"))
call SaveInteger(FF, ZZX, StringHash("Omnislash Caster Now"), Z1X + 990)
call DestroyEffect(LoadEffectHandle(FF, ZZX, StringHash("Omnislash Caster Effect")))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Effect"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Time"))
call SetUnitVertexColor(ZSX, 112, 128, 144, 100)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, false)
call SetUnitPathing(ZSX, true)
call SetUnitVertexColor(ZSX, 112, 128, 144, 255)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, false)

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02A', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02W', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I038', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02A', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02W', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I038', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02A', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02W', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I038', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02A', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02W', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I038', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02A', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02W', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I038', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02A', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02W', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I038', 5)
endif

call Z5X(ZSX , true)
endif
else
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Target"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Actions"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Now"))
call DestroyEffect(LoadEffectHandle(FF, ZZX, StringHash("Omnislash Caster Effect")))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Effect"))
call RemoveSavedHandle(FF, ZZX, StringHash("Omnislash Caster Time"))
call SetUnitVertexColor(ZSX, 112, 128, 144, 255)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, false)

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02A', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02W', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I038', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02A', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02W', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I038', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02A', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02W', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I038', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02A', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02W', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I038', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02A', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02W', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I038', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02A', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02W', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I038', 5)
endif

call SetUnitPathing(ZSX, true)
call UnitRemoveAbility(ZSX, ZKX(5))

call UnitRemoveAbility(ZSX, 'A0K6')
if GetLocalPlayer() == GetOwningPlayer(ZSX) then
call ClearSelection()
call SelectUnit(ZSX, true)
endif
endif
set Z_X=null
call DestroyGroup(Z0X)
set Z0X=null
set Z2X=null
endfunction
function Z8X takes nothing returns nothing
local timer Z9X=GetExpiredTimer()
local integer ZZX=GetHandleId(Z9X)
local unit ZSX=LoadUnitHandle(FF, ZZX, 1)
local integer VVO=GetHandleId(ZSX)
local integer VEO=LoadInteger(FF, VVO, StringHash("Omnislash Caster Actions"))
local integer Z1X=LoadInteger(FF, VVO, StringHash("Omnislash Caster Now"))
local real VXO=LoadReal(FF, VVO, StringHash("Omnislash Caster Time")) + .025
local integer Z7X=0
call SetUnitPathing(ZSX, false)
call SetUnitVertexColor(ZSX, 112, 128, 144, 100)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, true)
call IssueTargetOrderById(ZSX, 851983, LoadUnitHandle(FF, VVO, StringHash("Omnislash Caster Target")))
loop
if IsUnitSelected(ZSX, Player(Z7X)) and ZGX(1) then
if GetLocalPlayer() == Player(Z7X) then
call SelectUnit(ZSX, false)
endif
endif
exitwhen Z7X > 12
set Z7X=Z7X + 1
endloop
if VXO < 2.2 then
call SaveReal(FF, VVO, StringHash("Omnislash Caster Time"), VXO)
else
call SaveReal(FF, VVO, StringHash("Omnislash Caster Time"), 0)
if Z1X < VEO then
call Z5X(ZSX , false)
endif
endif
if ZQX(ZSX , LoadUnitHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Target"))) == false then
call Z5X(ZSX , false)
endif
if Z1X >= VEO then
call SetUnitPathing(ZSX, true)
call SetUnitVertexColor(ZSX, 112, 128, 144, 255)
call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, false)

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02A', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I02W', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I038', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02A', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I02W', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I038', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02A', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I02W', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I038', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02A', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I02W', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I038', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02A', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I02W', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I038', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I042' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02A', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I043' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I02W', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I044' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I038', 5)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I04W', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I04W', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I04W', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I04W', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I04W', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I04X' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I04W', 5)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I04R', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I04R', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I04R', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I04R', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I04R', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I04S' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I04R', 5)
endif

call Z5X(ZSX , true)
call DestroyTimer(Z9X)
call FlushChildHashtable(FF, ZZX)
endif
set Z9X=null
set ZSX=null
endfunction
function VOO takes nothing returns nothing
local timer Z9X=CreateTimer()
local integer ZZX=GetHandleId(Z9X)
local unit ZSX=GetSpellAbilityUnit()
local unit MME=GetSpellTargetUnit()
local integer VRO=GetUnitAbilityLevel(ZSX, ZKX(1))
local integer VEO=ZKX(2) * VRO
local effect VIO=AddSpecialEffectTarget(ZMX(1), ZSX, "weapon")
local trigger Z2X=CreateTrigger()
call UnitAddAbility(ZSX, ZKX(5))

call UnitAddAbility(ZSX, 'A0K6')
call SetUnitAbilityLevel(ZSX, 'A0K6', GetUnitAbilityLevel(ZSX, 'A07R'))
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I042', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I043', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I044', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I042', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I043', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I044', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I042', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I043', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I044', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I042', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I043', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I044', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I042', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I043', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I044', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I02A' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I042', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I02W' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I043', 5)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I038' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I044', 5)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I04X', 0)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I04X', 1)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I04X', 2)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I04X', 3)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I04X', 4)
endif

if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I04W' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I04X', 5)
endif


if GetItemTypeId(UnitItemInSlot(ZSX, 0)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 0))
call UnitAddItemToSlotById(ZSX, 'I04S', 0)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 1)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 1))
call UnitAddItemToSlotById(ZSX, 'I04S', 1)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 2)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 2))
call UnitAddItemToSlotById(ZSX, 'I04S', 2)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 3)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 3))
call UnitAddItemToSlotById(ZSX, 'I04S', 3)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 4)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 4))
call UnitAddItemToSlotById(ZSX, 'I04S', 4)
endif
if GetItemTypeId(UnitItemInSlot(ZSX, 5)) == 'I04R' then
call RemoveItem(UnitItemInSlot(ZSX, 5))
call UnitAddItemToSlotById(ZSX, 'I04S', 5)
endif

call UnitRemoveBuffs(ZSX, false, true)
call SetUnitInvulnerable(ZSX, true)
call SetUnitPathing(ZSX, false)
call SetUnitVertexColor(ZSX, 112, 128, 144, 100)
call TriggerSleepAction(0)
call TriggerRemoveAction(LoadTriggerHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger")), LoadTriggerActionHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action")))
call DestroyTrigger(LoadTriggerHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Target"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Actions"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Now"))
call DestroyEffect(LoadEffectHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Effect")))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Effect"))
call RemoveSavedHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Time"))
call SaveUnitHandle(FF, ZZX, 1, ZSX)
call SaveUnitHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Target"), MME)
call SaveInteger(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Actions"), VEO)
call SaveInteger(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Now"), 0)
call SaveEffectHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Effect"), VIO)
call SaveReal(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Time"), 0)
call TriggerRegisterUnitEvent(Z2X, MME, EVENT_UNIT_ATTACKED)
call SaveTriggerHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger"), Z2X)
call TriggerAddCondition(Z2X, Condition(function ZWX))
call SaveTriggerActionHandle(FF, GetHandleId(ZSX), StringHash("Omnislash Caster Trigger Action"), TriggerAddAction(Z2X, function Z4X))
call SetUnitX(ZSX, ( GetUnitX(MME) - 75 * Cos(GetUnitFacing(MME) * bj_DEGTORAD) ))
call SetUnitY(ZSX, ( GetUnitY(MME) - 75 * Sin(GetUnitFacing(MME) * bj_DEGTORAD) ))
call TimerStart(Z9X, .025, true, function Z8X)
set Z9X=null
set ZSX=null
set MME=null
set VIO=null
set Z2X=null
endfunction
function VNO takes integer VRO returns real
if VRO == 1 then
return 650.
elseif VRO == 2 then
return 625.
elseif VRO == 3 then
return 600.
elseif VRO == 4 then
return 575.
elseif VRO == 5 then
return 550.
elseif VRO == 6 then
return 525.
elseif VRO == 7 then
return 500.
elseif VRO == 8 then
return 475.
elseif VRO == 9 then
return 450.
elseif VRO == 10 then
return 425.
endif
return .0
endfunction
function VBO takes nothing returns integer
local integer d=GIE()
local real CDE=90
local integer i=0
local real x
local real y
local location as=GetUnitLoc(GetSpellTargetUnit())
local location VCO=CNE(as , GetRandomReal(450., 800.) , GetRandomReal(.0, 360.))
set Y1V[d]=CreateUnitAtLoc(GetOwningPlayer(GetTriggerUnit()), 'h007', VCO, .0)
call UnitApplyTimedLife(Y1V[d], 'BTLF', ( 1 ))
call RemoveLocation(as)
call RemoveLocation(VCO)
set as=null
set VCO=null
set ZRV[d]=GetSpellTargetUnit()
set Y3V[d]=GetOwningPlayer(Y1V[d])
set ZAV[d]=GetUnitX(ZRV[d])
set ZNV[d]=GetUnitY(ZRV[d])
set ZBV[d]=GetUnitX(Y1V[d])
set ZCV[d]=GetUnitY(Y1V[d])
set ZQV[d]=GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(Y1V[d])) )], 'A004')
set ZSV[d]=Atan2(ZNV[d] - ZCV[d], ZAV[d] - ZBV[d])
set Y6V[Y7V[d]]=ZBV[d] + 45 * Cos(ZSV[d] + ( bj_DEGTORAD * 90 ))
set ZVV[ZEV[d]]=ZCV[d] + 45 * Sin(ZSV[d] + ( bj_DEGTORAD * - 90 ))
call MoveLocation(OKV, ZBV[d], ZCV[d])
set x=ZBV[d] + 20 * Cos(ZSV[d] + ( 180 * bj_DEGTORAD ))
set y=ZCV[d] + 20 * Sin(ZSV[d] + ( 180 * bj_DEGTORAD ))
set Y2V[d]=CreateUnit(Y3V[d], 'h00K', x, y, ZSV[d] * bj_RADTODEG)
set ZLV[d]=GetUnitFlyHeight(Y2V[d])
set ZJV[d]=- 200.
//call UnitAddAbility(Y2V[d],'Aloc')
set ZIV[d]=CreateUnit(Y3V[d], 'h001', ZBV[d], ZCV[d], bj_UNIT_FACING)
call IssueTargetOrder(ZIV[d], "slow", ZRV[d])
set ZMV[d]=AddSpecialEffectTarget("war3mapImported\\ShadowbindTarget.mdx", Y2V[d], "hand, left")
set ZPV[d]=AddSpecialEffectTarget("war3mapImported\\ShadowbindTarget.mdx", Y2V[d], "hand, right")
set Y6V[Y7V[d]]=ZBV[d] + 45 * Cos(ZSV[d] + ( bj_DEGTORAD * CDE ))
set ZVV[ZEV[d]]=ZCV[d] + 45 * Sin(ZSV[d] + ( bj_DEGTORAD * CDE ))
set Y6V[Y7V[d] + 1]=ZBV[d] + 45 * Cos(ZSV[d] - ( bj_DEGTORAD * CDE ))
set ZVV[ZEV[d] + 1]=ZCV[d] + 45 * Sin(ZSV[d] - ( bj_DEGTORAD * CDE ))
set Y8V[Y9V[d]]=ZAV[d] + 45 * Cos(ZSV[d] + ( bj_DEGTORAD * CDE ))
set ZXV[ZOV[d]]=ZNV[d] + 45 * Sin(ZSV[d] + ( bj_DEGTORAD * CDE ))
set Y8V[Y9V[d] + 1]=ZAV[d] + 45 * Cos(ZSV[d] - ( bj_DEGTORAD * CDE ))
set ZXV[ZOV[d] + 1]=ZNV[d] + 45 * Sin(ZSV[d] - ( bj_DEGTORAD * CDE ))
loop
exitwhen i == 2
set CDE=- 90.
set Y4V[Y5V[d] + i]=AddLightningEx("SPLK", true, Y6V[Y7V[d] + i], ZVV[ZEV[d] + i], ZJV[d], Y8V[Y9V[d] + i], ZXV[ZOV[d] + i], ZKV[d])
set i=i + 1
endloop
set ZHV[d]=( ( ZQV[d] ) * 9999. )
set ZDV[d]=VNO(ZQV[d])
set ZGV[d]=( ( ( ZQV[d] ) * 1.5 ) + 10. )
set ZFV[d]=( ( ZQV[d] ) * 15. )
return d
endfunction
function VDO takes nothing returns boolean
local integer d=PRE()
local integer i=0
local real CDE=90
local real x
local real y
local real dx
local real dy
local boolean b=false
local real UAE
local real r
set ZTV[d]=ZTV[d] + .04
call IssueTargetOrder(ZIV[d], "slow", ZRV[d])
set ZSV[d]=Atan2(ZNV[d] - ZCV[d], ZAV[d] - ZBV[d])
call SetUnitFacingTimed(Y2V[d], ZSV[d] * bj_RADTODEG, .0)
call QueueUnitAnimation(Y2V[d], "stand, channel")
set ZAV[d]=GetUnitX(ZRV[d])
set ZNV[d]=GetUnitY(ZRV[d])
set dx=ZAV[d] - ZBV[d]
set dy=ZNV[d] - ZCV[d]
if false then
set ZBV[d]=GetUnitX(Y1V[d])
set ZCV[d]=GetUnitY(Y1V[d])
endif
set x=ZBV[d] + 20 * Cos(ZSV[d] + ( 180 * bj_DEGTORAD ))
set y=ZCV[d] + 20 * Sin(ZSV[d] + ( 180 * bj_DEGTORAD ))
call SetUnitX(Y2V[d], x)
call SetUnitY(Y2V[d], y)
set Y6V[Y7V[d]]=ZBV[d] + 45 * Cos(ZSV[d] + ( bj_DEGTORAD * CDE ))
set ZVV[ZEV[d]]=ZCV[d] + 45 * Sin(ZSV[d] + ( bj_DEGTORAD * CDE ))
set Y6V[Y7V[d] + 1]=ZBV[d] + 45 * Cos(ZSV[d] - ( bj_DEGTORAD * CDE ))
set ZVV[ZEV[d] + 1]=ZCV[d] + 45 * Sin(ZSV[d] - ( bj_DEGTORAD * CDE ))
set Y8V[Y9V[d]]=ZAV[d] + 45 * Cos(ZSV[d] + ( bj_DEGTORAD * CDE ))
set ZXV[ZOV[d]]=ZNV[d] + 45 * Sin(ZSV[d] + ( bj_DEGTORAD * CDE ))
set Y8V[Y9V[d] + 1]=ZAV[d] + 45 * Cos(ZSV[d] - ( bj_DEGTORAD * CDE ))
set ZXV[ZOV[d] + 1]=ZNV[d] + 45 * Sin(ZSV[d] - ( bj_DEGTORAD * CDE ))
set UAE=( dx * dx + dy * dy )
call MoveLocation(OKV, ZAV[d], ZNV[d])
set ZKV[d]=GetLocationZ(OKV) + GetUnitFlyHeight(ZRV[d]) + 45
call MoveLocation(OKV, GetUnitX(Y2V[d]), GetUnitY(Y2V[d]))
set ZJV[d]=( GetLocationZ(OKV) + ZLV[d] ) + .0
loop
exitwhen i == 2
set CDE=- 90.
call MoveLightningEx(Y4V[Y5V[d] + i], true, Y6V[Y7V[d] + i], ZVV[ZEV[d] + i], ZJV[d], Y8V[Y9V[d] + i], ZXV[ZOV[d] + i], ZKV[d])
set i=i + 1
endloop
set r=ZDV[d] + 400
set r=r * r
if UAE > ZDV[d] * ZDV[d] and UAE < r and not M5E(ZRV[d]) and not IsUnitType(ZRV[d], UNIT_TYPE_MAGIC_IMMUNE) and GetUnitTypeId(ZRV[d]) != 'E00E' then
call M6E(ZRV[d] , 400 , .4 , ( bj_RADTODEG * ZSV[d] ) + 180 , "none.mdl" , 0 , true , false)
set b=true
endif
if not b and ( dx * dx + dy * dy ) > ZDV[d] * ZDV[d] then
call M6E(ZRV[d] , ZFV[d] , .4 , ( bj_RADTODEG * ZSV[d] ) + 180 , "none.mdl" , 0 , true , false)
endif
if ZTV[d] >= ZGV[d] or ( dx * dx + dy * dy ) > ZHV[d] * ZHV[d] or not UnitAlive(ZRV[d]) or ZRV[d] == null then
call UnitRemoveAbility(ZRV[d], 'B02X')
call UnitRemoveAbility(ZRV[d], 'B02X')
call DestroyLightning(Y4V[Y5V[d]])
call DestroyLightning(Y4V[Y5V[d] + 1])
call DestroyEffect(ZMV[d])
call DestroyEffect(ZPV[d])
call KillUnit(Y2V[d])
call KillUnit(ZIV[d])
call GAE(d)
return true
endif
return false
endfunction

function VGO takes nothing returns nothing
call PFE(function VDO , VBO() , .04)
call PFE(function VDO , VBO() , .04)
endfunction
function VHO takes integer VRO returns real
if VRO == 1 then
return 400.
elseif VRO == 2 then
return 500.
elseif VRO == 3 then
return 600.
elseif VRO == 4 then
return 700.
elseif VRO == 5 then
return 800.
elseif VRO == 6 then
return 1000.
elseif VRO == 7 then
return 1200.
elseif VRO == 8 then
return 1500.
elseif VRO == 9 then
return 1800.
elseif VRO == 10 then
return 2000.
endif
return .0
endfunction
function VJO takes integer VRO returns real
return 200.
endfunction
function VKO takes nothing returns integer
local integer d=GOE()
local real CDE=90
local integer i=0
local real x
local real y
local location as=GetUnitLoc(GetTriggerUnit())
local location VCO=CNE(as , 150. , GetUnitFacing(GetTriggerUnit()))
set ZZV[d]=CreateUnitAtLoc(GetOwningPlayer(GetTriggerUnit()), 'h007', VCO, .0)
call UnitApplyTimedLife(ZZV[d], 'BTLF', ( 2 ))
call RemoveLocation(as)
call RemoveLocation(VCO)
set as=null
set VCO=null
set VEE[d]=GetSpellTargetUnit()
set Z0V[d]=GetOwningPlayer(ZZV[d])
set VOE[d]=GetUnitX(VEE[d])
set VRE[d]=GetUnitY(VEE[d])
set VIE[d]=GetUnitX(ZZV[d])
set VAE[d]=GetUnitY(ZZV[d])
set VLE[d]=GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(ZZV[d])) )], 'A09F')
set VME[d]=Atan2(VRE[d] - VAE[d], VOE[d] - VIE[d])
set Z3V[Z4V[d]]=VIE[d] + 45 * Cos(VME[d] + ( bj_DEGTORAD * 90 ))
set Z7V[Z8V[d]]=VAE[d] + 45 * Sin(VME[d] + ( bj_DEGTORAD * - 90 ))
call MoveLocation(OLV, VIE[d], VAE[d])
set x=VIE[d] + 20 * Cos(VME[d] + ( 180 * bj_DEGTORAD ))
set y=VAE[d] + 20 * Sin(VME[d] + ( 180 * bj_DEGTORAD ))
set Z_V[d]=CreateUnit(Z0V[d], 'h00K', x, y, VME[d] * bj_RADTODEG)
set VHE[d]=GetUnitFlyHeight(Z_V[d])
set VFE[d]=- 200.
//call UnitAddAbility(Z_V[d],'Aloc')
set VXE[d]=CreateUnit(Z0V[d], 'h001', VIE[d], VAE[d], bj_UNIT_FACING)
call IssueTargetOrder(VXE[d], "stop", VEE[d])
set VJE[d]=AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", Z_V[d], "hand, left")
set VKE[d]=AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", Z_V[d], "hand, right")
set Z3V[Z4V[d]]=VIE[d] + 45 * Cos(VME[d] + ( bj_DEGTORAD * CDE ))
set Z7V[Z8V[d]]=VAE[d] + 45 * Sin(VME[d] + ( bj_DEGTORAD * CDE ))
set Z3V[Z4V[d] + 1]=VIE[d] + 45 * Cos(VME[d] - ( bj_DEGTORAD * CDE ))
set Z7V[Z8V[d] + 1]=VAE[d] + 45 * Sin(VME[d] - ( bj_DEGTORAD * CDE ))
set Z5V[Z6V[d]]=VOE[d] + 45 * Cos(VME[d] + ( bj_DEGTORAD * CDE ))
set Z9V[VVE[d]]=VRE[d] + 45 * Sin(VME[d] + ( bj_DEGTORAD * CDE ))
set Z5V[Z6V[d] + 1]=VOE[d] + 45 * Cos(VME[d] - ( bj_DEGTORAD * CDE ))
set Z9V[VVE[d] + 1]=VRE[d] + 45 * Sin(VME[d] - ( bj_DEGTORAD * CDE ))
loop
exitwhen i == 2
set CDE=- 90.
set Z1V[Z2V[d] + i]=AddLightningEx("SPLK", true, Z3V[Z4V[d] + i], Z7V[Z8V[d] + i], VFE[d], Z5V[Z6V[d] + i], Z9V[VVE[d] + i], VGE[d])
set i=i + 1
endloop
set VDE[d]=( ( VLE[d] ) * 9999. )
set VNE[d]=VHO(VLE[d])
set VCE[d]=( 20. + ( 10. * ( VLE[d] ) ) )
set VBE[d]=VJO(VLE[d])
return d
endfunction
function VLO takes nothing returns boolean
local integer d=PRE()
local integer i=0
local real CDE=90
local real x
local real y
local real dx
local real dy
local boolean b=false
local real UAE
local real r
set VPE[d]=VPE[d] + .04
call IssueTargetOrder(VXE[d], "stop", VEE[d])
set VME[d]=Atan2(VRE[d] - VAE[d], VOE[d] - VIE[d])
call SetUnitFacingTimed(Z_V[d], VME[d] * bj_RADTODEG, .0)
call QueueUnitAnimation(Z_V[d], "stand, channel")
set VOE[d]=GetUnitX(VEE[d])
set VRE[d]=GetUnitY(VEE[d])
set dx=VOE[d] - VIE[d]
set dy=VRE[d] - VAE[d]
if false then
set VIE[d]=GetUnitX(ZZV[d])
set VAE[d]=GetUnitY(ZZV[d])
endif
set x=VIE[d] + 20 * Cos(VME[d] + ( 180 * bj_DEGTORAD ))
set y=VAE[d] + 20 * Sin(VME[d] + ( 180 * bj_DEGTORAD ))
call SetUnitX(Z_V[d], x)
call SetUnitY(Z_V[d], y)
set Z3V[Z4V[d]]=VIE[d] + 45 * Cos(VME[d] + ( bj_DEGTORAD * CDE ))
set Z7V[Z8V[d]]=VAE[d] + 45 * Sin(VME[d] + ( bj_DEGTORAD * CDE ))
set Z3V[Z4V[d] + 1]=VIE[d] + 45 * Cos(VME[d] - ( bj_DEGTORAD * CDE ))
set Z7V[Z8V[d] + 1]=VAE[d] + 45 * Sin(VME[d] - ( bj_DEGTORAD * CDE ))
set Z5V[Z6V[d]]=VOE[d] + 45 * Cos(VME[d] + ( bj_DEGTORAD * CDE ))
set Z9V[VVE[d]]=VRE[d] + 45 * Sin(VME[d] + ( bj_DEGTORAD * CDE ))
set Z5V[Z6V[d] + 1]=VOE[d] + 45 * Cos(VME[d] - ( bj_DEGTORAD * CDE ))
set Z9V[VVE[d] + 1]=VRE[d] + 45 * Sin(VME[d] - ( bj_DEGTORAD * CDE ))
set UAE=( dx * dx + dy * dy )
call MoveLocation(OLV, VOE[d], VRE[d])
set VGE[d]=GetLocationZ(OLV) + GetUnitFlyHeight(VEE[d]) + 45
call MoveLocation(OLV, GetUnitX(Z_V[d]), GetUnitY(Z_V[d]))
set VFE[d]=( GetLocationZ(OLV) + VHE[d] ) + .0
loop
exitwhen i == 2
set CDE=- 90.
call MoveLightningEx(Z1V[Z2V[d] + i], true, Z3V[Z4V[d] + i], Z7V[Z8V[d] + i], VFE[d], Z5V[Z6V[d] + i], Z9V[VVE[d] + i], VGE[d])
set i=i + 1
endloop
set r=VNE[d] + 400
set r=r * r
if UAE > VNE[d] * VNE[d] and UAE < r and not M5E(VEE[d]) then
call M6E(VEE[d] , 400 , .4 , ( bj_RADTODEG * VME[d] ) + 180 , "none.mdl" , 0 , true , false)
set b=true
endif
if not b and ( dx * dx + dy * dy ) > VNE[d] * VNE[d] then
call M6E(VEE[d] , VBE[d] , .4 , ( bj_RADTODEG * VME[d] ) + 180 , "none.mdl" , 0 , true , false)
endif
if VPE[d] >= VCE[d] or ( dx * dx + dy * dy ) > VDE[d] * VDE[d] or not UnitAlive(VEE[d]) or VEE[d] == null then
call UnitRemoveAbility(VEE[d], 'B02X')
call UnitRemoveAbility(VEE[d], 'B02X')
call DestroyLightning(Z1V[Z2V[d]])
call DestroyLightning(Z1V[Z2V[d] + 1])
call DestroyEffect(VJE[d])
call DestroyEffect(VKE[d])
call KillUnit(Z_V[d])
call KillUnit(VXE[d])
call GRE(d)
return true
endif
return false
endfunction

function VPO takes nothing returns nothing
call PFE(function VLO , VKO() , .04)
call UnitAddAbility(GetSpellTargetUnit(), 'A09G')
call UnitAddAbility(GetSpellTargetUnit(), 'A09H')
call SetUnitAbilityLevel(GetSpellTargetUnit(), 'A09G', GetUnitAbilityLevel(GetTriggerUnit(), 'A09F'))
call SetUnitAbilityLevel(GetSpellTargetUnit(), 'A09H', GetUnitAbilityLevel(GetTriggerUnit(), 'A09F'))
call SetUnitVertexColor(GetSpellTargetUnit(), 50, 50, 50, 100)
if GetUnitAbilityLevel(GetSpellTargetUnit(), 'A04P') != 0 then
call UnitRemoveAbility(GetSpellTargetUnit(), 'A04P')
endif
if GetUnitAbilityLevel(GetSpellTargetUnit(), 'A0E0') != 0 then
call UnitRemoveAbility(GetSpellTargetUnit(), 'A0E0')
endif
if GetUnitAbilityLevel(GetSpellTargetUnit(), 'A04S') != 0 then
call UnitRemoveAbility(GetSpellTargetUnit(), 'A04S')
endif
call UnitApplyTimedLife(GetSpellTargetUnit(), 'BTLF', 20. + ( 10. * GetUnitAbilityLevel(GetTriggerUnit(), 'A09F') ))
endfunction
function VQO takes integer VRO returns real
if VRO == 1 then
return 700.
elseif VRO == 2 then
return 800.
elseif VRO == 3 then
return 700.
elseif VRO == 4 then
return 600.
endif
return .0
endfunction
function VSO takes nothing returns integer
local integer d=GEE()
local real CDE=90
local integer i=0
local real x
local real y
set VUE[d]=GetTriggerUnit()
set V8E[d]=GetSpellTargetUnit()
set VYE[d]=GetOwningPlayer(VUE[d])
set EVE[d]=GetUnitX(V8E[d])
set EEE[d]=GetUnitY(V8E[d])
set EXE[d]=GetUnitX(VUE[d])
set EOE[d]=GetUnitY(VUE[d])
set EHE[d]=GetUnitAbilityLevel(VUE[d], 'A00F')
set EJE[d]=Atan2(EEE[d] - EOE[d], EVE[d] - EXE[d])
set V0E[V1E[d]]=EXE[d] + 45 * Cos(EJE[d] + ( bj_DEGTORAD * 90 ))
set V4E[V5E[d]]=EOE[d] + 45 * Sin(EJE[d] + ( bj_DEGTORAD * - 90 ))
call MoveLocation(OMV, EXE[d], EOE[d])
set x=EXE[d] + 20 * Cos(EJE[d] + ( 180 * bj_DEGTORAD ))
set y=EOE[d] + 20 * Sin(EJE[d] + ( 180 * bj_DEGTORAD ))
set VWE[d]=CreateUnit(VYE[d], 'h007', x, y, EJE[d] * bj_RADTODEG)
set EDE[d]=GetUnitFlyHeight(VWE[d])
set EBE[d]=- 150.
//call UnitAddAbility(VWE[d],'Aloc')
set V9E[d]=CreateUnit(VYE[d], 'h007', EXE[d], EOE[d], bj_UNIT_FACING)
call IssueTargetOrder(V9E[d], "", V8E[d])
set EFE[d]=AddSpecialEffectTarget("", VWE[d], "hand, left")
set EGE[d]=AddSpecialEffectTarget("", VWE[d], "hand, right")
set V0E[V1E[d]]=EXE[d] + 45 * Cos(EJE[d] + ( bj_DEGTORAD * CDE ))
set V4E[V5E[d]]=EOE[d] + 45 * Sin(EJE[d] + ( bj_DEGTORAD * CDE ))
set V0E[V1E[d] + 1]=EXE[d] + 45 * Cos(EJE[d] - ( bj_DEGTORAD * CDE ))
set V4E[V5E[d] + 1]=EOE[d] + 45 * Sin(EJE[d] - ( bj_DEGTORAD * CDE ))
set V2E[V3E[d]]=EVE[d] + 45 * Cos(EJE[d] + ( bj_DEGTORAD * CDE ))
set V6E[V7E[d]]=EEE[d] + 45 * Sin(EJE[d] + ( bj_DEGTORAD * CDE ))
set V2E[V3E[d] + 1]=EVE[d] + 45 * Cos(EJE[d] - ( bj_DEGTORAD * CDE ))
set V6E[V7E[d] + 1]=EEE[d] + 45 * Sin(EJE[d] - ( bj_DEGTORAD * CDE ))
loop
exitwhen i == 2
set CDE=- 90.
set VZE[V_E[d] + i]=AddLightningEx("PONC", true, V0E[V1E[d] + i], V4E[V5E[d] + i], EBE[d], V2E[V3E[d] + i], V6E[V7E[d] + i], ECE[d])
set i=i + 1
endloop
set ENE[d]=( ( EHE[d] ) * 9999. )
set ERE[d]=VQO(EHE[d])
set EAE[d]=( ( EHE[d] ) * 99999. )
set EIE[d]=( ( EHE[d] ) * 200. )
return d
endfunction
function VTO takes nothing returns boolean
local integer d=PRE()
local integer i=0
local real CDE=90
local real x
local real y
local real dx
local real dy
local boolean b=false
local real UAE
local real r
set EKE[d]=EKE[d] + .04
call IssueTargetOrder(V9E[d], "", V8E[d])
set EJE[d]=Atan2(EEE[d] - EOE[d], EVE[d] - EXE[d])
call SetUnitFacingTimed(VWE[d], EJE[d] * bj_RADTODEG, .0)
call QueueUnitAnimation(VWE[d], "spell")
set EVE[d]=GetUnitX(V8E[d])
set EEE[d]=GetUnitY(V8E[d])
set dx=EVE[d] - EXE[d]
set dy=EEE[d] - EOE[d]
if false then
set EXE[d]=GetUnitX(VUE[d])
set EOE[d]=GetUnitY(VUE[d])
endif
set x=EXE[d] + 20 * Cos(EJE[d] + ( 180 * bj_DEGTORAD ))
set y=EOE[d] + 20 * Sin(EJE[d] + ( 180 * bj_DEGTORAD ))
call SetUnitX(VWE[d], x)
call SetUnitY(VWE[d], y)
set V0E[V1E[d]]=EXE[d] + 45 * Cos(EJE[d] + ( bj_DEGTORAD * CDE ))
set V4E[V5E[d]]=EOE[d] + 45 * Sin(EJE[d] + ( bj_DEGTORAD * CDE ))
set V0E[V1E[d] + 1]=EXE[d] + 45 * Cos(EJE[d] - ( bj_DEGTORAD * CDE ))
set V4E[V5E[d] + 1]=EOE[d] + 45 * Sin(EJE[d] - ( bj_DEGTORAD * CDE ))
set V2E[V3E[d]]=EVE[d] + 45 * Cos(EJE[d] + ( bj_DEGTORAD * CDE ))
set V6E[V7E[d]]=EEE[d] + 45 * Sin(EJE[d] + ( bj_DEGTORAD * CDE ))
set V2E[V3E[d] + 1]=EVE[d] + 45 * Cos(EJE[d] - ( bj_DEGTORAD * CDE ))
set V6E[V7E[d] + 1]=EEE[d] + 45 * Sin(EJE[d] - ( bj_DEGTORAD * CDE ))
set UAE=( dx * dx + dy * dy )
call MoveLocation(OMV, EVE[d], EEE[d])
set ECE[d]=GetLocationZ(OMV) + GetUnitFlyHeight(V8E[d]) + 45
call MoveLocation(OMV, GetUnitX(VWE[d]), GetUnitY(VWE[d]))
set EBE[d]=( GetLocationZ(OMV) + EDE[d] ) + .0
loop
exitwhen i == 2
set CDE=- 90.
call MoveLightningEx(VZE[V_E[d] + i], true, V0E[V1E[d] + i], V4E[V5E[d] + i], EBE[d], V2E[V3E[d] + i], V6E[V7E[d] + i], ECE[d])
set i=i + 1
endloop
set r=ERE[d] + 400
set r=r * r
if UAE > ERE[d] * ERE[d] and UAE < r and not M5E(V8E[d]) then
call M6E(V8E[d] , 400 , .4 , ( bj_RADTODEG * EJE[d] ) + 180 , "war3mapImported\\SpiritWalkerChange3.mdx" , 0 , true , false)
set b=true
endif
if not b and ( dx * dx + dy * dy ) > ERE[d] * ERE[d] then
call M6E(V8E[d] , EIE[d] , .4 , ( bj_RADTODEG * EJE[d] ) + 180 , "war3mapImported\\SpiritWalkerChange3.mdx" , 0 , true , false)
endif
if EKE[d] >= EAE[d] or ( dx * dx + dy * dy ) > ENE[d] * ENE[d] or not UnitAlive(V8E[d]) or V8E[d] == null then
call UnitRemoveAbility(V8E[d], 'B000')
call UnitRemoveAbility(V8E[d], 'B000')
call DestroyLightning(VZE[V_E[d]])
call DestroyLightning(VZE[V_E[d] + 1])
call DestroyEffect(EFE[d])
call DestroyEffect(EGE[d])
call KillUnit(VWE[d])
call KillUnit(V9E[d])
call GXE(d)
return true
endif
return false
endfunction

function VWO takes nothing returns nothing
call PFE(function VTO , VSO() , .04)
endfunction
function VYO takes nothing returns integer
local integer PXE=GVE()
if EYE[PXE] == null then
set EYE[PXE]=CreateGroup()
endif
return PXE
endfunction
function VZO takes integer D0E returns nothing
if D0E == null then
return
elseif ( EPE[D0E] != - 1 ) then
return
endif
call GroupClear(EYE[( D0E )])
set EPE[D0E]=ELE
set ELE=D0E
endfunction
function V_O takes nothing returns boolean
local unit u=GetFilterUnit()
if UnitAlive(u) and IsUnitEnemy(u, GetOwningPlayer(OSV)) and not IsUnitInGroup(u, OQV) then
if GetUnitAbilityLevel(u, 'A06V') != 1 then
call UnitAddAbility(u, 'A06V')
call AddUnitBonus(u , BONUS_MAGIC_RESISTANCE , - .25)
endif
call UnitDamageTargetEx(( OSV ) , ( u ) , ( ( I2R(OTV * GetHeroInt(OSV, true)) ) * .4 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call GroupAddUnit(OQV, u)
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", u, "origin"))
endif
set u=null
return false
endfunction
function V0O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x
local real y
if EUE[PXE] <= 0 then
call RemoveUnit(ESE[PXE])
call VZO(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set EWE[PXE]=EWE[PXE] + 4.
set x=( ( ( GetUnitX(EQE[PXE]) ) * 1. ) + ( ( 400. ) * 1. ) * Cos(( ( EWE[PXE] ) * 1. ) * bj_DEGTORAD) )
set y=( ( ( GetUnitY(EQE[PXE]) ) * 1. ) + ( ( 400. ) * 1. ) * Sin(( ( EWE[PXE] ) * 1. ) * bj_DEGTORAD) )
call SetUnitX(ESE[PXE], x)
call SetUnitY(ESE[PXE], y)
if GetUnitFlyHeight(EQE[PXE]) > 0 then
call SetUnitFlyHeight(ESE[PXE], GetUnitFlyHeight(EQE[PXE]), 0)
endif
set OSV=EQE[PXE]
set OTV=ETE[PXE]
set OQV=EYE[PXE]
call GroupEnumUnitsInRange(OPV, x, y, 116., Filter(function V_O))
set EUE[PXE]=EUE[PXE] - 4
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .0325, false, function V0O)
endif
set t=null
endfunction
function V1O takes nothing returns nothing
local unit OIX=GetTriggerUnit()
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local integer i
local real a
local real OJX
local real OKX
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=VYO()
if GetSpellAbilityId() == 'A06S' then
set i=GetUnitAbilityLevel(OIX, 'A06S')
set a=.0
elseif GetSpellAbilityId() == 'A07V' then
set i=GetUnitAbilityLevel(OIX, 'A07V')
set a=90.
elseif GetSpellAbilityId() == 'A0J3' then
set i=GetUnitAbilityLevel(OIX, 'A0J3')
set a=180.
elseif GetSpellAbilityId() == 'A08L' then
set i=GetUnitAbilityLevel(OIX, 'A08L')
set a=270.
endif
set a=a + GetUnitFacing(OIX)
set OJX=( ( ( OAX ) * 1. ) + ( ( 400. ) * 1. ) * Cos(( ( a ) * 1. ) * bj_DEGTORAD) )
set OKX=( ( ( ONX ) * 1. ) + ( ( 400. ) * 1. ) * Sin(( ( a ) * 1. ) * bj_DEGTORAD) )
set EQE[PXE]=OIX
set ETE[PXE]=i
set EUE[PXE]=360 * i
set EWE[PXE]=a
set ESE[PXE]=CreateUnit(GetOwningPlayer(OIX), 'h00T', OJX, OKX, .0)
call SetUnitPathing(ESE[PXE], false)
call UnitAddAbility(ESE[PXE], 'Amrf')
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .0325, false, function V0O)
set OIX=null
set t=null
endfunction

function V4O takes unit U0E,unit YSE returns boolean
return IsUnitEnemy(YSE, GetOwningPlayer(U0E)) and not ( IsUnitType(YSE, UNIT_TYPE_STRUCTURE) ) and not ( IsUnitType(YSE, UNIT_TYPE_MAGIC_IMMUNE) )
endfunction
function V5O takes unit U0E,unit YSE returns boolean
return IsUnitEnemy(YSE, GetOwningPlayer(U0E)) and not ( IsUnitType(YSE, UNIT_TYPE_STRUCTURE) ) and not ( IsUnitType(YSE, UNIT_TYPE_MAGIC_IMMUNE) )
endfunction
function V6O takes real x,real y returns real
call MoveLocation(OUV, x, y)
return GetLocationZ(OUV)
endfunction
function V7O takes nothing returns nothing
local timer t=GetExpiredTimer()
call RemoveUnit(LoadUnitHandle(OYV, GetHandleId(t), 0))
call FlushChildHashtable(OYV, GetHandleId(t))
call DestroyTimer(t)
set t=null
endfunction
function V8O takes unit J2E,real V9O returns nothing
local timer t=CreateTimer()
call SaveUnitHandle(OYV, GetHandleId(t), 0, J2E)
call TimerStart(t, V9O, false, function V7O)
set t=null
endfunction
function EVO takes nothing returns nothing
local timer t=GetExpiredTimer()
local unit u=LoadUnitHandle(OYV, GetHandleId(t), 0)
call PauseUnit(u, true)
call SetUnitX(u, LoadReal(OYV, GetHandleId(t), 1))
call SetUnitY(u, LoadReal(OYV, GetHandleId(t), 2))
call SetUnitAnimation(u, "spell")
call QueueUnitAnimation(u, "spell")
call FlushChildHashtable(OYV, GetHandleId(t))
call DestroyTimer(t)
set t=null
set u=null
endfunction
function EEO takes unit J2E returns nothing
local timer t=CreateTimer()
call SaveUnitHandle(OYV, GetHandleId(t), 0, J2E)
call SaveReal(OYV, GetHandleId(t), 1, GetUnitX(J2E))
call SaveReal(OYV, GetHandleId(t), 2, GetUnitY(J2E))
call TimerStart(t, 0, false, function EVO)
set t=null
endfunction
function EXO takes timer t returns nothing
local integer Id=GetHandleId(t)
call V8O(LoadUnitHandle(OYV, Id, 2) , 2)
call DestroyGroup(LoadGroupHandle(OYV, Id, 5))
call DestroyGroup(LoadGroupHandle(OYV, Id, 6))
call RemoveDestructable(LoadDestructableHandle(OYV, Id, 10))
call RemoveDestructable(LoadDestructableHandle(OYV, Id, 11))
call RemoveDestructable(LoadDestructableHandle(OYV, Id, 12))
call RemoveDestructable(LoadDestructableHandle(OYV, Id, 13))
call FlushChildHashtable(OYV, Id)
call DestroyTimer(t)
endfunction
function EOO takes unit U0E,group ERO returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local unit O3X
local unit u
local timer t
loop
set u=FirstOfGroup(ERO)
exitwhen u == null
call GroupRemoveUnit(ERO, u)
if IsUnitInGroup(u, LoadGroupHandle(OYV, Id, 5)) then
set t=LoadTimerHandle(OYV, Id, GetHandleId(u))
call PauseUnit(u, false)
call SetUnitTimeScale(u, 1)
call GroupRemoveUnit(LoadGroupHandle(OYV, Id, 5), u)
call RemoveUnit(LoadUnitHandle(OYV, GetHandleId(t), 2))
call DestroyEffect(LoadEffectHandle(OYV, GetHandleId(t), 4))
call FlushChildHashtable(OYV, GetHandleId(t))
call DestroyTimer(t)
set t=null
endif
if not IsUnitInGroup(u, LoadGroupHandle(OYV, Id, 6)) and GetWidgetLife(u) > .405 and V6O(GetUnitX(u) , GetUnitY(u)) + GetUnitFlyHeight(u) <= LoadReal(OYV, Id, 3) + O3V and V5O(U0E , u) then
set O3X=CreateUnit(GetOwningPlayer(U0E), 'h007', GetUnitX(u), GetUnitY(u), 0)
call UnitAddAbility(O3X, 'A06U')
call SetUnitAbilityLevel(O3X, 'A06U', LoadInteger(OYV, Id, 1))
call IssueTargetOrder(O3X, "frostnova", u)
call V8O(O3X , 1)
call GroupAddUnit(LoadGroupHandle(OYV, Id, 6), u)
endif
endloop
set O3X=null
endfunction
function EIO takes nothing returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local real EAO=LoadReal(OYV, Id, 4) - .04
local unit U0E
local unit u
call SaveReal(OYV, Id, 4, EAO)
call GroupEnumUnitsInRange(OWV, GetUnitX(LoadUnitHandle(OYV, Id, 2)), GetUnitY(LoadUnitHandle(OYV, Id, 2)), ( 1 - EAO / 1.4 ) * O2V[LoadInteger(OYV, Id, 1)] * 1.3, null)
call EOO(LoadUnitHandle(OYV, Id, 0) , OWV)
if EAO <= 0 then
call EOO(LoadUnitHandle(OYV, Id, 0) , LoadGroupHandle(OYV, Id, 5))
call EXO(GetExpiredTimer())
endif
endfunction
function ENO takes nothing returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local unit U0E=LoadUnitHandle(OYV, Id, 0)
local real x=GetUnitX(U0E)
local real y=GetUnitY(U0E)
local real K0E=GetUnitFacing(U0E) * bj_DEGTORAD
local real EBO=O2V[LoadInteger(OYV, Id, 1)] * 1.18 / 450
local real EAO=LoadReal(OYV, Id, 4) - .04
call SaveReal(OYV, Id, 4, EAO)
if EAO >= .78 then
if EAO >= 2 then
call SaveReal(OYV, Id, 4, 1.04)
call TimerStart(GetExpiredTimer(), .04, true, function ENO)
return
endif
call SetUnitX(U0E, x + 770 * EBO * .04 * Cos(K0E))
call SetUnitY(U0E, y + 770 * EBO * .04 * Sin(K0E))
call SetUnitFlyHeight(U0E, 280 + LoadReal(OYV, Id, 3) - V6O(x , y) + ( 1.04 - EAO ) * 231 * EBO, 0)
elseif EAO >= .52 then
call SetUnitTimeScale(U0E, 1)
call SetUnitX(U0E, x + 461 * EBO * .04 * Cos(K0E))
call SetUnitY(U0E, y + 461 * EBO * .04 * Sin(K0E))
call SetUnitFlyHeight(U0E, 280 + LoadReal(OYV, Id, 3) - V6O(x , y) + ( 240 - EAO * 231 ) * EBO, 0)
elseif EAO >= .26 then
call SetUnitX(U0E, x + 309 * EBO * .04 * Cos(K0E))
call SetUnitY(U0E, y + 309 * EBO * .04 * Sin(K0E))
call SetUnitFlyHeight(U0E, 280 + LoadReal(OYV, Id, 3) - V6O(x , y) + ( EAO * 77 + 80 ) * EBO, 0)
elseif EAO >= 0 then
call SetUnitX(U0E, x + 193 * EBO * .04 * Cos(K0E))
call SetUnitY(U0E, y + 193 * EBO * .04 * Sin(K0E))
call SetUnitFlyHeight(U0E, 280 + LoadReal(OYV, Id, 3) - V6O(x , y) + ( EAO * 461 - 20 ) * EBO, 0)
elseif EAO > - .4 then
call SetUnitFlyHeight(U0E, 280 + LoadReal(OYV, Id, 3) - V6O(x , y) + EAO * 650, 0)
else
call SetUnitFlyHeight(U0E, 30., 0)
call PauseUnit(U0E, false)
call SetUnitInvulnerable(U0E, false)
call SetUnitPosition(U0E, x, y)
call SaveReal(OYV, Id, 4, 1.4)
call SaveGroupHandle(OYV, Id, 6, CreateGroup())
call TimerStart(GetExpiredTimer(), .04, true, function EIO)
endif
set U0E=null
endfunction
function ECO takes nothing returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local unit U0E=LoadUnitHandle(OYV, Id, 0)
call SetUnitAnimation(U0E, "attack")
call QueueUnitAnimation(U0E, "stand")
call SetUnitTimeScale(U0E, .5)
call SetUnitAnimation(LoadUnitHandle(OYV, Id, 2), "death")
call FlushChildHashtable(OYV, GetHandleId(LoadTimerHandle(OYV, Id, 6)))
call DestroyTimer(LoadTimerHandle(OYV, Id, 6))
call SaveReal(OYV, Id, 4, 3)
call TimerStart(GetExpiredTimer(), 1.26, false, function ENO)
endfunction
function EDO takes nothing returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local integer EFO=LoadInteger(OYV, Id, 0)
local unit YSE=LoadUnitHandle(OYV, Id, 1)
local real x
local real y
if LoadBoolean(OYV, Id, 3) then
set x=GetUnitX(LoadUnitHandle(OYV, Id, 2)) - GetUnitX(YSE)
set y=GetUnitY(LoadUnitHandle(OYV, Id, 2)) - GetUnitY(YSE)
if x * x + y * y <= 90000 and not IsUnitHidden(YSE) then
call SaveBoolean(OYV, Id, 3, false)
call PauseUnit(YSE, true)
call SetUnitTimeScale(YSE, 0)
call TimerStart(GetExpiredTimer(), .04, true, function EDO)
else
call DestroyEffect(LoadEffectHandle(OYV, Id, 4))
call RemoveUnit(LoadUnitHandle(OYV, Id, 2))
call GroupRemoveUnit(LoadGroupHandle(OYV, EFO, 5), YSE)
call FlushChildHashtable(OYV, Id)
call DestroyTimer(GetExpiredTimer())
endif
elseif GetWidgetLife(YSE) > O_V[LoadInteger(OYV, EFO, 1)] * 2 then
call UnitDamageTargetEx(LoadUnitHandle(OYV, EFO, 0) , YSE , O_V[LoadInteger(OYV, EFO, 1)] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
set YSE=null
endfunction
function EGO takes nothing returns nothing
call SaveEffectHandle(OYV, GetHandleId(GetExpiredTimer()), 4, AddSpecialEffectTarget("war3mapImported\\SeaAura.mdx", LoadUnitHandle(OYV, GetHandleId(GetExpiredTimer()), 1), "origin"))
call TimerStart(GetExpiredTimer(), .3, false, function EDO)
endfunction
function EHO takes nothing returns nothing
local integer Id=LoadInteger(OYV, GetHandleId(GetExpiredTimer()), 0)
local group g=LoadGroupHandle(OYV, Id, 5)
local real x
local real y
local unit YSE
local unit EJO
local timer t
call GroupEnumUnitsInRange(OWV, GetUnitX(LoadUnitHandle(OYV, Id, 2)), GetUnitY(LoadUnitHandle(OYV, Id, 2)), O2V[LoadInteger(OYV, Id, 1)], null)
loop
set YSE=FirstOfGroup(OWV)
exitwhen YSE == null or ( not IsUnitInGroup(YSE, g) and GetWidgetLife(YSE) > .405 and V6O(GetUnitX(YSE) , GetUnitY(YSE)) + GetUnitFlyHeight(YSE) <= LoadReal(OYV, Id, 3) + O3V and V4O(LoadUnitHandle(OYV, Id, 0) , YSE) )
call GroupRemoveUnit(OWV, YSE)
endloop
call GroupClear(OWV)
if YSE != null then
set x=GetUnitX(YSE)
set y=GetUnitY(YSE)
call GroupAddUnit(g, YSE)
call SetSoundPosition(OZV, x, y, 200)
call StartSound(OZV)
set EJO=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'n018', x, y, 0)
call UnitAddAbility(EJO, 'Amrf')
call UnitRemoveAbility(EJO, 'Amrf')
call SetUnitX(EJO, x)
call SetUnitY(EJO, y)
call SetUnitFlyHeight(EJO, LoadReal(OYV, Id, 3) - V6O(x , y), 0)
call SetUnitAnimation(EJO, "death")
set t=CreateTimer()
call SaveInteger(OYV, GetHandleId(t), 0, Id)
call SaveUnitHandle(OYV, GetHandleId(t), 1, YSE)
call SaveUnitHandle(OYV, GetHandleId(t), 2, EJO)
call SaveBoolean(OYV, GetHandleId(t), 3, true)
call SaveTimerHandle(OYV, Id, GetHandleId(YSE), t)
call TimerStart(t, .4, false, function EGO)
set t=null
set EJO=null
set YSE=null
endif
set g=null
endfunction
function EKO takes nothing returns nothing
local timer t=CreateTimer()
local integer Id=GetHandleId(GetExpiredTimer())
local integer ELO=LoadInteger(OYV, Id, 1)
call SaveGroupHandle(OYV, Id, 5, CreateGroup())
call SaveTimerHandle(OYV, Id, 6, t)
call SaveInteger(OYV, GetHandleId(t), 0, Id)
call TimerStart(t, O1V[ELO], true, function EHO)
call TimerStart(GetExpiredTimer(), O0V[ELO], false, function ECO)
set t=null
endfunction
function EMO takes nothing returns nothing
local integer Id=GetHandleId(GetExpiredTimer())
local unit U0E=LoadUnitHandle(OYV, Id, 0)
local real QCE=O2V[LoadInteger(OYV, Id, 1)] * 1.18 / 450
local real EAO=LoadReal(OYV, Id, 4) - .04
call SetUnitFlyHeight(U0E, RMaxBJ(0, 280 + LoadReal(OYV, Id, 3) - V6O(GetUnitX(U0E) , GetUnitY(U0E)) - EAO * 200 * QCE), 0)
if EAO > 0 then
call SaveReal(OYV, Id, 4, EAO)
else
call SetUnitAnimation(U0E, "stand channel")
call QueueUnitAnimation(U0E, "stand channel")
call QueueUnitAnimation(U0E, "stand channel")
call TimerStart(GetExpiredTimer(), 1.8, false, function EKO)
endif
set U0E=null
endfunction
function EPO takes unit U0E,integer ELO returns nothing
local timer t=CreateTimer()
local integer Id=GetHandleId(t)
local real ux=GetUnitX(U0E)
local real uy=GetUnitY(U0E)
local real CHE=O2V[ELO] * 1.18
local real CDE=GetUnitFacing(U0E) * bj_DEGTORAD
local real x=ux + CHE * Cos(CDE)
local real y=uy + CHE * Sin(CDE)
local unit EQO=CreateUnit(GetOwningPlayer(U0E), 'n019', x, y, CDE * bj_RADTODEG + 180)
call UnitAddAbility(EQO, 'Amrf')
call UnitRemoveAbility(EQO, 'Amrf')
call SetUnitX(EQO, x)
call SetUnitY(EQO, y)
call SetUnitFlyHeight(EQO, 260, 0)
call SetUnitScale(EQO, CHE / 450, 1, 1)
call SetUnitAnimation(EQO, "birth")
call SetUnitInvulnerable(U0E, true)
call EEO(U0E)
call UnitAddAbility(U0E, 'Amrf')
call UnitRemoveAbility(U0E, 'Amrf')
call SaveUnitHandle(OYV, Id, 0, U0E)
call SaveInteger(OYV, Id, 1, ELO)
call SaveUnitHandle(OYV, Id, 2, EQO)
call SaveReal(OYV, Id, 3, V6O(x , y))
call SaveReal(OYV, Id, 4, 2)
call SaveDestructableHandle(OYV, Id, 10, CreateDestructable('YTfc', ux, uy, 0, 1, 0))
call SaveDestructableHandle(OYV, Id, 11, CreateDestructable('YTfc', x + CHE * Cos(CDE), y + CHE * Sin(CDE), 0, 1, 0))
call SaveDestructableHandle(OYV, Id, 12, CreateDestructable('YTfc', x + CHE * Cos(CDE + bj_PI * .5), y + CHE * Sin(CDE + bj_PI * .5), 0, 1, 0))
call SaveDestructableHandle(OYV, Id, 13, CreateDestructable('YTfc', x + CHE * Cos(CDE - bj_PI * .5), y + CHE * Sin(CDE - bj_PI * .5), 0, 1, 0))
call TimerStart(t, .04, true, function EMO)
set EQO=null
set t=null
endfunction
function ESO takes nothing returns nothing
//if GetSpellAbilityId()=='A06T' then
call EPO(GetTriggerUnit() , GetUnitAbilityLevel(GetTriggerUnit(), 'A06T'))
//endif
//return false
endfunction
function ETO takes nothing returns boolean
local real x1=GetUnitX(O5V)
local real y1=GetUnitY(O5V)
local real x2=GetUnitX(GetFilterUnit())
local real y2=GetUnitY(GetFilterUnit())
local real a=bj_RADTODEG * Atan2(y2 - y1, x2 - x1)
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(O5V)) then
call M6E(GetFilterUnit() , 124. , .6 , a , "war3mapImported\\SlideWater.mdx" , .0 , false , false)
endif
return false
endfunction
function EUO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x1=E2E[PXE]
local real y1=E3E[PXE]
local real x2=GetUnitX(E1E[PXE])
local real y2=GetUnitY(E1E[PXE])
local real d=SquareRoot(( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 ))
local unit u
if E4E[PXE] <= 0 then
call DestroyEffect(E5E[PXE])
if GetUnitAbilityLevel(E1E[PXE], 'B00R') != 1 then
call ZYE(E1E[PXE])
endif
call UnitRemoveAbility(E1E[PXE], 'A078')
call F9E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set O5V=E1E[PXE]
call GroupEnumUnitsInRange(O4V, GetUnitX(E1E[PXE]), GetUnitY(E1E[PXE]), 175., Filter(function ETO))
if d >= 30. then
set u=CreateUnit(GetOwningPlayer(E1E[PXE]), 'n01A', x2, y2, .0)
call SetUnitAbilityLevel(u, 'S008', GetUnitAbilityLevel(E1E[PXE], 'A07V'))
call SetUnitAbilityLevel(u, 'A080', GetUnitAbilityLevel(E1E[PXE], 'A07V'))
call IssueImmediateOrderById(u, 852177)
//call UnitApplyTimedLife(u,'BTLF',(I2R(E4E[PXE])*.02))
call UnitApplyTimedLife(u, 'BTLF', 8.)
set E2E[PXE]=x2
set E3E[PXE]=y2
endif
call ZWE(E1E[PXE] , 500.)
set E4E[PXE]=E4E[PXE] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function EUO)
endif
set t=null
set u=null
endfunction
function EWO takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=F8E()
set E1E[PXE]=GetTriggerUnit()
set E2E[PXE]=GetUnitX(E1E[PXE])
set E3E[PXE]=GetUnitY(E1E[PXE])
set E5E[PXE]=AddSpecialEffectTarget("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveMissile.mdl", E1E[PXE], "origin")
set E4E[PXE]=500 + 50 * GetUnitAbilityLevel(E1E[PXE], 'A07V')
call UnitAddAbility(E1E[PXE], 'A078')
call ZWE(E1E[PXE] , 500.)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function EUO)
set t=null
endfunction

function EZO takes nothing returns nothing
set O8V[1]=7
set O8V[2]=7
set O7V=2
endfunction
constant function E_O takes integer DZX,integer LZE returns real
return 50. + ( LZE * 2.5 * DZX )
endfunction
function E0O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer D0E=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if XIE[D0E] then
call RemoveUnit(E9E[D0E])
else
call SetUnitTimeScale(E9E[D0E], 1.5)
endif
call DestroyEffect(XRE[D0E])
call ReleaseTimer(t)
call F7E(D0E)
set t=null
endfunction
function E1O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer D0E=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local location CJE=Location(GetUnitX(XEE[D0E]), GetUnitY(XEE[D0E]))
call Y0E(XVE[D0E] , XEE[D0E] , ( XXE[D0E] * .75 ) , ATTACK_TYPE_CHAOS , false , true)
call OTX(XVE[D0E] , CJE , ( XXE[D0E] * .25 ) , 256. , DAMAGE_TYPE_NORMAL , ATTACK_TYPE_CHAOS , false)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\NewDirtEXNofire.mdx", XEE[D0E], "origin"))
call TimerStart(XOE[D0E], .25, false, function E0O)
call RemoveLocation(CJE)
set t=null
set CJE=null
endfunction
function E2O takes boolean b,integer E3O,unit U0E,unit S8X,real SVE,real x,real y returns nothing
local integer D0E=F6E()
if b then
set E9E[D0E]=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'E002', x, y, GetUnitFacing(U0E))
call UnitApplyTimedLife(E9E[D0E], 1, 2)
call SetUnitColor(E9E[D0E], GetPlayerColor(GetOwningPlayer(U0E)))
call SetUnitVertexColor(E9E[D0E], 255, 255, 255, O6V)
call SetUnitAnimationByIndex(E9E[D0E], E3O)
if GetRandomInt(0, 100) >= 50 then
call SetUnitAnimationByIndex(U0E, E3O)
endif
else
set E9E[D0E]=U0E
endif
set XIE[D0E]=b
set XVE[D0E]=U0E
set XEE[D0E]=S8X
set XXE[D0E]=SVE
set XOE[D0E]=(NewTimerEx(0)) // INLINED!!
call SetUnitTimeScale(E9E[D0E], 1.5)
set XRE[D0E]=AddSpecialEffectTarget("war3mapImported\\BeneficAura.MDX", E9E[D0E], "weapon")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((( ( XOE[D0E] ) ) )), ( ( D0E ))) // INLINED!!
call TimerStart(XOE[D0E], .5, false, function E1O)
endfunction
function E4O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer D0E=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if not ( IsUnitType(XKE[D0E], UNIT_TYPE_DEAD) or GetUnitTypeId(XKE[D0E]) == 0 ) and not ( IsUnitType(XLE[D0E], UNIT_TYPE_DEAD) or GetUnitTypeId(XLE[D0E]) == 0 ) and XHE[D0E] != XJE[D0E] and XCE[D0E] == GetUnitX(XKE[D0E]) and XDE[D0E] == GetUnitY(XKE[D0E]) then
if XHE[D0E] == 0 then
set bj_lastCreatedUnit=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h007', XCE[D0E], XDE[D0E], GetUnitFacing(XKE[D0E]))
call UnitApplyTimedLife(bj_lastCreatedUnit, 1, 1)
call SetUnitAbilityLevel(bj_lastCreatedUnit, 'A02B', XGE[D0E])
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, XLE[D0E])
call E2O(false , XME[D0E] , XKE[D0E] , XLE[D0E] , XFE[D0E] , XCE[D0E] , XDE[D0E])
else
call E2O(true , XME[D0E] , XKE[D0E] , XLE[D0E] , XFE[D0E] , XCE[D0E] , XDE[D0E])
endif
set XHE[D0E]=XHE[D0E] + 1
else
call ReleaseTimer(t)
call F5E(D0E)
endif
set t=null
endfunction
function E5O takes nothing returns nothing
local integer D0E=F4E()
local integer LZE=GetHeroStr(GetTriggerUnit(), true)
set XGE[D0E]=GetUnitAbilityLevel(GetTriggerUnit(), 'A027')
set XPE[D0E]=(NewTimerEx(0)) // INLINED!!
set XHE[D0E]=0
set XJE[D0E]=( ( XGE[D0E] ) + 5 )
set XFE[D0E]=E_O(XGE[D0E] , LZE)
set XKE[D0E]=GetTriggerUnit()
set XLE[D0E]=GetSpellTargetUnit()
set XCE[D0E]=GetUnitX(XKE[D0E])
set XDE[D0E]=GetUnitY(XKE[D0E])
set XME[D0E]=O8V[GetRandomInt(1, O7V)]
call SaveInteger(TimerUtils___ht, 0, GetHandleId((( ( XPE[D0E] ) ) )), ( ( D0E ))) // INLINED!!
call SetUnitAnimationByIndex(XKE[D0E], XME[D0E])
call TimerStart(XPE[D0E], .15, true, function E4O)
endfunction

function E7O takes nothing returns nothing

call EZO()
call RegisterSpellEffectEvent('A027' , function E5O)
endfunction
function E8O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0AX' )
endfunction
function E9O takes nothing returns nothing
local real XVO=GetUnitX(GetTriggerUnit())
local real XEO=GetUnitY(GetTriggerUnit())
local unit XXO=CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h007', XVO, XEO, .0)
local effect fx
local effect fx2
local effect fx3

if IsAMChonk[GetUnitUserData(GetTriggerUnit())] then
set fx=AddSpecialEffect("war3mapImported\\ChomusukeRed.mdx", GetSpellTargetX(), GetSpellTargetY())
set fx2=AddSpecialEffect("war3mapImported\\NuclearExplosion.mdx", GetSpellTargetX(), GetSpellTargetY())
set fx3=AddSpecialEffect("war3mapImported\\SHIVA Nuclear warhead V6.mdx", GetSpellTargetX(), GetSpellTargetY())
call BlzSetSpecialEffectScale(fx, 10.)
call BlzSetSpecialEffectScale(fx2, 1.5)
call BlzSetSpecialEffectScale(fx3, 2.)
call DestroyEffect(fx)
call DestroyEffect(fx2)
call DestroyEffect(fx3)
else
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", GetSpellTargetUnit(), "origin"))
set fx=AddSpecialEffect("war3mapImported\\Winter Blast HD.mdx", GetSpellTargetX(), GetSpellTargetY())
call BlzSetSpecialEffectScale(fx, 2.)
call DestroyEffect(fx)
endif
call UnitApplyTimedLife(XXO, 'BTLF', 1.)
call UnitAddAbility(XXO, 'A02Z')
call SetUnitAbilityLevel(XXO, 'A02Z', GetUnitAbilityLevel(GetTriggerUnit(), 'A0AX'))
call IssueTargetOrderById(XXO, 852226, GetSpellTargetUnit())
set XXO=null
set fx=null
set fx2=null
set fx3=null
endfunction
//function XRO takes nothing returns boolean
//return(GetSpellAbilityId()=='A03H')
//endfunction
//function XIO takes nothing returns nothing
//call SetWidgetLife(GetTriggerUnit(),GetWidgetLife(GetTriggerUnit())-(GetWidgetLife(GetTriggerUnit())/5.))
//call U_E(GetTriggerUnit(),GetUnitX(GetTriggerUnit()),GetUnitY(GetTriggerUnit()),200.,110.,.0,1,5+(GetUnitAbilityLevel(GetTriggerUnit(),'A03H')),.33,(4+I2R(GetUnitAbilityLevel(GetTriggerUnit(),'A03H'))),(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_LIFE)*.1),.8,false,true,true,"war3mapImported\\ChaosExplosion.mdx",ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNIVERSAL)

//endfunction
function XNO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0AY' )
endfunction
function XBO takes nothing returns nothing
local real XVO=GetUnitX(GetTriggerUnit())
local real XEO=GetUnitY(GetTriggerUnit())
local unit XXO=CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h007', XVO, XEO, .0)
call UnitApplyTimedLife(XXO, 'BTLF', 1.)
call UnitAddAbility(XXO, 'A030')
call SetUnitAbilityLevel(XXO, 'A030', GetUnitAbilityLevel(GetTriggerUnit(), 'A0AY'))
call IssueTargetOrderById(XXO, 852587, GetSpellTargetUnit())
set XXO=null
endfunction
function XDO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01L' )
endfunction
function XFO takes nothing returns nothing
local real XVO=GetUnitX(GetTriggerUnit())
local real XEO=GetUnitY(GetTriggerUnit())
local unit XXO=CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h007', XVO, XEO, .0)
call UnitApplyTimedLife(XXO, 'BTLF', 10.)
call UnitAddAbility(XXO, 'A031')
call SetUnitAbilityLevel(XXO, 'A031', GetUnitAbilityLevel(GetTriggerUnit(), 'A01L'))
call IssueTargetOrderById(XXO, 852119, GetSpellTargetUnit())
set XXO=null
endfunction
function XHO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A03A', GetAttacker()) > 0 )
endfunction
function XJO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u=XUE[PXE]
local integer i=XWE[PXE]
if GetUnitAbilityLevel(u, 'A01J') == 1 then
call SetHeroAgi(u, GetHeroAgi(u, false) + i, true)
elseif GetUnitAbilityLevel(u, 'A038') == 1 then
call SetHeroInt(u, GetHeroInt(u, false) + i, true)
elseif GetUnitAbilityLevel(u, 'A039') == 1 then
call SetHeroStr(u, GetHeroStr(u, false) + i, true)
endif
call ReleaseTimer(GetExpiredTimer())
call F3E(PXE)
set t=null
set u=null
endfunction
function XKO takes nothing returns nothing
local unit u=GetAttacker()
local timer t
local integer i=GetUnitAbilityLevel(u, 'A03A')
local real CIE=( I2R(i) * 2 ) + 5.
local integer PXE=F2E()
set XUE[PXE]=u
set XWE[PXE]=i
if GetUnitAbilityLevel(u, 'A01J') == 1 then
call SetHeroAgi(u, GetHeroAgi(u, false) - i, true)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl", u, "chest"))
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, CIE, false, function XJO)
elseif GetUnitAbilityLevel(u, 'A038') == 1 then
call SetHeroInt(u, GetHeroInt(u, false) - i, true)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl", u, "chest"))
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, CIE, false, function XJO)
elseif GetUnitAbilityLevel(u, 'A039') == 1 and GetHeroStr(u, false) >= i then
call SetHeroStr(u, GetHeroStr(u, false) - i, true)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl", u, "chest"))
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, CIE, false, function XJO)
else
call F3E(PXE)
endif
set u=null
set t=null
endfunction
function XMO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if OQE[PXE] == .0 then
call DestroyEffect(OPE[PXE])
call F_E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
call UnitDamageTargetEx(( OLE[PXE] ) , ( OME[PXE] ) , ( ( I2R(GetUnitAbilityLevel(OLE[PXE], 'A042')) * 5. ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
set OQE[PXE]=OQE[PXE] - .5
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .25, false, function XMO)
endif
set t=null
endfunction
function XPO takes nothing returns boolean
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RVV)) and OrderId2String(GetUnitCurrentOrder(RVV)) == "stampede" then
call UnitDamageTargetEx(( RVV ) , ( GetFilterUnit() ) , ( ( ( I2R(GetUnitAbilityLevel(RVV, 'A042')) * 150. * I2R(GetUnitAbilityLevel(RVV, 'A042')) ) * 1. ) + ( I2R(GetUnitAbilityLevel(RVV, 'A042')) * GetHeroInt(RVV, true) * 2 ) ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
return false
endfunction
function XQO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
set RVV=X0E[PXE]
if OrderId2String(GetUnitCurrentOrder(X0E[PXE])) != "stampede" or OGE[PXE] <= .0 or not UnitAlive(X0E[PXE]) then
call ReleaseTimer(GetExpiredTimer())
call DestroyEffect(OIE[PXE])
call DestroyEffect(OAE[PXE])
call DestroyEffect(ONE[PXE])
call DestroyEffect(OBE[PXE])
call DestroyEffect(OCE[PXE])
call DestroyEffect(ODE[PXE])
call DestroyEffect(OFE[PXE])
call F1E(PXE)
else
call GroupEnumUnitsInRange(O9V, X1E[PXE], X2E[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X3E[PXE], X4E[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X5E[PXE], X6E[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X7E[PXE], X8E[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X9E[PXE], OVE[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, OEE[PXE], OXE[PXE], 174., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, OOE[PXE], ORE[PXE], 174., Filter(function XPO))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X1E[PXE], X2E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X3E[PXE], X4E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X5E[PXE], X6E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X7E[PXE], X8E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X9E[PXE], OVE[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", OEE[PXE], OXE[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", OOE[PXE], ORE[PXE]))
set OGE[PXE]=OGE[PXE] - .5
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .5, false, function XQO)
endif
set t=null
endfunction
function XSO takes nothing returns nothing
local real CDE=GetUnitFacing(GetTriggerUnit())
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=F0E()
set X0E[PXE]=GetTriggerUnit()
set X1E[PXE]=GetSpellTargetX()
set X2E[PXE]=GetSpellTargetY()
set OIE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", X1E[PXE], X2E[PXE])
set X3E[PXE]=X1E[PXE] + 300. * Cos(( CDE + 90. ) * bj_DEGTORAD)
set X4E[PXE]=X2E[PXE] + 300. * Sin(( CDE + 90. ) * bj_DEGTORAD)
set OAE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", X3E[PXE], X4E[PXE])
set X5E[PXE]=X1E[PXE] + 600. * Cos(( CDE + 90. ) * bj_DEGTORAD)
set X6E[PXE]=X2E[PXE] + 600. * Sin(( CDE + 90. ) * bj_DEGTORAD)
set ONE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", X5E[PXE], X6E[PXE])
set X7E[PXE]=X1E[PXE] + 900. * Cos(( CDE + 90. ) * bj_DEGTORAD)
set X8E[PXE]=X2E[PXE] + 900. * Sin(( CDE + 90. ) * bj_DEGTORAD)
set OBE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", X7E[PXE], X8E[PXE])
set X9E[PXE]=X1E[PXE] + 300. * Cos(( CDE - 90. ) * bj_DEGTORAD)
set OVE[PXE]=X2E[PXE] + 300. * Sin(( CDE - 90. ) * bj_DEGTORAD)
set OCE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", X9E[PXE], OVE[PXE])
set OEE[PXE]=X1E[PXE] + 600. * Cos(( CDE - 90. ) * bj_DEGTORAD)
set OXE[PXE]=X2E[PXE] + 600. * Sin(( CDE - 90. ) * bj_DEGTORAD)
set ODE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", OEE[PXE], OXE[PXE])
set OOE[PXE]=X1E[PXE] + 900. * Cos(( CDE - 90. ) * bj_DEGTORAD)
set ORE[PXE]=X2E[PXE] + 900. * Sin(( CDE - 90. ) * bj_DEGTORAD)
set OFE[PXE]=AddSpecialEffect("war3mapImported\\FireAura.mdx", OOE[PXE], ORE[PXE])
set OGE[PXE]=5. + GetUnitAbilityLevel(X0E[PXE], 'A042')
set RVV=X0E[PXE]
call GroupEnumUnitsInRange(O9V, X1E[PXE], X2E[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X3E[PXE], X4E[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X5E[PXE], X6E[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X7E[PXE], X8E[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, X9E[PXE], OVE[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, OEE[PXE], OXE[PXE], 150., Filter(function XPO))
call GroupEnumUnitsInRange(O9V, OOE[PXE], ORE[PXE], 150., Filter(function XPO))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X1E[PXE], X2E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X3E[PXE], X4E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X5E[PXE], X6E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X7E[PXE], X8E[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", X9E[PXE], OVE[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", OEE[PXE], OXE[PXE]))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", OOE[PXE], ORE[PXE]))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .5, false, function XQO)
set t=null
endfunction

function XUO takes nothing returns nothing
set VT[1]='nspb'
set VT[2]='nanc'
set VT[3]='njga'
set VT[4]='nfrg'
set VT[5]='nfre'
set VT[6]='nhar'
set VT[7]='nhrh'
set VT[8]='nltl'
set VT[9]='nlds'
set VT[10]='nlsn'
set VT[11]='nomg'
set VT[12]='nogm'
set VT[13]='nrzb'
set VT[14]='ntrs'
set VT[15]='nssp'
set ET[1]='nsqa'
set ET[2]='nowk'
set ET[3]='nsbm'
set ET[4]='nmdr'
set ET[5]='nwld'
set ET[6]='ntrd'
set ET[7]='njgb'
set ET[8]='nfra'
set ET[9]='nhrq'
set ET[10]='nmgr'
set ET[11]='nmgw'
set ET[12]='nlkl'
set ET[13]='nogl'
set ET[14]='nano'
set ET[15]='nsll'
set ET[16]='nsc3'
endfunction
function XYO takes nothing returns nothing
local unit u=GetTriggerUnit()
local integer i=GetRandomInt(1, 15)
local real x=GetUnitX(u) + 150. * Cos(GetUnitFacing(u) * bj_DEGTORAD)
local real y=GetUnitY(u) + 150. * Sin(GetUnitFacing(u) * bj_DEGTORAD)
local unit s1=null
local unit s2=null
local unit s3=null
local unit s4=null
local integer li=0
local integer hp=( PC * PC ) / 3
local integer SVE=PC
local integer XZO=GetUnitAbilityLevel(u, 'A05B') * 5
local integer X_O=GetUnitAbilityLevel(u, 'A054') * 2
local integer X0O
local integer X1O=0
local integer hpleft
local integer dmgleft
local integer hp2
local integer SVE2
local integer XZO2
local integer X_O2
local real X2O=15. + ( 30. * GetUnitAbilityLevel(u, 'A04Y') ) + ( I2R(PC) / 2. )
set s1=CreateUnit(GetOwningPlayer(u), VT[i], x, y, GetUnitFacing(u))
if PC > 30 then
set SVE=PC * ( PC / 5 )
set hp=R2I(( PC * PC ) / 1.5)
endif
if LWMON and not GAMEM then
set SVE=( GetHeroLevel(u) * 3 / 2 )
set hp=( GetHeroLevel(u) * GetHeroLevel(u) / 9 )
endif
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s1, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s1, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s1, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s1, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
if i == 1 or i == 15 then
if GetRandomInt(1, 2) == 1 then
set s2=CreateUnit(GetOwningPlayer(u), VT[1], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
else
set s2=CreateUnit(GetOwningPlayer(u), VT[15], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
endif
if i == 6 or i == 7 then
if GetRandomInt(1, 2) == 1 then
set s2=CreateUnit(GetOwningPlayer(u), VT[6], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
else
set s2=CreateUnit(GetOwningPlayer(u), VT[7], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
endif
if i == 2 then
set s2=CreateUnit(GetOwningPlayer(u), VT[2], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
if i == 13 then
set s2=CreateUnit(GetOwningPlayer(u), VT[13], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
if GetUnitAbilityLevel(u, 'B01D') == 1 then
if i == 1 or i == 2 or i == 6 or i == 7 or i == 13 or i == 15 then
set s3=CreateUnit(GetOwningPlayer(u), VT[i], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s3, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s3, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s3, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s3, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
if i == 2 or i == 13 then
set s4=CreateUnit(GetOwningPlayer(u), VT[i], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
if i == 1 or i == 15 then
if GetRandomInt(1, 2) == 1 then
set X0O=1
else
set X0O=15
endif
set s4=CreateUnit(GetOwningPlayer(u), VT[X0O], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
if i == 6 or i == 7 then
if GetRandomInt(1, 2) == 1 then
set X0O=6
else
set X0O=7
endif
set s4=CreateUnit(GetOwningPlayer(u), VT[X1O], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s4, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s4, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s4, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s4, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
else
set s3=CreateUnit(GetOwningPlayer(u), VT[i], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s3, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s3, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s3, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s3, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s3, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s3, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
endif
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", s1, "origin"))
call UnitApplyTimedLife(s1, 'BTLF', X2O)
if s2 != null then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", s2, "origin"))
call UnitApplyTimedLife(s2, 'BTLF', X2O)
endif
if s3 != null then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", s3, "origin"))
call UnitApplyTimedLife(s3, 'BTLF', X2O)
endif
if s4 != null then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdx", s4, "origin"))
call UnitApplyTimedLife(s4, 'BTLF', X2O)
endif
if GetUnitAbilityLevel(u, 'B01D') == 1 then
call UnitRemoveAbility(u, 'B01D')
endif
set u=null
set s1=null
set s2=null
set s3=null
set s4=null
endfunction

function X4O takes nothing returns nothing
local unit u=GetTriggerUnit()
local integer i=GetRandomInt(1, 16)
local real x=GetUnitX(u) + 150. * Cos(GetUnitFacing(u) * bj_DEGTORAD)
local real y=GetUnitY(u) + 150. * Sin(GetUnitFacing(u) * bj_DEGTORAD)
local unit s1=null
local unit s2=null
local unit s3=null
local unit s4=null
local integer li=0
local integer hp=R2I(( PC * PC ) / 1.5)
local integer SVE=PC * 2
local integer XZO=GetUnitAbilityLevel(u, 'A05B') * 10
local integer X_O=GetUnitAbilityLevel(u, 'A054') * 3
local integer X0O
local integer X1O
local integer hpleft
local integer dmgleft
local integer hp2
local integer SVE2
local integer XZO2
local integer X_O2
local real X2O=15. + ( 40. * GetUnitAbilityLevel(u, 'A04Y') ) + I2R(PC)
if PC >= 30 then
set SVE=PC * ( PC / 3 )
set hp=( PC * PC )
endif
if LWMON and not GAMEM then
set SVE=( GetHeroLevel(u) )
set hp=( GetHeroLevel(u) * GetHeroLevel(u) / 5 )
endif
set s1=CreateUnit(GetOwningPlayer(u), ET[i], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s1, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s1, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s1, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s1, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s1, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s1, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
if GetUnitAbilityLevel(u, 'B01D') == 1 then
set s2=CreateUnit(GetOwningPlayer(u), ET[i], x, y, GetUnitFacing(u))
                    if hp >= 200 then
                    set hpleft=ModuloInteger(hp, 100)
                    set hp2=hp / 100
                    loop
                        exitwhen li > hp2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > hp
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if SVE >= 30 then
                    set dmgleft=ModuloInteger(SVE, 10)
                    set SVE2=SVE / 10
                    loop
                        exitwhen li > SVE2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > SVE
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if XZO >= 200 then
                    set hpleft=ModuloInteger(XZO, 100)
                    set XZO2=XZO / 100
                    loop
                        exitwhen li > XZO2
                        call UnitAddItemById(s2, 'I02Q')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > hpleft
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > XZO
                        call UnitAddItemById(s2, 'I021')
                        set li=li + 1
                    endloop
                    endif
                    set li=0
                    if X_O >= 30 then
                    set dmgleft=ModuloInteger(X_O, 10)
                    set X_O2=X_O / 10
                    loop
                        exitwhen li > X_O2
                        call UnitAddItemById(s2, 'I02P')
                        set li=li + 1
                    endloop
                    set li=0
                    loop
                        exitwhen li > dmgleft
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    else
                    loop
                        exitwhen li > X_O
                        call UnitAddItemById(s2, 'I022')
                        set li=li + 1
                    endloop
                    endif
set li=0
endif
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\s_Nature'sBloom Effect.mdx", s1, "origin"))
call UnitApplyTimedLife(s1, 'BTLF', X2O)
if s2 != null then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\s_Nature'sBloom Effect.mdx", s2, "origin"))
call UnitApplyTimedLife(s2, 'BTLF', X2O)
endif
if GetUnitAbilityLevel(u, 'B01D') == 1 then
call UnitRemoveAbility(u, 'B01D')
endif
set u=null
set s1=null
set s2=null
endfunction

//function X6O takes nothing returns boolean
//return(GetSpellAbilityId()=='A05N')
//endfunction
//function X7O takes nothing returns nothing
//call CreateNUnitsAtLoc(1,'h007',GetOwningPlayer(GetTriggerUnit()),GetRectCenter(bj_mapInitialPlayableArea),bj_UNIT_FACING)
//call UnitAddAbility(bj_lastCreatedUnit,'A05M')
//call SetUnitAbilityLevelSwapped('A05M',bj_lastCreatedUnit,GetUnitAbilityLevelSwapped('A05N',GetTriggerUnit()))
//call UnitAddAbility(bj_lastCreatedUnit,'A05O')
//call SetUnitAbilityLevelSwapped('A05O',bj_lastCreatedUnit,GetUnitAbilityLevelSwapped('A05N',GetTriggerUnit()))
//call UnitApplyTimedLifeBJ(30.,'BTLF',bj_lastCreatedUnit)
//endfunction
function X9O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A09M' )
endfunction
function OVO takes nothing returns nothing
call ModifyHeroStat(1, GetTriggerUnit(), 0, ( 3 * GetUnitAbilityLevelSwapped('A09M', GetTriggerUnit()) ))
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\DarkForce.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function OXO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A09K' )
endfunction
function OOO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A09N', GetTriggerUnit()) == 1 )
endfunction
function ORO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A09N', GetTriggerUnit()) == 1) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Shadow Blend is already active.")
endif
endfunction
function OAO takes nothing returns boolean
local real x1=GetUnitX(RXV)
local real y1=GetUnitY(RXV)
local real x2=GetUnitX(GetFilterUnit())
local real y2=GetUnitY(GetFilterUnit())
local real SVE=I2R(GetHeroStr(RXV, true)) * I2R(( GetUnitAbilityLevel(RXV, 'A0FD') )) * 3 + ( 9 * BlzGetUnitArmor(RXV) * I2R(( GetUnitAbilityLevel(RXV, 'A0FD') )) )
local unit s=CreateUnit(GetOwningPlayer(RXV), 'h007', x1, y1, .0)
local real a=bj_RADTODEG * ( Atan2(y2 - y1, x2 - x1) )
local real d=300. + ( 10. * I2R(GetUnitAbilityLevel(RXV, 'A0FD')) )
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RXV)) then
call M6E(GetFilterUnit() , d , 1. , a , "war3mapImported\\Dust.mdx" , .0 , true , false)
call Y0E(s , GetFilterUnit() , SVE , ATTACK_TYPE_SIEGE , false , false)
call SEE(GetFilterUnit() , R2I(SVE))
call IssueTargetOrderById(GetFilterUnit(), 851983, RXV)
endif
call UnitApplyTimedLife(s, 'BTLF', 1.)
set s=null
return false
endfunction
function ONO takes nothing returns nothing
local unit u=GetTriggerUnit()
local real x=GetUnitX(u)
local real y=GetUnitY(u)
set RXV=u
call GroupEnumUnitsInRange(REV, x, y, 225. + ( 20. * I2R(GetUnitAbilityLevel(u, 'A0FD')) ), Filter(function OAO))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Explosion.mdx", x, y))
set u=null
endfunction

function OCO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real h
if OWE[PXE] <= 0 then
call ReleaseTimer(GetExpiredTimer())
call FYE(PXE)
else
set h=( ( 3. * OZE[PXE] ) * ( 1. + ( .1 * OZE[PXE] ) ) + ( GetWidgetLife(OYE[PXE]) * .0007 * OZE[PXE] ) )
if GetWidgetLife(OYE[PXE]) + h >= GetUnitState(OYE[PXE], UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(OYE[PXE], GetUnitState(OYE[PXE], UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(OYE[PXE], GetWidgetLife(OYE[PXE]) + h)
endif
if GetRandomInt(0, 100) <= 33 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Resurrecttarget.mdx", OYE[PXE], "origin"))
endif
set OWE[PXE]=OWE[PXE] - .1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .1, false, function OCO)
endif
set t=null
endfunction
function ODO takes nothing returns nothing
local unit u=GetTriggerUnit()
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=FWE()
set OYE[PXE]=GetSpellTargetUnit()
set OZE[PXE]=GetUnitAbilityLevel(u, 'A0DF')
set OWE[PXE]=3.5 + ( .25 * OZE[PXE] )
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function OCO)
set u=null
set t=null
endfunction

function OGO takes nothing returns nothing
local real x=GetSpellTargetX()
local real y=GetSpellTargetY()
local unit OIX=GetTriggerUnit()
local unit u=CreateUnit(GetOwningPlayer(OIX), 'o016', x, y, .0)
call SetUnitAbilityLevel(u, 'A049', GetUnitAbilityLevel(OIX, 'A0HK'))
call SetUnitAbilityLevel(u, 'S000', GetUnitAbilityLevel(OIX, 'A0HK'))
call UnitApplyTimedLife(u, 'BTLF', 20.)
call IssueImmediateOrderById(u, 852177)
set OIX=null
set u=null
endfunction


function OMO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real maxhp= GetUnitState(O2E[PXE], UNIT_STATE_MAX_LIFE)
local location IHX=GetUnitLoc(O2E[PXE])
local location IJX=GetUnitLoc(O3E[PXE])
if O4E[PXE] == 0 or UnitAlive(O3E[PXE]) == false then
call FUE(PXE)
call ReleaseTimer(GetExpiredTimer())
else
call Y0E(O2E[PXE] , O3E[PXE] , O5E[PXE] , ATTACK_TYPE_HERO , false , true)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Bleeding.mdx", O3E[PXE], "chest"))
if DistanceBetweenPoints(IJX, IHX) <= 180. then
if GetWidgetLife(O2E[PXE]) + O5E[PXE] >= maxhp then
call SetWidgetLife(O2E[PXE], maxhp)
else
call SetWidgetLife(O2E[PXE], GetWidgetLife(O2E[PXE]) + ( O5E[PXE] ))
endif
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\VampiricAuraTarget.mdx", O2E[PXE], "origin"))
endif
set O4E[PXE]=O4E[PXE] - .5
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .5, false, function OMO)
endif
call RemoveLocation(IHX)
call RemoveLocation(IJX)
set IHX=null
set IJX=null
set t=null
endfunction
function OPO takes nothing returns nothing
local unit u=GetTriggerUnit()
local unit EXX=GetEventDamageSource()
local location IHX=GetUnitLoc(EXX)
local location CJE=CNE(IHX , 140. , GetUnitFacing(EXX))
local real CIE=I2R(GetUnitAbilityLevel(u, 'A00Y'))
local real OQO=( GetEventDamage() * CIE * .2 * .1 ) + ( GetHeroAgi(u, true) * CIE * .25 )
local timer t
local integer PXE=FTE()
set O2E[PXE]=u
set O3E[PXE]=EXX
set O5E[PXE]=OQO
set O4E[PXE]=5.
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageCaster.mdl", u, "origin"))
call SAE('h00O' , GetLocationX(CJE) , GetLocationY(CJE) , ( GetUnitFacing(EXX) - 180. ) , 1.134 , "attack two" , 1.)
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 1., false, function OMO)
call RemoveLocation(IHX)
call RemoveLocation(CJE)
set u=null
set EXX=null
set t=null
set CJE=null
set IHX=null
endfunction
function OTO takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'A00Y') != 0 and GetRandomInt(1, 100) <= ( GetUnitAbilityLevel(GetTriggerUnit(), 'A00Y') * 2 ) and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and ( CI[NI] ) and IsUnitType(GetEventDamageSource(), UNIT_TYPE_MELEE_ATTACKER) then
call OPO()
endif
return false
endfunction
function OZO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03L' )
endfunction
function O_O takes nothing returns nothing
set AQ=GetUnitLoc(GetTriggerUnit())
set NQ=GetSpellTargetLoc()
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetSpellAbilityUnit()), AQ, bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A0DL')
call SetUnitAbilityLevelSwapped('A0DL', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call UnitApplyTimedLifeBJ(22., 'BTLF', bj_lastCreatedUnit)
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 852473, NQ)
call RemoveLocation(AQ)
call RemoveLocation(NQ)
endfunction
function O1O takes nothing returns boolean
local unit u
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RAV)) then
set u=CreateUnit(GetOwningPlayer(RAV), 'h007', GetUnitX(RAV), GetUnitY(RAV), .0)
call UnitAddAbility(u, 'A00S')
call SetUnitAbilityLevel(u, 'A00S', GetUnitAbilityLevel(RAV, 'A03B'))
call IssueTargetOrderById(u, 852095, GetFilterUnit())
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitDamageTargetEx(RAV , GetFilterUnit() , GetHeroStr(RAV, true) * GetUnitAbilityLevel(RAV, 'A03B') , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
endif
set u=null
return false
endfunction
function O2O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real ux=GetUnitX(RVE[PXE])
local real uy=GetUnitY(RVE[PXE])
local unit u
local real D_X=GetRandomReal(.5, 5. - ( I2R(GetUnitAbilityLevel(O9E[PXE], 'A03B')) * .3 ))
if REE[PXE] == 0 or UnitAlive(O9E[PXE]) == false then
call DestroyEffect(RXE[PXE])
call FSE(PXE)
call ReleaseTimer(GetExpiredTimer())
else
set RAV=O9E[PXE]
call GroupEnumUnitsInRange(RIV, ux, uy, 250., Filter(function O1O))
call DestroyEffect(AddSpecialEffect("war3mapImported\\EarthDetonation.mdx", ux, uy))
set REE[PXE]=REE[PXE] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, D_X, false, function O2O)
endif
set t=null
set u=null
endfunction
function O3O takes nothing returns nothing
local unit u=GetTriggerUnit()
local unit EXX=GetSpellTargetUnit()
local integer ELO=GetUnitAbilityLevel(u, 'A03B')
local real O4O=GetRandomReal(.5, 5. - ( I2R(ELO) * .3 ))
local timer t
local integer PXE=FQE()
set O9E[PXE]=u
set RVE[PXE]=EXX
set REE[PXE]=2 + ELO
set RXE[PXE]=AddSpecialEffectTarget("war3mapImported\\HolyBlessing.mdx", EXX, "origin")
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, O4O, false, function O2O)
set u=null
set EXX=null
set t=null
endfunction

function O6O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01I' )
endfunction
function O7O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call UnitRemoveAbility(RAE[PXE], 'A03A')
call UnitRemoveAbility(RNE[PXE], 'A03A')
call DestroyEffect(RBE[PXE])
call DestroyEffect(RCE[PXE])
call ReleaseTimer(GetExpiredTimer())
call FPE(PXE)
set t=null
endfunction
function O8O takes nothing returns nothing
local unit EXX=GetSpellTargetUnit()
local unit U0E=GetTriggerUnit()
local real X2O=I2R(GetUnitAbilityLevel(U0E, 'A01I')) + 10.
local integer ELO=GetUnitAbilityLevel(U0E, 'A01I')
local timer t
local integer PXE=FME()
set RAE[PXE]=U0E
set RNE[PXE]=EXX
set RBE[PXE]=AddSpecialEffectTarget("war3mapImported\\Duel.mdx", U0E, "overhead")
set RCE[PXE]=AddSpecialEffectTarget("war3mapImported\\Duel.mdx", EXX, "overhead")
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\ANsa\\ANsaTarget.mdl", U0E, "origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\ANsa\\ANsaTarget.mdl", U0E, "origin"))
call UnitAddAbility(U0E, 'A03A')
call UnitAddAbility(EXX, 'A03A')
call SetUnitAbilityLevel(U0E, 'A03A', ELO)
call SetUnitAbilityLevel(EXX, 'A03A', ELO)
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, X2O, false, function O7O)
set EXX=null
set U0E=null
set t=null
endfunction

function RRO takes nothing returns boolean
return ( GetUnitTypeId(GetSummonedUnit()) == 'o00C' )
endfunction
function RIO takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A045', GetSummonedUnit(), GetUnitAbilityLevelSwapped('A0CD', GetSummoningUnit()))
endfunction
function RNO takes nothing returns boolean
return GetSpellAbilityId() == 'A036'
endfunction
function RBO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if RME[PXE] == 0 then
call ReleaseTimer(GetExpiredTimer())
call FJE(PXE)
call DestroyEffect(RQE[PXE])
else
call SetWidgetLife(RPE[PXE], ( GetWidgetLife(RPE[PXE]) + ( ( .04 + ( .01 * I2R(GetUnitAbilityLevel(RPE[PXE], 'A036')) ) ) * GetHeroStr(RPE[PXE], true) ) ))
set RME[PXE]=RME[PXE] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .1, false, function RBO)
endif
set t=null
endfunction
function RCO takes nothing returns nothing
local unit u=GetTriggerUnit()
local integer i=( 15 + GetUnitAbilityLevel(u, 'A036') ) * 10
local timer t
local integer PXE=FHE()
set RME[PXE]=i
set RPE[PXE]=u
set RQE[PXE]=AddSpecialEffectTarget("war3mapImported\\DevilAura.mdx", u, "origin")
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .1, false, function RBO)
set u=null
set t=null
endfunction
function RFO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A032' )
endfunction
function RGO takes nothing returns boolean
return ( JM[1] == 0 )
endfunction
function RHO takes nothing returns boolean
return ( IsUnitInGroup(SM[JM[2]], TM) == false ) and ( IsUnitInGroup(QM[JM[2]], TM) == false )
endfunction
function RJO takes nothing returns nothing
if ( (JM[1] == 0) ) then // INLINED!!
call EnableTrigger(S3)
endif
set JM[1]=( JM[1] + 1 )
set JM[2]=( JM[2] + 1 )
set KM[JM[2]]=true
set LM[JM[2]]=1000.
set MM[JM[2]]=45.
set PM[JM[2]]=7.
set QM[JM[2]]=GetTriggerUnit()
set SM[JM[2]]=GetSpellTargetUnit()
if TM == null then
set TM=CreateGroup()
endif
if ( (( IsUnitInGroup(SM[JM[2]], TM) == false ) and ( IsUnitInGroup(QM[JM[2]], TM) == false )) ) then // INLINED!!
call GroupAddUnit(TM, QM[JM[2]])
call GroupAddUnit(TM, SM[JM[2]])
call UnitAddAbility(QM[JM[2]], 'A033')
call UnitAddAbility(SM[JM[2]], 'A033')
endif
call AddSpecialEffectTargetUnitBJ("weapon", GetTriggerUnit(), "Abilities\\Weapons\\IllidanMissile\\IllidanMissile.mdl")
set UM[JM[2]]=bj_lastCreatedEffect
call AddSpecialEffectTargetUnitBJ("weapon", GetTriggerUnit(), "Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl")
set WM[JM[2]]=bj_lastCreatedEffect
call AddSpecialEffectTargetUnitBJ("weapon", GetSpellTargetUnit(), "Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl")
set YM[JM[2]]=bj_lastCreatedEffect
call AddSpecialEffectTargetUnitBJ("weapon", GetSpellTargetUnit(), "Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl")
set ZM[JM[2]]=bj_lastCreatedEffect
set VP[JM[2]]=GetUnitLoc(QM[JM[2]])
set EP[JM[2]]=GetUnitLoc(SM[JM[2]])
set XP[JM[2]]=GetLocationX(VP[JM[2]])
set OP[JM[2]]=GetLocationY(VP[JM[2]])
set RP[JM[2]]=GetLocationX(EP[JM[2]])
set IP[JM[2]]=GetLocationY(EP[JM[2]])
set HM[JM[2]]=Location(( ( XP[JM[2]] + RP[JM[2]] ) / 2. ), ( ( OP[JM[2]] + IP[JM[2]] ) / 2. ))
call CreateNUnitsAtLoc(1, 'h00G', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 150.)
set AP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00G', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 270.)
set NP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00G', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 30.)
set BP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00H', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 210.)
set CP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00H', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 330.)
set DP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00H', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 90.)
set FP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00I', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 210.)
set GP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00I', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 330.)
set HP[JM[2]]=bj_lastCreatedUnit
call CreateNUnitsAtLoc(1, 'h00I', GetOwningPlayer(GetTriggerUnit()), HM[JM[2]], 90.)
set JP[JM[2]]=bj_lastCreatedUnit
call RemoveLocation(VP[JM[2]])
call RemoveLocation(EP[JM[2]])
call RemoveLocation(HM[JM[2]])
endfunction
function RLO takes nothing returns boolean
return ( LP[JM[3]] >= 360. )
endfunction
function RMO takes nothing returns boolean
return ( MP[JM[3]] > 4 )
endfunction
function RPO takes nothing returns boolean
return ( IsUnitInGroup(QM[JM[3]], TM) == false ) and ( IsUnitInGroup(SM[JM[3]], TM) == false )
endfunction
function RQO takes nothing returns boolean
return ( PP[JM[3]] <= 0 )
endfunction
function RSO takes nothing returns boolean
return ( KP[JM[3]] >= 1.98 )
endfunction
function RTO takes nothing returns boolean
return ( JM[1] == 0 )
endfunction
function RUO takes nothing returns boolean
return ( DistanceBetweenPoints(VP[JM[3]], EP[JM[3]]) > LM[JM[3]] ) or ( KP[JM[3]] >= MM[JM[3]] ) or ( IsUnitDeadBJ(QM[JM[3]]) ) or ( IsUnitDeadBJ(SM[JM[3]]) ) or ( IsUnitPaused(QM[JM[3]]) ) or ( IsUnitPaused(SM[JM[3]]) ) or ( SM[JM[3]] == null ) or ( QM[JM[3]] == null )
endfunction
function RWO takes nothing returns boolean
return ( (( DistanceBetweenPoints(VP[JM[3]], EP[JM[3]]) > LM[JM[3]] ) or ( KP[JM[3]] >= MM[JM[3]] ) or ( IsUnitDeadBJ(QM[JM[3]]) ) or ( IsUnitDeadBJ(SM[JM[3]]) ) or ( IsUnitPaused(QM[JM[3]]) ) or ( IsUnitPaused(SM[JM[3]]) ) or ( SM[JM[3]] == null ) or ( QM[JM[3]] == null )) ) // INLINED!!
endfunction
function RYO takes nothing returns boolean
return ( KM[JM[3]] )
endfunction
function RZO takes nothing returns nothing
set JM[3]=1
loop
exitwhen JM[3] > JM[2]
if ( (KM[JM[3]]) ) then // INLINED!!
set KP[JM[3]]=( KP[JM[3]] + .03 )
set LP[JM[3]]=( LP[JM[3]] + PM[JM[3]] )
if ( (LP[JM[3]] >= 360.) ) then // INLINED!!
set LP[JM[3]]=.0
endif
set VP[JM[3]]=GetUnitLoc(QM[JM[3]])
set EP[JM[3]]=GetUnitLoc(SM[JM[3]])
set MP[JM[3]]=( R2I(LM[JM[3]]) / R2I(DistanceBetweenPoints(VP[JM[3]], EP[JM[3]])) )
if ( (MP[JM[3]] > 4) ) then // INLINED!!
set MP[JM[3]]=4
endif
if ( (( IsUnitInGroup(QM[JM[3]], TM) == false ) and ( IsUnitInGroup(SM[JM[3]], TM) == false )) ) then // INLINED!!
call GroupAddUnit(TM, QM[JM[3]])
call GroupAddUnit(TM, SM[JM[3]])
call UnitAddAbility(QM[JM[3]], 'A033')
call UnitAddAbility(SM[JM[3]], 'A033')
endif
set PP[JM[3]]=( MP[JM[3]] + ( ( GetUnitAbilityLevelSwapped('A032', QM[JM[3]]) - 3 ) * 4 ) )
if ( (PP[JM[3]] <= 0) ) then // INLINED!!
set PP[JM[3]]=1
endif
if GetUnitAbilityLevelSwapped('A032', QM[JM[3]]) == 2 then
call SetUnitAbilityLevelSwapped('A033', QM[JM[3]], 41)
call SetUnitAbilityLevelSwapped('A033', SM[JM[3]], 41)
else
call SetUnitAbilityLevelSwapped('A033', QM[JM[3]], PP[JM[3]])
call SetUnitAbilityLevelSwapped('A033', SM[JM[3]], PP[JM[3]])
endif
set XP[JM[3]]=GetLocationX(VP[JM[3]])
set RP[JM[3]]=GetLocationX(EP[JM[3]])
set OP[JM[3]]=GetLocationY(VP[JM[3]])
set IP[JM[3]]=GetLocationY(EP[JM[3]])
set HM[JM[3]]=Location(( ( XP[JM[3]] + RP[JM[3]] ) / 2. ), ( ( OP[JM[3]] + IP[JM[3]] ) / 2. ))
if ( (KP[JM[3]] >= 1.98) ) then // INLINED!!
set SP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 60. ))
set TP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 120. ))
set UP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 180. ))
set WP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 240. ))
set YP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 300. ))
set ZP[JM[3]]=CNE(HM[JM[3]] , ( LM[JM[3]] / 2. ) , ( LP[JM[3]] + 360. ))
else
set QP[JM[3]]=( KP[JM[3]] / 1.98 )
set SP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 60. ))
set TP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 120. ))
set UP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 180. ))
set WP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 240. ))
set YP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 300. ))
set ZP[JM[3]]=CNE(HM[JM[3]] , ( ( LM[JM[3]] / 2. ) * QP[JM[3]] ) , ( LP[JM[3]] + 360. ))
endif
if ( (( DistanceBetweenPoints(VP[JM[3]], EP[JM[3]]) > LM[JM[3]] ) or ( KP[JM[3]] >= MM[JM[3]] ) or ( IsUnitDeadBJ(QM[JM[3]]) ) or ( IsUnitDeadBJ(SM[JM[3]]) ) or ( IsUnitPaused(QM[JM[3]]) ) or ( IsUnitPaused(SM[JM[3]]) ) or ( SM[JM[3]] == null ) or ( QM[JM[3]] == null )) ) then // INLINED!!
set KM[JM[3]]=false
call UnitRemoveAbility(QM[JM[3]], 'A033')
call UnitRemoveAbility(SM[JM[3]], 'A033')
call GroupRemoveUnit(TM, QM[JM[3]])
call GroupRemoveUnit(TM, SM[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', AP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', CP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', NP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', DP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', BP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', FP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', GP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', HP[JM[3]])
call UnitApplyTimedLifeBJ(.01, 'BTLF', JP[JM[3]])
call DestroyEffect(UM[JM[3]])
call DestroyEffect(WM[JM[3]])
call DestroyEffect(YM[JM[3]])
call DestroyEffect(ZM[JM[3]])
set KP[JM[3]]=.0
set LP[JM[3]]=.0
set JM[1]=( JM[1] - 1 )
if ( (JM[1] == 0) ) then // INLINED!!
call DestroyGroup(TM)
set TM=null
set JM[2]=0
call DisableTrigger(GetTriggeringTrigger())
endif
else
call SetUnitPositionLocFacingBJ(AP[JM[3]], SP[JM[3]], ( LP[JM[3]] + 150. ))
call SetUnitPositionLocFacingBJ(CP[JM[3]], TP[JM[3]], ( LP[JM[3]] + 210. ))
call SetUnitPositionLocFacingBJ(NP[JM[3]], UP[JM[3]], ( LP[JM[3]] + 270. ))
call SetUnitPositionLocFacingBJ(DP[JM[3]], WP[JM[3]], ( LP[JM[3]] + 330. ))
call SetUnitPositionLocFacingBJ(BP[JM[3]], YP[JM[3]], ( LP[JM[3]] + 30. ))
call SetUnitPositionLocFacingBJ(FP[JM[3]], ZP[JM[3]], ( LP[JM[3]] + 90. ))
call SetUnitPositionLocFacingBJ(GP[JM[3]], TP[JM[3]], ( LP[JM[3]] + 210. ))
call SetUnitPositionLocFacingBJ(HP[JM[3]], WP[JM[3]], ( LP[JM[3]] + 330. ))
call SetUnitPositionLocFacingBJ(JP[JM[3]], ZP[JM[3]], ( LP[JM[3]] + 90. ))
endif
call RemoveLocation(VP[JM[3]])
call RemoveLocation(EP[JM[3]])
call RemoveLocation(HM[JM[3]])
call RemoveLocation(SP[JM[3]])
call RemoveLocation(TP[JM[3]])
call RemoveLocation(UP[JM[3]])
call RemoveLocation(WP[JM[3]])
call RemoveLocation(YP[JM[3]])
call RemoveLocation(ZP[JM[3]])
endif
set JM[3]=JM[3] + 1
endloop
endfunction
function R0O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A02M' )
endfunction
function R1O takes nothing returns boolean
return ( FM[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null )
endfunction
function R2O takes nothing returns nothing
if ( (FM[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null) ) then // INLINED!!
call RemoveUnit(FM[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set FM[( 1 + GetPlayerId(GetTriggerPlayer()) )]=null
endif
set ML=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(ML, "war3mapImported\\EagleSpirit.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call CreateNUnitsAtLoc(1, 'o000', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(( ( I2R(GetUnitAbilityLevelSwapped('A02M', GetTriggerUnit())) * 5. ) + 10. ), 'BTLF', bj_lastCreatedUnit)
set FM[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call RemoveLocation(ML)
endfunction
function R4O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'o000' )
endfunction
function R5O takes nothing returns nothing
set FM[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=null
endfunction
function R7O takes nothing returns boolean
return ( FM[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] != null ) and ( GetUnitTypeId(GetDyingUnit()) != 'o000' )
endfunction
function R8O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call SetHeroAgi(RWE[PXE], GetHeroAgi(RWE[PXE], false) - RYE[PXE], true)
call ReleaseTimer(GetExpiredTimer())
call FGE(PXE)
set t=null
endfunction
function R9O takes nothing returns nothing
local unit u=LC[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]
local integer i=GetUnitAbilityLevel(u, 'A02M') * 2
local real r=20.
local timer t
local integer PXE=FFE()
set RWE[PXE]=u
set RYE[PXE]=i
call SetWidgetLife(FM[( 1 + GetPlayerId(GetOwningPlayer(u)) )], ( GetUnitState(FM[( 1 + GetPlayerId(GetOwningPlayer(u)) )], UNIT_STATE_LIFE) + ( 5. + ( I2R(GetUnitAbilityLevel(u, 'A02M')) / 2. ) ) ))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EvilMissileofShadowyDOOMV3.mdx", FM[( 1 + GetPlayerId(GetOwningPlayer(u)) )], "origin"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EvilMissileofShadowyDOOMV3.mdx", u, "origin"))
call SetHeroAgi(u, GetHeroAgi(u, false) + i, true)
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, r, false, function R8O)
set u=null
set t=null
endfunction
function IEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A02L' )
endfunction
function IXO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local location l=Location(R2E[PXE], R3E[PXE])
local location l2=CNE(l , ( 275. + ( ( I2R(GetUnitAbilityLevel(R1E[PXE], 'A02L')) ) * 5. ) ) , R5E[PXE])
local unit u
local unit u2
if R4E[PXE] == 0 then
call ReleaseTimer(t)
call FDE(PXE)
else
call CreateNUnitsAtLocFacingLocBJ(1, 'h004', GetOwningPlayer(R1E[PXE]), l2, l)
set u=bj_lastCreatedUnit
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", l2))
call UnitAddAbility(u, 'A02K')
call SetUnitAbilityLevel(u, 'A02K', GetUnitAbilityLevel(R1E[PXE], 'A02L'))
call IssueImmediateOrderById(u, 852177)
call SetTerrainPathable(GetUnitX(u), GetUnitY(u), PATHING_TYPE_WALKABILITY, false)
call UnitApplyTimedLife(u, 'BTLF', ( 6. + ( 2. * I2R(GetUnitAbilityLevel(R1E[PXE], 'A02L')) ) ))
set u2=CreateUnitAtLoc(GetOwningPlayer(R1E[PXE]), 'h00N', l2, .0)
call UnitApplyTimedLife(u2, 'BTLF', ( 6. + ( 2. * I2R(GetUnitAbilityLevel(R1E[PXE], 'A02L')) ) ))
set R4E[PXE]=( R4E[PXE] - 1 )
set R5E[PXE]=( R5E[PXE] + 10. )
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function IXO)
endif
call RemoveLocation(l)
call RemoveLocation(l2)
set t=null
set l=null
set l2=null
set u=null
set u2=null
endfunction
function IOO takes nothing returns nothing
local unit u=GetSpellAbilityUnit()
local unit S8X=GetSpellTargetUnit()
local location l=GetSpellTargetLoc()
local integer PXE=FCE()
local timer t=(NewTimerEx(0)) // INLINED!!
set R1E[PXE]=u
set R2E[PXE]=GetUnitX(S8X)
set R3E[PXE]=GetUnitY(S8X)
set R4E[PXE]=36
set R5E[PXE]=( GetUnitFacing(S8X) + 140. )
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .04, false, function IXO)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", S8X, "origin"))
call RemoveLocation(l)
set u=null
set t=null
set l=null
set t=null
endfunction
function IIO takes nothing returns boolean
return ( GetUnitTypeId(GetDyingUnit()) == 'h004' )
endfunction
function IAO takes nothing returns nothing
set DM=GetUnitLoc(GetDyingUnit())
call SetTerrainPathableBJ(DM, PATHING_TYPE_WALKABILITY, true)
call RemoveLocation(DM)
endfunction
function IBO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01G' )
endfunction
function ICO takes nothing returns boolean
return ( VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == null )
endfunction
function IDO takes nothing returns boolean
return ( PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null )
endfunction
function IFO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 1 )
endfunction
function IGO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 2 )
endfunction
function IHO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 3 )
endfunction
function IJO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 4 )
endfunction
function IKO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 5 )
endfunction
function ILO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 6 )
endfunction
function IMO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 7 )
endfunction
function IPO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 8 )
endfunction
function IQO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 9 )
endfunction
function ISO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 10 )
endfunction
function ITO takes nothing returns nothing
if ( (VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == null) ) then // INLINED!!
return
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "No Spatial Rend to summon Terror from")
endif
if ( (PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null) ) then // INLINED!!
call KillUnit(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
set PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=null
endif
set ML=GetUnitLoc(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call AddSpecialEffectLocBJ(ML, "war3mapImported\\DarkLightning.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(ML, "war3mapImported\\DarkLightningNova.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(ML, "war3mapImported\\Portal.mdx")
call DestroyEffect(bj_lastCreatedEffect)
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 1) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n009', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 2) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n000', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n001', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 4) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n002', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 5) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n003', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 6) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n004', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 7) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n005', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 8) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n006', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 9) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n007', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
if ( (GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) == 10) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'n00B', GetOwningPlayer(GetTriggerUnit()), ML, bj_UNIT_FACING)
endif
set PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
if IsEyeRat[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
call BlzSetUnitSkin(bj_lastCreatedUnit, 'n033')
call BlzSetUnitName(bj_lastCreatedUnit, "|c000100E2T|r|c000C00DFe|r|c001800DCr|r|c002300DAr|r|c002E00D7o|r|c003900D4r|r|c004500D1 |r|c005000CFo|r|c005B00CCf|r|c006600C9 |r|c007200C6t|r|c007D00C4h|r|c008800C1e|r|c009300BE |r|c009F00BBR|r|c00AA00B9a|r|c00B500B6t|r")
endif
call RemoveLocation(ML)
call IssueTargetOrderById(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], 852179, PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call PauseUnit(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], true)
call SetUnitVertexColorBJ(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], 20., .0, 20., 50.)
set TT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=false
endfunction
function IWO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00P' )
endfunction
function IYO takes nothing returns boolean
return ( IsUnitGroupEmptyBJ(NM) )
endfunction
function IZO takes nothing returns nothing
set XM=GetTriggerUnit()
set OM=GetSpellTargetUnit()
set RM[1]=GetUnitLoc(XM)
set RM[2]=GetUnitLoc(GetSpellTargetUnit())
set IM[1]=( 21 + ( 3 * GetUnitAbilityLevelSwapped('A00P', XM) ) )
set AM[1]=30.
set AM[2]=( 100. + ( 300. * I2R(GetUnitAbilityLevelSwapped('A00P', XM)) ) )
set AM[3]=GetLocationX(RM[1])
set AM[4]=GetLocationY(RM[1])
set AM[5]=GetLocationZ(RM[1])
call ShowUnitHide(XM)
call SetUnitInvulnerable(XM, true)
call SetUnitPathing(XM, false)
call AddSpecialEffectLocBJ(RM[1], "war3mapImported\\Lightning Slam.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call CreateNUnitsAtLoc(1, 'h002', GetOwningPlayer(XM), RM[1], AngleBetweenPoints(RM[1], RM[2]))
call SetUnitPathing(bj_lastCreatedUnit, false)
call SaveUnitHandleBJ(OM, 0, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveUnitHandleBJ(XM, 1, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveRealBJ(AM[1], 2, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveRealBJ(AM[2], 3, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveRealBJ(AM[3], 4, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveRealBJ(AM[4], 5, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveRealBJ(AM[5], 6, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call AddLightningLoc("FORK", RM[1], RM[1])
call SaveLightningHandleBJ(bj_lastCreatedLightning, 7, GetHandleIdBJ(bj_lastCreatedUnit), FF)
call SaveIntegerBJ(IM[1], 8, GetHandleIdBJ(bj_lastCreatedUnit), FF)
if ( (IsUnitGroupEmptyBJ(NM)) ) then // INLINED!!
call EnableTrigger(X4)
endif
call GroupAddUnit(NM, bj_lastCreatedUnit)
call RemoveLocation(RM[1])
call RemoveLocation(RM[2])
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003001001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) != true ) != null
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003001002 takes nothing returns boolean
return ( GetFilterUnit() != OM )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) != true ), ( GetFilterUnit() != OM )) ) != null
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) != true ) != null
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) != true ) != null
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002001 takes nothing returns boolean
return ( IsUnitDeadBJ(GetFilterUnit()) != true )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002001 takes nothing returns boolean
return ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'n00L' )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'n00M' )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'n00U' )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'n017' )
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) )) ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) != true ), ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) )) )) ))
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) != true ), ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) != true ), ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) )) )) )) )) ) != null
endfunction
function Trig_Ball_Lightning_Slide_Func001Func019Func019Func023002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) != true ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) != true ), ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) != true ), ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) )) )) )) )) )) ) != null
endfunction
function I0O takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) != true ), ( GetFilterUnit() != OM )) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) != true ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) != true ), ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) != true ), ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(XM)) ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00L' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00M' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) != 'n017' )) )) )) )) )) )) )) )) )) ) != null
endfunction
function I1O takes nothing returns nothing
set OM=GetEnumUnit()
endfunction
function I2O takes nothing returns boolean
return ( IsUnitGroupEmptyBJ(CM) != true )
endfunction
function I3O takes nothing returns boolean
return ( IM[1] > 0 )
endfunction
function I4O takes nothing returns boolean
return ( DistanceBetweenPoints(RM[1], RM[2]) >= 100. )
endfunction
function I5O takes nothing returns nothing
set OM=LoadUnitHandleBJ(0, GetHandleIdBJ(GetEnumUnit()), FF)
set XM=LoadUnitHandleBJ(1, GetHandleIdBJ(GetEnumUnit()), FF)
set RM[1]=GetUnitLoc(GetEnumUnit())
set RM[2]=GetUnitLoc(OM)
set RM[3]=CNE(RM[1] , AM[1] , AngleBetweenPoints(RM[1], RM[2]))
set AM[1]=LoadRealBJ(2, GetHandleIdBJ(GetEnumUnit()), FF)
set AM[2]=LoadRealBJ(3, GetHandleIdBJ(GetEnumUnit()), FF)
set AM[3]=LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), FF)
set AM[4]=LoadRealBJ(5, GetHandleIdBJ(GetEnumUnit()), FF)
set AM[5]=LoadRealBJ(6, GetHandleIdBJ(GetEnumUnit()), FF)
set AM[6]=GetLocationZ(RM[1]) + 40.
set BM=LoadLightningHandleBJ(7, GetHandleIdBJ(GetEnumUnit()), FF)
if ( (DistanceBetweenPoints(RM[1], RM[2]) >= 100.) ) then // INLINED!!
call SetUnitPositionLocFacingBJ(GetEnumUnit(), RM[3], AngleBetweenPoints(RM[1], RM[2]))
call MoveLightningEx(BM, true, AM[3], AM[4], AM[5], GetLocationX(RM[1]), GetLocationY(RM[1]), AM[6])
else
call CreateTextTagLocBJ(I2S(R2I(AM[2])), RM[1], 0, 10, 100, 100, 100, 0)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 2.)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64., 90)
call UnitDamageTargetEx(XM , OM , AM[2] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call AddSpecialEffectTargetUnitBJ("origin", OM, "war3mapImported\\Lightning Slam.mdx")
call DestroyEffect(bj_lastCreatedEffect)
set IM[1]=LoadIntegerBJ(8, GetHandleIdBJ(GetEnumUnit()), FF)
set IM[1]=( IM[1] - 1 )
if ( (IM[1] > 0) ) then // INLINED!!
set CM=CQE(1000. , RM[1] , Condition(function I0O))
if ( (IsUnitGroupEmptyBJ(CM) != true) ) then // INLINED!!
set AM[1]=( AM[1] + 3. )
set AM[2]=( AM[2] + ( AM[2] * .22 ) )
set AM[3]=GetLocationX(RM[1])
set AM[4]=GetLocationY(RM[1])
set AM[5]=GetLocationZ(RM[1])
call DestroyLightning(BM)
call AddLightningLoc("FORK", RM[1], RM[1])
call ForGroupBJ(C5E(1 , CM), function I1O)
call SaveUnitHandleBJ(OM, 0, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveRealBJ(AM[1], 2, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveRealBJ(AM[2], 3, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveRealBJ(AM[3], 4, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveRealBJ(AM[4], 5, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveRealBJ(AM[5], 6, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveLightningHandleBJ(bj_lastCreatedLightning, 7, GetHandleIdBJ(GetEnumUnit()), FF)
call SaveIntegerBJ(IM[1], 8, GetHandleIdBJ(GetEnumUnit()), FF)
else
call DestroyLightning(BM)
call SetUnitPositionLocFacingBJ(XM, RM[1], AngleBetweenPoints(RM[1], RM[2]))
call ShowUnitShow(XM)
call SetUnitInvulnerable(XM, false)
call SetUnitPathing(XM, true)
call SelectUnitAddForPlayer(XM, GetOwningPlayer(XM))
call UnitAddItemByIdSwapped('I00K', XM)
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()), FF)
call GroupRemoveUnit(NM, GetEnumUnit())
call RemoveUnit(GetEnumUnit())
endif
call DestroyGroup(CM)
else
call DestroyLightning(BM)
call SetUnitPositionLocFacingBJ(XM, RM[1], AngleBetweenPoints(RM[1], RM[2]))
call ShowUnitShow(XM)
call SetUnitInvulnerable(XM, false)
call SetUnitPathing(XM, true)
call SelectUnitAddForPlayer(XM, GetOwningPlayer(XM))
call UnitAddItemByIdSwapped('I00K', XM)
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()), FF)
call GroupRemoveUnit(NM, GetEnumUnit())
call RemoveUnit(GetEnumUnit())
endif
endif
call RemoveLocation(RM[1])
call RemoveLocation(RM[2])
call RemoveLocation(RM[3])
endfunction
function I6O takes nothing returns boolean
return ( IsUnitGroupEmptyBJ(NM) )
endfunction
function I7O takes nothing returns nothing
call ForGroupBJ(NM, function I5O)
if ( (IsUnitGroupEmptyBJ(NM)) ) then // INLINED!!
call DisableTrigger(GetTriggeringTrigger())
endif
endfunction
function I9O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01Q' )
endfunction
function AVO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A01P')
call SetUnitAbilityLevelSwapped('A01P', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A01Q', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852565, GetTriggerUnit())
endfunction
function AXO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A001' )
endfunction
function AOO takes nothing returns boolean
return ( IsUnitAliveBJ(LC[( 1 + GetPlayerId(GetEnumPlayer()) )]) )
endfunction
function ARO takes nothing returns nothing
if ( (IsUnitAliveBJ(LC[( 1 + GetPlayerId(GetEnumPlayer()) )])) ) then // INLINED!!
call SetWidgetLife(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], GetUnitState(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], UNIT_STATE_MAX_LIFE))
call SetUnitState(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], UNIT_STATE_MANA, GetUnitState(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], UNIT_STATE_MAX_MANA))
call AddSpecialEffectTargetUnitBJ("origin", LC[( 1 + GetPlayerId(GetEnumPlayer()) )], "war3mapImported\\HolyAwakening.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endif
endfunction
function AIO takes nothing returns nothing
set BQ=C3E(GetOwningPlayer(GetTriggerUnit()))
call ForForce(BQ, function ARO)
call DestroyForce(BQ)
endfunction
function ANO takes nothing returns boolean
if IsUnitAlly(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) then
return false
endif
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B04N') )
endfunction
function ABO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call SetHeroInt(R9E[PXE], GetHeroInt(R9E[PXE], false) - IVE[PXE], true)
call ReleaseTimer(GetExpiredTimer())
call FBE(PXE)
set t=null
endfunction
function ACO takes nothing returns nothing
local unit u=GetEventDamageSource()
local timer t
local real r=( I2R(GetUnitAbilityLevel(u, 'A01Q')) * 1 ) + 10.
local integer PXE=FNE()
set R9E[PXE]=u
set IVE[PXE]=GetUnitAbilityLevel(u, 'A01Q')
call SetHeroInt(u, GetHeroInt(u, false) + ( GetUnitAbilityLevel(u, 'A01Q') ), true)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FrozenOrb.mdl", u, "chest"))
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, r, false, function ABO)
set u=null
set t=null
endfunction
function AFO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00E' )
endfunction
function AGO takes nothing returns nothing
set BL=GetSpellTargetUnit()
set CL=GetUnitLoc(GetTriggerUnit())
set DL=40.
set FL=.0
call SYE(BL , CL , DL , FL)
endfunction
function AJO takes nothing returns boolean
return ( GetLearnedSkill() == 'A01G' )
endfunction
function AKO takes nothing returns nothing
if GetUnitAbilityLevel(GetTriggerUnit(), 'A00W') != 1 then
call UnitAddAbility(GetTriggerUnit(), 'A00W')
endif
endfunction
function AMO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01G' )
endfunction
function APO takes nothing returns boolean
return ( VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == null )
endfunction
function AQO takes nothing returns nothing
if ( (VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == null) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "No Spatial Rend to summon Terror from")
endif
endfunction
function AZO takes nothing returns boolean
return ( ( GetUnitAbilityLevelSwapped('A00A', LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )]) != 0 ) and ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) == false ) and ( UnitHasBuffBJ(GetTriggerUnit(), 'B02K') ) ) != null
endfunction
function A_O takes nothing returns nothing
call IssueTargetOrderById(VL[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )], 852149, GetTriggerUnit())
endfunction
function A1O takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B02K') ) and ( GetEventDamage() >= 1. ) and ( not ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] ) )
endfunction
function A2O takes nothing returns nothing
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(GetEventDamageSource() , GetTriggerUnit() , ( GetEventDamage() * .3 ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( I2S(R2I(( GetEventDamage() * 1.3 ))) + "!" ), OK, 0, 10., 20., .0, 20., 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction
function A4O takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B02K') ) and ( GetEventDamage() >= 1. ) and ( BI[NI] == LN or BI[NI] == DAMAGE_TYPE_LIGHTNING or BI[NI] == DAMAGE_TYPE_COLD or BI[NI] == DAMAGE_TYPE_MAGIC or BI[NI] == DAMAGE_TYPE_PLANT or BI[NI] == DAMAGE_TYPE_UNIVERSAL or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) ) and ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] )
endfunction
function A5O takes nothing returns nothing
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(GetEventDamageSource() , GetTriggerUnit() , ( GetEventDamage() * .3 ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( I2S(R2I(( GetEventDamage() * 1.3 ))) + "!" ), OK, 0, 10., 20., .0, 20., 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction
function A7O takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B042') ) and ( GetUnitAbilityLevelSwapped('A00D', GetEventDamageSource()) != 0 )
endfunction
function Trig_Bouncy_Attack_Func003002003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEventDamageSource())) )
endfunction
function Trig_Bouncy_Attack_Func003002003002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Bouncy_Attack_Func003002003002002001 takes nothing returns boolean
return ( IsUnitDeadBJ(GetFilterUnit()) == false )
endfunction
function Trig_Bouncy_Attack_Func003002003002002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ) != null
endfunction
function Trig_Bouncy_Attack_Func003002003002002002002 takes nothing returns boolean
return ( GetFilterUnit() != GetTriggerUnit() )
endfunction
function Trig_Bouncy_Attack_Func003002003002002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetFilterUnit() != GetTriggerUnit() )) ) != null
endfunction
function Trig_Bouncy_Attack_Func003002003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetFilterUnit() != GetTriggerUnit() )) )) ) != null
endfunction
function Trig_Bouncy_Attack_Func003002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetFilterUnit() != GetTriggerUnit() )) )) )) ) != null
endfunction
function A8O takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEventDamageSource())) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetFilterUnit() != GetTriggerUnit() )) )) )) )) ) != null
endfunction
function A9O takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(), 'B042')
set EL=GetUnitLoc(GetTriggerUnit())
set XL=CQE(600. , EL , Condition(function A8O))
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), EL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(5., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A00C')
call SetUnitAbilityLevelSwapped('A00C', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A00D', GetEventDamageSource()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852179, GroupPickRandomUnit(XL))
call RemoveLocation(EL)
call DestroyGroup(XL)
endfunction
function NEO takes nothing returns boolean
return ( GetUnitAbilityLevel(GetTriggerUnit(), 'B04M') != 0 ) and ( GetUnitAbilityLevel(GetEventDamageSource(), 'A013') != 0 )
endfunction

function NOO takes nothing returns boolean
local unit u= GetFilterUnit()
local texttag tt
local string Q7E
local effect fx

if IsUnitEnemy(u, GetOwningPlayer(MOONBLADECASTER)) and IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) == false and UnitAlive(u) and IsUnitType(u, UNIT_TYPE_STRUCTURE) == false and u != null then

set tt=CreateTextTag()
set Q7E=I2S(R2I(ZL)) + "!"
call SetTextTagPos(tt, GetUnitX(u), GetUnitY(u), .0)
call SetTextTagText(tt, Q7E, .023)
call SetTextTagVelocity(tt, 0.0355 * Cos(90. * bj_DEGTORAD), 0.0355 * Sin(90. * bj_DEGTORAD))
call SetTextTagColor(tt, 0, 0, 200, 255)
call SetTextTagPermanent(tt, false)
call SetTextTagLifespan(tt, 5.)
call SetTextTagFadepoint(tt, 4.)
call UnitDamageTargetEx(MOONBLADECASTER , u , ZL , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
set fx=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishMana\\SpiritTouchTarget.mdl", u, "chest")
call DestroyEffect(fx)
call AddUnitBonus(u , BONUS_MAGIC_RESISTANCE , - .03)

if GetUnitAbilityLevel(u, 'A0O5') != 1 then
call UnitAddAbility(u, 'A0O5')
endif

endif

set fx=null
set Q7E=null
set tt=null
set u=null

return false
endfunction

function NRO takes nothing returns nothing
local unit u= GetEventDamageSource()
local unit d= GetTriggerUnit()
local real a= GetUnitFacing(u)
local integer lvl= GetUnitAbilityLevel(u, 'A013')
call UnitRemoveAbility(d, 'B04M')

set ZL=( ( GetEventDamage() * ( .3 + ( .2 * lvl ) ) ) + ( GetUnitState(d, UNIT_STATE_MANA) * ( .1 * lvl ) ) )

set MOONBLADECASTER=u

call GroupEnumUnitsInRange(MOONBLADEGROUP, GetUnitX(u) + ( 150. + ( 10. * lvl ) ) * Cos(a * bj_DEGTORAD), GetUnitY(u) + ( 150. + ( 10. * lvl ) ) * Sin(a * bj_DEGTORAD), 180. + ( 10. * lvl ), Filter(function NOO))

set d=null
set u=null
endfunction
function NAO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00H' )
endfunction
function Trig_Desolation_Cast_Func005001003001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Desolation_Cast_Func005001003002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function NNO takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ))
endfunction
function NBO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), HL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A03C')
call SetUnitAbilityLevelSwapped('A03C', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852668, GetEnumUnit())
endfunction
function Trig_Desolation_Cast_Func008001003001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Desolation_Cast_Func008001003002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function NCO takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ))
endfunction
function NDO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), JL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A03C')
call SetUnitAbilityLevelSwapped('A03C', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852668, GetEnumUnit())
endfunction
function Trig_Desolation_Cast_Func011002003001 takes nothing returns boolean
return ( IsUnitDeadBJ(GetFilterUnit()) == false )
endfunction
function Trig_Desolation_Cast_Func011002003002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Desolation_Cast_Func011002003002002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_Desolation_Cast_Func011002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) ) != null
endfunction
function NFO takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) ) != null
endfunction
function NGO takes nothing returns nothing
call IssuePointOrderByIdLoc(GetEnumUnit(), 851986, JL)
endfunction
function NHO takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A00M', VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], GetUnitAbilityLevelSwapped('A00H', GetTriggerUnit()))
call IssueImmediateOrderById(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], 852164)
set HL=GetUnitLoc(GetTriggerUnit())
//set bj_wantDestroyGroup=true
//call ForGroupBJ(CQE((425.+(I2R(GetUnitAbilityLevelSwapped('A00H',GetTriggerUnit()))*25.)),HL,Condition(function NNO)),function NBO)
set JL=GetUnitLoc(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(( 425. + ( I2R(GetUnitAbilityLevelSwapped('A00H', GetTriggerUnit())) * 25. ) ) , JL , Condition(function NCO)), function NDO)
call AddSpecialEffectLocBJ(JL, "war3mapImported\\DarkForce.mdx")
call DestroyEffect(bj_lastCreatedEffect)
set GL=CQE(( 400. + ( 25. * I2R(GetUnitAbilityLevelSwapped('A00H', GetTriggerUnit())) ) ) , HL , Condition(function NFO))
call ForGroupBJ(GL, function NGO)
call RemoveLocation(HL)
call RemoveLocation(JL)
call DestroyGroup(GL)
endfunction
function NKO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00B' ) and ( GetEventDamage() != .0 )
endfunction
function NLO takes nothing returns nothing
//call DisplayTextToPlayer(Player(0),0.,0.,"KB Dummy Cast")
set RL=GetSpellTargetUnit()
set AL=GetUnitLoc(GetTriggerUnit())
set IL=GetUnitLoc(GetSpellTargetUnit())
set NL=( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) * 40 )
call M6E(RL , NL , .3 , AngleBetweenPoints(IL, AL) , "war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx" , 0 , false , false)
call RemoveLocation(IL)
call RemoveLocation(AL)
endfunction
function NPO takes nothing returns boolean
return ( GetUnitTypeId(GetSummonedUnit()) == 'o015' )
endfunction
function NQO takes nothing returns boolean
return ( GetUnitTypeId(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) == 'o015' )
endfunction
function NSO takes nothing returns boolean
return ( PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null )
endfunction
function NTO takes nothing returns nothing
if ( (GetUnitTypeId(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) == 'o015') ) then // INLINED!!
call KillUnit(VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
set VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=null
endif
if ( (PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null) ) then // INLINED!!
call KillUnit(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
set PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=null
endif
set VL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=GetSummonedUnit()
endfunction
function NWO takes nothing returns boolean
return ( ( GetUnitAbilityLevelSwapped('A00A', LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )]) != 0 ) and ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) == false ) and ( UnitHasBuffBJ(GetTriggerUnit(), 'B02K') == false ) ) != null
endfunction
function NYO takes nothing returns nothing
local real x1= GetUnitX(GetTriggerUnit())
local real y1= GetUnitY(GetTriggerUnit())
local real x2= GetUnitX(VL[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )])
local real y2= GetUnitY(VL[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )])
local integer i= GetUnitAbilityLevelSwapped('A00A', LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )])
local real a= bj_RADTODEG * Atan2(y2 - y1, x2 - x1)

if VL[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )] != null then
call M6E(GetTriggerUnit() , ( i * 25. ) + 50. , .3 , a , "war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx" , 0 , false , false)
endif

//call SetUnitAbilityLevelSwapped('A00B',VL[(1+GetPlayerId(GetOwningPlayer(GetEventDamageSource())))],GetUnitAbilityLevelSwapped('A00A',LC[(1+GetPlayerId(GetOwningPlayer(GetEventDamageSource())))]))
//call DisplayTextToPlayer(Player(0),0.,0.,"I'm castin")
//call IssueTargetOrderBJ( VL[(1+GetPlayerId(GetOwningPlayer(GetEventDamageSource())))], "slow", GetTriggerUnit() )
//call IssueTargetOrderById(VL[(1+GetPlayerId(GetOwningPlayer(GetEventDamageSource())))],852075,GetTriggerUnit())
endfunction
function N_O takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B04I') ) and ( GetRandomInt(1, 100) <= ( 20 + ( 3 * GetUnitAbilityLevelSwapped('A04F', GetTriggerUnit()) ) ) )
endfunction
function N0O takes nothing returns boolean
return ( ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + GetEventDamage() ) >= GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) )
endfunction
function N1O takes nothing returns boolean
return ( GetRandomInt(1, 100) <= ( 2 * GetUnitAbilityLevelSwapped('A04F', GetTriggerUnit()) ) )
endfunction
function N2O takes nothing returns nothing
if GetTriggerUnit() != GetEventDamageSource() then
if ( (( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + GetEventDamage() ) >= GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit())) ) then // INLINED!!
call SetWidgetLife(GetTriggerUnit(), GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()))
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + GetEventDamage() ))
endif
call AddSpecialEffectTargetUnitBJ("chest", GetTriggerUnit(), "war3mapImported\\BloodbathTarget.mdx")
call DestroyEffect(bj_lastCreatedEffect)
if ( (GetRandomInt(1, 100) <= ( 2 * GetUnitAbilityLevelSwapped('A04F', GetTriggerUnit()) )) ) then // INLINED!!
set YK=GetUnitLoc(GetEventDamageSource())
set ZK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), ZK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A04I')
call SetUnitAbilityLevelSwapped('A04I', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A04F', GetTriggerUnit()))
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 852560, YK)
call RemoveLocation(YK)
call RemoveLocation(ZK)
endif
endif
endfunction
function N4O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03K' )
endfunction
function N5O takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= 1. )
endfunction
function N6O takes nothing returns nothing
if ( (GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= 1.) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Not enough health to cast")
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) - ( GetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE) * .25 ) ))
endif
endfunction
function N8O takes nothing returns boolean
return ( GetLearnedSkill() == 'A02E' )
endfunction
function N9O takes nothing returns nothing
set CQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=( 500. + ( 100. * I2R(GetUnitAbilityLevelSwapped('A02E', GetTriggerUnit())) ) )
endfunction
function BEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00W' )
endfunction
function BOO takes nothing returns nothing
if PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null then
call PauseUnit(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], false)
set TT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitVertexColorBJ(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], 100., 90., 100., 25.)
call AddSpecialEffectTargetUnitBJ("chest", PL[( 1 + GetPlayerId(GetTriggerPlayer()) )], "war3mapImported\\COD Ball.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\ShadeAura.mdx")
set SL[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedEffect
else
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "No unit found")
endif
endfunction
function BIO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A00W' )
endfunction
function BNO takes nothing returns nothing
if PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] != null then
call PauseUnit(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], true)
set TT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=false
call SetUnitVertexColorBJ(PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], 20., .0, 20., 50.)
call AddSpecialEffectTargetUnitBJ("chest", PL[( 1 + GetPlayerId(GetTriggerPlayer()) )], "war3mapImported\\PeterifyVer.2.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call DestroyEffect(SL[( 1 + GetPlayerId(GetTriggerPlayer()) )])
else
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "No unit found")
endif
endfunction
function BCO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0F2' )
endfunction
function BDO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call GroupRemoveUnit(WK, IRE[PXE])
call FAE(PXE)
call ReleaseTimer(GetExpiredTimer())
set t=null
endfunction
function BFO takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=FIE()
set IRE[PXE]=GetSpellTargetUnit()
call GroupAddUnit(WK, GetSpellTargetUnit())
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 10., false, function BDO)
set t=null
endfunction
function BHO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A002' )
endfunction
function BJO takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) / 100. ) )
endfunction
function BKO takes nothing returns nothing
if ( (GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) / 100. )) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Not enough health to cast")
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) - ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) / 100. ) ))
endif
endfunction
function BMO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A04F' )
endfunction
function BPO takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) * .15 ) )
endfunction
function BQO takes nothing returns nothing
if ( (GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) * .15 )) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Not enough health to cast")
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) - ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) * .15 ) ))
endif
endfunction
function BTO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A036' )
endfunction
function BUO takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= 1. )
endfunction
function BWO takes nothing returns nothing
if ( (GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) <= 1.) ) then // INLINED!!
call PauseUnit(GetTriggerUnit(), true)
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call PauseUnit(GetTriggerUnit(), false)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Not enough health to cast")
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) - ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) * .15 ) ))
endif
endfunction
function BZO takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B04G') ) and ( GetUnitAbilityLevelSwapped('A002', GetEventDamageSource()) > 0 ) and ( GetRandomInt(1, 100) <= ( 5 + ( 2 * GetUnitAbilityLevelSwapped('A002', GetEventDamageSource()) ) ) )
endfunction
function B_O takes nothing returns boolean
return ( GetEventDamage() > .5 )
endfunction
function B0O takes nothing returns nothing
if ( (GetEventDamage() > .5) ) then // INLINED!!
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetBJ(GetEventDamageSource(), GetTriggerUnit(), ( ( 1.5 * I2R(GetHeroStr(GetEventDamageSource(), true)) ) * I2R(GetUnitAbilityLevelSwapped('A002', GetEventDamageSource())) ), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
call EnableTrigger(GetTriggeringTrigger())
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\BloodEX-Special.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endif
endfunction
function B2O takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A0FM', GetEventDamageSource()) == 1 )
endfunction
function B3O takes nothing returns boolean
return ( GetEventDamage() >= .5 )
endfunction
function B4O takes nothing returns nothing
if ( (GetEventDamage() >= .5) ) then // INLINED!!
if GetEventDamageSource() != GetTriggerUnit() then
call SetWidgetLife(GetEventDamageSource(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEventDamageSource()) + ( GetEventDamage() * .35 ) ))
call AddSpecialEffectTargetUnitBJ("origin", GetEventDamageSource(), "war3mapImported\\VampiricAuraTarget.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endif
endif
endfunction
function B6O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03Q' )
endfunction
function Trig_Trothfangs_Butchery_Short_Func003001003001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Trothfangs_Butchery_Short_Func003001003002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function B7O takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ))
endfunction
function B8O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), QL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A03P')
call SetUnitAbilityLevelSwapped('A03P', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEnumUnit())
endfunction
function B9O takes nothing returns nothing
set QL=GetUnitLoc(GetTriggerUnit())
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(350. , QL , Condition(function B7O)), function B8O)
call RemoveLocation(QL)
endfunction
function CEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03Q' )
endfunction
function Trig_Trothfangs_Butchery_Medium_Func003001003001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Trothfangs_Butchery_Medium_Func003001003002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function CXO takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ))
endfunction
function COO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), RQ, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A03N')
call SetUnitAbilityLevelSwapped('A03N', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEnumUnit())
endfunction
function CRO takes nothing returns nothing
set RQ=GetUnitLoc(GetTriggerUnit())
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(600. , RQ , Condition(function CXO)), function COO)
call RemoveLocation(RQ)
endfunction
function CAO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03Q' )
endfunction
function Trig_Trothfangs_Butchery_Long_Func003001003001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Trothfangs_Butchery_Long_Func003001003002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function CNO takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ))
endfunction
function CBO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), IQ, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A03O')
call SetUnitAbilityLevelSwapped('A03O', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEnumUnit())
call AddSpecialEffectTargetUnitBJ("chest", GetEnumUnit(), "Abilities\\Weapons\\LavaSpawnMissile\\LavaSpawnBirthMissile.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function CCO takes nothing returns nothing
set IQ=GetUnitLoc(GetTriggerUnit())
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(800. , IQ , Condition(function CNO)), function CBO)
call RemoveLocation(IQ)
endfunction
function CFO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0FE' )
endfunction
function CGO takes nothing returns boolean
return ( CountUnitsInGroup(AH) == 0 )
endfunction
function CHO takes nothing returns boolean
return ( JH[NH] == 3 )
endfunction
function CJO takes nothing returns boolean
return ( JH[NH] == 2 )
endfunction
function CKO takes nothing returns boolean
return ( JH[NH] == 1 )
endfunction
function CLO takes nothing returns nothing
if ( (CountUnitsInGroup(AH) == 0) ) then // INLINED!!
call EnableTrigger(ELV)
endif
call AddSpecialEffectTargetUnitBJ("chest", GetSpellTargetUnit(), "war3mapImported\\DoubleEdgeTarget.mdx")
call DestroyEffect(bj_lastCreatedEffect)
set NH=( NH + 1 )
set BH[NH]=GetTriggerUnit()
set CH[NH]=GetSpellTargetUnit()
call GroupAddUnit(AH, CH[NH])
set DH[NH]=GetUnitLoc(BH[NH])
set FH[1]=GetUnitLoc(CH[NH])
set GH[NH]=AngleBetweenPoints(DH[NH], FH[1])
set HH[NH]=25.
set JH[NH]=3
if ( (JH[NH] == 1) ) then // INLINED!!
set KH[NH]=150.
set LH[NH]=( KH[NH] / HH[NH] )
else
if ( (JH[NH] == 2) ) then // INLINED!!
set KH[NH]=250.
set LH[NH]=( KH[NH] / HH[NH] )
else
if ( (JH[NH] == 3) ) then // INLINED!!
set KH[NH]=350.
set LH[NH]=( KH[NH] / HH[NH] )
endif
endif
endif
set BH[NH]=null
call RemoveLocation(DH[1])
endfunction
function CPO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0A3' )
endfunction
function CQO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A099')
call SetUnitAbilityLevelSwapped('A099', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A0A3', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852160, GetTriggerUnit())
endfunction
function CTO takes nothing returns boolean
return ( ( GetUnitAbilityLevelSwapped('A0DV', GetTriggerUnit()) > 0 ) and ( GetRandomInt(1, 100) <= ( 10 + ( 2 * GetUnitAbilityLevelSwapped('A0DV', GetTriggerUnit()) ) ) ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null
endfunction
function CUO takes nothing returns nothing
local unit u=GetTriggerUnit()
local real SVE=( ( I2R(GetHeroStr(u, true)) * I2R(GetUnitAbilityLevel(u, 'A0DV')) ) + ( BlzGetUnitArmor(u) * 12 * I2R(GetUnitAbilityLevel(u, 'A0DV')) ) ) / 2.
if IsUnitEnemy(u, GetOwningPlayer(GetEventDamageSource())) and not IsUnitType(GetEventDamageSource(), UNIT_TYPE_HERO) then
set LK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), LK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(LK)
call UnitAddAbility(bj_lastCreatedUnit, 'A0FE')
call SetUnitAbilityLevelSwapped('A0FE', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A0DV', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEventDamageSource())
call Y0E(u , GetEventDamageSource() , SVE , ATTACK_TYPE_HERO , false , true)
call IssueTargetOrderById(GetEventDamageSource(), 851983, u)
endif
set u=null
endfunction
function CYO takes nothing returns nothing
set DI[NI]=DI[NI] + GetEventDamage()
if GetWidgetLife(GetTriggerUnit()) + ( GetEventDamage() ) >= GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE) then
call SetWidgetLife(GetTriggerUnit(), GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE))
else
call SetWidgetLife(GetTriggerUnit(), GetWidgetLife(GetTriggerUnit()) + GetEventDamage())
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", GetTriggerUnit(), "origin"))
endfunction
function CZO takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'B044') != 0 and GetRandomInt(1, 100) <= ( 10 + ( 3 * GetUnitAbilityLevel(GetTriggerUnit(), 'A00N') ) ) and GetTriggerUnit() != GetEventDamageSource() then
call CYO()
endif
return false
endfunction
function C_O takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A0FK', GetTriggerUnit()) == 1 ) and GetEventDamage() >= 10.
endfunction

function C1O takes nothing returns nothing
local real r= ( GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE) * .005 )

if r >= GetEventDamage() then
set r=GetEventDamage()
endif

if ( BI[NI] == LN or BI[NI] == DAMAGE_TYPE_LIGHTNING or BI[NI] == DAMAGE_TYPE_COLD or BI[NI] == DAMAGE_TYPE_MAGIC or BI[NI] == DAMAGE_TYPE_UNIVERSAL or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) ) and ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] ) then

call SetWidgetLife(GetTriggerUnit(), GetWidgetLife(GetTriggerUnit()) + r)

else
if not J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] then
call SetWidgetLife(GetTriggerUnit(), GetWidgetLife(GetTriggerUnit()) + r)
endif
endif
endfunction
function C3O takes nothing returns boolean
return ( ( ( not ( GetUnitAbilityLevel(GetTriggerUnit(), 'B01K') != 1 ) ) and ( not ( GetUnitAbilityLevel(GetEventDamageSource(), 'B00K') == 1 ) ) and ( not ( GetUnitAbilityLevel(GetEventDamageSource(), 'B00J') == 1 ) ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null ) and GetUnitAbilityLevel(GetEventDamageSource(), 'BEsh') != 1 and ( GetRandomInt(1, 100) <= ( 10 + ( 5 * GetUnitAbilityLevel(ToxiaShielder[GetUnitUserData(GetTriggerUnit())], 'A0FC') ) ) ) //and GetUnitTypeId(GetEventDamageSource()) != 'e00X'
endfunction
function C4O takes nothing returns nothing
set LK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(ToxiaShielder[GetUnitUserData(GetTriggerUnit())]), LK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(LK)
call UnitAddAbility(bj_lastCreatedUnit, 'A088')
call SetUnitAbilityLevelSwapped('A088', bj_lastCreatedUnit, GetUnitAbilityLevel(ToxiaShielder[GetUnitUserData(GetTriggerUnit())], 'A088'))
call IssueTargetOrderById(bj_lastCreatedUnit, 852189, GetEventDamageSource())
endfunction
function C6O takes nothing returns boolean
return ( ( UnitHasBuffBJ(GetTriggerUnit(), 'B01U') ) and ( GetRandomInt(1, 200) <= ( 2 + ( 1 * GetUnitAbilityLevelSwapped('A09E', GetTriggerUnit()) ) ) ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null
endfunction
function C7O takes nothing returns nothing
set LK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(CabaShielder[GetUnitUserData(GetTriggerUnit())]), LK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(LK)
call UnitAddAbility(bj_lastCreatedUnit, 'A006')
call SetUnitAbilityLevelSwapped('A006', bj_lastCreatedUnit, GetUnitAbilityLevel(CabaShielder[GetUnitUserData(GetTriggerUnit())], 'A006'))
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEventDamageSource())
endfunction
function C9O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0FC' )
endfunction
function DVO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A0FL', GetSpellTargetUnit()) == 0 )
endfunction
function DEO takes nothing returns nothing
//if(DVO())then
//call UnitAddAbility(GetSpellTargetUnit(),'A0FL')
//call SetUnitAbilityLevelSwapped('A0FL',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A088',GetTriggerUnit()))
//else
//call SetUnitAbilityLevelSwapped('A0FL',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A088',GetTriggerUnit()))
//endif
set ToxiaShielder[GetUnitUserData(GetSpellTargetUnit())]=GetTriggerUnit()
endfunction
function DOO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0F1' )
endfunction
function DRO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A00N', GetSpellTargetUnit()) == 0 )
endfunction
function DIO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A00N', GetSpellTargetUnit()) == 0) ) then // INLINED!!
call UnitAddAbility(GetSpellTargetUnit(), 'A00N')
call SetUnitAbilityLevelSwapped('A00N', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0F1', GetTriggerUnit()))
else
call SetUnitAbilityLevelSwapped('A00N', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0F1', GetTriggerUnit()))
endif
endfunction
function DNO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CS' )
endfunction
function DBO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A04D', GetSpellTargetUnit()) == 0 )
endfunction
function DCO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A09E', GetSpellTargetUnit()) == 0 )
endfunction
function DDO takes nothing returns nothing
//if(DBO())then
//call UnitAddAbility(GetSpellTargetUnit(),'A04D')
//call SetUnitAbilityLevelSwapped('A04D',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A006',GetTriggerUnit()))
//else
//call SetUnitAbilityLevelSwapped('A04D',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A006',GetTriggerUnit()))
//endif
//if(DCO())then
//call UnitAddAbility(GetSpellTargetUnit(),'A09E')
//call SetUnitAbilityLevelSwapped('A09E',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A0CS',GetTriggerUnit()))
//else
//call SetUnitAbilityLevelSwapped('A09E',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A0CS',GetTriggerUnit()))
//endif
set CabaShielder[GetUnitUserData(GetSpellTargetUnit())]=GetTriggerUnit()
endfunction
function DGO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CM' )
endfunction
function DHO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A03M', GetSpellTargetUnit()) == 0 )
endfunction
function DJO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A03M', GetSpellTargetUnit()) == 0) ) then // INLINED!!
call UnitAddAbility(GetSpellTargetUnit(), 'A03M')
call SetUnitAbilityLevelSwapped('A03M', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0CM', GetTriggerUnit()))
else
call SetUnitAbilityLevelSwapped('A03M', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0CM', GetTriggerUnit()))
endif
endfunction
function DLO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CN' )
endfunction
function DMO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A024', GetSpellTargetUnit()) == 0 )
endfunction
function DPO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A024', GetSpellTargetUnit()) == 0) ) then // INLINED!!
call UnitAddAbility(GetSpellTargetUnit(), 'A024')
call SetUnitAbilityLevelSwapped('A024', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0CN', GetTriggerUnit()))
else
call SetUnitAbilityLevelSwapped('A024', GetSpellTargetUnit(), GetUnitAbilityLevelSwapped('A0CN', GetTriggerUnit()))
endif
endfunction
function DSO takes nothing returns boolean
return ( ( UnitHasBuffBJ(GetTriggerUnit(), 'B01T') ) and ( GetRandomInt(1, 100) <= ( 5 + ( 2 * GetUnitAbilityLevelSwapped('A024', GetTriggerUnit()) ) ) ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null
endfunction
function DTO takes nothing returns nothing
set LK=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), LK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(LK)
call UnitAddAbility(bj_lastCreatedUnit, 'A0FH')
call IssueTargetOrderById(bj_lastCreatedUnit, 852149, GetEventDamageSource())
endfunction
function DWO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A030' ) and ( UnitHasBuffBJ(GetSpellTargetUnit(), 'B04D') )
endfunction
function DYO takes nothing returns nothing
set MK=GetUnitLoc(GetSpellTargetUnit())
call UnitRemoveAbility(GetSpellTargetUnit(), 'B04D')
call CreateNUnitsAtLoc(1, 'h00L', GetOwningPlayer(GetTriggerUnit()), MK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(MK)
call UnitAddAbility(bj_lastCreatedUnit, 'A030')
call SetUnitAbilityLevelSwapped('A030', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A030', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852587, GetSpellTargetUnit())
endfunction
function D_O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A031' ) and ( UnitHasBuffBJ(GetSpellTargetUnit(), 'B04D') )
endfunction
function D0O takes nothing returns nothing
set MK=GetUnitLoc(GetSpellTargetUnit())
call UnitRemoveAbility(GetSpellTargetUnit(), 'B04D')
call CreateNUnitsAtLoc(1, 'h00L', GetOwningPlayer(GetTriggerUnit()), MK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(10., 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(MK)
call UnitAddAbility(bj_lastCreatedUnit, 'A031')
call SetUnitAbilityLevelSwapped('A031', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A031', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852119, GetSpellTargetUnit())
endfunction
function D2O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0F4' )
endfunction
function D3O takes nothing returns boolean
return ( ( IsUnitType(GetSpellTargetUnit(), UNIT_TYPE_ANCIENT) == false ) and ( IsUnitType(GetSpellTargetUnit(), UNIT_TYPE_SUMMONED) == false ) ) != null
endfunction
function D4O takes nothing returns nothing
//if(D3O())then
//call UnitAddAbility(GetSpellTargetUnit(),'A0F5')
//call SetUnitAbilityLevelSwapped('A0F5',GetSpellTargetUnit(),GetUnitAbilityLevelSwapped('A0F4',GetTriggerUnit()))
//endif
if ( GetPlayerController(GetOwningPlayer(GetSpellTargetUnit())) == MAP_CONTROL_COMPUTER ) or IsUnitIllusion(GetSpellTargetUnit()) then
call SetUnitPathing(GetSpellTargetUnit(), false)
endif
call ZUE(GetSpellTargetUnit() , 50 * I2R(GetUnitAbilityLevel(GetTriggerUnit(), 'A0F4')))
endfunction
function D6O takes nothing returns nothing
local unit u= GetTriggerUnit()
if GetUnitAbilityLevel(u, 'A0EQ') == 0 then
call UnitAddAbility(u, 'A0EQ')
endif
call AddUnitBonus(u , BONUS_ARMOR , - 3.)
if IsRangerRat[GetUnitUserData(GetEventDamageSource())] or IsRangerGreen[GetUnitUserData(GetEventDamageSource())] then
if IsRangerRat[GetUnitUserData(GetEventDamageSource())] then
 call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfVenom.mdx", u, "origin"))
 endif
 if IsRangerGreen[GetUnitUserData(GetEventDamageSource())] then
 call DestroyEffect(AddSpecialEffectTarget("RocketWithoutCrater.mdl", u, "chest"))
 endif
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shield Breaker1.mdx", u, "origin"))
endif
set u=null
endfunction
function D7O takes nothing returns boolean
if GetUnitAbilityLevel(GetEventDamageSource(), 'A0F6') == 1 and ( BI[NI] ) == ( LN ) and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) and not IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) then
call D6O()
endif
return false
endfunction
function D8O takes nothing returns boolean
//local unit u
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RBV)) then
//set u=CreateUnit(GetOwningPlayer(RBV),'h007',GetUnitX(GetFilterUnit()),GetUnitY(GetFilterUnit()),.0)
//call UnitAddAbility(u,'A044')
//call UnitApplyTimedLife(u,'BTLF',1.)
//call SetUnitAbilityLevel(u,'A044',GetUnitAbilityLevel(RBV,'A043'))
//call IssueTargetOrderById(u,852075,GetFilterUnit())
call UnitDamageTargetEx(RBV , GetFilterUnit() , ( GetHeroStr(RBV, true) * GetUnitAbilityLevel(RBV, 'A043') ) , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
endif
//set u=null
return false
endfunction
function D9O takes nothing returns nothing
local unit u=GetTriggerUnit()
local real x=GetUnitX(u)
local real y=GetUnitY(u)
local real r=( GetUnitAbilityLevel(GetEventDamageSource(), 'A043') * 20 ) + 200.
local unit d= CreateUnit(GetOwningPlayer(GetEventDamageSource()), 'h007', x, y, .0)
call UnitRemoveAbility(u, 'B00M')
call DestroyEffect(AddSpecialEffect("war3mapImported\\Explosion.mdx", x, y))
call UnitAddAbility(d, 'A0J2')
call UnitApplyTimedLife(d, 'BTLF', 1.)
set RBV=GetEventDamageSource()
call SetUnitAbilityLevel(d, 'A0J2', GetUnitAbilityLevel(RBV, 'A043'))
call IssuePointOrderById(d, 852592, x, y)
call GroupEnumUnitsInRange(RNV, x, y, r, Filter(function D8O))
set u=null
set d=null
endfunction
function FVO takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(), 'B00M') != 0 then
call D9O()
endif
return false
endfunction
function FEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0BJ' )
endfunction
function Trig_Remove_Summon_Func002002003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_Remove_Summon_Func002002003002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n00L' )
endfunction
function Trig_Remove_Summon_Func002002003002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n00M' )
endfunction
function Trig_Remove_Summon_Func002002003002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n00U' )
endfunction
function Trig_Remove_Summon_Func002002003002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n017' )
endfunction
function Trig_Remove_Summon_Func002002003002002002 takes nothing returns boolean
return GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) == 'n017' ))
endfunction
function Trig_Remove_Summon_Func002002003002002 takes nothing returns boolean
return GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00M' ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) == 'n017' )) ))
endfunction
function Trig_Remove_Summon_Func002002003002 takes nothing returns boolean
return GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00L' ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00M' ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) == 'n017' )) )) ))
endfunction
function FXO takes nothing returns boolean
return GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00L' ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00M' ), ( GetBooleanOr(( GetUnitTypeId(GetFilterUnit()) == 'n00U' ), ( GetUnitTypeId(GetFilterUnit()) == 'n017' )) )) )) ))
endfunction
function FOO takes nothing returns nothing
call KillUnit(GetEnumUnit())
endfunction
function FRO takes nothing returns nothing
set DK=GetSpellTargetLoc()
set CK=CQE(224. , DK , Condition(function FXO))
call AddSpecialEffectTargetUnitBJ("origin", GetEnumUnit(), "Abilities\\Spells\\Human\\DispelMagic\\DispelMagicTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call ForGroupBJ(CK, function FOO)
call RemoveLocation(DK)
call DestroyGroup(CK)
endfunction
function FAO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A02Y' ) and ( UnitHasBuffBJ(GetSpellTargetUnit(), 'B02P') )
endfunction
function FNO takes nothing returns nothing
call IssueImmediateOrderById(GetTriggerUnit(), 851972)
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "This unit is Protected, it cannot be stunned.")
endfunction
function FCO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0BI' )
endfunction
function FDO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A09T')
call SetUnitAbilityLevelSwapped('A09T', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A0BI', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852160, GetTriggerUnit())
endfunction
function FGO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A098' )
endfunction
function FHO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A02E', GetTriggerUnit()) == 0 )
endfunction
function Trig_Targeted_Magic_Func003002003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetTriggerPlayer()) )
endfunction
function Trig_Targeted_Magic_Func003002003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Targeted_Magic_Func003002003002002001 takes nothing returns boolean
return true
endfunction
function Trig_Targeted_Magic_Func003002003002002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Targeted_Magic_Func003002003002002002002 takes nothing returns boolean
return ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_Targeted_Magic_Func003002003002002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) ) != null
endfunction
function Trig_Targeted_Magic_Func003002003002002 takes nothing returns boolean
return ( GetBooleanAnd(true, ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) ) != null
endfunction
function Trig_Targeted_Magic_Func003002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(true, ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) )) ) != null
endfunction
function FJO takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetTriggerPlayer()) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(true, ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) )) )) ) != null
endfunction
function FKO takes nothing returns nothing
set YT=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLocFacingLocBJ(1, 'h007', GetOwningPlayer(GetTriggerUnit()), IK, IK)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A02E')
call SetUnitAbilityLevelSwapped('A02E', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A02E', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852189, GetEnumUnit())
call GroupAddUnit(NK, GetEnumUnit())
call GroupRemoveUnit(AK, GetEnumUnit())
call RemoveLocation(YT)
endfunction
function FLO takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) >= 8. ) and ( CountUnitsInGroup(AK) > 0 )
endfunction
function FMO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A02E', GetTriggerUnit()) == 0) ) then // INLINED!!
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Frost Scythe has not been learned")
return
endif
set IK=GetUnitLoc(GetTriggerUnit())
set AK=CQE(CQ[( 1 + GetPlayerId(GetTriggerPlayer()) )] , IK , Condition(function FJO))
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=15
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) >= 8. ) and ( CountUnitsInGroup(AK) > 0 )) ) then // INLINED!!
call SetUnitManaBJ(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) - 8. ))
call ForGroupBJ(C5E(1 , AK), function FKO)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call RemoveLocation(IK)
call DestroyGroup(AK)
call DestroyGroup(NK)
endfunction
function FQO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0FB' )
endfunction
function FSO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A088', GetTriggerUnit()) == 0 )
endfunction
function Trig_Nightblade_Innate_Func003002003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetTriggerPlayer()) )
endfunction
function Trig_Nightblade_Innate_Func003002003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Nightblade_Innate_Func003002003002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) == false ) != null
endfunction
function Trig_Nightblade_Innate_Func003002003002002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Nightblade_Innate_Func003002003002002002002 takes nothing returns boolean
return ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_Nightblade_Innate_Func003002003002002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) ) != null
endfunction
function Trig_Nightblade_Innate_Func003002003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) ) != null
endfunction
function Trig_Nightblade_Innate_Func003002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) )) ) != null
endfunction
function FTO takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetTriggerPlayer()) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) == false ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitVisible(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )) )) )) )) ) != null
endfunction
function FUO takes nothing returns nothing
set YT=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLocFacingLocBJ(1, 'h007', GetOwningPlayer(GetTriggerUnit()), IK, IK)
call UnitApplyTimedLifeBJ(21., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A088')
call SetUnitAbilityLevelSwapped('A088', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped('A088', GetTriggerUnit()))
call IssueTargetOrderById(bj_lastCreatedUnit, 852189, GetEnumUnit())
call GroupAddUnit(NK, GetEnumUnit())
call GroupRemoveUnit(AK, GetEnumUnit())
call RemoveLocation(YT)
endfunction
function FWO takes nothing returns boolean
return ( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) >= 8. ) and ( CountUnitsInGroup(AK) > 0 )
endfunction
function FYO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A088', GetTriggerUnit()) == 0) ) then // INLINED!!
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "Venom Thrust has not been learned")
return
endif
set IK=GetUnitLoc(GetTriggerUnit())
set AK=CQE(900. , IK , Condition(function FTO))
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=15
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) >= 8. ) and ( CountUnitsInGroup(AK) > 0 )) ) then // INLINED!!
call SetUnitManaBJ(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_MANA, GetTriggerUnit()) - 8. ))
call ForGroupBJ(C5E(1 , AK), function FUO)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call RemoveLocation(IK)
call DestroyGroup(AK)
call DestroyGroup(NK)
endfunction
function F_O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01Y' ) and ( RectContainsUnit(bj_mapInitialPlayableArea, UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) )
endfunction
function F0O takes nothing returns nothing
set TempLocation=GetUnitLoc(UC[( 1 + GetPlayerId(GetTriggerPlayer()) )])
call SetUnitPositionLoc(GetSpellTargetUnit(), TempLocation)
call RemoveLocation(TempLocation)
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function F2O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0C0' )
endfunction
function F3O takes nothing returns nothing
call ModifyHeroSkillPoints(GetSpellTargetUnit(), 0, 1)
endfunction
function F5O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CH' )
endfunction
function F6O takes nothing returns nothing
call AdjustPlayerStateBJ(( 2 + ( GetHeroLevel(GetTriggerUnit()) / 4 ) ), GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER)
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Objects\\Spawnmodels\\Other\\ToonBoom\\ToonBoom.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Weapons\\GryphonRiderMissile\\GryphonRiderMissileTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(TempLocation)
endfunction
function F8O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A01V' )
endfunction
function F9O takes nothing returns nothing
call AddSpecialEffect("war3mapImported\\Arcane Explosion.mdx", GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit()))
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function GEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0AQ' )
endfunction
function GXO takes nothing returns nothing
call PlaySoundOnUnitBJ(KY, 100, GetSpellAbilityUnit())
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\RedCharkaExplosion.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(TempLocation)
endfunction
function GRO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A08V' ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) != MAP_CONTROL_CREEP )
endfunction
function GIO takes nothing returns nothing
local real x= GetUnitX(GetSpellTargetUnit()) - 100. * Cos(GetUnitFacing(GetSpellTargetUnit()) * bj_DEGTORAD)
local real y= GetUnitY(GetSpellTargetUnit()) - 100. * Sin(GetUnitFacing(GetSpellTargetUnit()) * bj_DEGTORAD)
call PlaySoundBJ(HY)
if GetUnitTypeId(GetSpellTargetUnit()) == 'H01F' then
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., BS[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] + ( GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + "|r" ) + " has stolen " + I2S(GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10) + " gold and " + I2S(GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER) / 5) + " lumber from " + ( BS[( 1 + GetPlayerId(GetOwningPlayer(GetSpellTargetUnit())) )] ) + ( GetPlayerName(GetOwningPlayer(GetSpellTargetUnit())) + "|r; has the Merchant Lord let his greed get the better of him?" ))
set THIEFSWAG[GetUnitUserData(GetTriggerUnit())]=THIEFSWAG[GetUnitUserData(GetTriggerUnit())] + GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10.
call SetPlayerStateBJ(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) + ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10 ) ))
call SetPlayerStateBJ(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) - ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10 ) ))
call SetPlayerStateBJ(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER, ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER) + ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER) / 5 ) ))
call SetPlayerStateBJ(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER, ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER) - ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER) / 5 ) ))
if IsThiefRat[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
call SGE('h01U' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack two" , 1.0)
else
call SGE('h00Y' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack one" , 1.0)
endif
else
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] + ( GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + "|r" ) ) + ( " has stolen " + ( I2S(( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10 )) + ( ( " gold from " + BS[( 1 + GetPlayerId(GetOwningPlayer(GetSpellTargetUnit())) )] ) + ( GetPlayerName(GetOwningPlayer(GetSpellTargetUnit())) + "|r!" ) ) ) ) ))
set THIEFSWAG[GetUnitUserData(GetTriggerUnit())]=THIEFSWAG[GetUnitUserData(GetTriggerUnit())] + GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10.
call SetPlayerStateBJ(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD) + ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10 ) ))
call SetPlayerStateBJ(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) - ( GetPlayerState(GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD) / 10 ) ))
if IsThiefRat[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
call SGE('h01U' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack two" , 1.0)
else
call SGE('h00Y' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack one" , 1.0)
endif
endif
endfunction
function GNO takes nothing returns boolean
return ( GetUnitTypeId(GetSpellTargetUnit()) != 'o001' ) and ( GetSpellAbilityId() == 'A0BG' )
endfunction
function GBO takes nothing returns nothing
set JK=GetRandomInt(0, ( GetUnitAbilityLevelSwapped('A0BG', GetTriggerUnit()) + 5 ))
set KK=GetRandomInt(0, ( GetUnitAbilityLevelSwapped('A0BG', GetTriggerUnit()) + 5 ))
set HK=GetRandomInt(0, ( GetUnitAbilityLevelSwapped('A0BG', GetTriggerUnit()) + 5 ))
call ModifyHeroStat(0, GetSpellTargetUnit(), 0, HK)
call ModifyHeroStat(1, GetSpellTargetUnit(), 0, JK)
call ModifyHeroStat(2, GetSpellTargetUnit(), 0, KK)
call ModifyHeroStat(0, GetTriggerUnit(), 0, HK * 3)
call ModifyHeroStat(1, GetTriggerUnit(), 0, JK * 3)
call ModifyHeroStat(2, GetTriggerUnit(), 0, KK * 3)
call DisplayTextToForce(C3E(GetOwningPlayer(GetTriggerUnit())), ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] + ( GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + "|r" ) ) + ( " has increased " + ( GetPlayerName(GetOwningPlayer(GetSpellTargetUnit())) + ( "'s " + ( "Strength by " + ( I2S(HK) + ( ", " + ( "Agility by " + ( I2S(JK) + ( ", " + ( " Intelligence by " + ( I2S(KK) + ", and their own stats by triple that amount." ) ) ) ) ) ) ) ) ) ) ) ))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", GetTriggerUnit(), "origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", GetSpellTargetUnit(), "origin"))
endfunction
function GDO takes nothing returns boolean
return ( GetUnitTypeId(GetSpellAbilityUnit()) == 'E01O' ) and ( GetSpellAbilityId() == 'A08X' ) and not IsUnitIllusion(GetSpellTargetUnit())
endfunction
function GFO takes nothing returns boolean
return ( IsItemOwned(UnitItemInSlotBJ(FD, bj_forLoopAIndex)) ) and ( DD == false )
endfunction
function GGO takes nothing returns nothing
set FD=GetSpellTargetUnit()
set DD=false
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (( IsItemOwned(UnitItemInSlotBJ(FD, bj_forLoopAIndex)) ) and ( DD == false )) ) then // INLINED!!
call UnitRemoveItemFromSlotSwapped(bj_forLoopAIndex, FD)
set DD=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set TempLocation=GetUnitLoc(GetSpellTargetUnit())
call AddSpecialEffectLocBJ(TempLocation, "Doodads\\Cinematic\\Lightningbolt\\Lightningbolt.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function GJO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0BE' )
endfunction
function GKO takes nothing returns nothing
local integer lvl
call PlaySoundOnUnitBJ(QY, 100, GetTriggerUnit())
call PlaySoundOnUnitBJ(QY, 100, GetSpellTargetUnit())

if GetUnitTypeId(GetSpellTargetUnit()) == 'E014' and GetTriggerUnit() != GetSpellTargetUnit() then

call UnitRemoveAbility(GetSpellTargetUnit(), 'A089')
call UnitAddAbility(GetSpellTargetUnit(), 'A089')

set lvl=GetUnitAbilityLevel(GetSpellTargetUnit(), 'A0C3')

if lvl != 0 then
call UnitRemoveAbility(GetSpellTargetUnit(), 'A0C3')
call UnitAddAbility(GetSpellTargetUnit(), 'A0C3')
call SetUnitAbilityLevel(GetSpellTargetUnit(), 'A0C3', lvl)
endif

else

call UnitResetCooldown(GetSpellTargetUnit())
endif
call AddSpecialEffectTargetUnitBJ("chest", GetSpellTargetUnit(), "war3mapImported\\BlinkTarget.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function GMO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0DA' )
endfunction
function GPO takes nothing returns nothing
call ModifyHeroStat(0, GetTriggerUnit(), 0, ( 2 * GetUnitAbilityLevelSwapped('A0DA', GetTriggerUnit()) ))
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function GSO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A08Y' )
endfunction
function GTO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if ICE[PXE] == 2 then
call UnitRemoveAbility(IBE[PXE], 'A08Y')
call UnitAddAbility(IBE[PXE], 'A09Y')
call PlaySoundOnUnitBJ(SY, 100, IBE[PXE])
call AddSpecialEffectTargetUnitBJ("weapon", IBE[PXE], "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call ReleaseTimer(GetExpiredTimer())
call FRE(PXE)
else
if ( not ( GetUnitCurrentOrder(IBE[PXE]) == 852184 ) ) then
call ReleaseTimer(GetExpiredTimer())
call FRE(PXE)
else
set ICE[PXE]=ICE[PXE] + 1
call PlaySoundOnUnitBJ(SY, 100, IBE[PXE])
call AddSpecialEffectTargetUnitBJ("weapon", IBE[PXE], "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .7, false, function GTO)
endif
endif
set t=null
endfunction
function GUO takes nothing returns nothing
local timer t
local integer PXE=FOE()
set IBE[PXE]=GetSpellAbilityUnit()
set ICE[PXE]=1
set t=(NewTimerEx(0)) // INLINED!!
call PlaySoundOnUnitBJ(SY, 100, GetSpellAbilityUnit())
call AddSpecialEffectTargetUnitBJ("weapon", GetSpellAbilityUnit(), "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .7, false, function GTO)
set t=null
endfunction
function GYO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A09Y', GetAttacker()) == 1 )
endfunction
function GZO takes nothing returns nothing
call UnitRemoveAbility(GetAttacker(), 'A09Y')
call UnitAddAbility(GetAttacker(), 'A08Y')
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function G0O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03Y' )
endfunction
function Trig_ThunderMaul_Func004001003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_ThunderMaul_Func004001003002 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function G1O takes nothing returns boolean
return GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ), ( IsUnitAliveBJ(GetFilterUnit()) ))
endfunction
function G2O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), AQ, bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A03S')
call SetUnitAbilityLevelSwapped('A03S', bj_lastCreatedUnit, GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()))
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEnumUnit())
endfunction
function Trig_ThunderMaul_Func005Func008001003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) )
endfunction
function Trig_ThunderMaul_Func005Func008001003002 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function G3O takes nothing returns boolean
return GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) ), ( IsUnitAliveBJ(GetFilterUnit()) ))
endfunction
function G4O takes nothing returns nothing
set NQ=GetUnitLoc(GetEnumUnit())
call AddSpecialEffectLocBJ(NQ, "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call CreateNUnitsAtLoc(1, 'o005', GetOwningPlayer(GetTriggerUnit()), AQ, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call IssueTargetOrderById(bj_lastCreatedUnit, 852075, GetEnumUnit())
call RemoveLocation(NQ)
endfunction
function G5O takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A09Y', LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]) == 1 )
endfunction
function G6O takes nothing returns nothing
set AQ=GetUnitLoc(GetTriggerUnit())
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", GetTriggerUnit(), "origin"))
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(300. , GetUnitLoc(GetTriggerUnit()) , Condition(function G1O)), function G2O)
if ( (GetUnitAbilityLevelSwapped('A09Y', LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]) == 1) ) then // INLINED!!
call PlaySoundBJ(SY)
call PlaySoundBJ(MY)
call AddSpecialEffectTargetUnitBJ("weapon", GetTriggerUnit(), "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", GetTriggerUnit(), "origin"))
set OQ=( 400. + ( 100. * I2R(GetUnitAbilityLevelSwapped('A03Y', GetTriggerUnit())) ) )
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(OQ , AQ , Condition(function G3O)), function G4O)
call UnitRemoveAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 'A09Y')
call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 'A08Y')
endif
call RemoveLocation(AQ)
endfunction
function G8O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A04Q' )
endfunction
function G9O takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A09Y', LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]) == 1 )
endfunction
function HVO takes nothing returns nothing
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=GetUnitAbilityLevelSwapped('A04Q', GetTriggerUnit())
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call UnitAddItemByIdSwapped('I014', GetTriggerUnit())
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
if ( (GetUnitAbilityLevelSwapped('A09Y', LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]) == 1) ) then // INLINED!!
call UnitRemoveAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 'A09Y')
call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 'A08Y')
call PlaySoundOnUnitBJ(SY, 100, GetTriggerUnit())
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=GetUnitAbilityLevelSwapped('A04Q', GetTriggerUnit())
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call UnitAddItemByIdSwapped('I014', GetTriggerUnit())
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call AddSpecialEffectTargetUnitBJ("weapon", GetTriggerUnit(), "Abilities\\Spells\\Human\\Flare\\FlareCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectTargetUnitBJ("weapon", GetTriggerUnit(), "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endif
endfunction
function HXO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0F3' )
endfunction
function HOO takes nothing returns nothing
call UnitAddItemByIdSwapped('tret', GetSpellTargetUnit())
endfunction
function HIO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0BF' )
endfunction
function HAO takes nothing returns boolean
local boolean b
set TempLocation=GetUnitLoc(GetEnumUnit())
set b=( ( IsUnitAliveBJ(GetEnumUnit()) ) and ( RectContainsLoc(bj_mapInitialPlayableArea, CNE(TempLocation , 80. , GetUnitFacing(GetTriggerUnit()))) ) and ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(GetTriggerUnit())) ) and ( IsUnitAliveBJ(GetEnumUnit()) ) and ( GetUnitTypeId(GetEnumUnit()) != 'n017' ) and ( GetUnitTypeId(GetEnumUnit()) != 'n00U' ) and ( GetUnitTypeId(GetEnumUnit()) != 'n00L' ) and ( GetUnitTypeId(GetEnumUnit()) != 'n00M' ) and ( IsUnitType(GetEnumUnit(), UNIT_TYPE_MECHANICAL) == false ) ) != null
call RemoveLocation(TempLocation)
return b
endfunction
function HNO takes nothing returns nothing
if ( HAO() ) then
call SetWidgetLife(GetEnumUnit(), ( .94 * GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) ))
set TempLocation=GetUnitLoc(GetEnumUnit())
call SetUnitPositionLoc(GetEnumUnit(), CNE(TempLocation , 80. , GetUnitFacing(GetSpellAbilityUnit())))
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Undead\\ReplenishMana\\SpiritTouchTarget.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endif
endfunction
function HBO takes nothing returns nothing
call SetUnitFacingToFaceUnitTimed(GetTriggerUnit(), GetSpellTargetUnit(), 0)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=( 5 + GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) )
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set TempLocation=GetUnitLoc(GetSpellTargetUnit())
set bj_wantDestroyGroup=true
call ForGroupBJ(CTE(400. , TempLocation), function HNO)
call RemoveLocation(TempLocation)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction
function HDO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CR' )
endfunction
function HFO takes nothing returns boolean
return ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) != null
endfunction
function HGO takes nothing returns boolean
return ( UnitAlive(GetEnumUnit()) ) and ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(GetTriggerUnit())) ) and not IsUnitType(GetEnumUnit(), UNIT_TYPE_MECHANICAL)
endfunction
function HHO takes nothing returns nothing
if ( (( UnitAlive(GetEnumUnit()) ) and ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(GetTriggerUnit())) ) and not IsUnitType(GetEnumUnit(), UNIT_TYPE_MECHANICAL)) ) then // INLINED!!
call SetWidgetLife(GetEnumUnit(), 1.)
set TempLocation=GetUnitLoc(GetEnumUnit())
if IsFallenOne[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] or IsGrakeTank[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
if IsFallenOne[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\Soul Beam Red.mdx")
endif
if IsGrakeTank[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])] then
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\Artillery.mdx")
endif
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Resurrecttarget.mdx", GetEnumUnit(), "origin"))
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\Resurrecttarget.mdx")
endif
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
set TempLocation=GetRectCenter(bj_mapInitialPlayableArea)
call CreateNUnitsAtLocFacingLocBJ(1, 'o005', GetOwningPlayer(GetTriggerUnit()), TempLocation, TempLocation)
call RemoveLocation(TempLocation)
call UnitApplyTimedLifeBJ(1., 'BTLF', bj_lastCreatedUnit)
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetEnumUnit())
endif
endfunction
function HJO takes nothing returns nothing
if ( (( IsUnitType(GetTriggerUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) != null) ) then // INLINED!!
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) / 100. ))
else
call SetWidgetLife(GetTriggerUnit(), 1.)
endif
set bj_wantDestroyGroup=true
call ForGroupBJ(CTE(750. , GetUnitLoc(GetTriggerUnit())), function HHO)
endfunction
function HLO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0CC' )
endfunction
function HMO takes nothing returns nothing
set TempLocation=GetRectCenter(bj_mapInitialPlayableArea)
call CreateNUnitsAtLoc(1, 'o00M', GetEnumPlayer(), TempLocation, bj_UNIT_FACING)
call RemoveLocation(TempLocation)
call UnitApplyTimedLifeBJ(20., 'BTLF', bj_lastCreatedUnit)
endfunction
function HPO takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B005') )
endfunction
function HQO takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'B005') )
endfunction
function Trig_Burn_Func017001 takes nothing returns boolean
return ( WC == 0 )
endfunction
function HSO takes nothing returns nothing
set TempLocation=GetUnitLoc(UC[( 1 + GetPlayerId(GetTriggerPlayer()) )])
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call ForForce(bj_FORCE_ALL_PLAYERS, function HMO)
set WC=( WC + 1 )
call SetTimeOfDay(24.)
call CreateNUnitsAtLoc(1, 'o003', GetOwningPlayer(GetTriggerUnit()), GetUnitLoc(UC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(20., 'BTLF', bj_lastCreatedUnit)
call KillUnit(UC[( 1 + GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit())) )])
set UC[( 1 + GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit())) )]=bj_lastCreatedUnit
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=12
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (UnitHasBuffBJ(GetTriggerUnit(), 'B005')) ) then // INLINED!!
else
call CameraSetEQNoiseForPlayer(Player(- 1 + ( bj_forLoopAIndex )), 10.)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call TriggerSleepAction(1.)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=12
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (UnitHasBuffBJ(GetTriggerUnit(), 'B005')) ) then // INLINED!!
else
call CameraClearNoiseForPlayer(Player(- 1 + ( bj_forLoopAIndex )))
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call TriggerSleepAction(19.)
set WC=( WC - 1 )
if ( ( WC == 0 ) ) then
call SetTimeOfDay(12)
endif
endfunction
function HUO takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B03U') ) and ( GetRandomInt(1, 100) <= 20 )
endfunction
function HWO takes nothing returns nothing
call CreateNUnitsAtLoc(1, GetUnitTypeId(GetTriggerUnit()), GetOwningPlayer(GetTriggerUnit()), RK, ( GetUnitFacing(GetEventDamageSource()) + 180. ))
call RemoveLocation(RK)
call SetUnitLifePercentBJ(bj_lastCreatedUnit, 5.)
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, "war3mapImported\\CurseBolt.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
//function HZO takes nothing returns boolean
//return(UnitHasBuffBJ(GetEventDamageSource(),'B03V'))and(GetRandomInt(1,100)<=2)
//endfunction
//function H_O takes nothing returns nothing
//call CreateNUnitsAtLoc(1,'h007',GetOwningPlayer(GetEventDamageSource()),GetRectCenter(bj_mapInitialPlayableArea),bj_UNIT_FACING)
//call UnitApplyTimedLifeBJ(5.,'BTLF',bj_lastCreatedUnit)
//call UnitAddAbility(bj_lastCreatedUnit,'A0E0')
//call IssueTargetOrderById(bj_lastCreatedUnit,852581,GetTriggerUnit())
//endfunction
function H1O takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B03T') )
endfunction
function H2O takes nothing returns nothing
call SetWidgetLife(GetEventDamageSource(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEventDamageSource()) + GetEventDamage() ))
call AddSpecialEffectTargetUnitBJ("origin", GetEventDamageSource(), "Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function H4O takes nothing returns boolean
return ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) ) or ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) ) or ( IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) )
endfunction
function H5O takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A07T', GetEventDamageSource()) > 0 ) and ( (( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) ) or ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) ) or ( IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) )) ) and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) // INLINED!!
endfunction
function H6O takes nothing returns nothing
local real x1=GetUnitX(GetEventDamageSource())
local real y1=GetUnitY(GetEventDamageSource())
local real x2=GetUnitX(GetTriggerUnit())
local real y2=GetUnitY(GetTriggerUnit())
local real d=SquareRoot(( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 ))
local unit u= CreateUnit(GetOwningPlayer(GetEventDamageSource()), 'h007', 0., 0., 0.)

call UnitApplyTimedLife(u, 'BTLF', 1.)

if bj_RADTODEG * Atan2(GetUnitY(GetTriggerUnit()) - GetUnitY(GetEventDamageSource()), GetUnitX(GetTriggerUnit()) - GetUnitX(GetEventDamageSource())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) or bj_RADTODEG * Atan2(GetUnitY(GetTriggerUnit()) - GetUnitY(GetEventDamageSource()), GetUnitX(GetTriggerUnit()) - GetUnitX(GetEventDamageSource())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) then
call AddSpecialEffectTargetUnitBJ("chest", GetTriggerUnit(), "Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetBJ(u, GetTriggerUnit(), ( ( .5 * I2R(GetUnitAbilityLevelSwapped('A07T', GetEventDamageSource())) ) * I2R(GetHeroStatBJ(1, GetEventDamageSource(), true)) ), ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL)
call EnableTrigger(GetTriggeringTrigger())
endif

set u=null
endfunction
function H8O takes unit J2E,integer H9O returns integer
local integer JVO=FEE()
set IHE[JVO]=J2E
set IJE[JVO]=H9O
return JVO
endfunction
function JEO takes nothing returns boolean
return GetUnitAbilityLevel(GetEventDamageSource(), 'A01K') != 0 and GetEventDamageSource() != GetTriggerUnit() and IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource()))
endfunction
function JXO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer JVO=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call SetHeroStr(IHE[JVO], ( GetHeroStr(IHE[JVO], false) - IJE[JVO] ), true)
call FXE(JVO)
call ReleaseTimer(GetExpiredTimer())
set t=null
endfunction
function JOO takes nothing returns nothing
local unit JRO=GetEventDamageSource()
local integer i=GetRandomInt(1, GetUnitAbilityLevel(JRO, 'A01K'))
local integer JVO=H8O(JRO , i)
local timer t=(NewTimerEx(0)) // INLINED!!
local real cooldown
call SetHeroStr(JRO, ( GetHeroStr(JRO, false) + i ), true)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\HealingSpray\\HealBottleMissile.mdl", JRO, "hand,right"))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((( ( t ) ) )), ( ( JVO ))) // INLINED!!
call TimerStart(t, GetRandomReal(2., 10. + ( 2. * I2R(GetUnitAbilityLevel(JRO, 'A01K')) )), false, function JXO)

if GetUnitAbilityLevel(JRO, 'A05N') > 0 then
                    set cooldown=BlzGetUnitAbilityCooldownRemaining(JRO, 'A05N')
                    if cooldown > 0 then
                        if cooldown - .03 <= 0 then
                            call BlzEndUnitAbilityCooldown(JRO, 'A05N')
                        else
                            call BlzStartUnitAbilityCooldown(JRO, 'A05N', cooldown - .03)
                        endif
					endif
endif

set t=null
set JRO=null
endfunction
function JAO takes nothing returns boolean
return BI[NI] != DAMAGE_TYPE_PLANT and ( ( GetUnitAbilityLevelSwapped('A02X', GetEventDamageSource()) > 0 ) and ( GetRandomInt(1, 100) <= ( GetUnitAbilityLevelSwapped('A02X', GetEventDamageSource()) * 2 + 10 ) ) and ( not ( GetTriggerUnit() == GetEventDamageSource() or IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) or GetEventDamage() <= 10. or IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) ) ) ) != null
endfunction
function JNO takes nothing returns boolean
return ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) ) or ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) )
endfunction
function JBO takes nothing returns boolean
return ( (( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) ) or ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) )) ) // INLINED!!
endfunction
function JCO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local location JDO=GetUnitLoc(IZE[PXE])
local location JFO=CNE(JDO , 128. , I0E[PXE])
local unit u= CreateUnit(GetOwningPlayer(IYE[PXE]), 'h007', 0., 0., 0.)

call UnitApplyTimedLife(u, 'BTLF', 1.)

if M5E(IZE[PXE]) then
call SAE('h00J' , GetLocationX(JFO) , GetLocationY(JFO) , ( I0E[PXE] + 180. ) , .5 , "attack two" , 2.)
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(u , IZE[PXE] , ( ( GetUnitAbilityLevel(IYE[PXE], 'A02X') * .02 * I_E[PXE] ) + ( GetHeroAgi(IYE[PXE], true) * GetUnitAbilityLevel(IYE[PXE], 'A07T') ) ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", IZE[PXE], "chest"))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .2, false, function JCO)
else
call ReleaseTimer(GetExpiredTimer())
call D8E(PXE)
endif
call RemoveLocation(JDO)
call RemoveLocation(JFO)
set JDO=null
set JFO=null
set t=null
set u=null
endfunction
function JGO takes unit JHO,unit JJO,real JKO returns nothing
local unit u=JHO
local unit t=JJO
local real d=JKO
local timer t2
local integer PXE=D7E()
set IYE[PXE]=u
set IZE[PXE]=t
set I_E[PXE]=d
set I0E[PXE]=( GetUnitFacing(u) - 180. )
call M6E(t , 450. , 2. , GetUnitFacing(u) , "none.mdl" , .0 , false , false)
set t2=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((( ( t2 ) ) )), ( ( PXE ))) // INLINED!!
call TimerStart(t2, .2, false, function JCO)
set t=null
set u=null
set t2=null
endfunction
function JLO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u= CreateUnit(GetOwningPlayer(IPE[PXE]), 'h007', 0., 0., 0.)

call UnitApplyTimedLife(u, 'BTLF', 1.)
call ReleaseTimer(GetExpiredTimer())
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetEx(u , IQE[PXE] , ( ( GetUnitAbilityLevel(IPE[PXE], 'A02X') * .6 * ISE[PXE] ) + ( GetHeroAgi(IPE[PXE], true) * GetUnitAbilityLevel(IPE[PXE], 'A07T') ) ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(GetTriggeringTrigger())
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", IQE[PXE], "chest"))
call FVE(PXE)
set t=null
set u=null
endfunction
function JMO takes unit JPO,unit JQO,real SVE returns nothing
local location IHX
local location IJX
local location ANX
local unit JSO=JPO
local unit JTO=JQO
local timer t
local integer PXE=D9E()
set IPE[PXE]=JSO
set IQE[PXE]=JTO
set ISE[PXE]=SVE
set IHX=CNE(GetUnitLoc(JTO) , 128. , ( GetUnitFacing(JTO) + 180. ))
set IJX=CNE(GetUnitLoc(JTO) , 128. , ( GetUnitFacing(JTO) + 90. ))
set ANX=CNE(GetUnitLoc(JTO) , 128. , ( GetUnitFacing(JTO) - 90. ))
call SAE('h00J' , GetLocationX(IHX) , GetLocationY(IHX) , GetUnitFacing(JTO) , 1. , "attack unarmed" , 1.)
call SAE('h00J' , GetLocationX(IJX) , GetLocationY(IHX) , ( GetUnitFacing(JTO) - 90. ) , 1. , "attack unarmed" , 1.)
call SAE('h00J' , GetLocationX(IJX) , GetLocationY(IHX) , ( GetUnitFacing(JTO) + 90. ) , 1. , "attack unarmed" , 1.)
call RemoveLocation(IHX)
call RemoveLocation(IJX)
call RemoveLocation(ANX)
set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .5, false, function JLO)
set t=null
set JSO=null
set JTO=null
set IHX=null
set IJX=null
set ANX=null
endfunction
function JUO takes nothing returns nothing
local unit u=GetEventDamageSource()
local unit t=GetTriggerUnit()
local real d=GetEventDamage()
if ( (( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) <= ( GetUnitFacing(GetTriggerUnit()) - 340. ) ) or ( AngleBetweenPoints(GetUnitLoc(GetEventDamageSource()), GetUnitLoc(GetTriggerUnit())) >= ( GetUnitFacing(GetTriggerUnit()) - 20. ) )) ) then // INLINED!!
call JGO(u , t , d)
else
call JMO(u , t , d)
endif
set u=null
set t=null
endfunction
function JYO takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B03P') )
endfunction
function JZO takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(5., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A0E8')
call IssueTargetOrderById(bj_lastCreatedUnit, 852066, GetTriggerUnit())
endfunction
function J0O takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B03S') ) and ( GetRandomInt(1, 100) <= 5 )
endfunction
function J1O takes nothing returns nothing
set XK=GetUnitLoc(GetEventDamageSource())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), XK, bj_UNIT_FACING)
call RemoveLocation(XK)
call UnitApplyTimedLifeBJ(5., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A0E6')
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetTriggerUnit())
endfunction
function J3O takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B03R') ) and ( GetRandomInt(1, 100) <= 25 ) and ( GetEventDamage() > .0 ) and ( IsUnitEnemy(GetTriggerUnit(), GetOwningPlayer(GetEventDamageSource())) )
endfunction
function J4O takes nothing returns nothing
call DisableTrigger(GetTriggeringTrigger())
call UnitDamageTargetBJ(GetEventDamageSource(), GetTriggerUnit(), ( GetEventDamage() * 2. ), ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL)
call EnableTrigger(GetTriggeringTrigger())
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( I2S(R2I(( GetEventDamage() * 3. ))) + "!" ), OK, 0, 10., 100., .0, .0, 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction
function J6O takes nothing returns nothing
local timer t=GetExpiredTimer()
local real x= 0
local real y= 0
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
if I6E[PXE] == 0 then
call UnitDamageTargetEx(( I4E[PXE] ) , ( I5E[PXE] ) , ( ( 9999999. ) * 1. ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Deadline.mdx", x, y))
call ReleaseTimer(GetExpiredTimer())
call D6E(PXE)
else
set I6E[PXE]=I6E[PXE] - 1
call Q6E(I5E[PXE] , I2S(I6E[PXE]) + "!" , "|cFF800080")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, 1., false, function J6O)
endif
set t=null
endfunction
function J7O takes nothing returns nothing
local unit u=GetTriggerUnit()
local unit u3=CreateUnit(( GetOwningPlayer(u) ), 'h007', .0, .0, .0)
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=D5E()
set I4E[PXE]=GetEventDamageSource()
set I5E[PXE]=u
set I6E[PXE]=11
call UnitApplyTimedLife(u3, 'BTLF', 1.)
call UnitAddAbility(u3, 'A01O')
call IssueTargetOrderById(u3, 852066, u)
call Q6E(I5E[PXE] , I2S(I6E[PXE]) + "!" , "|cFF800080")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .01, false, function J6O)
set t=null
set u=null
set u3=null
endfunction
function J8O takes nothing returns boolean
//Cool death touch ability
return false
endfunction
function J9O takes nothing returns boolean
return ( GetSpellAbilityId() == 'A086' )
endfunction
function KVO takes nothing returns nothing
set JJ=( JJ + 1 )
set YJ[JJ]=CreateGroup()
set KJ[JJ]=GetTriggerUnit()
set LJ[JJ]=( 10. + ( 1.5 * I2R(GetUnitAbilityLevelSwapped('A086', KJ[JJ])) ) )
set MJ[JJ]=( I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), KJ[JJ])) * ( 50. + I2R(GetUnitAbilityLevelSwapped('A086', KJ[JJ])) ) )
set MJ[JJ]=( MJ[JJ] + ( ( I2R(GetHeroStatBJ(0, KJ[JJ], true)) / 25. ) * 3. * I2R(GetUnitAbilityLevelSwapped('A086', KJ[JJ])) ) )
set PJ=230.
set QJ=220.
set SJ=( PJ / 1.53 )
set TJ[1]=GetUnitLoc(KJ[JJ])
call CreateNUnitsAtLoc(1, 'h00E', GetOwningPlayer(KJ[JJ]), TJ[1], bj_UNIT_FACING)
set UJ[JJ]=bj_lastCreatedUnit
call SetUnitScalePercent(UJ[JJ], ( 100. * ( PJ / 230. ) ), ( 100. * ( PJ / 230. ) ), ( 100. * ( PJ / 230. ) ))
call UnitApplyTimedLifeBJ(LJ[JJ], 'BTLF', UJ[JJ])
call RemoveLocation(TJ[1])
call EnableTrigger(N7)
endfunction
function Trig_Hurricane_Loop_Func001Func004001003001001001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func004001003001001002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )
endfunction
function Trig_Hurricane_Loop_Func001Func004001003001001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func004001003001002 takes nothing returns boolean
return ( 0 == 0 )
endfunction
function Trig_Hurricane_Loop_Func001Func004001003001 takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ), ( 0 == 0 )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func004001003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Hurricane_Loop_Func001Func004001003002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func004001003002002002 takes nothing returns boolean
return ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )
endfunction
function Trig_Hurricane_Loop_Func001Func004001003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func004001003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) )) ) != null
endfunction
function KXO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ), ( 0 == 0 )) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) )) )) ) != null
endfunction
function KOO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A02C', GetEnumUnit()) == 0 )
endfunction
function KRO takes nothing returns nothing
if ( (GetUnitAbilityLevelSwapped('A02C', GetEnumUnit()) == 0) ) then // INLINED!!
call UnitAddAbility(GetEnumUnit(), 'A02C')
endif
endfunction
function Trig_Hurricane_Loop_Func001Func006001003001001001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func006001003001001002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )
endfunction
function Trig_Hurricane_Loop_Func001Func006001003001001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func006001003001002 takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A02C', GetFilterUnit()) == 1 )
endfunction
function Trig_Hurricane_Loop_Func001Func006001003001 takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ), ( GetUnitAbilityLevelSwapped('A02C', GetFilterUnit()) == 1 )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func006001003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Hurricane_Loop_Func001Func006001003002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func006001003002002002 takes nothing returns boolean
return ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )
endfunction
function Trig_Hurricane_Loop_Func001Func006001003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) ) != null
endfunction
function Trig_Hurricane_Loop_Func001Func006001003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) )) ) != null
endfunction
function KIO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(KJ[WJ])) )) ), ( GetUnitAbilityLevelSwapped('A02C', GetFilterUnit()) == 1 )) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( IsUnitInGroup(GetFilterUnit(), YJ[WJ]) == false )) )) )) ) != null
endfunction
function KAO takes nothing returns nothing
call SetUnitAbilityLevelSwapped('A02C', GetEnumUnit(), 2)
call GroupAddUnit(YJ[WJ], GetEnumUnit())
call UnitAddAbility(GetEnumUnit(), 'Aave')
call UnitRemoveAbility(GetEnumUnit(), 'Aave')
call SetUnitPathing(GetEnumUnit(), false)
call SetUnitVertexColorBJ(GetEnumUnit(), 100, 50., 50., 30.)
endfunction
function KNO takes nothing returns boolean
return ( GetUnitFlyHeight(GetEnumUnit()) <= 30. )
endfunction
function KBO takes nothing returns boolean
return ( GetUnitFlyHeight(GetEnumUnit()) >= QJ )
endfunction
function KCO takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('A02C', GetEnumUnit()) == 3 )
endfunction
function KDO takes nothing returns boolean
return ( UnitAlive(GetEnumUnit()) )
endfunction
function KFO takes nothing returns nothing
call UnitDamageTargetEx(KJ[WJ] , GetEnumUnit() , MJ[WJ] + ( GetUnitState(GetEnumUnit(), UNIT_STATE_MAX_LIFE) * .16 * .04 ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
if ( (UnitAlive(GetEnumUnit())) ) then // INLINED!!
set TJ[3]=GetUnitLoc(GetEnumUnit())
set TJ[2]=CNE(TJ[1] , SJ , ( AngleBetweenPoints(TJ[1], TJ[3]) + 11. ))
call SetUnitPositionLoc(GetEnumUnit(), TJ[2])
call SetUnitFacingTimed(GetEnumUnit(), ( AngleBetweenPoints(TJ[1], TJ[3]) + 11. ), 0)
if ( (GetUnitAbilityLevelSwapped('A02C', GetEnumUnit()) == 3) ) then // INLINED!!
call SetUnitFlyHeight(GetEnumUnit(), ( GetUnitFlyHeight(GetEnumUnit()) - GetRandomReal(10., 20.) ), .0)
if ( (GetUnitFlyHeight(GetEnumUnit()) <= 30.) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('A02C', GetEnumUnit(), 2)
endif
else
call SetUnitFlyHeight(GetEnumUnit(), ( GetUnitFlyHeight(GetEnumUnit()) + GetRandomReal(10., 20.) ), .0)
if ( (GetUnitFlyHeight(GetEnumUnit()) >= QJ) ) then // INLINED!!
call SetUnitAbilityLevelSwapped('A02C', GetEnumUnit(), 3)
endif
endif
call RemoveLocation(TJ[2])
call RemoveLocation(TJ[3])
else
call SetUnitVertexColorBJ(GetEnumUnit(), 100, 100., 100., 0)
call SetUnitAbilityLevelSwapped('A02C', GetEnumUnit(), 1)
call GroupRemoveUnit(YJ[WJ], GetEnumUnit())
call GroupAddUnit(ZJ, GetEnumUnit())
call AddSpecialEffectTargetUnitBJ("chest", GetEnumUnit(), "BigBloodEX-NoSplat-NoGutz.mdx")
call DestroyEffect(bj_lastCreatedEffect)
if GetRandomInt(0, 100) <= 20 + GetUnitAbilityLevel(KJ[WJ], 'A086') then
call ModifyHeroStat(0, KJ[WJ], 0, 1)
call DestroyEffect(AddSpecialEffectTarget("BigBloodEX-NoSplat-NoGutz.mdx", KJ[WJ], "chest"))
endif
endif
endfunction
function KGO takes nothing returns nothing
call SetUnitVertexColorBJ(GetEnumUnit(), 100, 100., 100., 0)
call SetUnitAbilityLevelSwapped('A02C', GetEnumUnit(), 1)
call SetUnitFlyHeight(GetEnumUnit(), GetUnitDefaultFlyHeight(GetEnumUnit()), .0)
call SetUnitPathing(GetEnumUnit(), true)
endfunction
function KHO takes nothing returns boolean
return ( IsUnitDeadBJ(UJ[WJ]) )
endfunction
function KJO takes nothing returns boolean
return ( GetUnitFlyHeight(GetEnumUnit()) > 5. )
endfunction
function KKO takes nothing returns nothing
if ( (GetUnitFlyHeight(GetEnumUnit()) > 5.) ) then // INLINED!!
set TJ[2]=GetUnitLoc(GetEnumUnit())
set TJ[3]=CNE(TJ[2] , 20. , GetUnitFacing(GetEnumUnit()))
call SetUnitPositionLoc(GetEnumUnit(), TJ[3])
call SetUnitFlyHeight(GetEnumUnit(), ( GetUnitFlyHeight(GetEnumUnit()) - GetRandomReal(5., 10.) ), .0)
call RemoveLocation(TJ[2])
call RemoveLocation(TJ[3])
else
call GroupRemoveUnit(ZJ, GetEnumUnit())
endif
endfunction
function Trig_Hurricane_Loop_Func003Func003001 takes nothing returns boolean
return ( JJ == 0 )
endfunction
function Trig_Hurricane_Loop_Func003Func003002 takes nothing returns boolean
return ( CountUnitsInGroup(ZJ) == 0 )
endfunction
function KLO takes nothing returns boolean
return ( GetBooleanAnd(( JJ == 0 ), ( CountUnitsInGroup(ZJ) == 0 )) )
endfunction
function KMO takes nothing returns nothing
set WJ=1
loop
exitwhen WJ > JJ
set TJ[1]=GetUnitLoc(KJ[WJ])
call SetUnitPositionLoc(UJ[WJ], TJ[1])
set bj_wantDestroyGroup=false
if CountUnitsInGroup(YJ[WJ]) <= 6 then
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(PJ , TJ[1] , Condition(function KXO)), function KRO)
set bj_wantDestroyGroup=true
call ForGroupBJ(CQE(PJ , TJ[1] , Condition(function KIO)), function KAO)
endif
call ForGroupBJ(YJ[WJ], function KFO)
call RemoveLocation(TJ[1])
if ( (IsUnitDeadBJ(UJ[WJ])) ) then // INLINED!!
call ForGroupBJ(YJ[WJ], function KGO)
call GroupClear(YJ[WJ])
call GroupAddGroup(YJ[JJ], YJ[WJ])
call DestroyGroup(YJ[JJ])
call DestroyGroup(YJ[WJ])
set KJ[WJ]=KJ[JJ]
set UJ[WJ]=UJ[JJ]
set MJ[WJ]=MJ[JJ]
set LJ[WJ]=LJ[JJ]
set JJ=( JJ - 1 )
endif
set WJ=WJ + 1
endloop
call ForGroupBJ(ZJ, function KKO)
if ( (GetBooleanAnd(( JJ == 0 ), ( CountUnitsInGroup(ZJ) == 0 ))) ) then // INLINED!!
call DestroyGroup(ZJ)
call DisableTrigger(GetTriggeringTrigger())
endif
endfunction
function KQO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A0DY' )
endfunction
function KSO takes nothing returns boolean
return ( EK <= 18 )
endfunction
function Trig_Imbue_Weapon_Func005Func002001 takes nothing returns boolean
return ( EK > 18 )
endfunction
function Trig_Imbue_Weapon_Func005Func002002 takes nothing returns boolean
return ( EK <= 36 )
endfunction
function KTO takes nothing returns boolean
return ( GetBooleanAnd(( EK > 18 ), ( EK <= 36 )) )
endfunction
function Trig_Imbue_Weapon_Func006Func002001 takes nothing returns boolean
return ( EK > 36 )
endfunction
function Trig_Imbue_Weapon_Func006Func002002 takes nothing returns boolean
return ( EK <= 54 )
endfunction
function KUO takes nothing returns boolean
return ( GetBooleanAnd(( EK > 36 ), ( EK <= 54 )) )
endfunction
function Trig_Imbue_Weapon_Func007Func002001 takes nothing returns boolean
return ( EK > 54 )
endfunction
function Trig_Imbue_Weapon_Func007Func002002 takes nothing returns boolean
return ( EK <= 72 )
endfunction
function KWO takes nothing returns boolean
return ( GetBooleanAnd(( EK > 54 ), ( EK <= 72 )) )
endfunction
function Trig_Imbue_Weapon_Func008Func002001 takes nothing returns boolean
return ( EK > 72 )
endfunction
function Trig_Imbue_Weapon_Func008Func002002 takes nothing returns boolean
return ( EK <= 90 )
endfunction
function KYO takes nothing returns boolean
return ( GetBooleanAnd(( EK > 72 ), ( EK <= 90 )) )
endfunction
function Trig_Imbue_Weapon_Func009Func002001 takes nothing returns boolean
return ( EK > 90 )
endfunction
function Trig_Imbue_Weapon_Func009Func002002 takes nothing returns boolean
return ( EK <= 95 )
endfunction
function KZO takes nothing returns boolean
return ( GetBooleanAnd(( EK > 90 ), ( EK <= 95 )) )
endfunction
function K_O takes nothing returns boolean
return ( EK > 95 )
endfunction
function K0O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(15., 'BTLF', bj_lastCreatedUnit)
set EK=GetRandomInt(1, 101)
if ( (EK <= 18) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0E2')
endif
if ( (GetBooleanAnd(( EK > 18 ), ( EK <= 36 ))) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0DZ')
endif
if ( (GetBooleanAnd(( EK > 36 ), ( EK <= 54 ))) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0DZ')
endif
if ( (GetBooleanAnd(( EK > 54 ), ( EK <= 72 ))) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0E2')
endif
if ( (GetBooleanAnd(( EK > 72 ), ( EK <= 90 ))) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0E1')
endif
if ( (GetBooleanAnd(( EK > 90 ), ( EK <= 95 ))) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0E2')
endif
if ( (EK > 95) ) then // INLINED!!
call UnitAddAbility(bj_lastCreatedUnit, 'A0E1')
endif
endfunction
function K2O takes nothing returns nothing
set DI[NI]=DI[NI] + GetEventDamage()
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DarkConversion\\ZombifyTarget.mdl", GetEventDamageSource(), "origin"))
endfunction
function K3O takes nothing returns boolean
if GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )], 'B047') != 0 and GetTriggerUnit() != GetEventDamageSource() then
call K2O()
endif
return false
endfunction
function K8O takes nothing returns boolean
return ( GetSpellAbilityId() == 'AIxs' )
endfunction
function K9O takes nothing returns nothing
call CameraClearNoiseForPlayer(GetOwningPlayer(GetTriggerUnit()))
endfunction
function LEO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A02F' )
endfunction
function LXO takes nothing returns nothing
set TL=GetSpellTargetLoc()
call CreateNUnitsAtLoc(1, 'h003', GetOwningPlayer(GetTriggerUnit()), TL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(.01, 'BTLF', bj_lastCreatedUnit)
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), TL, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A02D')
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 852057, TL)
call RemoveLocation(TL)
endfunction
function LRO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A03V' ) and ( GetPlayerController(GetOwningPlayer(GetSpellTargetUnit())) == MAP_CONTROL_COMPUTER )
endfunction
function Trig_Whole_Displacement_Func003001 takes nothing returns boolean
return ( ( 1 + GetPlayerId(GetOwningPlayer(GetSpellTargetUnit())) ) == 6 )
endfunction
function LIO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetSpellTargetUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
if IsUnitAlly(GetSpellTargetUnit(), Player(0)) then
call SetUnitPositionLoc(GetSpellTargetUnit(), MD[GetRandomInt(1, 2)])
else
call SetUnitPositionLoc(GetSpellTargetUnit(), MD[GetRandomInt(3, 4)])
endif
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function LNO takes nothing returns boolean
return ( GetSpellAbilityId() == 'A02A' )
endfunction
function LBO takes nothing returns nothing
set TempLocation=GetSpellTargetLoc()
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\TrinusTenebrae.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call CreateNUnitsAtLoc(1, MC[( PC + 5 )], GetOwningPlayer(GetTriggerUnit()), TempLocation, bj_UNIT_FACING)
call TriggerExecute(K7)
call RemoveLocation(TempLocation)
endfunction
function LDO takes nothing returns nothing
local unit LFO
set LFO=bj_lastCreatedUnit
call ShowUnitHide(LFO)
call TriggerSleepAction(1.)
call ShowUnitShow(LFO)
call UnitApplyTimedLifeBJ(60, 'BTLF', LFO)
set TempLocation=GetUnitLoc(LFO)
call AddSpecialEffectLocBJ(TempLocation, "war3mapImported\\Doomsday.mdx")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function LHO takes nothing returns boolean
return ( GetUnitTypeId(GetDyingUnit()) == 'n00U' )
endfunction
function LJO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetDyingUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetDyingUnit())
endfunction
function LLO takes nothing returns boolean
return ( GetUnitTypeId(GetDyingUnit()) == 'n017' )
endfunction
function LMO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetDyingUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetDyingUnit())
endfunction
function LQO takes nothing returns boolean
return ( GetUnitTypeId(GetDyingUnit()) == 'n00M' )
endfunction
function LSO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetDyingUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetDyingUnit())
endfunction
function LUO takes nothing returns boolean
return ( GetUnitTypeId(GetDyingUnit()) == 'n00L' )
endfunction
function LWO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetDyingUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetDyingUnit())
endfunction
function LZO takes nothing returns nothing
set FF=InitHashtable()
endfunction
function L0O takes nothing returns nothing
call SetCameraFieldForPlayer(GetEnumPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 2350., .2)
endfunction
function L1O takes nothing returns nothing
call FogEnableOff()
call FogMaskEnableOff()
endfunction
function Trig_General_Map_Initialization_Func015Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_General_Map_Initialization_Func016Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function L2O takes nothing returns boolean
return ( ST )
endfunction
function L3O takes nothing returns nothing
call DialogDisplayBJ(true, YC, GetEnumPlayer())
endfunction
function L4O takes nothing returns nothing
call DialogDisplayBJ(false, YC, GetEnumPlayer())
endfunction
function L5O takes nothing returns boolean
return ( VD[1] > VD[2] ) and ( VD[1] >= VD[3] ) and ( VD[1] >= VD[4] ) and ( VD[1] >= VD[5] )
endfunction
function L6O takes nothing returns boolean
return ( VD[2] >= VD[1] ) and ( VD[2] >= VD[3] ) and ( VD[2] >= VD[4] ) and ( VD[2] >= VD[5] )
endfunction
function L7O takes nothing returns boolean
return ( VD[3] > VD[1] ) and ( VD[3] > VD[2] ) and ( VD[3] >= VD[4] ) and ( VD[3] >= VD[5] )
endfunction
function L8O takes nothing returns boolean
return ( VD[4] > VD[1] ) and ( VD[4] > VD[2] ) and ( VD[4] > VD[3] ) and ( VD[4] >= VD[5] )
endfunction
function L9O takes nothing returns boolean
return ( VD[5] > VD[1] ) and ( VD[5] > VD[2] ) and ( VD[5] > VD[3] ) and ( VD[5] > VD[4] )
endfunction
function MVO takes nothing returns boolean
return ( XT == 0 )
endfunction
function MEO takes nothing returns boolean
return ( XT == 1 )
endfunction
function MXO takes nothing returns boolean
return ( XT == 2 )
endfunction
function MOO takes nothing returns boolean
return ( XT == 3 )
endfunction
function MRO takes nothing returns boolean
return ( XT == 4 )
endfunction
function MIO takes nothing returns boolean
return ( XT == 5 )
endfunction
function MAO takes nothing returns nothing
call SetPlayerFlagBJ(PLAYER_STATE_GIVES_BOUNTY, true, GetEnumPlayer())
endfunction
function Trig_General_Map_Initialization_Func048Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function DisableEasyFunc takes nothing returns nothing
if XT == 1 then
call SetPlayerAbilityAvailableBJ(false, 'A02Y', GetEnumPlayer())
endif
call SetPlayerAbilityAvailableBJ(false, 'A019', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A03X', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A00J', GetEnumPlayer())
endfunction
 


function CaptureMouseXY takes nothing returns boolean
local integer mousexyi= GetPlayerId(GetTriggerPlayer())
set MouseX[mousexyi]=BlzGetTriggerPlayerMouseX()
set MouseY[mousexyi]=BlzGetTriggerPlayerMouseY()

return false
endfunction


function MNO takes nothing returns nothing
local trigger mousetrigger
local integer mousexyid= 0
call CRE(.01)
call CameraSetSmoothingFactor(3.)
set GF=18
set HF=15.
call SetUnitAnimationByIndex(E4V, 1)
call SetUnitAnimationByIndex(E7V, 1)
call ForForce(bj_FORCE_ALL_PLAYERS, function L0O)
//call C8E(Player(8),PLAYER_COLOR_LIGHT_BLUE,true)
//call C8E(Player(9),PLAYER_COLOR_LIGHT_BLUE,true)
call C8E(Player(10) , PLAYER_COLOR_LIGHT_BLUE , true)
call C8E(Player(11) , PLAYER_COLOR_LIGHT_BLUE , true)
call ForForce(bj_FORCE_ALL_PLAYERS, function L1O)
call CRE(1.)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=5
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[1]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=6
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[2]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., "Red is now picking modes. Please wait.")
call TriggerExecute(EUV)
call StartTimerBJ(CreateTimerBJ(false, 20.), false, 20.)
call CreateTimerDialogBJ(bj_lastStartedTimer, "Game modes")
call CRE(20.)
call DestroyTimerDialog(bj_lastCreatedTimerDialog)
set GAMEM=false
if ( (ST) ) then // INLINED!!
call TriggerExecute(ETV)
endif
if ( (XT == 0) ) then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., "Players are now voting on the difficulty setting. Please be patient.")
call ForForce(bj_FORCE_ALL_PLAYERS, function L3O)
call CRE(9.)
call ForForce(bj_FORCE_ALL_PLAYERS, function L4O)
if ( (( VD[1] > VD[2] ) and ( VD[1] >= VD[3] ) and ( VD[1] >= VD[4] ) and ( VD[1] >= VD[5] )) ) then // INLINED!!
set XT=3
endif
if ( (( VD[2] >= VD[1] ) and ( VD[2] >= VD[3] ) and ( VD[2] >= VD[4] ) and ( VD[2] >= VD[5] )) ) then // INLINED!!
set XT=1
endif
if ( (( VD[3] > VD[1] ) and ( VD[3] > VD[2] ) and ( VD[3] >= VD[4] ) and ( VD[3] >= VD[5] )) ) then // INLINED!!
set XT=2
endif
if ( (( VD[4] > VD[1] ) and ( VD[4] > VD[2] ) and ( VD[4] > VD[3] ) and ( VD[4] >= VD[5] )) ) then // INLINED!!
set XT=4
endif
if ( (( VD[5] > VD[1] ) and ( VD[5] > VD[2] ) and ( VD[5] > VD[3] ) and ( VD[5] > VD[4] )) ) then // INLINED!!
set XT=5
endif
endif
if ( (XT == 1) ) then // INLINED!!
set ED=90.
set RT="|cff00baffVery Easy|r"
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., ( RT + " has been initiated; monsters are at 90% health and damage, Commanders are very easy, and almost all offense is disabled." ))
endif
if ( (XT == 2) ) then // INLINED!!
set ED=100.
set RT="|cff1ab700Easy|r"
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., ( RT + " has been initiated; monsters are at 100% health and damage, Commanders are easy, and most offense is disabled." ))
endif
if ( (XT == 3) ) then // INLINED!!
set ED=100.
set RT="|cfff6ff00Normal|r"
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., ( RT + " has been initiated; monsters are at 100% health and damage, Commanders are normal, and offense is enabled." ))
endif
if ( (XT == 4) ) then // INLINED!!
set ED=100.
set RT="|cffff6000Nightmare|r"
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., ( RT + " has been initiated; monsters are at 100% health and damage, Commanders are nightmarish, and offense is enabled. Commanders also cost 15 lives." ))
endif
if ( (XT == 5) ) then // INLINED!!
set ED=105.
set RT="|cffaa0000Hell|r"
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 9., ( RT + " has been initiated; monsters are at 105% health and damage, Commanders are impossible, and offense is enabled. Commanders also cost 15 lives." ))
endif
call FOX()
if XT <= 2 then
call ForForce(bj_FORCE_ALL_PLAYERS, function DisableEasyFunc)
endif
call TriggerExecute(I1)
call PlaySoundBJ(GY)
set DS=true
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30., "|cffffcc00Welcome to Enfo's TS: FFB Edition, presented to you by Strikest and Swedish_Buddha(RIP).|r\n")
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,30.,"|cffffcc00For |cFFE82618basic information|r|cffffcc00, including a list of |cFFE82618item recipes|r |cffffcc00and |cFFFF0000RECOMMENDED ITEMS|r, |cffffcc00please press |cFFE82618F9|r. |cffffcc00Be aware that there is also a |cFFE82618Recipe Shop|r |cffffcc00located on your Team Goal.|r")
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30., "|cffffcc00For |cFFE82618basic information|r|cffffcc00, including a list of |cFFFF0000RECOMMENDED ITEMS|r, |cffffcc00please press |cFFE82618F9|r. |cffffcc00Be aware that there is also a |cFFE82618Recipe Shop|r |cffffcc00located on your Team Goal.|r")
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30., "|cffffcc00Please stay even if you have lost, the game will |cFFFF0000automatically remake|r.|r")
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,30.,"|cffffcc00Visit the official wiki at enfosffb.wikia.com for map information and strategy tips.|r")
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30., "|cFF1B9BE0Join the official discord at https://discord.gg/9fuCGD3 to find games, report bugs, or suggest things for the map!|r")
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,30.,"|cffffcc00Visit www.clan-ffb.com for news, bug report, tips or suggestions!|r")
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,60.,"Announcing the first ever Enfo's TS FFB Edition tournament, with a cash prize of 250+ usd, taking place in August.Please out our discord for more info: https://discord.gg/9fuCGD3. Also thank you to the patrons at https://www.patreon.com/EnfosFFB for contrubiting to the prize money so I don't have to pay too much out of pocket. GLHF!")
call SetTimeOfDay(12)
set mousetrigger=CreateTrigger()
loop
exitwhen mousexyid > 9

call TriggerRegisterPlayerEvent(mousetrigger, Player(mousexyid), EVENT_PLAYER_MOUSE_MOVE)
call TriggerAddCondition(mousetrigger, Condition(function CaptureMouseXY))

set mousexyid=mousexyid + 1
endloop
call ForForce(C_E(MAP_CONTROL_COMPUTER), function MAO)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
call CreateNUnitsAtLoc(1, 'ushd', Player(- 1 + ( bj_forLoopAIndex )), GetPlayerStartLocationLoc(Player(- 1 + ( bj_forLoopAIndex ))), bj_UNIT_FACING)
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call CreateTextTagLocBJ("North: Advanced/Hybrid Heroes", CNE(CNE(GetRectCenter(PU) , 150. , 180.) , 450. , 90.), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("East: Support Heroes", CNE(CNE(GetRectCenter(PU) , 150. , 180.) , 450. , .0), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("West: Tank Heroes", CNE(CNE(GetRectCenter(PU) , 150. , 180.) , 450. , 180.), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("South: Spellcaster Heroes", CNE(CNE(GetRectCenter(PU) , 150. , 180.) , 450. , 270.), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("Presented to you by: |cFF540081S|r|cFF670675t|r|cFF790C69r|r|cFF8C125Di|r|cFF9E1750k|r|cFFB11D44e|r|cFFC32338s|r|cFFD6292Ct|r,", CNE(GetRectCenter(PU) , 150. , 180.), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("Swedish_Buddha(RIP).", CNE(CNE(GetRectCenter(PU) , 50. , 270.) , 150. , 180.), 0, 8., 80., 80., 80., 0)
call CreateTextTagLocBJ("|cFF2380DC Discord: discord.gg/9fuCGD3|r", CNE(CNE(GetRectCenter(PU) , - 50. , 270.) , 150. , 180.), 0, 8., 80., 80., 80., 0)
call CreateQuestBJ(0, "Enfo's Team Survival:FFB", "Welcome to Enfo's Team Survival: FFB Edition, by Strikest and Swedish_Buddha(Retired).|n|nJoin our discord! discord.gg/9fuCGD3|n|nVisit the official wiki at www.enfosffb.wikia.com for map information, tips, and strategy.", "ReplaceableTextures\\CommandButtons\\BTNCombat1.blp")
call CreateQuestBJ(0, "Recommended Items", "|cFFB6488FAll Heroes|r: |cFFFF0000Winged Leather Boots|r, |cFFFF0000Elven Plate Mail|r, Health Potions.|n|n|cFF0EA8F1Caster Heroes|r|nHisan Salves, Staff of Peace(Tranquil Blade + Elder Staff + Sapphire-inset Ring)|nIndulgence(Lategame, after tank has items.), Tranquil Warfare Set(Again, lategame.)|nUthmor's Skullcleaver(Criticals work on spells, but only get this SUPER lategame, after tank has good items; it's very expensive and the tank needs the gold more.)|n|n|cFFE6691ATank Heroes|r|nThe Eternal Core(Ruby-inset Ring + Bloodstone-inset Ring + Recipe(Found in Ezara's Runewords, NOT Venus.)), Shard of Ragnaros(Mid-lategame)|nReinforced Crystal Armor/Shadowbark Leathers(Only if your hero does not have Evasion, it does not stack)/Victory Mail(Anti-Magic Shield, useful for preventing Armor Crush and Knockback)|nRagnarok/Immortal Escutcheon(Lategame)|n|n|cFFB3CC33Melee DPS|r|nThe Brutalizer(Bloodstone-inset Ring + Polished Elven Telo + Spineripper)|nRagnarok(Strength heroes, lategame), The Ravager(Lategame)", "ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
call CreateQuestBJ(0, "Commands", "|cffffcc00-monsters|r - Shows how many monsters there are on each side.|n|cffffcc00-repick|r - Repicks your hero.|n|cffffcc00-tips|r - Toggles wave tips.|n|cffffcc00-autosend x|r - Autosends player x your resources every 10 seconds.|n|cffffcc00-autopool off|r - Turns off autosend.|n|cffffcc00-zoom xxxx|r - zooms from 0 to 3000.|n|cffffcc00-range xxxx|r - Sets Acquisition Range.|n|cffffcc00-clear or -c|r - Clears all text on the display.|n|cffffcc00-tm xxxx|r - Sets Targeted Magic range (AM only).|n|cffffcc00-toggleautoselect|r - Toggles auto-selection of minions (Unliving Only).|n|cffffcc00-suicide|r - Kills your hero after 10 seconds(use if your hero is stuck).|n|cffffcc00-sr|r - Allows stats to be recorded for the current round(Red only).|n|cffffcc00-revivefix|r - Revives your hero after a certain period of time(WARNING!!! - Only use this if your hero did not revive due to a bug. This is untested and may bug your hero otherwise).", "ReplaceableTextures\\CommandButtons\\BTNEngineeringUpgrade.blp")
call CreateQuestBJ(0, "Credits", "SPECIAL THANKS|n|nVexorian for JassHelper and his dummy.mdl.|nkenny for his Projectile System and Knockback System|nJesus4Lyfe for AIDS and Damage.|nMythic, for his amazing special effects models|n-Grendel as well, for his awesome models which are featured everywhere on this map!|n|nTank-Commander, JC Helas, and nhocklanhox6 for Devastation Envoy, Frost Bite, and Shadow Image Blink respectively. |", "ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
call CreateQuestBJ(0, "Credits Part 2", "Waffle(est) - Improved autopool system.|nkicka55 for his new and improved map preview!|nKindinMind, tyrea1, Istaryu, and Yhevi for QA testing. |ndickxunder and General Frank for Prime Matron and Demonish Bulwark.|nMurlocologist for his Mo'arg Overlord and Mannoroth models, as well as his Flame Lord Skin.|nExplobomb for his N'Zoth and N'yalothan Naga models.|n|nIF I MISSED ANYONE ELSE, I'm SORRY. I LOST THE PROTECTED VERSION AND WHEN I DEPROTECTED IT THE CREDITS WERE MISSING. IF I USED YOUR RESOURCE AND YOU ARE NOT CREDITED, CONTACT ME ON DISCORD @Strikest#2626.", "ReplaceableTextures\\CommandButtons\\BTNTomeOfRetraining.blp")
call CreateQuestBJ(2, "Projectile System", "Unlike any other Enfo map you've encountered, our version features a projectile system.|n This means all projectile spells and attacks can be modified in mid-air, and they can't collide with creeps, walls, etc. If you shoot a straight forward going spell on a target in the middle of a crowd, it won't go past the first units there to reach the target. It will collide with the first one in its path instead.|n This also means there are spells that remove a spell that you shot towards an enemy before it actually reached its target.\n", "ReplaceableTextures\\CommandButtons\\BTNMarksmanship.blp")
call CreateQuestBJ(2, "Bosses and Commanders", "Our version features bosses and commanders.|n A Commander comes with every wave, and usually have either some global affect or aura; or they do a lot of damage.|n An example can be the Fanrae commander. He keeps all fanraes permanent invisible while he's alive - so even when they're attacking, they can't be seen with normal means.|n|n Bosses are harder than commanders, and will show up at certain events in the map. You will know once you see one.", "ReplaceableTextures\\CommandButtons\\BTNEtheral1.blp")
//call CreateQuestBJ(2,"Item Recipes Part 1","    Recipe 1: Elite Elven Boots\n    Arbelog Paw Boots + Elven Hunting Boots + Winged Leather Boots\n\n    Recipe 2: Thirsting Blade\n    Bloodthirst + Gleaming Longsword + Spineripper\n\n    Recipe 3: Obsidian Ring\n    Grimstone-inset Ring * 4\n\n    Recipe 4: Uthmor's Mirror Blade\n    T'kashi Mirror Blade + Uthmor's Skullcleaver\n\n    Recipe 5: Savage Blade\n    Bloodthirst + Nimsha\n\n    Recipe 6: Ring Of Victory\n    Bloodstone-inset Ring + Diamond-etched Ring + Moonstone-inset Ring + Zircon-inset Ring\n\n    Recipe 7: Ring Of Supremacy\n    Obsidian Ring + Ring of Victory\n\n    Recipe 8: Elven Stalking Boots\n    Elven Hunting Boots *3\n\n    Recipe 9: Supreme Elven Boots\n    Elite Elven Boots + Elven Stalking Boots\n\n    Recipe 10: Hermes' Treads\n    Supreme Elven Boots + Hermes' Treads Recipe","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
//call CreateQuestBJ(2,"Item Recipes Part 2","    Recipe 11: Feather Ring\n    Zircon-inset Ring * 2\n\n    Recipe 12: Lightning Ring\n    Feather Ring * 2\n\n    Recipe 13: Uthmor's Sinister Blade\n    Obsidian-inset Ring + Uthmor's Mirror Blade\n\n    Recipe 14: Rampart Shield\n    Kite Shield + Small Round Shield + Tower Shield\n\n    Recipe 15: Zircon-inset Ring\n    Emerald-inset Ring * 4\n\n    Recipe 16: Moonstone-inset Ring\n    Sapphire-inset Ring * 4\n\n    Recipe 17: Bloodstone-inset Ring\n    Ruby-inset Ring * 4\n\n    Recipe 18: Diamond-etched Ring\n    Crystal-etched Ring * 4\n\n    Recipe 19: Wand of the West Wind\n    Elder Staff + Tribal Staff\n\n    Recipe 20: Fragarach\n    Polished Elven Telo + Tribal Staff","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
//call CreateQuestBJ(2,"Item Recipes Part 3","    Recipe 21: Tranquil Blade\n    Gleaming Longsword + Tranquil Blade Recipe\n\n    Recipe 22: Force Edge\n    Elder Staff + Sapphire-inset Ring + Polished Elven Telo\n\n    Recipe 23: The Brutalizer\n    Bloodstone-inset Ring + Polished Elven Telo + Spineripper\n\n    Recipe 24: Brisker\n    Polished Elven Telo + Polished Elven Telo + Zircon-inset Ring\n\n    Recipe 25: Zirconium Crystal\n    Zircon-inset Ring + Supreme Elven Boots\n\n    Recipe 26: Phantom Dancer\n    Zirconium Crystal + Brisker\n\n    Recipe 27: Concentrated Zircon\n    Zirconium Crystal + Zirconium Crystal    \n\n    Recipe 28: Phantom Shredder\n    Phantom Dancer + T'kashi Mirror Blade\n\n    Recipe 29: Tainted Leather\n    Argelog Paw Boots + Shroud of Shadows + Elven Plate Mail\n\n    Recipe 30: Shadowbark Leathers\n    Tainted Leather + Ironbark Leathers","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
//call CreateQuestBJ(2,"Item Recipes Part 4","    Recipe 31: Reinforced Crystal Armor\n    Crystal Armor + Crystal Armor + Ironbark Leathers\n\n    Recipe 32: Victory Mail\n    Ring of Victory + Ironbark Leathers\n\n    Recipe 33: Lightning Bow\n    Lightning Ring + Zircon-inset Ring + Lightning Bow Recipe\n\n    Recipe 34: Bow of Tears\n    Lightning Bow + Spineripper\n\n    Recipe 35: Agony\n    Bow of Tears + Bow of Tears + Zirconium Crystal\n\n    Recipe 36: Bloodstone\n    Bloodstone-inset Ring * 3 + Grimstone-inset Ring\n\n    Recipe 37: Titan Shield\n    Rampart Shield + Bloodstone-inset Ring\n\n    Recipe 38: Aegis\n    Titan Shield + Bloodstone * 2 + Dragon-scale Shield * 2\n\n    Recipe 39: Ragnarok\n    Thirsting Blade + Aegis + Shard of Ragnaros\n\n    Recipe 40: Eternal Thirst\n    T'kashi Mirror Blade * 2 + Thirsting Blade + Bloodstone","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
//call CreateQuestBJ(2,"Item Recipes Part 5","    Recipe 41: The Ravager\n    The Brutalizer + Savage Blade * 2\n    Recipe 42: Pride's Downfall\n    Agani Tayeu'a * 2 + Elder Staff * 2\n    Recipe 43: Immortal Escutcheon\n    Aegis + Bloodstone + Obsidian-inset Ring\n    Recipe 44: Shard of Ragnaros\n    Bloodthirst*2 + Bloodstone\n    Recipe 45: Tranquil Force\n    Tranquil Blade + Force Edge + Crystal-etched Ring\n    Recipe 46: The Witch's Fate\n    T'kashi Mirror Blade + Ring of Victory + Titan Shield\n    Recipe 47: Dementia's Door\n    Diamond-etched Ring + Crystal-etched Ring + Elder Staff\n    Recipe 48: Callous Mutilator\n    The Brutalizer * 2 + Bloodstone-inset Ring\n    Recipe 49: The Eternal Core\n    Bloodstone-inset Ring + Ruby-inset Ring + Recipe\n    Recipe 50: Eternity's End\n    The Eternal Core * 2 + Obsidian-inset Ring","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
//call CreateQuestBJ(2,"Item Recipes Part 6","    Recipe 51: Angel Crucible\n    Sinister Urn + Sinister Urn(Light) + Sinister Urn(Dark)\n    Recipe 52: Daedalus\n    Concentrated Zirconium + Force Edge + Ring of Victory\n    Recipe 53: Night's Veil\n    Zirconium Crystal + Emerald-inset Ring + Shroud of Shadows\n    Recipe 54: Indulgence\n    Agani Tayeu'a + Moonstone-inset Ring * 2\n    Recipe 55: Tyranny\n    Agani Tayeu'a + Bloodstone-inset Ring + Spineripper\n    Recipe 56: Paradox Blade\n    Fragarach + Tranquil Blade + Spineripper + Zircon-inset Ring + Moonstone-inset Ring\n    Recipe 57: Soulrend\n    Fragarach + Nimsha + T'kashi Mirror Blade\n    Recipe 58: Staff of Peace\n    Tranquil Blade + Elder Staff + Sapphire-inset Ring","ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")
call CreateQuestBJ(2, "Item Recipes", "Recipe items are sold by Venus, the Recipe Shop located in your Team Goal. Each recipe item sold by Venus also lists its component items, at the bottom of the tooltip. You can additionally purchase the completed recipe item, but it will cost 10% more than if you had combined it yourself.", "ReplaceableTextures\\CommandButtons\\BTNSnazzyScroll.blp")

set QC=8
if not LWMON then
call TriggerExecute(V4V)
else
call ExecuteFunc("IncomeTrigger")
endif
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function MCO takes nothing returns nothing
set DT[1]="|cff00baffCrabs|r"
set MD[1]=GetRectCenter(LU)
set MD[2]=GetRectCenter(MU)
set MD[3]=GetRectCenter(JU)
set MD[4]=GetRectCenter(KU)
set PD[1]=GetRectCenter(GU)
set PD[2]=GetRectCenter(HU)
set LT[1]='Aspo'
set LT[2]='A04S'
set LT[3]='ANbh'
set LT[4]='Absk'
set LT[5]='A01X'
set LT[6]='Afzy'
set LT[7]='Acht'
set LT[8]='ACcs'
set LT[10]='A01Z'
set LT[11]='A01R'
set LT[12]='A04H'
set LT[13]='SCae'
set LT[14]='ACvp'
set LT[15]='ACua'
set LT[16]='AEar'
set LT[17]='A00O'
set LT[18]='A01W'
set LT[19]='ACav'
set LT[20]='ACac'
set LT[21]='A01T'
set LT[22]='A01M'
set LT[23]='ACbb'
set LT[24]='AIcb'
set LT[25]='Ambd'
set LT[26]='Apiv'
set LT[27]='Afbt'
set LT[28]='A037'
set KT[1]=100.
set KT[2]=250.
set KT[3]=420.
set KT[4]=690.
set KT[5]=1100.
set KT[6]=1600.
set KT[7]=2400.
set KT[8]=3600.
set KT[9]=5400.
set KT[10]=6900.
set ZS[1]=40.
set ZS[2]=78.6
set ZS[3]=143.83
set ZS[4]=254.08
set ZS[5]=440.39
set ZS[6]=755.27
set ZS[7]=1287.4
set ZS[8]=2186.71
set ZS[9]=3706.53
set ZS[10]=6275.04
set IT[1]=60.
set IT[2]=120.
set IT[3]=270.
set IT[4]=480.
set IT[5]=840.
set IT[6]=1500.
set IT[7]=2400.
set IT[8]=3600.
set IT[9]=6000.
set IT[10]=9000.
set AT[1]=729.
set AT[2]=1652.25
set AT[3]=2888.
set AT[4]=5050.
set AT[5]=9625.
set AT[6]=15625.
set AT[7]=25276.
set AT[8]=39402.
set AT[9]=49726.
set AT[10]=61256.
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=5
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set GD[bj_forLoopAIndex]=GU
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=6
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set GD[bj_forLoopAIndex]=HU
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set GD[12]=GU
set MC[1]='n020'
set MC[2]='n02G'
set MC[3]='n01Y'
set MC[4]='n02W'
set MC[5]='n024'
set MC[6]='n022'
set MC[7]='n03F'
set MC[8]='n02E'
set MC[9]='n03O'
set MC[10]='e00Z'
set MC[11]='n028'
set MC[12]='n02U'
set MC[13]='n039'
set MC[14]='n02A'
set MC[15]='n030'
set MC[16]='n02S'
set MC[17]='n02Q'
set MC[18]='n01W'
set MC[19]='n03L'
set MC[20]='n03Q'
set MC[21]='n02M'
set MC[22]='n03G'
set MC[23]='n02K'
set MC[24]='n03D'
set MC[25]='n02I'
set MC[26]='n02C'
set MC[27]='n02Y'
set MC[28]='n037'
set MC[29]='n026'
set MC[30]='n01U'
set MC[31]='n03B'
set MC[32]='e00G'
set MC[33]='n03R'
set MC[34]='n02O'
set MC[35]='u00R'
set MC[36]='u00V'
set MC[37]='u00W'
set MC[38]='u00P'
set MC[39]='u00U'
set MC[40]='n016'
set MC[41]='n016'
set MC[42]='n016'
set MC[43]='n016'
set MC[44]='n016'
set MC[45]='n016'
set MC[46]='n016'
set UD[1]="GlowRed.mdl"
set UD[2]="GlowBlue.mdl"
set UD[3]="GlowTeal.mdl"
set UD[4]="GlowPurple.mdl"
set UD[5]="GlowYellow.mdl"
set UD[6]="GlowOrange.mdl"
set UD[7]="GlowGreen.mdl"
set UD[8]="GlowPink.mdl"
set PK[1]='n021'
set PK[2]='n02H'
set PK[3]='n01Z'
set PK[4]='n02X'
set PK[5]='n025'
set PK[6]='n023'
set PK[7]='n03H'
set PK[8]='n02F'
set PK[9]='n03P'
set PK[10]='e01S'
set PK[11]='n029'
set PK[12]='n02V'
set PK[13]='n03A'
set PK[14]='n02B'
set PK[15]='n031'
set PK[16]='n02T'
set PK[17]='n02R'
set PK[18]='n01X'
set PK[19]='n03N'
set PK[20]='n03S'
set PK[21]='n02N'
set PK[22]='n03J'
set PK[23]='n02L'
set PK[24]='n03E'
set PK[25]='n02J'
set PK[26]='n02D'
set PK[27]='n02Z'
set PK[28]='n038'
set PK[29]='n027'
set PK[30]='n01V'
set PK[31]='n03C'
set PK[32]='e00X'
set PK[33]='n03T'
set PK[34]='n02P'
set PK[35]='u00S'
set PK[36]='u00X'
set PK[37]='u00Y'
set PK[38]='u00Q'
set PK[39]='u00T'
set PK[40]='n03K'
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function MFO takes nothing returns boolean
return ( HD == false )
endfunction
function MGO takes nothing returns nothing
call PauseUnit(GetEnumUnit(), true)
endfunction
function Trig_Initialize_Rematch_Func006001 takes nothing returns boolean
return ( SC == 0 )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h000' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00P' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h004' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00G' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00H' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00I' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' ))
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) ))
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) ))
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) ))
endfunction
function Trig_Initialize_Rematch_Func011Func002001002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00P' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) )) ))
endfunction
function MHO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h011' ) and GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h000' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00P' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) )) )) )) and GetUnitTypeId(GetFilterUnit()) != 'H013' and GetUnitTypeId(GetFilterUnit()) != 'H014' and GetUnitTypeId(GetFilterUnit()) != 'H015' and GetUnitTypeId(GetFilterUnit()) != 'H016' and GetUnitTypeId(GetFilterUnit()) != 'o006' and GetUnitTypeId(GetFilterUnit()) != 'n01G' and GetUnitTypeId(GetFilterUnit()) != 'n01C' and GetUnitTypeId(GetFilterUnit()) != 'h01I'
endfunction
function MJO takes nothing returns nothing
call RemoveUnit(GetEnumUnit())
endfunction
function Trig_Initialize_Rematch_Func011Func003001001 takes nothing returns boolean
return ( GetPlayerController(Player(- 1 + ( bj_forLoopAIndex ))) == MAP_CONTROL_USER )
endfunction
function Trig_Initialize_Rematch_Func011Func003001002 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_Initialize_Rematch_Func011Func003001 takes nothing returns boolean
return GetBooleanAnd(( GetPlayerController(Player(- 1 + ( bj_forLoopAIndex ))) == MAP_CONTROL_USER ), ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ))
endfunction
function MKO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'h000' )
endfunction
function MLO takes nothing returns nothing
call SetUnitManaBJ(GetEnumUnit(), 50.)
call UnitResetCooldown(GetEnumUnit())
endfunction
function MMO takes nothing returns nothing
if GetItemTypeId(GetEnumItem()) != 'ciri' then
call RemoveItem(GetEnumItem())
endif
endfunction
function MPO takes nothing returns nothing
call SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, 0)
call SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER, 0)
endfunction
function MQO takes nothing returns nothing
call SetPlayerAbilityAvailableBJ(true, 'A02A', GetEnumPlayer())
endfunction
function Trig_Initialize_Rematch_Func039Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_Initialize_Rematch_Func040Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function RemoveUnitSpawners takes nothing returns boolean
local integer i= GetUnitTypeId(GetFilterUnit())
if i == 'H013' or i == 'H014' or i == 'H015' or i == 'H016' then
call RemoveUnit(GetFilterUnit())
endif
return false
endfunction
function MSO666 takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer i= 0
local integer i2= 1
local integer loopi=0
local unit u
local integer p= 0

loop
exitwhen p > 9
set CorruptAmount[p]=0
//set CorruptionRaised[p] = 0

call SetPlayerState(Player(p), PLAYER_STATE_RESOURCE_FOOD_USED, 0)

set p=p + 1
endloop

call ReleaseTimer(t)
set GAMEM=false
call DestroyTimerDialog(GameModeDialog)
if not LWMON then
call TriggerExecute(V4V)
else
call GroupEnumUnitsInRange(UNIT_SPAWNERS_GROUP, 0., 0., 99999., Condition(function RemoveUnitSpawners))
loop
exitwhen loopi == 12
set Income[loopi]=StartingIncomeVar
if GetPlayerSlotState(Player(loopi)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(loopi)) != MAP_CONTROL_COMPUTER then
set u=CreateUnit(Player(loopi), 'H014', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(loopi), 'H015', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(loopi), 'H016', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(loopi), 'H013', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
endif
set loopi=loopi + 1
endloop

loop
exitwhen i == 12
loop
exitwhen i2 == 41
set CommanderCount[i2 * 12 + i]=0
set i2=i2 + 1
endloop
set i2=1
set i=i + 1
endloop
call ExecuteFunc("IncomeTrigger")
endif
set u=null
set t=null
endfunction
function MSO takes nothing returns nothing
local timer t

local integer i= 0
local integer i2= 1
local integer p= 0
local integer li= 0
//call BJDebugMsg("Does this run?")

set HD=true

call GroupClear(PATHING_GROUP)
//call BJDebugMsg("Pathing Group Cleared")

set bj_wantDestroyGroup=true
call ForGroupBJ(CPE(bj_mapInitialPlayableArea), function MGO)
call PauseAllUnitsBJ(true)
if ( ( SC <= 0 ) ) then
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 20., "East Side has won! Congratulations! |cFFFF0000Please stay for the rematch.|r")
else
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 20., "West Side has won! Congratulations! |cFFFF0000Please stay for the rematch.|r")
endif
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call KillUnit(PL[bj_forLoopAIndex])
set PL[bj_forLoopAIndex]=null
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call CRE(15.)
set HD=false
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call RemoveUnit(LC[bj_forLoopAIndex])
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=12
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set bj_wantDestroyGroup=true
call ForGroupBJ(CUE(Player(- 1 + ( bj_forLoopAIndex )) , Condition(function MHO)), function MJO)
if ( ( GetBooleanAnd(( GetPlayerController(Player(- 1 + ( bj_forLoopAIndex ))) == MAP_CONTROL_USER ), ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )) ) ) then
call CreateNUnitsAtLoc(1, 'ushd', Player(- 1 + ( bj_forLoopAIndex )), GetPlayerStartLocationLoc(Player(- 1 + ( bj_forLoopAIndex ))), bj_UNIT_FACING)
endif
set OD[bj_forLoopAIndex]=false
set FM[bj_forLoopAIndex]=null
set VL[bj_forLoopAIndex]=null
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(CLE(bj_mapInitialPlayableArea , Condition(function MKO)), function MLO)
call EnumItemsInRectBJ(bj_mapInitialPlayableArea, function MMO)
call PauseAllUnitsBJ(false)
call ForForce(bj_FORCE_ALL_PLAYERS, function MPO)
loop
exitwhen li == 12
set Fervor[GetUnitUserData(LC[li])]=0
set Barbarism[GetUnitUserData(LC[li])]=0
set DeathStacks[GetUnitUserData(LC[li])]=0
set Diablerie[GetUnitUserData(LC[li])]=0
set li=li + 1
endloop
set SC=100
set TC=100
set CS=0
set FS=0
//call MultiboardSetItemValueBJ(AS[1],2,(CountPlayersInForceBJ(ES)+6),"0%")
//call MultiboardSetItemValueBJ(AS[2],2,(CountPlayersInForceBJ(ES)+6),"0%")
call MultiboardSetItemValueBJ(AS[1], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[1], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
set bj_forLoopBIndex=2
set bj_forLoopBIndexEnd=( 2 + CountPlayersInForceBJ(VS[1]) )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemValueBJ(AS[1], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 2, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 2, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 4, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 4, bj_forLoopBIndex, "0")
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopBIndex=( CountPlayersInForceBJ(VS[1]) + 4 )
set bj_forLoopBIndexEnd=( CountPlayersInForceBJ(ES) + 4 )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemValueBJ(AS[1], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 3, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 2, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 2, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[1], 4, bj_forLoopBIndex, "0")
call MultiboardSetItemValueBJ(AS[2], 4, bj_forLoopBIndex, "0")
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopBIndex=2
set bj_forLoopBIndexEnd=( 2 + CountPlayersInForceBJ(VS[1]) )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemStyleBJ(AS[1], 1, bj_forLoopBIndex, true, false)
call MultiboardSetItemStyleBJ(AS[2], 1, bj_forLoopBIndex, true, false)
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopBIndex=( CountPlayersInForceBJ(VS[1]) + 4 )
set bj_forLoopBIndexEnd=( CountPlayersInForceBJ(ES) + 4 )
loop
exitwhen bj_forLoopBIndex > bj_forLoopBIndexEnd
call MultiboardSetItemStyleBJ(AS[1], 1, bj_forLoopBIndex, true, false)
call MultiboardSetItemStyleBJ(AS[2], 1, bj_forLoopBIndex, true, false)
set bj_forLoopBIndex=bj_forLoopBIndex + 1
endloop
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set BT[bj_forLoopAIndex]=0
set FT[bj_forLoopAIndex]=0
set JT[bj_forLoopAIndex]=false
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=2
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set HT[bj_forLoopAIndex]=0
set GT[bj_forLoopAIndex]=0
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set QC=8
set MT[( 1 + GetPlayerId(GetTriggerPlayer()) )]=0
set OT=0
set QD[1]=false
set QD[2]=false
call ForForce(bj_FORCE_ALL_PLAYERS, function MQO)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=5
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[1]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=6
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[2]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop

loop
exitwhen p > 9
set CorruptAmount[p]=0
//set CorruptionRaised[p] = 0

call SetPlayerState(Player(p), PLAYER_STATE_RESOURCE_FOOD_USED, 0)

set p=p + 1
endloop

set GAMEM=true

set t=(NewTimerEx(0)) // INLINED!!

set GameModeDialog=CreateTimerDialog(t)
    call TimerDialogSetTitle(GameModeDialog, "Game Modes:")
    call TimerDialogDisplay(GameModeDialog, true)
    
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Red has 20 seconds to change the mode. (Difficulty can not be changed.)")
    
call TimerStart(t, 20., false, function MSO666)

set t=null
endfunction
function MUO takes nothing returns nothing
call SetUnitInvulnerable(GetEnumUnit(), true)
endfunction
function MZO takes nothing returns nothing
call DialogSetMessage(YC, "Difficulty Votage")
call DialogAddButtonBJ(YC, "|cfff6ff00Normal|n(100%, Normal Commanders, All Offense)|r")
set ZC[1]=bj_lastCreatedButton
call DialogAddButtonBJ(YC, "|cff00baffVery Easy|n(90%, Very Easy Commanders, Almost No Offense)|r")
set ZC[2]=bj_lastCreatedButton
call DialogAddButtonBJ(YC, "|cff1ab700Easy|n(100%,Easy Commanders, Some Offense)|r")
set ZC[3]=bj_lastCreatedButton
call DialogAddButtonBJ(YC, "|cffff6000Nightmare|n(100%,Nightmarish Commanders, All Offense)|r")
set ZC[4]=bj_lastCreatedButton
call DialogAddButtonBJ(YC, "|cffaa0000Hell|n(105%,Hellish Commanders, All Offense)|r")
set ZC[5]=bj_lastCreatedButton
call DialogSetMessage(RD, "Rematch Votage")
call DialogAddButtonBJ(RD, "Yes")
set ID[1]=bj_lastCreatedButton
call DialogAddButtonBJ(RD, "No")
set ID[2]=bj_lastCreatedButton
call DialogAddButtonBJ(RD, "Undecided")
set ID[3]=bj_lastCreatedButton
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function M0O takes nothing returns boolean
return ( GetClickedButton() == ZC[1] )
endfunction
function M1O takes nothing returns boolean
return ( GetClickedButton() == ZC[2] )
endfunction
function M2O takes nothing returns boolean
return ( GetClickedButton() == ZC[3] )
endfunction
function M3O takes nothing returns boolean
return ( GetClickedButton() == ZC[4] )
endfunction
function M4O takes nothing returns boolean
return ( GetClickedButton() == ZC[5] )
endfunction
function M5O takes nothing returns nothing
if ( (GetClickedButton() == ZC[1]) ) then // INLINED!!
set VD[1]=( VD[1] + 1 )
call DialogDisplayBJ(false, YC, GetTriggerPlayer())
endif
if ( (GetClickedButton() == ZC[2]) ) then // INLINED!!
set VD[2]=( VD[2] + 1 )
call DialogDisplayBJ(false, YC, GetTriggerPlayer())
endif
if ( (GetClickedButton() == ZC[3]) ) then // INLINED!!
set VD[3]=( VD[3] + 1 )
call DialogDisplayBJ(false, YC, GetTriggerPlayer())
endif
if ( (GetClickedButton() == ZC[4]) ) then // INLINED!!
set VD[4]=( VD[4] + 1 )
call DialogDisplayBJ(false, YC, GetTriggerPlayer())
endif
if ( (GetClickedButton() == ZC[5]) ) then // INLINED!!
set VD[5]=( VD[5] + 1 )
call DialogDisplayBJ(false, YC, GetTriggerPlayer())
endif
endfunction
function M7O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function M8O takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function M9O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PVO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'U00O', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
set LICHS[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]=true
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[31])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[31])
call RemoveLocation(HeroCreateLocation)
endfunction
function PXO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function POO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function PRO takes nothing returns nothing
set RandomCreateLocation=GetRectCenter(PU)
set OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function POO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
endfunction
function PAO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function PNO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PBO takes nothing returns nothing
call EnableTrigger(Q5)
call EnableTrigger(I3)
call EnableTrigger(R3)
call EnableTrigger(S5)
call EnableTrigger(T5)
call EnableTrigger(E4)
call EnableTrigger(P5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01B', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[13])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[13])
call RemoveLocation(HeroCreateLocation)
endfunction
function PDO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) and ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PFO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PGO takes nothing returns nothing
call EnableTrigger(X5)
call EnableTrigger(Z4)
call EnableTrigger(S4)
//call EnableTrigger(O3)
call EnableTrigger(O5)
call EnableTrigger(Q4)
call EnableTrigger(P3)
call EnableTrigger(E5)
call EnableTrigger(V5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'U00Z', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[30])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[30])
call RemoveLocation(HeroCreateLocation)
endfunction
function PJO takes nothing returns boolean
return ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == false ) and ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function PKO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function PLO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PMO takes nothing returns nothing
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
set RandomCreateLocation=GetRectCenter(PU)
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function PKO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
else
call DisplayTextToForce(CZE(GetOwningPlayer(GetTriggerUnit())), "You are trying to pick an |cFFFF0000Advanced|r difficulty hero. If you still wish to pick this hero, enable promote mode by typing: -promote, followed by your player number.")
endif
endfunction
function PQO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function PSO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PTO takes nothing returns nothing
call EnableTrigger(P4)
call EnableTrigger(D4)
call EnableTrigger(A4)
call EnableTrigger(L4)
call EnableTrigger(M4)
call EnableTrigger(H4)
call EnableTrigger(K4)
call EnableTrigger(C4)
call EnableTrigger(F4)
call EnableTrigger(V4)
call EnableTrigger(B4)
call EnableTrigger(U4)
call EnableTrigger(W4)
call EnableTrigger(N4)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E000', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
set PL[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=null
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[14])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[14])
call RemoveLocation(HeroCreateLocation)
endfunction
function PWO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function PYO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PZO takes nothing returns nothing
call EnableTrigger(G6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E014', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[6])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[6])
call RemoveLocation(HeroCreateLocation)
endfunction
function P0O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function P1O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function P2O takes nothing returns nothing
call EnableTrigger(N5)
call EnableTrigger(C5)
call EnableTrigger(H6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'H00F', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[29])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[29])
call RemoveLocation(HeroCreateLocation)
endfunction
function P4O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function P5O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function P6O takes nothing returns nothing
local location l

set bj_lastCreatedUnit=CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'E00E', CitadelSpawnX[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], CitadelSpawnY[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
call UnitAddAbility(bj_lastCreatedUnit, 'Sch2')
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
set l=Location(CitadelSpawnX[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))], CitadelSpawnY[GetPlayerId(GetOwningPlayer(GetTriggerUnit()))])
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), l, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[36])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[36])

call RemoveLocation(l)
set l=null
endfunction
function P8O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) and ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function P9O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QVO takes nothing returns nothing
call EnableTrigger(I6)
call EnableTrigger(Q3)
call EnableTrigger(V6)
call EnableTrigger(K3)
call EnableTrigger(J3)
call EnableTrigger(A3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E018', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[10])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[10])
call RemoveLocation(HeroCreateLocation)
endfunction
function QXO takes nothing returns boolean
return ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == false ) and ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function QOO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function QRO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QIO takes nothing returns nothing
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
set RandomCreateLocation=GetRectCenter(PU)
set OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function QOO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
else
call DisplayTextToForce(CZE(GetOwningPlayer(GetTriggerUnit())), "You are trying to pick an |cFFFF0000Advanced|r difficulty hero. If you still wish to pick this hero, enable promote mode by typing: -promote, followed by your player number.")
endif
endfunction
function QNO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function QBO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QCO takes nothing returns nothing
call EnableTrigger(F6)
call EnableTrigger(Y3)
call EnableTrigger(Z3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01O', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[26])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[26])
call RemoveLocation(HeroCreateLocation)
endfunction
function QFO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function QGO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QHO takes nothing returns nothing
call EnableTrigger(T6)
call EnableTrigger(N6)
call EnableTrigger(R6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01F', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[18])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[18])
call RemoveLocation(HeroCreateLocation)
endfunction
function QKO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) and ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QLO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QMO takes nothing returns nothing
if XT >= 3 then
call EnableTrigger(P6)
call EnableTrigger(C7)
call EnableTrigger(U5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01D', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[16])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[16])
call RemoveLocation(HeroCreateLocation)
else
call DisplayTextToPlayer(GetOwningPlayer(GetTriggerUnit()), 0., 0., "Hypnotist can only be picked on Normal difficulty and above.")
endif
endfunction
function QQO takes nothing returns boolean
return ( WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] == false ) and ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function QSO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function QTO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function QUO takes nothing returns nothing
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
set RandomCreateLocation=GetRectCenter(PU)
set OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function QSO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
else
call DisplayTextToForce(CZE(GetOwningPlayer(GetTriggerUnit())), "You are trying to pick an |cFFFF0000Advanced|r difficulty hero. If you still wish to pick this hero, enable promote mode by typing: -promote, followed by your player number.")
endif
endfunction
function QYO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function QZO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function Q_O takes nothing returns nothing
call EnableTrigger(M5)
call EnableTrigger(Y5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01A', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[12])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[12])
call RemoveLocation(HeroCreateLocation)
endfunction
function Q1O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function Q2O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function Q3O takes nothing returns nothing
call EnableTrigger(J4)
call EnableTrigger(I4)
call EnableTrigger(O4)
call EnableTrigger(B5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01E', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[17])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[17])
call RemoveLocation(HeroCreateLocation)
endfunction
function Q5O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function Q6O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function Q7O takes nothing returns nothing
//call EnableTrigger(L3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E013', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[5])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[5])
call RemoveLocation(HeroCreateLocation)
endfunction
function Q9O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SVO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SEO takes nothing returns nothing
call EnableTrigger(H5)
call EnableTrigger(L5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E016', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[8])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[8])
call RemoveLocation(HeroCreateLocation)
endfunction
function SOO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SRO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SIO takes nothing returns nothing
call EnableTrigger(E6)
call EnableTrigger(Z5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E019', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[11])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[11])
call RemoveLocation(HeroCreateLocation)
endfunction
function SNO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SBO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SCO takes nothing returns nothing
call EnableTrigger(X6)
call EnableTrigger(X3)
call EnableTrigger(T4)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E011', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[3])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[3])
call RemoveLocation(HeroCreateLocation)
endfunction
function SFO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SGO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SHO takes nothing returns nothing
call EnableTrigger(Q6)
call EnableTrigger(M3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01K', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[22])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[22])
call RemoveLocation(HeroCreateLocation)
endfunction
function SKO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SLO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SMO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E004', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[37])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[37])
call RemoveLocation(HeroCreateLocation)
endfunction
function SQO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SSO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function STO takes nothing returns nothing
call EnableTrigger(C6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01L', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call UnitAddAbility(bj_lastCreatedUnit, 'Sch2')
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[23])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[23])
call RemoveLocation(HeroCreateLocation)
endfunction
function SWO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function SYO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function SZO takes nothing returns nothing
call EnableTrigger(O6)
call EnableTrigger(G5)
call EnableTrigger(J5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01G', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[19])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[19])
call RemoveLocation(HeroCreateLocation)
endfunction
function S0O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function S1O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function S2O takes nothing returns nothing
call EnableTrigger(A7)
call EnableTrigger(F3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E015', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[7])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[7])
call RemoveLocation(HeroCreateLocation)
endfunction
function S4O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function S5O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function S6O takes nothing returns nothing
call EnableTrigger(B6)
call EnableTrigger(I5)
call EnableTrigger(R5)
call EnableTrigger(A5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E012', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[4])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[4])
call RemoveLocation(HeroCreateLocation)
endfunction
function S8O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function S9O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TVO takes nothing returns nothing
call EnableTrigger(J6)
call EnableTrigger(K6)
call EnableTrigger(L6)
call EnableTrigger(M6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01P', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[27])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[27])
call RemoveLocation(HeroCreateLocation)
endfunction
function TXO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function TOO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function TRO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TIO takes nothing returns nothing
//(OD[(1+GetPlayerId(GetOwningPlayer(GetTriggerUnit())))])
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
set RandomCreateLocation=GetRectCenter(PU)
set OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function POO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
else
call DisplayTextToForce(CZE(GetOwningPlayer(GetTriggerUnit())), "This hero is not available yet. Please choose another hero.")
endif
endfunction
function TNO takes integer p,unit J2E returns nothing
if J2E == ( HZV[( p )] ) then
if OEX(HKV[p] , J2E) then
call Y0E(GZV[p] , J2E , G3V[p] , ATTACK_TYPE_HERO , true , true)
call EHX(p)
else
call EKX(p , J2E)
endif
endif
endfunction
function TBO takes nothing returns boolean
return ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(RCV)) and IsUnitVisible(GetFilterUnit(), GetOwningPlayer(RCV)) and not ( GetUnitAbilityLevel(( GetFilterUnit() ), 'Avul') > 0 ) )
endfunction
function TCO takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x1=AVE[PXE]
local real y1=AEE[PXE]
local real x2=GetUnitX(AXE[PXE])
local real y2=GetUnitY(AXE[PXE])
local real d=( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 )
local timer t2
local integer p=0
local real OLX
local unit u
if GetUnitTypeId(LC[( 1 + GetPlayerId(GetOwningPlayer(AXE[PXE])) )]) != 'N00D' then
call D4E(PXE)
call ReleaseTimer(t)
else
if d >= 3600. then
set RCV=AXE[PXE]
set u=( ZEE(null , ( ( x1 ) * 1. ) , ( ( y1 ) * 1. ) , ( ( 700. ) * 1. ) , ( Condition(function TBO) )) )
set AVE[PXE]=x2
set AEE[PXE]=y2
if u != null then
set OLX=QUE(x1 , y1 , GetUnitX(u) , GetUnitY(u))
if GetUnitAbilityLevel(AXE[PXE], 'A09N') == 1 then
if GetRandomInt(0, 100) <= 50 then
call SGE('h00V' , AVE[PXE] , AEE[PXE] , OLX , 1.0672 , "attack one" , 1.2)
else
call SGE('h00V' , AVE[PXE] , AEE[PXE] , OLX , 1.0672 , "attack two" , 1.2)
endif
else
if GetRandomInt(0, 100) <= 50 then
call SAE('h00U' , AVE[PXE] , AEE[PXE] , OLX , 1.0672 , "attack one" , 1.2)
else
call SAE('h00U' , AVE[PXE] , AEE[PXE] , OLX , 1.0672 , "attack two" , 1.2)
endif
endif
set p=XAX(AVE[PXE] , AEE[PXE] , 65. , OLX)
set GZV[p]=AXE[PXE]
call EEX(p , u)
set G_V[p]=GetOwningPlayer(AXE[PXE])
call V9X(p , "Abilities\\Weapons\\Arrow\\ArrowMissile.mdl")
call V8X(p , 1.4)
if IsUnitType(u, UNIT_TYPE_HERO) then
set G3V[p]=I2R(GetHeroAgi(AXE[PXE], true)) * .2
else
set G3V[p]=I2R(GetHeroAgi(AXE[PXE], true)) * .9
endif
set G2V[p]=60.
set G1V[p]=60.
set HEV[p]=true
set G8V[p]=true
set HOV[p]=true
set HCV[p]=( 21 )
set HBV[p]=( 22 )
set G4V[p]=20.
set G9V[p]=true
call XIX(p , GetUnitX(u) , GetUnitY(u) , GetUnitFlyHeight(u) + 65. , 900. , .15)
else
if GetUnitAbilityLevel(AXE[PXE], 'A09N') == 1 then
call SHE('h00V' , AVE[PXE] , AEE[PXE] , GetUnitFacing(AXE[PXE]) , .834 , 8 , 1.)
else
call SDE('h00U' , AVE[PXE] , AEE[PXE] , GetUnitFacing(AXE[PXE]) , .834 , 8 , 1.)
endif
endif
endif
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function TCO)
endif
set t=null
set t2=null
set u=null
endfunction
function TDO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function TFO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TGO takes nothing returns nothing
local timer t=(NewTimerEx(0)) // INLINED!!
local integer PXE=D3E()
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'N00D', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 180.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetTriggerPlayer()) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[34])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[34])
set AXE[PXE]=LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]
set AVE[PXE]=GetUnitX(AXE[PXE])
set AEE[PXE]=GetUnitY(AXE[PXE])
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, .02, false, function TCO)
call RemoveLocation(HeroCreateLocation)
set t=null
endfunction
function THO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function TJO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TKO takes nothing returns nothing
call EnableTrigger(O7)
call EnableTrigger(U6)
call EnableTrigger(Z6)
call EnableTrigger(Y6)
//call EnableTrigger(W6)
call EnableTrigger(R7)
call EnableTrigger(I7)
call EnableTrigger(X7)
call EnableTrigger(B7)
call EnableTrigger(E7)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'U00N', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[33])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[33])
call RemoveLocation(HeroCreateLocation)
endfunction
function TMO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function TPO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TQO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E00Y', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 240.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
call UnitAddAbility(bj_lastCreatedUnit, 'Sch2')
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[1])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[1])
call RemoveLocation(HeroCreateLocation)
endfunction
function TTO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function TUO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function TWO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'U003', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 90.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[32])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[32])
call RemoveLocation(HeroCreateLocation)
call UnitAddAbility(bj_lastCreatedUnit, 'Amrf')
call UnitRemoveAbility(bj_lastCreatedUnit, 'Amrf')
endfunction
function TZO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function T_O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function T0O takes nothing returns nothing
call EnableTrigger(H6)
call EnableTrigger(F5)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01J', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .0)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[21])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[21])
call RemoveLocation(HeroCreateLocation)
endfunction
function T2O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function T3O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function T4O takes nothing returns nothing
call EnableTrigger(V7)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01H', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .0)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[20])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[20])
call RemoveLocation(HeroCreateLocation)
endfunction
function T6O takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function T7O takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function PeHPT takes nothing returns nothing
if WT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'U004', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[39])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[39])
call RemoveLocation(HeroCreateLocation)
else
if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
set RandomCreateLocation=GetRectCenter(PU)
set OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
set bj_wantDestroyGroup=true
set RandomCreateLocation=GetUnitLoc(GroupPickRandomUnit(CLE(PU , Condition(function QSO))))
call SetUnitPositionLoc(GetTriggerUnit(), RandomCreateLocation)
call RemoveLocation(RandomCreateLocation)
else
call DisplayTextToForce(CZE(GetOwningPlayer(GetTriggerUnit())), "You are trying to pick an |cFFFF0000Advanced|r difficulty hero. If you still wish to pick this hero, enable promote mode by typing: -promote, followed by your player number.")
endif
endif
endfunction
function QoBPT takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E006', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[38])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[38])
call RemoveLocation(HeroCreateLocation)
endfunction
function T8O takes nothing returns nothing
call EnableTrigger(S6)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E01C', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
call UnitAddAbility(bj_lastCreatedUnit, 'Sch2')
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[15])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[15])
call RemoveLocation(HeroCreateLocation)
endfunction
function UVO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function UEO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function UXO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'E017', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
call EnableTrigger(D5)
call EnableTrigger(Y4)
call EnableTrigger(K5)
call EnableTrigger(H3)
call EnableTrigger(D6)
call EnableTrigger(R4)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, UD[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )])
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[9])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[9])
call RemoveLocation(HeroCreateLocation)
endfunction
function URO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function UIO takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'ncop' )
endfunction
function UAO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function UNO takes nothing returns nothing
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'H01F', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[41])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[41])
call RemoveLocation(HeroCreateLocation)
endfunction
function UCO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' )
endfunction
function UDO takes nothing returns boolean
return ( OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] )
endfunction
function UFO takes nothing returns nothing
call EnableTrigger(W5)
call EnableTrigger(T3)
call EnableTrigger(U3)
call EnableTrigger(W3)
set HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
call CreateNUnitsAtLoc(1, 'N01S', GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, 270.)
if ( (OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]) ) then // INLINED!!
call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
endif
set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
call AddSpecialEffectLocBJ(HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), HeroCreateLocation, .3)
//call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
//call DestroyEffect(bj_lastCreatedEffect)
call UnitAddAbility(GetTriggerUnit(), 'A0EQ')
call UnitRemoveAbility(GetTriggerUnit(), 'A0EQ')
call RemoveUnit(GetTriggerUnit())
call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[35])
call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[35])
call RemoveLocation(HeroCreateLocation)
endfunction
function UHO takes nothing returns boolean
return ( IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetAttacker())) )
endfunction
function UJO takes nothing returns boolean
return ( UnitHasBuffBJ(GetTriggerUnit(), 'BUsl') == false )
endfunction
function UKO takes nothing returns nothing
if ( (UnitHasBuffBJ(GetTriggerUnit(), 'BUsl') == false) ) then // INLINED!!
call IssueImmediateOrderById(GetAttacker(), 851972)
endif
endfunction
function UMO takes nothing returns boolean
return ( ( GetUnitTypeId(GetTriggerUnit()) == 'E01A' ) or ( GetUnitTypeId(GetTriggerUnit()) == 'E01B' ) or ( GetUnitTypeId(GetTriggerUnit()) == 'E016' ) )
endfunction
function UPO takes nothing returns nothing
local unit u=GetTriggerUnit()
call SetUnitAnimationByIndex(u, 7)
call CRE(2.1)
call SetUnitAnimationByIndex(u, 8)
call CRE(1)
call ShowUnit(u, false)
set u=null
endfunction
function USO takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function UTO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), OffsetLocation(GetUnitLoc(X2V), .0, - 200.), 270.)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitTypeId(GetTriggerUnit()) != 'e00H' and GetUnitTypeId(GetTriggerUnit()) != 'e00F' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function UWO takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(5)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function UYO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(X4V)
set TempLocation=OffsetLocation(TempLocation2, .0, - 200.)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 270.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitTypeId(GetTriggerUnit()) != 'e00H' and GetUnitTypeId(GetTriggerUnit()) != 'e00F' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function U_O takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function U0O takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(X1V)
set TempLocation=OffsetLocation(TempLocation2, 200., 0)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, .0)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function U2O takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(5)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function U3O takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(X_V)
set TempLocation=OffsetLocation(TempLocation2, 200., 0)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 0.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function U5O takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function U6O takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(X3V)
set TempLocation=OffsetLocation(TempLocation2, 0., - 200.)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 270.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function U8O takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(5)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function U9O takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(XYV)
set TempLocation=OffsetLocation(TempLocation2, .0, - 200.)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 270.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function WEO takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(0)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function WXO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(X0V)
set TempLocation=OffsetLocation(TempLocation2, - 200., 0)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 180.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function WRO takes nothing returns boolean
return ( IsPlayerAlly(GetOwningPlayer(GetTriggerUnit()), Player(5)) ) and ( GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_USER )
endfunction
function WIO takes nothing returns nothing
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitInvulnerable(GetTriggerUnit(), true)
set TempLocation2=GetUnitLoc(XZV)
set TempLocation=OffsetLocation(TempLocation2, - 200., 0)
call SetUnitPositionLocFacingBJ(GetTriggerUnit(), TempLocation, 180.)
call RemoveLocation(TempLocation)
call RemoveLocation(TempLocation2)
if GetUnitTypeId(GetTriggerUnit()) != 'e00A' and GetUnitTypeId(GetTriggerUnit()) != 'e00C' and GetUnitTypeId(GetTriggerUnit()) != 'e00I' and GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') != 1 then
call SetUnitInvulnerable(GetTriggerUnit(), false)
endif
set TempLocation=GetUnitLoc(GetTriggerUnit())
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function WNO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function WBO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) ) and GetUnitTypeId(GetFilterUnit()) != 'h00S' and GetUnitAbilityLevel(GetFilterUnit(), 'Aloc') != 1
endfunction
function WCO takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(11) , Condition(function WBO))) >= 150 )
endfunction
function WDO takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(11) , Condition(function WBO))) >= 150) ) // INLINED!!
endfunction
function WFO takes nothing returns nothing
call PlaySoundBJ(JY)
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30, "|cffffcc00West Side is not killing fast enough! Overflow of 180 will cause teleporting of monsters of to goal!|r")
endfunction
function WHO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function WJO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) ) and GetUnitTypeId(GetFilterUnit()) != 'h00S' and GetUnitAbilityLevel(GetFilterUnit(), 'Aloc') != 1
endfunction
function WKO takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(10) , Condition(function WJO))) >= 150 )
endfunction
function WLO takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(10) , Condition(function WJO))) >= 150) ) // INLINED!!
endfunction
function WMO takes nothing returns nothing
call PlaySoundBJ(JY)
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30, "|cffffcc00East Side is not killing fast enough! Overflow of 180 will cause teleporting of monsters of to goal|r")
endfunction
function WQO takes nothing returns boolean
return ( GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(GetEnumPlayer()) == MAP_CONTROL_USER )
endfunction
function WSO takes nothing returns nothing
if ( (( GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(GetEnumPlayer()) == MAP_CONTROL_USER )) ) then // INLINED!!
set ND=( ND + 1 )
endif
endfunction
function WTO takes nothing returns boolean
return ( GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(GetEnumPlayer()) == MAP_CONTROL_USER )
endfunction
function WUO takes nothing returns nothing
if ( (( GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_PLAYING ) and ( GetPlayerController(GetEnumPlayer()) == MAP_CONTROL_USER )) ) then // INLINED!!
call AdjustPlayerStateBJ(( GetPlayerState(GetTriggerPlayer(), PLAYER_STATE_RESOURCE_GOLD) / ND ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
call AdjustPlayerStateBJ(( GetPlayerState(GetTriggerPlayer(), PLAYER_STATE_RESOURCE_LUMBER) / ND ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
call AddHeroXPSwapped(( GetHeroXP(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]) / ND ), LC[( 1 + GetPlayerId(GetEnumPlayer()) )], true)
endif
endfunction
function Trig_Player_Leaves_Func006Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_Player_Leaves_Func007Func001001 takes nothing returns boolean
return ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING )
endfunction
function Trig_Player_Leaves_Func017001002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h000' )
endfunction
function Trig_Player_Leaves_Func017001002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00P' )
endfunction
function Trig_Player_Leaves_Func017001002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h004' )
endfunction
function Trig_Player_Leaves_Func017001002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00G' )
endfunction
function Trig_Player_Leaves_Func017001002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00H' )
endfunction
function Trig_Player_Leaves_Func017001002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h00I' )
endfunction
function Trig_Player_Leaves_Func017001002002002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Player_Leaves_Func017001002002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' ))
endfunction
function Trig_Player_Leaves_Func017001002002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) ))
endfunction
function Trig_Player_Leaves_Func017001002002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) ))
endfunction
function Trig_Player_Leaves_Func017001002002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) ))
endfunction
function Trig_Player_Leaves_Func017001002002 takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00P' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) )) ))
endfunction
function WWO takes nothing returns boolean
return GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h000' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00P' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h004' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00G' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00H' ), ( GetBooleanAnd(( GetUnitTypeId(GetFilterUnit()) != 'h00I' ), ( GetUnitTypeId(GetFilterUnit()) != 'h007' )) )) )) )) )) )) and GetUnitTypeId(GetFilterUnit()) != 'o006' and GetUnitTypeId(GetFilterUnit()) != 'H016' and GetUnitTypeId(GetFilterUnit()) != 'H015' and GetUnitTypeId(GetFilterUnit()) != 'H014' and GetUnitTypeId(GetFilterUnit()) != 'H013' and GetUnitTypeId(GetFilterUnit()) != 'n01G' and GetUnitTypeId(GetFilterUnit()) != 'n01C'
endfunction
function WYO takes nothing returns nothing
call RemoveUnit(GetEnumUnit())
endfunction
function WZO takes nothing returns nothing
set ND=0
call ForForce(C3E(GetTriggerPlayer()), function WSO)
call ForForce(C3E(GetTriggerPlayer()), function WUO)
set QD[1]=false
set QD[2]=false
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=5
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[1]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=6
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( ( GetPlayerSlotState(Player(- 1 + ( bj_forLoopAIndex ))) == PLAYER_SLOT_STATE_PLAYING ) ) then
set QD[2]=true
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call PlaySoundBJ(JY)
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 30, ( GetPlayerName(GetTriggerPlayer()) + " has left the game!" ))
call DisplayTimedTextToForce(C3E(GetTriggerPlayer()), 30, ( "Your share of gold: " + I2S(( GetPlayerState(GetTriggerPlayer(), PLAYER_STATE_RESOURCE_GOLD) / ND )) ))
call DisplayTimedTextToForce(C3E(GetTriggerPlayer()), 30, ( "Your share of lumber: " + I2S(( GetPlayerState(GetTriggerPlayer(), PLAYER_STATE_RESOURCE_LUMBER) / ND )) ))
call DisplayTimedTextToForce(C3E(GetTriggerPlayer()), 30, ( "Your share of experience: " + I2S(( GetHeroXP(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )]) / ND )) ))
call MultiboardSetItemColorBJ(bj_lastCreatedMultiboard, 0, QS[( 1 + GetPlayerId(GetTriggerPlayer()) )], 20., 20., 20, 0)
call MultiboardSetItemStyleBJ(bj_lastCreatedMultiboard, 1, QS[( 1 + GetPlayerId(GetTriggerPlayer()) )], true, false)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call UnitRemoveItemFromSlotSwapped(bj_forLoopAIndex, LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call RemoveUnit(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])
call ForGroupBJ(CUE(GetTriggerPlayer() , Condition(function WWO)), function WYO)
endfunction
function W0O takes nothing returns boolean
return ( GetPlayerController(GetOwningPlayer(GetKillingUnit())) == MAP_CONTROL_USER ) and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(GetKillingUnit()) and GetKillingUnit() != null
endfunction
function W1O takes nothing returns boolean
return ( UnitHasBuffBJ(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], 'B004') )
endfunction
function W2O takes nothing returns nothing
if ( (UnitHasBuffBJ(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], 'B004')) ) then // INLINED!!
call AddHeroXP(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], R2I(( I2R(GetUnitLevel(GetDyingUnit())) * 6. )), true)
if LWMON then
call AddHeroXP(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], R2I(( I2R(GetUnitLevel(GetDyingUnit())) * 24. )), true)
endif
endif
if LWMON then
call AddHeroXP(LC[( 1 + GetPlayerId(GetEnumPlayer()) )], R2I(( I2R(GetUnitLevel(GetDyingUnit())) * 48. )), true)
endif
endfunction
function W3O takes nothing returns nothing
set XQ=C3E(GetOwningPlayer(GetKillingUnit()))
call ForForce(XQ, function W2O)
call DestroyForce(XQ)
call LeaderboardSetPlayerItemValueBJ(GetOwningPlayer(GetKillingUnit()), LD, GetPlayerScore(GetOwningPlayer(GetKillingUnit()), PLAYER_SCORE_UNITS_KILLED))
set TS[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=( TS[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] + 1 )
call MultiboardSetItemValueBJ(bj_lastCreatedMultiboard, 3, QS[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], I2S(TS[( 1 + GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]))
endfunction
function W5O takes nothing returns nothing
local timer t=GetExpiredTimer()
local integer PXE=(LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x= GetRectCenterX(GD[( 1 + GetPlayerId(GetOwningPlayer(AAE[PXE])) )])
local real y= GetRectCenterY(GD[( 1 + GetPlayerId(GetOwningPlayer(AAE[PXE])) )])

if not HD and IsUnitType(AAE[PXE], UNIT_TYPE_HERO) then
if GetUnitTypeId(AAE[PXE]) == 'E00E' then
set x=CitadelSpawnX[GetPlayerId(GetOwningPlayer(AAE[PXE]))]
set y=CitadelSpawnY[GetPlayerId(GetOwningPlayer(AAE[PXE]))]
endif

call ReviveHero(AAE[PXE], x, y, true)
call UnitAddItemById(AAE[PXE], 'I00K')
call SetUnitState(AAE[PXE], UNIT_STATE_MANA, GetUnitState(AAE[PXE], UNIT_STATE_MAX_MANA))
call DestroyTimerDialog(ANE[PXE])
call D2E(PXE)
call ReleaseTimer(GetExpiredTimer())
else
call DestroyTimerDialog(ANE[PXE])
call D2E(PXE)
call ReleaseTimer(GetExpiredTimer())
endif

set t=null
endfunction
function W7O takes nothing returns nothing
local unit u=GetTriggerUnit()
local real r
local real x= GetRectCenterX(GD[( 1 + GetPlayerId(GetOwningPlayer(u)) )])
local real y= GetRectCenterY(GD[( 1 + GetPlayerId(GetOwningPlayer(u)) )])
local timer t
local integer PXE=D1E()

if GetUnitTypeId(u) == 'E00E' then
set x=CitadelSpawnX[GetPlayerId(GetOwningPlayer(u))]
set y=CitadelSpawnY[GetPlayerId(GetOwningPlayer(u))]
endif

if XT == 1 then
set r=10. + ( I2R(GetHeroLevel(u)) / 2. )
else
set r=10. + ( I2R(GetHeroLevel(u)) )
endif
if IsUnitInGroup(u, WK) then
call ReviveHero(u, x, y, true)
call UnitAddItemById(u, 'I00K')
call SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MAX_MANA))
call D2E(PXE)
else
if SinisterCreed_TraderResBonus[GetPlayerId(GetOwningPlayer(u))] then
set r=r * .3
endif
if GetPlayerName(GetOwningPlayer(u)) == "Coffee#0217" then
if GetRandomInt(0, 100) >= 50 then
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., ( "|cFFFD0260C|r|cFFF10E62o|r|cFFE51A64f|r|cFFDA2765f|r|cFFCE3367e|r|cFFC23F69e|r|cFFB64B6B_|r|cFFAB586CC|r|cFF9F646Eu|r|cFF937070l|r|cFF877C72t|r|cFF7B8874u|r|cFF709575r|r|cFF64A177e|r|cFF58AD79 |r|cFF4CB97Bh|r|cFF41C67Ca|r|cFF35D27Es|r|cFF29DE80 |r|cFF35D27Ed|r|cFF41C67Ci|r|cFF4CB97Be|r|cFF58AD79d|r|cFF64A177,|r|cFF709575 |r|cFF7B8874w|r|cFF877C72h|r|cFF937070a|r|cFF9F646Et|r|cFFAB586C |r|cFFB64B6Ba|r|cFFC23F69 |r|cFFCE3367n|r|cFFDA2765o|r|cFFE51A64o|r|cFFF10E62b|r|cFFFD0260.|r" ))
else
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., ( "|cFFFA0383C|r|cFFFA0880o|r|cFFFA0D7Ef|r|cFFFA127Bf|r|cFFF91778e|r|cFFF91C75e|r|cFFF92173_|r|cFFF92670C|r|cFFF92B6Du|r|cFFF9306Bl|r|cFFF83568t|r|cFFF83A65u|r|cFFF83E62r|r|cFFF84360e|r|cFFF8485D |r|cFFF84D5Ah|r|cFFF85258a|r|cFFF75755s|r|cFFF75C52 |r|cFFF7614Fd|r|cFFF7664Di|r|cFFF76B4Ae|r|cFFF77047d|r|cFFF67544,|r|cFFF67A42 |r|cFFF67F3Fw|r|cFFF6843Ch|r|cFFF6893Aa|r|cFFF68E37t|r|cFFF69334 |r|cFFF59831a|r|cFFF59D2F |r|cFFF5A22Cd|r|cFFF5A729i|r|cFFF5AC27s|r|cFFF5B024a|r|cFFF5B521p|r|cFFF4BA1Ep|r|cFFF4BF1Co|r|cFFF4C419i|r|cFFF4C916n|r|cFFF4CE14t|r|cFFF4D311m|r|cFFF3D80Ee|r|cFFF3DD0Bn|r|cFFF3E209t|r|cFFF3E706.|r" ))
endif
else
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., ( GetPlayerName(GetOwningPlayer(u)) + " has died!" ))
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., ( "|cffffcc00Time to revival:|r " + I2S(R2I(r)) ))
endif
set t=(NewTimerEx(0)) // INLINED!!
set ANE[PXE]=CreateTimerDialog(t)
call TimerDialogSetTitle(ANE[PXE], ( GetPlayerName(GetOwningPlayer(u)) ) + "'s Hero Revives In:")
call TimerDialogDisplay(ANE[PXE], true)
call TimerDialogSetRealTimeRemaining(ANE[PXE], r)
set AAE[PXE]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( PXE)) // INLINED!!
call TimerStart(t, r, false, function W5O)
endif
set u=null
set t=null
endfunction
function W8O takes nothing returns boolean
if GetDyingUnit() == LC[( 1 + GetPlayerId(GetOwningPlayer(GetDyingUnit())) )] then
call W7O()
endif
return false
endfunction
function W9O takes nothing returns boolean
return ( GetOwningPlayer(GetTriggerUnit()) == Player(11) )
endfunction
function YVO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) != 'h00S' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h007' ) and ( (GetOwningPlayer(GetTriggerUnit()) == Player(11)) ) // INLINED!!
endfunction
function YEO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02X' )
endfunction
function YXO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n029' )
endfunction
function YOO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02F' )
endfunction
function YRO takes nothing returns boolean
return ( SC == 25 )
endfunction
function Trig_Goal_1_Func001Func021001 takes nothing returns boolean
return ( SC == 0 )
endfunction
function YIO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) != 'H009' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h00B' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'n00S' )
endfunction
function YAO takes nothing returns nothing
if ( (( GetUnitTypeId(GetTriggerUnit()) != 'H009' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h00B' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'n00S' )) ) then // INLINED!!
if ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_ANCIENT) and XT >= 4 ) or GetUnitTypeId(GetTriggerUnit()) == 'u002' then
set SC=( SC - 25 )
else
set SC=( SC - 1 )
endif
if GetUnitAbilityLevel(GetTriggerUnit(), 'A04P') != 0 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
endif
if ( (GetUnitTypeId(GetTriggerUnit()) == 'n02F') ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'Aspd')
endif
if GetUnitAbilityLevel(GetTriggerUnit(), 'A0E0') == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0E0')
endif
call DisplayTimedTextToForce(C3E(Player(0)), 3., ( "* Life Lost! Lives: " + I2S(SC) ))
set TempLocation=GetRectCenter(GU)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Flare\\FlareCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitOwner(GetTriggerUnit(), Player(PLAYER_NEUTRAL_PASSIVE), false)
call KillUnit(GetTriggerUnit())
call ShowUnitHide(GetTriggerUnit())
if ( (SC == 25) ) then // INLINED!!
call DisplayTimedTextToForce(C3E(Player(0)), 10., "|cFFFF0000Please stay, even if you are losing; the game will automatically remake.|r")
endif
if ( ( SC <= 0 ) ) then
call ConditionalTriggerExecute(W7)
endif
call MultiboardSetItemValueBJ(AS[1], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, 2, ( YQ + ( " - " + ( I2S(SC) + " Lives" ) ) ))
else
if GetUnitAbilityLevel(GetTriggerUnit(), 'A0E0') == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0E0')
endif
set TempLocation=GetRectCenter(GU)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Flare\\FlareCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitOwner(GetTriggerUnit(), Player(PLAYER_NEUTRAL_PASSIVE), false)
call KillUnit(GetTriggerUnit())
call ShowUnitHide(GetTriggerUnit())
endif
endfunction
function YBO takes nothing returns boolean
return ( GetOwningPlayer(GetTriggerUnit()) == Player(10) )
endfunction
function YCO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) != 'h00S' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h007' ) and ( (GetOwningPlayer(GetTriggerUnit()) == Player(10)) ) // INLINED!!
endfunction
function YDO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02X' )
endfunction
function YFO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n029' )
endfunction
function YGO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'n02F' )
endfunction
function YHO takes nothing returns boolean
return ( TC == 25 )
endfunction
function Trig_Goal_2_Func001Func021001 takes nothing returns boolean
return ( TC == 0 )
endfunction
function YJO takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) != 'H009' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h00B' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'n00S' )
endfunction
function YKO takes nothing returns nothing
if ( (( GetUnitTypeId(GetTriggerUnit()) != 'H009' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'h00B' ) and ( GetUnitTypeId(GetTriggerUnit()) != 'n00S' )) ) then // INLINED!!
if ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_ANCIENT) and XT >= 4 ) or GetUnitTypeId(GetTriggerUnit()) == 'u002' then
set TC=( TC - 25 )
else
set TC=( TC - 1 )
endif
if GetUnitAbilityLevel(GetTriggerUnit(), 'A04P') != 0 then
call UnitRemoveAbility(GetTriggerUnit(), 'A04P')
endif
if ( (GetUnitTypeId(GetTriggerUnit()) == 'n02F') ) then // INLINED!!
call UnitRemoveAbility(GetTriggerUnit(), 'Aspd')
endif
if GetUnitAbilityLevel(GetTriggerUnit(), 'A0E0') == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0E0')
endif
call DisplayTimedTextToForce(C3E(Player(5)), 3., ( "* Life lost. Lives: " + I2S(TC) ))
set TempLocation=GetRectCenter(HU)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(TempLocation, "Abilities\\Spells\\Human\\Flare\\FlareCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitOwner(GetTriggerUnit(), Player(PLAYER_NEUTRAL_PASSIVE), false)
call KillUnit(GetTriggerUnit())
call ShowUnitHide(GetTriggerUnit())
if ( (TC == 25) ) then // INLINED!!
call DisplayTimedTextToForce(C3E(Player(5)), 10., "|cFFFF0000Please stay, even if you are losing; the game will automatically remake.|r")
endif
if ( ( TC <= 0 ) ) then
call ConditionalTriggerExecute(W7)
endif
call MultiboardSetItemValueBJ(AS[1], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
call MultiboardSetItemValueBJ(AS[2], 1, ( CountPlayersInForceBJ(VS[1]) + 4 ), ( ZQ + ( " - " + ( I2S(TC) + " Lives" ) ) ))
else
if GetUnitAbilityLevel(GetTriggerUnit(), 'A0E0') == 1 then
call UnitRemoveAbility(GetTriggerUnit(), 'A0E0')
endif
set TempLocation=GetRectCenter(HU)
call AddSpecialEffectLocBJ(GetRectCenter(HU), "Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectLocBJ(GetRectCenter(HU), "Abilities\\Spells\\Human\\Flare\\FlareCaster.mdl")
call RemoveLocation(TempLocation)
call DestroyEffect(bj_lastCreatedEffect)
call SetUnitOwner(GetTriggerUnit(), Player(PLAYER_NEUTRAL_PASSIVE), false)
call KillUnit(GetTriggerUnit())
call ShowUnitHide(GetTriggerUnit())
endif
endfunction
function Trig_Anti_Stuck_Func001002002001 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // and GetUnitCurrentOrder(GetFilterUnit())!=851986)  
endfunction
function Trig_Anti_Stuck_Func001002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func001002002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func001002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func001002002002002002002 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func001002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func001002002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func001002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function YMO takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func002002002001 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // and GetUnitCurrentOrder(GetFilterUnit())!=851986)
endfunction
function Trig_Anti_Stuck_Func002002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func002002002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func002002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func002002002002002002002 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func002002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func002002002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func002002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function YPO takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func003002002001 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) //and GetUnitCurrentOrder(GetFilterUnit())!=851986)  
endfunction
function Trig_Anti_Stuck_Func003002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func003002002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func003002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func003002002002002002002 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func003002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func003002002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func003002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function YQO takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func004002002001 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) //and GetUnitCurrentOrder(GetFilterUnit())!=851986)  
endfunction
function Trig_Anti_Stuck_Func004002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func004002002002002001 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func004002002002002002001 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func004002002002002002002 takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' )
endfunction
function Trig_Anti_Stuck_Func004002002002002002 takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 )
endfunction
function Trig_Anti_Stuck_Func004002002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function Trig_Anti_Stuck_Func004002002002 takes nothing returns boolean
return ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function YSO takes nothing returns boolean
return ( GetUnitCurrentOrder(GetFilterUnit()) != 851983 ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B03D') == false ) and ( UnitHasBuffBJ(GetFilterUnit(), 'B04F') == false ) and ( GetUnitTypeId(GetFilterUnit()) != 'h007' ) and not (HaveSavedInteger(FearSystem__ht, GetHandleId((GetFilterUnit())), 0)) and ( GetUnitCurrentOrder(GetFilterUnit()) != 852230 ) // INLINED!!
endfunction
function YTO takes nothing returns nothing
call IssuePointOrderByIdLoc(GetEnumUnit(), 851983, PD[2])
endfunction
function YUO takes nothing returns nothing
call IssuePointOrderByIdLoc(GetEnumUnit(), 851983, PD[2])
endfunction
function YWO takes nothing returns nothing
call IssuePointOrderByIdLoc(GetEnumUnit(), 851983, PD[1])
endfunction
function YYO takes nothing returns nothing
call IssuePointOrderByIdLoc(GetEnumUnit(), 851983, PD[1])
endfunction
function YZO takes nothing returns nothing
set QK=CUE(Player(10) , Condition(function YMO))
//set SK=CUE(Player(9),Condition(function YPO))
//set TK=CUE(Player(10),Condition(function YQO))
set UK=CUE(Player(11) , Condition(function YSO))
call ForGroupBJ(QK, function YTO)
//call ForGroupBJ(SK,function YUO)
//call ForGroupBJ(TK,function YWO)
call ForGroupBJ(UK, function YYO)
call DestroyGroup(QK)
//call DestroyGroup(SK)
//call DestroyGroup(TK)
call DestroyGroup(UK)
endfunction
function Y0O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'o014', GetEnumPlayer(), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A051')
endfunction
function Y1O takes nothing returns boolean
return ( XT == 1 )
endfunction
function Y2O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'o014', GetEnumPlayer(), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A05D')
endfunction
function Y3O takes nothing returns boolean
return ( XT == 3 )
endfunction
function Y4O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'o014', GetEnumPlayer(), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A05E')
endfunction
function Y5O takes nothing returns boolean
return ( XT == 4 )
endfunction
function Y6O takes nothing returns nothing
call CreateNUnitsAtLoc(1, 'o014', GetEnumPlayer(), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
call UnitAddAbility(bj_lastCreatedUnit, 'A05F')
endfunction
function Y7O takes nothing returns boolean
return ( XT == 5 )
endfunction
function Y8O takes nothing returns boolean
return ( PC == 4 )
endfunction
function Y9O takes nothing returns nothing
call AdjustPlayerStateBJ(( PC * 400 ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function ZVO takes nothing returns boolean
return ( ( CountUnitsInGroup(CYE(Player(11))) ) >= 180 )
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function ZEO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( UnitAlive(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function BRTELE takes nothing returns boolean
return UnitAlive(GetFilterUnit()) and IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false
endfunction
function ZXO takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func001Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function ZOO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function ZRO takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function ZIO takes nothing returns boolean
return ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) // INLINED!!
endfunction
function ZAO takes nothing returns boolean
return ( ( CountUnitsInGroup(CYE(Player(10))) ) >= 180 )
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function ZNO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function ZBO takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func011Func008Func002Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function ZCO takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function ZDO takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function ZFO takes nothing returns boolean
return ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) // INLINED!!
endfunction
function Trig_Spawn_Units_Func011Func008Func003001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func004Func009001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func004Func017001 takes nothing returns boolean
return ( HD )
endfunction
function ZGO takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func011Func008Func004Func026001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func004Func027001 takes nothing returns boolean
return ( QD[1] )
endfunction
function Trig_Spawn_Units_Func011Func008Func004Func027002 takes nothing returns boolean
return ( QD[2] == false )
endfunction
function ZHO takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] ), ( QD[2] == false )) )
endfunction
function Trig_Spawn_Units_Func011Func008Func005Func009001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func005Func017001 takes nothing returns boolean
return ( HD )
endfunction
function ZJO takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func011Func008Func005Func026001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func005Func027001 takes nothing returns boolean
return ( QD[1] == false )
endfunction
function Trig_Spawn_Units_Func011Func008Func005Func027002 takes nothing returns boolean
return ( QD[2] )
endfunction
function ZKO takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] == false ), ( QD[2] )) )
endfunction
function Trig_Spawn_Units_Func011Func008Func006Func015001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func006Func029001 takes nothing returns boolean
return ( HD )
endfunction
function ZLO takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func011Func008Func006Func044001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func011Func008Func006Func045001 takes nothing returns boolean
return ( QD[1] )
endfunction
function Trig_Spawn_Units_Func011Func008Func006Func045002 takes nothing returns boolean
return ( QD[2] )
endfunction
function ZMO takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] ), ( QD[2] )) )
endfunction
function Trig_Spawn_Units_Func011Func011001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func013001 takes nothing returns boolean
return ( HD )
endfunction
function ZPO takes nothing returns boolean
return ( QD[1] )
endfunction
function ZQO takes nothing returns boolean
return ( QD[2] )
endfunction
function Trig_Spawn_Units_Func018001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func020001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func022001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func024001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func026001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func028001 takes nothing returns boolean
return ( HD )
endfunction
function ZSO takes nothing returns nothing
call SetPlayerAbilityAvailableBJ(false, 'A02A', GetEnumPlayer())
endfunction
function ZTO takes nothing returns boolean
return ( PC == 30 )
endfunction
function ZUO takes nothing returns nothing
call AdjustPlayerStateBJ(( PC * 400 ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function ZWO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function ZYO takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function ZZO takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(11) , Condition(function ZYO))) >= 180 )
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function Z_O takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function Z0O takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func001Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function Z1O takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function Z2O takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function Z3O takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(11) , Condition(function ZYO))) >= 180) ) // INLINED!!
endfunction
function Z4O takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Z5O takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Z6O takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(10) , Condition(function Z5O))) >= 180 )
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function Z7O takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function Z8O takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func029Func008Func002Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function Z9O takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function VVR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function VER takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(10) , Condition(function Z5O))) >= 180) ) // INLINED!!
endfunction
function Trig_Spawn_Units_Func029Func008Func003001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func004Func009001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func004Func017001 takes nothing returns boolean
return ( HD )
endfunction
function VXR takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func029Func008Func004Func026001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func004Func027001 takes nothing returns boolean
return ( QD[1] )
endfunction
function Trig_Spawn_Units_Func029Func008Func004Func027002 takes nothing returns boolean
return ( QD[2] == false )
endfunction
function VOR takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] ), ( QD[2] == false )) )
endfunction
function Trig_Spawn_Units_Func029Func008Func005Func009001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func005Func017001 takes nothing returns boolean
return ( HD )
endfunction
function VRR takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func029Func008Func005Func026001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func005Func027001 takes nothing returns boolean
return ( QD[1] == false )
endfunction
function Trig_Spawn_Units_Func029Func008Func005Func027002 takes nothing returns boolean
return ( QD[2] )
endfunction
function VIR takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] == false ), ( QD[2] )) )
endfunction
function Trig_Spawn_Units_Func029Func008Func006Func015001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func006Func029001 takes nothing returns boolean
return ( HD )
endfunction
function Trig_Spawn_Units_Func029Func008Func006Func043001 takes nothing returns boolean
return ( HD )
endfunction
function VAR takes nothing returns boolean
return ( OT == 3 )
endfunction
function Trig_Spawn_Units_Func029Func008Func006Func045001 takes nothing returns boolean
return ( QD[1] )
endfunction
function Trig_Spawn_Units_Func029Func008Func006Func045002 takes nothing returns boolean
return ( QD[2] )
endfunction
function VNR takes nothing returns boolean
return ( GetBooleanAnd(( QD[1] ), ( QD[2] )) )
endfunction
function Trig_Spawn_Units_Func029Func011001 takes nothing returns boolean
return ( HD )
endfunction
function VBR takes nothing returns nothing
call AdjustPlayerStateBJ(( PC * 400 ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function VCR takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function VDR takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function VFR takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(11) , Condition(function VDR))) >= 180 )
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function VGR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function VHR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func001Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function VJR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function VKR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function VLR takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(11) , Condition(function VDR))) >= 180) ) // INLINED!!
endfunction
function VMR takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function VPR takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function VQR takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(10) , Condition(function VPR))) >= 180 )
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function VSR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function VTR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func030Func003Func002Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function VUR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function VWR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function VYR takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(10) , Condition(function VPR))) >= 180) ) // INLINED!!
endfunction
function Trig_Spawn_Units_Func030Func003Func003001 takes nothing returns boolean
return ( HD )
endfunction
function VZR takes nothing returns boolean
return ( QD[1] )
endfunction
function V_R takes nothing returns boolean
return ( QD[2] )
endfunction
function Trig_Spawn_Units_Func030Func003Func007001 takes nothing returns boolean
return ( HD )
endfunction
function V0R takes nothing returns boolean
return ( QD[1] )
endfunction
function V1R takes nothing returns boolean
return ( QD[2] )
endfunction
function Trig_Spawn_Units_Func030Func007001 takes nothing returns boolean
return ( HD )
endfunction
function V2R takes nothing returns nothing
call AdjustPlayerStateBJ(( PC * 400 ), GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction
function V3R takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function V4R takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function V5R takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(11) , Condition(function V4R))) >= 180 )
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function V6R takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function V7R takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func001Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function V8R takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function V9R takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[1])
endfunction
function EVR takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(11) , Condition(function V4R))) >= 180) ) // INLINED!!
endfunction
function EER takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function EXR takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function EOR takes nothing returns boolean
return ( CountUnitsInGroup(CUE(Player(10) , Condition(function EXR))) >= 180 )
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func003001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func003001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func003001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func003001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function ERR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function EIR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func004001002002001001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func004001002002001002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func004001002002001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ) != null
endfunction
function Trig_Spawn_Units_Func031Func003Func002Func004001002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false ) != null
endfunction
function EAR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false )) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )) ) != null
endfunction
function ENR takes nothing returns nothing
call SetUnitPositionLoc(GetEnumUnit(), PD[2])
endfunction
function EBR takes nothing returns boolean
return ( (CountUnitsInGroup(CUE(Player(10) , Condition(function EXR))) >= 180) ) // INLINED!!
endfunction
function Trig_Spawn_Units_Func031Func003Func003001 takes nothing returns boolean
return ( HD )
endfunction
function ECR takes nothing returns boolean
return ( QD[1] )
endfunction
function EDR takes nothing returns boolean
return ( QD[2] )
endfunction
function Trig_Spawn_Units_Func031Func003Func007001 takes nothing returns boolean
return ( HD )
endfunction
function EFR takes nothing returns boolean
return ( QD[1] )
endfunction
function EGR takes nothing returns boolean
return ( QD[2] )
endfunction
function Trig_Spawn_Units_Func031Func007001 takes nothing returns boolean
return ( HD )
endfunction
function EHR takes nothing returns nothing
local integer count= 0
local integer starting
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "|cffffcc0020 seconds till game starts.|r")
call TriggerSleepAction(20.)
//call SetPlayerHandicapBJ(Player(8),ED)
//call SetPlayerHandicapBJ(Player(9),ED)
call SetPlayerHandicapBJ(Player(10), ED)
call SetPlayerHandicapBJ(Player(11), ED)
if ( (XT == 1) ) then // INLINED!!
call ForForce(C_E(MAP_CONTROL_COMPUTER), function Y0O)
endif
if ( (XT == 3) ) then // INLINED!!
call ForForce(C_E(MAP_CONTROL_COMPUTER), function Y2O)
endif
if ( (XT == 4) ) then // INLINED!!
call ForForce(C_E(MAP_CONTROL_COMPUTER), function Y4O)
endif
if ( (XT == 5) ) then // INLINED!!
call ForForce(C_E(MAP_CONTROL_COMPUTER), function Y6O)
endif
set PC=1
loop
exitwhen PC > 19
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Round " + ( I2S(PC) + " is now starting." ) ))
loop
exitwhen count == 12
if TIPST[count] then
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., DT[PC])
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., NT[PC])
endif
set count=count + 1
endloop
set count=0
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 20., " ")
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Income: " + ( I2S(( PC * 400 )) + "." ) ))
if ( (PC == 4) ) then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., " ")
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., "|cffffcc00Players can no longer repick.|r")
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set JT[bj_forLoopAIndex]=true
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endif
call ForForce(bj_FORCE_ALL_PLAYERS, function Y9O)
set BD[1]=1
loop
exitwhen BD[1] > QC
if ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function ZEO))),function ZXO)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function ZOO))), function ZRO)
endif
if ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function ZNO))),function ZBO)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function ZCO))), function ZDO)
endif

if ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function BRTELE))),function ZXO)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function BRTELE))), function ZRO)
endif
if ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function BRTELE))),function ZBO)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function BRTELE))), function ZDO)
endif

if ( ( HD ) ) then
return
endif
if ( (GetBooleanAnd(( QD[1] ), ( QD[2] == false ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
else
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
endif
if ( (GetBooleanAnd(( QD[1] == false ), ( QD[2] ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
endif
if ( (GetBooleanAnd(( QD[1] ), ( QD[2] ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
endif
set BD[1]=BD[1] + 1
endloop
set OT=0
call TriggerSleepAction(13.)
if ( ( HD ) ) then
return
endif
set PC=PC + 1
endloop
call TriggerSleepAction(15.)
if ( ( HD ) ) then
return
endif
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Bonus Round has started! Bosses will not cause you to lose lives if they reach the goal, but careful, they can be quite dangerous!")
if ( (QD[1]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'h00B', Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 851983, PD[1])
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 60.)
endif
if ( (QD[2]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'h00B', Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 851983, PD[2])
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 60.)
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
set PC=20
loop
exitwhen PC > 34
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Round " + ( I2S(PC) + " is now starting." ) ))
loop
exitwhen count == 12
if TIPST[count] then
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., DT[PC])
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., NT[PC])
endif
set count=count + 1
endloop
set count=0
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., " ")
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Income: " + ( I2S(( PC * 400 )) + "." ) ))
if ( (PC == 30) ) then // INLINED!!
call ForForce(bj_FORCE_ALL_PLAYERS, function ZSO)
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "|cffffcc00Kalestraum's Darkrift has been disabled for all players.|r")
endif
call ForForce(bj_FORCE_ALL_PLAYERS, function ZUO)
set BD[1]=1
loop
exitwhen BD[1] > QC
if ( (CountUnitsInGroup(CUE(Player(11) , Condition(function ZYO))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(11),Condition(function Z_O))),function Z0O)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function Z1O))), function Z2O)
endif
if ( (CountUnitsInGroup(CUE(Player(10) , Condition(function Z5O))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function Z7O))),function Z8O)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function Z9O))), function VVR)
endif

if ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function BRTELE))),function ZXO)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function BRTELE))), function ZRO)
endif
if ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function BRTELE))),function ZBO)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function BRTELE))), function ZDO)
endif

if ( ( HD ) ) then
return
endif
if ( (GetBooleanAnd(( QD[1] ), ( QD[2] == false ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
endif
if ( (GetBooleanAnd(( QD[1] == false ), ( QD[2] ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
endif
if ( (GetBooleanAnd(( QD[1] ), ( QD[2] ))) ) then // INLINED!!
set OT=( OT + 1 )
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(1.67)
if ( ( HD ) ) then
return
endif
if ( (OT == 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
call TriggerSleepAction(.01)
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
endif
set BD[1]=BD[1] + 1
endloop
set OT=0
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
set PC=PC + 1
endloop
set PC=35
loop
exitwhen PC > 40
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Round " + ( I2S(PC) + " is now starting." ) ))
loop
exitwhen count == 12
if TIPST[count] then
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., DT[PC])
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., NT[PC])
endif
set count=count + 1
endloop
set count=0
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 10., " ")
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "Income: " + ( I2S(( PC * 400 )) + "." ) ))
call ForForce(bj_FORCE_ALL_PLAYERS, function VBR)
set BD[1]=1
loop
exitwhen BD[1] > QC
if ( (CountUnitsInGroup(CUE(Player(11) , Condition(function VDR))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function VGR))),function VHR)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function VJR))), function VKR)
endif
if ( (CountUnitsInGroup(CUE(Player(10) , Condition(function VPR))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function VSR))),function VTR)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function VUR))), function VWR)
endif

if ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function BRTELE))),function ZXO)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function BRTELE))), function ZRO)
endif
if ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function BRTELE))),function ZBO)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function BRTELE))), function ZDO)
endif
if ( ( HD ) ) then
return
endif
if ( (QD[1]) ) then // INLINED!!
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
if ( (QD[2]) ) then // INLINED!!
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[PC], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(5.)
if ( ( HD ) ) then
return
endif
set BD[1]=BD[1] + 1
endloop
if ( (QD[1]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(.01)
if ( (QD[2]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[PC], Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
set PC=PC + 1
endloop
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ( "You have reached the final wave....But only one team may emerge victorious. Who will survive the endless onslaught?" ))
set starting=1
loop
exitwhen starting == 100
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Round 40 is now starting.")
loop
exitwhen count == 12
if TIPST[count] then
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., DT[40])
call DisplayTimedTextToPlayer(Player(count), 0, 0, 20., NT[40])
endif
set count=count + 1
endloop
set count=0
//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,10.," ")
//call DisplayTextToForce(bj_FORCE_ALL_PLAYERS,("Income: "+(I2S((40*400))+".")))
//call ForForce(bj_FORCE_ALL_PLAYERS,function V2R)
set BD[1]=1
loop
exitwhen BD[1] > QC
if ( (CountUnitsInGroup(CUE(Player(11) , Condition(function V4R))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(11),Condition(function V6R))),function V7R)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function V8R))), function V9R)
endif
if ( (CountUnitsInGroup(CUE(Player(10) , Condition(function EXR))) >= 180) ) and not BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function ERR))),function EIR)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function EAR))), function ENR)
endif
if ( (( CountUnitsInGroup(CYE(Player(11))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The West Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(10),Condition(function BRTELE))),function ZXO)
call ForGroupBJ(C5E(8 , CUE(Player(11) , Condition(function BRTELE))), function ZRO)
endif
if ( (( CountUnitsInGroup(CYE(Player(10))) ) >= 180) ) and BRTON then // INLINED!!
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "The East Side team has had eight units teleported to the goal!")
//call ForGroupBJ(C5E(4,CUE(Player(8),Condition(function BRTELE))),function ZBO)
call ForGroupBJ(C5E(8 , CUE(Player(10) , Condition(function BRTELE))), function ZDO)
endif
if ( ( HD ) ) then
return
endif
if ( (QD[1]) ) then // INLINED!!
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), MD[3], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), MD[3], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), CNE(MD[3] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), CNE(MD[3] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), MD[4], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), MD[4], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), CNE(MD[4] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(11), CNE(MD[4] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
if ( (QD[2]) ) then // INLINED!!
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), MD[1], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), MD[1], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), CNE(MD[1] , 200. , 135.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), CNE(MD[1] , 200. , 315.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), MD[2], bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), MD[2], bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), CNE(MD[2] , 200. , 45.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
if BRTON == false then
call CreateNUnitsAtLoc(1, MC[40], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
else
call CreateNUnitsAtLoc(1, PK[40], Player(10), CNE(MD[2] , 200. , 225.), bj_UNIT_FACING)
endif
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(5.)
if ( ( HD ) ) then
return
endif
set BD[1]=BD[1] + 1
endloop
if ( (QD[1]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[40], Player(11), MD[GetRandomInt(3, 4)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
if ( (QD[2]) ) then // INLINED!!
call CreateNUnitsAtLoc(1, PK[40], Player(10), MD[GetRandomInt(1, 2)], bj_UNIT_FACING)
call RemoveGuardPosition(bj_lastCreatedUnit)
call SetUnitPathing(bj_lastCreatedUnit, false)
call TriggerRegisterUnitEvent(SetPathing_AggroTrigger, bj_lastCreatedUnit, EVENT_UNIT_ACQUIRED_TARGET)
call GroupAddUnit(PATHING_GROUP, bj_lastCreatedUnit)
call SetUnitAcquireRange(bj_lastCreatedUnit, 900.)
endif
call TriggerSleepAction(10.)
if ( ( HD ) ) then
return
endif
set starting=starting + 1
endloop
endfunction
function EKR takes nothing returns boolean
return ( GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))], 'B04H') == 1 or GetUnitAbilityLevel(GetEventDamageSource(), 'B04H') == 1 ) and GetEventDamage() >= 1. and not UnitHasBuffBJ(GetTriggerUnit(), 'B00H') and ( ( BI[NI] ) == ( LN ) or ( BI[NI] ) == ( DAMAGE_TYPE_MAGIC ) or ( BI[NI] ) == ( DAMAGE_TYPE_COLD ) or ( BI[NI] ) == ( DAMAGE_TYPE_LIGHTNING ) or ( BI[NI] ) == ( DAMAGE_TYPE_UNIVERSAL ) or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) ) and J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )]
endfunction
function ELR takes nothing returns nothing
set FK=GetUnitLoc(GetEventDamageSource())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), FK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A029')
call IssueTargetOrderById(bj_lastCreatedUnit, 852149, GetTriggerUnit())
call RemoveLocation(FK)
endfunction
function EPR takes nothing returns boolean
return ( GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )], 'B04H') == 1 or GetUnitAbilityLevel(GetEventDamageSource(), 'B04H') == 1 ) and ( not ( ( not ( GetEventDamage() >= 1. ) ) or UnitHasBuffBJ(GetTriggerUnit(), 'B00H') ) ) and ( not ( J5V[( ROX(( GetUnitTypeId(GetEventDamageSource()) )) )] ) )
endfunction
function EQR takes nothing returns nothing
set FK=GetUnitLoc(GetEventDamageSource())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetEventDamageSource()), FK, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A029')
call IssueTargetOrderById(bj_lastCreatedUnit, 852149, GetTriggerUnit())
call RemoveLocation(FK)
endfunction
function ETR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A079' )
endfunction
function EUR takes nothing returns nothing
call SetUnitVertexColorBJ(GetTriggerUnit(), 20., 20., 20., 0)
call AddSpecialEffectTargetUnitBJ("overhead", GetTriggerUnit(), "war3mapImported\\Sin.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\NewDarkPillar.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function EYR takes nothing returns boolean
return ( GetUnitTypeId(GetTriggerUnit()) == 'H005' )
endfunction
function EZR takes nothing returns nothing
call AddSpecialEffectTargetUnitBJ("hand,right", GetTriggerUnit(), "war3mapImported\\ThePowerOfLight.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function E0R takes nothing returns boolean
return ( ( UnitHasBuffBJ(GetTriggerUnit(), 'B00V') ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null
endfunction
function E1R takes nothing returns boolean
return ( ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + ( GetEventDamage() * 2. ) ) >= GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()) )
endfunction
function E2R takes nothing returns nothing
if ( (( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + ( GetEventDamage() * 2. ) ) >= GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit())) ) then // INLINED!!
call SetWidgetLife(GetTriggerUnit(), GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetTriggerUnit()))
else
call SetWidgetLife(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + ( GetEventDamage() * 2. ) ))
endif
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function E4R takes nothing returns boolean
return ( ( UnitHasBuffBJ(GetTriggerUnit(), 'B00W') ) and ( GetUnitAbilityLevelSwapped('Avul', GetEventDamageSource()) == 0 ) and ( IsUnitType(GetEventDamageSource(), UNIT_TYPE_STRUCTURE) != true ) ) != null
endfunction
function E5R takes nothing returns nothing
call AddSpecialEffectTargetUnitBJ("origin", GetEventDamageSource(), "war3mapImported\\ChaosExplosion.mdx")
call DestroyEffect(bj_lastCreatedEffect)
call UnitDamageTargetBJ(GetTriggerUnit(), GetEventDamageSource(), ( GetEventDamage() * 2. ), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC)
endfunction
function E7R takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B00X') )
endfunction
function E8R takes nothing returns nothing
call SetWidgetLife(GetEventDamageSource(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEventDamageSource()) + GetEventDamage() ))
call AddSpecialEffectTargetUnitBJ("origin", GetEventDamageSource(), "Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function XVR takes nothing returns boolean
return ( UnitHasBuffBJ(GetAttacker(), 'B015') )
endfunction
function XER takes nothing returns nothing
set NF=GetUnitLoc(GetAttacker())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetAttacker()), NF, bj_UNIT_FACING)
call RemoveLocation(NF)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A07O')
call IssueTargetOrderById(bj_lastCreatedUnit, 852095, GetTriggerUnit())
endfunction
function XOR takes nothing returns boolean
return ( UnitHasBuffBJ(GetEventDamageSource(), 'B01A') ) and ( GetRandomInt(1, 100) <= 15 ) and ( GetEventDamage() > .0 ) and ( not ( ( BI[NI] ) != ( LN ) ) )
endfunction
function XRR takes nothing returns nothing
call UnitDamageTargetEx(GetEventDamageSource() , GetTriggerUnit() , ( GetEventDamage() * 4. ) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
set OK=GetUnitLoc(GetTriggerUnit())
call CreateTextTagLocBJ(( R2S(( GetEventDamage() * 5. )) + "!" ), OK, 0, 16., 100., .0, .0, 0)
call RemoveLocation(OK)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
endfunction
function XAR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A07N' )
endfunction
function XNR takes nothing returns nothing
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\Firaga.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function XCR takes nothing returns boolean
return ( UnitHasBuffBJ(GetAttacker(), 'B018') )
endfunction
function XDR takes nothing returns nothing
set BF=GetUnitLoc(GetAttacker())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetAttacker()), BF, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A07M')
call IssueTargetOrderById(bj_lastCreatedUnit, 852119, GetTriggerUnit())
call RemoveLocation(BF)
endfunction
function XGR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A07L' )
endfunction
function XHR takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(), 'A07K')
call AddSpecialEffectTargetUnitBJ("origin", GetTriggerUnit(), "war3mapImported\\Nebula.mdx")
call DestroyEffect(bj_lastCreatedEffect)
endfunction
function XKR takes nothing returns boolean
return ( UnitHasBuffBJ(GetAttacker(), 'B01B') )
endfunction
function XLR takes nothing returns nothing
set CF=GetUnitLoc(GetAttacker())
set DF=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetAttacker()), CF, bj_UNIT_FACING)
call RemoveLocation(CF)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A07H')
call IssuePointOrderByIdLoc(bj_lastCreatedUnit, 852218, DF)
call RemoveLocation(DF)
endfunction
function XPR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A07E' )
endfunction
function XQR takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(), 'A07F')
call UnitAddAbility(GetTriggerUnit(), 'A07I')
endfunction
function XTR takes nothing returns boolean
local unit g=GetFilterUnit()
local boolean b=IsUnitType(g, UNIT_TYPE_STRUCTURE) == false and IsUnitType(g, UNIT_TYPE_FLYING) == false and IsUnitType(g, UNIT_TYPE_MAGIC_IMMUNE) == false and ( GetUnitAbilityLevel(( g ), 'Avul') > 0 ) == false and ( GetUnitAbilityLevel(( g ), 'A0ET') > 0 ) == false
set g=null
return b
endfunction
function XUR takes unit XWR,real CHE returns group
local real x=GetUnitX(XWR)
local real y=GetUnitY(XWR)
local real xx
local real yy
local real CDE
local real XYR=GetUnitFacing(XWR)
local real XZR
local group g=CreateGroup()
local group gg=CreateGroup()
local unit u
call GroupEnumUnitsInRange(g, x, y, CHE, Condition(function XTR))
loop
set u=FirstOfGroup(g)
exitwhen u == null
call GroupRemoveUnit(g, u)
set xx=GetUnitX(u)
set yy=GetUnitY(u)
set CDE=Atan2(y - yy, x - xx) * bj_RADTODEG
set XZR=ModuloReal(RAbsBJ(CDE - XYR), 360)
if XZR > 90 and XZR < 270 then
call GroupAddUnit(gg, u)
endif
endloop
call DestroyGroup(g)
set g=null
return gg
endfunction
function X_R takes group g,real X0R,real X1R returns nothing
local unit u
loop
set u=FirstOfGroup(g)
exitwhen u == null
call GroupRemoveUnit(g, u)
call SetUnitX(u, GetUnitX(u) + X0R)
call SetUnitY(u, GetUnitY(u) + X1R)
endloop
endfunction
function X2R takes nothing returns nothing
local integer i=RDV
local integer sw
local group g
local unit O3X
loop
exitwhen i <= 0
set sw=RFV[i]
if ModuloInteger(AGE[sw], 3) == 0 then
call SAE('H00A' , AKE[sw] , ALE[sw] , AME[sw] , .8 , "attack two" , .6)
call SetUnitAnimation(AFE[sw], "attack two")
endif
set AKE[sw]=AKE[sw] + AHE[sw]
set ALE[sw]=ALE[sw] + AJE[sw]
call SetUnitX(AFE[sw], AKE[sw])
call SetUnitY(AFE[sw], ALE[sw])
set g=XUR(AFE[sw] , 150.)
call GroupRemoveUnit(g, AFE[sw])
call LPE(1 , g , AHE[sw] , AJE[sw])
call DestroyGroup(g)
set g=null
set AGE[sw]=AGE[sw] - 1
if AGE[sw] == 0 then
call DestroyEffect(AddSpecialEffect("none.mdl", AKE[sw], ALE[sw]))
set O3X=CreateUnit(GetOwningPlayer(AFE[sw]), 'h007', AKE[sw], ALE[sw], 0)
call UnitAddAbility(O3X, 'A07Y')
call SetUnitAbilityLevel(O3X, 'A07Y', GetUnitAbilityLevel(O3X, 'A07X'))
call IssueImmediateOrder(O3X, "battleroar")
call UnitApplyTimedLife(O3X, 0, 1.5)
set O3X=null
set RFV[i]=RFV[RDV]
set RFV[RDV]=sw
set RDV=RDV - 1
if RDV == 0 then
call PauseTimer(RHV)
endif
call SetUnitInvulnerable(AFE[sw], false)
call SetUnitTimeScale(AFE[sw], 1)
call DestroyEffect(APE[sw])
endif
set i=i - 1
endloop
endfunction
function X3R takes unit U0E,location X4R returns nothing
local real xx=GetLocationX(X4R)
local real yy=GetLocationY(X4R)
local real x=GetUnitX(U0E)
local real y=GetUnitY(U0E)
local real X5R=xx - x
local real X6R=yy - y
local real CCE=SquareRoot(X5R * X5R + X6R * X6R)
local integer X7R=R2I(CCE / 1000. / .03125)
local real X8R=X5R / I2R(X7R)
local real X9R=X6R / I2R(X7R)
local real K0E=Atan2(X9R, X8R) * bj_RADTODEG
call SetUnitAnimation(U0E, "Attack")
call SetUnitFacing(U0E, K0E)
call SetUnitInvulnerable(U0E, true)
call SetUnitTimeScale(U0E, .6)
set RDV=RDV + 1
if RDV > RGV then
set RGV=RGV + 1
set RFV[RDV]=D_E()
endif
set AFE[RFV[RDV]]=U0E
set AKE[RFV[RDV]]=x
set ALE[RFV[RDV]]=y
set AHE[RFV[RDV]]=X8R
set AJE[RFV[RDV]]=X9R
set AGE[RFV[RDV]]=X7R
set AME[RFV[RDV]]=K0E
set APE[RFV[RDV]]=AddSpecialEffectTarget("war3mapImported\\ShadowWave.mdx", U0E, "origin")
call RemoveLocation(X4R)
set X4R=null
if RDV == 1 then
call TimerStart(RHV, .03125, true, function X2R)
endif
endfunction
function OVR takes nothing returns boolean
if 'A07X' == GetSpellAbilityId() then
call X3R(GetTriggerUnit() , GetSpellTargetLoc())
endif
return false
endfunction
function OER takes nothing returns boolean
return ( GetSpellAbilityId() == 'A07Y' )
endfunction
function OXR takes nothing returns nothing
set JF=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h007', GetOwningPlayer(GetTriggerUnit()), JF, bj_UNIT_FACING)
call RemoveLocation(JF)
call UnitApplyTimedLifeBJ(21.01, 'BTLF', bj_lastCreatedUnit)
set KF=bj_lastCreatedUnit
set LF=( LF + 1 )
set MF[LF]=KF
set PF[LF]=GetUnitLoc(KF)
set QF[LF]=840
set SF[LF]=840
set TF[LF]=500.
set TF[LF]=( TF[LF] / 40. )
set WF[LF]=CreateGroup()
set OL=1
loop
exitwhen OL > GF
call CreateNUnitsAtLoc(1, 'n01R', GetOwningPlayer(KF), PF[LF], ( I2R(OL) * ( 360. / I2R(GF) ) ))
set UF=bj_lastCreatedUnit
call GroupAddUnit(WF[LF], UF)
call UnitAddAbility(UF, 'Amrf')
call UnitRemoveAbility(UF, 'Amrf')
call SetUnitFlyHeight(UF, 65., .0)
call SetUnitAnimation(UF, "Birth")
call QueueUnitAnimation(UF, "Stand")
call SetUnitTimeScalePercent(UF, 180.)
set OL=OL + 1
endloop
set YF[LF]=CreateSound("Abilities\\Spells\\Human\\CloudOfFog\\CloudOfFogLoop1.wav", true, true, false, 100, 100, "SpellsEAX")
call PlaySoundAtPointBJ(YF[LF], 100, PF[LF], 0)
endfunction
function ORR takes nothing returns nothing
set KF=GetEnumUnit()
call SetUnitTimeScalePercent(KF, 100.)
call SetUnitAnimation(KF, "Stand")
endfunction
function OIR takes nothing returns boolean
return ( GetDestructableMaxLife(GetEnumDestructable()) == 50. )
endfunction
function OAR takes nothing returns nothing
if ( (GetDestructableMaxLife(GetEnumDestructable()) == 50.) ) then // INLINED!!
call KillDestructable(GetEnumDestructable())
endif
endfunction
function ONR takes nothing returns boolean
return ( QF[ZF] == ( SF[ZF] - 20 ) )
endfunction
function OBR takes nothing returns nothing
call RemoveUnit(GetEnumUnit())
endfunction
function OCR takes nothing returns nothing
set KF=GetEnumUnit()
call SetUnitTimeScalePercent(KF, 350.)
call SetUnitAnimation(KF, "Death")
endfunction
function ODR takes nothing returns boolean
return ( QF[ZF] == 20 )
endfunction
function OFR takes nothing returns nothing
set KF=GetEnumUnit()
call SetUnitVertexColorBJ(KF, 100, 100, 100, ( 5. * I2R(( 20 - ( SF[ZF] - QF[ZF] ) )) ))
endfunction
function OGR takes nothing returns boolean
return ( QF[ZF] >= ( SF[ZF] - 20 ) )
endfunction
function Trig_WarpField_Act_Func001Func001Func008Func001002003001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ) != null
endfunction
function Trig_WarpField_Act_Func001Func001Func008Func001002003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_WarpField_Act_Func001Func001Func008Func001002003002002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(MF[ZF])) )
endfunction
function Trig_WarpField_Act_Func001Func001Func008Func001002003002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(MF[ZF])) ))
endfunction
function OHR takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(MF[ZF])) )) )) ) != null
endfunction
function OJR takes nothing returns boolean
return ( IsTerrainPathableBJ(XG, PATHING_TYPE_WALKABILITY) )
endfunction
function OKR takes nothing returns boolean
return ( TF[ZF] > .0 )
endfunction
function OLR takes nothing returns nothing
set KF=GetEnumUnit()
set EG=GetUnitLoc(KF)
set XG=CNE(EG , HF , AngleBetweenPoints(PF[ZF], EG))
if ( (IsTerrainPathableBJ(XG, PATHING_TYPE_WALKABILITY)) ) then // INLINED!!
call SetUnitPositionLoc(KF, XG)
else
call SetUnitX(KF, GetLocationX(XG))
call SetUnitY(KF, GetLocationY(XG))
endif
call AddSpecialEffectLocBJ(XG, "Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl")
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(EG)
call RemoveLocation(XG)
if ( (TF[ZF] > .0) ) then // INLINED!!
call UnitDamageTargetBJ(MF[ZF], KF, TF[ZF], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC)
endif
endfunction
function OMR takes nothing returns boolean
return ( QF[ZF] < ( SF[ZF] - 20 ) ) and ( QF[ZF] > 20 )
endfunction
function OPR takes nothing returns nothing
set KF=GetEnumUnit()
call SetUnitVertexColorBJ(KF, 100, 100, 100, ( 5. * I2R(QF[ZF]) ))
endfunction
function OQR takes nothing returns boolean
return ( QF[ZF] <= 20 )
endfunction
function OSR takes nothing returns boolean
return ( QF[ZF] > 0 )
endfunction
function OTR takes nothing returns nothing
set ZF=1
loop
exitwhen ZF > LF
if ( (QF[ZF] > 0) ) then // INLINED!!
if ( (QF[ZF] == ( SF[ZF] - 20 )) ) then // INLINED!!
call ForGroupBJ(WF[ZF], function ORR)
call CGE(500. , PF[ZF] , function OAR)
endif
if ( (QF[ZF] == 20) ) then // INLINED!!
call ForGroupBJ(WF[ZF], function OCR)
endif
if ( (QF[ZF] >= ( SF[ZF] - 20 )) ) then // INLINED!!
call ForGroupBJ(WF[ZF], function OFR)
endif
if ( (( QF[ZF] < ( SF[ZF] - 20 ) ) and ( QF[ZF] > 20 )) ) then // INLINED!!
set VG=CQE(435. , PF[ZF] , Condition(function OHR))
call ForGroupBJ(VG, function OLR)
call DestroyGroup(VG)
endif
if ( (QF[ZF] <= 20) ) then // INLINED!!
call ForGroupBJ(WF[ZF], function OPR)
endif
set QF[ZF]=( QF[ZF] - 1 )
else
call ForGroupBJ(WF[ZF], function OBR)
call RemoveLocation(PF[ZF])
call DestroyGroup(WF[ZF])
call StopSoundBJ(YF[ZF], true)
call KillSoundWhenDone(YF[ZF])
set MF[ZF]=MF[LF]
set WF[ZF]=WF[LF]
set YF[ZF]=YF[LF]
set PF[ZF]=PF[LF]
set QF[ZF]=QF[LF]
set SF[ZF]=SF[LF]
set LF=( LF - 1 )
set ZF=( ZF - 1 )
endif
set ZF=ZF + 1
endloop
endfunction
function OWR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A082' )
endfunction
function Trig_Terra_Crush_Init_Func005002003001001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ) != null
endfunction
function Trig_Terra_Crush_Init_Func005002003001002 takes nothing returns boolean
return ( GetOwningPlayer(GetFilterUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) )
endfunction
function Trig_Terra_Crush_Init_Func005002003001 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetOwningPlayer(GetFilterUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) )) ) != null
endfunction
function Trig_Terra_Crush_Init_Func005002003002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Terra_Crush_Init_Func005002003002002001001 takes nothing returns boolean
return ( IsUnitDeadBJ(GetFilterUnit()) == false )
endfunction
function Trig_Terra_Crush_Init_Func005002003002002001002 takes nothing returns boolean
return ( GetUnitAbilityLevelSwapped('Avul', GetFilterUnit()) != 1 )
endfunction
function Trig_Terra_Crush_Init_Func005002003002002001 takes nothing returns boolean
return GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetUnitAbilityLevelSwapped('Avul', GetFilterUnit()) != 1 ))
endfunction
function Trig_Terra_Crush_Init_Func005002003002002002 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(OG)) )
endfunction
function Trig_Terra_Crush_Init_Func005002003002002 takes nothing returns boolean
return GetBooleanAnd(( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetUnitAbilityLevelSwapped('Avul', GetFilterUnit()) != 1 )) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(OG)) ))
endfunction
function Trig_Terra_Crush_Init_Func005002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( GetBooleanAnd(( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetUnitAbilityLevelSwapped('Avul', GetFilterUnit()) != 1 )) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(OG)) )) )) ) != null
endfunction
function OYR takes nothing returns boolean
return ( GetBooleanAnd(( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false ), ( GetOwningPlayer(GetFilterUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) )) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ), ( GetBooleanAnd(( GetBooleanAnd(( IsUnitDeadBJ(GetFilterUnit()) == false ), ( GetUnitAbilityLevelSwapped('Avul', GetFilterUnit()) != 1 )) ), ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(OG)) )) )) )) ) != null
endfunction
function OZR takes nothing returns nothing
set VQ=GetEnumUnit()
set EQ=GetUnitLoc(VQ)
set NG=AngleBetweenPoints(RG, EQ)
set VK=GetRandomReal(1000., 5000.)
call M6E(( VQ ) , ( ( 500. ) * 1. ) , ( ( 1. ) * 1. ) , ( ( NG ) * 1. ) , null , 150. , false , false)
call UnitDamageTargetBJ(OG, VQ, VK, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL)
call CreateTextTagLocBJ(( I2S(R2I(VK)) + "!" ), EQ, 0, 12., .0, .0, .0, 0)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag, 64, 90)
call SetTextTagPermanentBJ(bj_lastCreatedTextTag, false)
call SetTextTagLifespanBJ(bj_lastCreatedTextTag, 5.)
call SetTextTagFadepointBJ(bj_lastCreatedTextTag, 4)
call GroupRemoveUnit(IG, VQ)
endfunction
function O_R takes nothing returns nothing
set OG=GetSpellAbilityUnit()
set RG=GetUnitLoc(OG)
call AddSpecialEffectLocBJ(RG, "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
call DestroyEffect(bj_lastCreatedEffect)
set IG=CQE(400. , RG , Condition(function OYR))
set AG=CountUnitsInGroup(IG)
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=AG
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
call ForGroupBJ(C5E(1 , IG), function OZR)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
call DestroyGroup(IG)
call RemoveLocation(RG)
call RemoveLocation(EQ)
endfunction
function O1R takes nothing returns boolean
return ( BG[1] == 0 )
endfunction
function O2R takes nothing returns nothing
if ( (BG[1] == 0) ) then // INLINED!!
call EnableTrigger(EHV)
endif
set BG[1]=( BG[1] + 1 )
set BG[2]=( BG[2] + 1 )
set CG[1]=GetUnitLoc(DG)
set FG[BG[2]]=DistanceBetweenPoints(CG[1], GG)
set HG[BG[2]]=.0
set JG[BG[2]]=KG
set LG[BG[2]]=DG
set MG[BG[2]]=AngleBetweenPoints(CG[1], GG)
set PG[BG[2]]=QG
set SG[BG[2]]=TG
set UG[BG[2]]=WG
set YG[BG[2]]=( ZG * FG[BG[2]] )
call SetUnitPathing(DG, false)
call SetUnitTimeScalePercent(DG, ( VH * 100. ))
call SetUnitAnimation(DG, TG)
call GroupAddUnit(EH, DG)
call UnitAddAbility(DG, 'Arav')
call UnitRemoveAbility(DG, 'Arav')
call RemoveLocation(CG[1])
endfunction
function O4R takes nothing returns boolean
return ( BG[1] == 0 )
endfunction
function O5R takes nothing returns boolean
return ( GetRandomInt(1, 5) == 1 )
endfunction
function O6R takes nothing returns boolean
return ( HG[BG[3]] < FG[BG[3]] )
endfunction
function O7R takes nothing returns boolean
return ( IsUnitInGroup(LG[BG[3]], EH) )
endfunction
function O8R takes nothing returns nothing
set BG[3]=1
loop
exitwhen BG[3] > BG[2]
if ( (IsUnitInGroup(LG[BG[3]], EH)) ) then // INLINED!!
if ( (HG[BG[3]] < FG[BG[3]]) ) then // INLINED!!
call QueueUnitAnimation(LG[BG[3]], SG[BG[3]])
set CG[1]=GetUnitLoc(LG[BG[3]])
set CG[2]=CNE(CG[1] , JG[BG[3]] , MG[BG[3]])
call SetUnitPositionLoc(LG[BG[3]], CG[2])
set HG[BG[3]]=( HG[BG[3]] + JG[BG[3]] )
if ( (GetRandomInt(1, 5) == 1) ) then // INLINED!!
call AddSpecialEffectTargetUnitBJ("origin", LG[BG[3]], PG[BG[3]])
call DestroyEffect(bj_lastCreatedEffect)
endif
set XH[BG[3]]=( XH[BG[3]] + ( 180. / ( FG[BG[3]] / JG[BG[3]] ) ) )
set OH[BG[3]]=( SinBJ(XH[BG[3]]) * YG[BG[3]] )
call SetUnitFlyHeight(LG[BG[3]], OH[BG[3]], 1000000000.)
call RemoveLocation(CG[1])
call RemoveLocation(CG[2])
else
call SetUnitPathing(LG[BG[3]], true)
call GroupRemoveUnit(EH, LG[BG[3]])
call SetUnitTimeScalePercent(LG[BG[3]], 100.)
call ResetUnitAnimation(LG[BG[3]])
set XH[BG[3]]=.0
set BG[1]=( BG[1] - 1 )
if ( (BG[1] == 0) ) then // INLINED!!
set BG[2]=0
call CreateNUnitsAtLoc(1, 'h00D', GetOwningPlayer(DG), GG, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A082')
call IssueImmediateOrderById(bj_lastCreatedUnit, 852600)
call RemoveLocation(GG)
call DisableTrigger(GetTriggeringTrigger())
endif
endif
endif
set BG[3]=BG[3] + 1
endloop
endfunction
function RVR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A081' )
endfunction
function RER takes nothing returns nothing
set ZG=.5
set WG=false
set RH=false
set GG=GetSpellTargetLoc()
set DG=GetTriggerUnit()
set KG=18.
set QG="war3mapImported\\NewAirEX.mdx"
set TG="attack"
set VH=.6
set IH=GetUnitLoc(GetTriggerUnit())
call CreateNUnitsAtLoc(1, 'h00D', GetOwningPlayer(GetTriggerUnit()), IH, bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(.01, 'BTLF', bj_lastCreatedUnit)
call RemoveLocation(IH)
call ConditionalTriggerExecute(EGV)
endfunction
function ROR takes nothing returns boolean
return ( ( GetUnitAbilityLevelSwapped('A083', GetAttacker()) == 1 ) and ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) ) != null and GetUnitTypeId(GetTriggerUnit()) != 'E00E'
endfunction
function RRR takes nothing returns boolean
return ( (( ( GetUnitAbilityLevelSwapped('A083', GetAttacker()) == 1 ) and ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) ) != null and GetUnitTypeId(GetTriggerUnit()) != 'E00E') ) // INLINED!!
endfunction
function RIR takes nothing returns boolean
return ( CountUnitsInGroup(AH) == 0 )
endfunction
function RAR takes nothing returns boolean
return ( JH[NH] == 3 )
endfunction
function RNR takes nothing returns boolean
return ( JH[NH] == 2 )
endfunction
function RBR takes nothing returns boolean
return ( JH[NH] == 1 )
endfunction
function RCR takes nothing returns nothing
if ( (CountUnitsInGroup(AH) == 0) ) then // INLINED!!
call EnableTrigger(ELV)
endif
call AddSpecialEffectTargetUnitBJ("weapon", GetAttacker(), "Abilities\\Weapons\\Rifle\\RifleImpact.mdl")
call DestroyEffect(bj_lastCreatedEffect)
set NH=( NH + 1 )
set BH[NH]=GetAttacker()
set CH[NH]=GetTriggerUnit()
call GroupAddUnit(AH, CH[NH])
set DH[NH]=GetUnitLoc(BH[NH])
set FH[1]=GetUnitLoc(CH[NH])
set GH[NH]=AngleBetweenPoints(DH[NH], FH[1])
set HH[NH]=12.
set JH[NH]=3
if ( (JH[NH] == 1) ) then // INLINED!!
set KH[NH]=150.
set LH[NH]=( KH[NH] / HH[NH] )
else
if ( (JH[NH] == 2) ) then // INLINED!!
set KH[NH]=250.
set LH[NH]=( KH[NH] / HH[NH] )
else
if ( (JH[NH] == 3) ) then // INLINED!!
set KH[NH]=350.
set LH[NH]=( KH[NH] / HH[NH] )
endif
endif
endif
set BH[NH]=null
call RemoveLocation(DH[1])
endfunction
function RFR takes nothing returns boolean
return ( GetRandomInt(1, 6) == 1 )
endfunction
function RGR takes nothing returns boolean
return ( CountUnitsInGroup(AH) == 0 )
endfunction
function RHR takes nothing returns boolean
return ( KH[MH] <= 3. )
endfunction
function Trig_Siphone_Blade_Loop_Func001Func001Func012001 takes nothing returns boolean
return ( IsUnitType(CH[MH], UNIT_TYPE_STRUCTURE) != true ) != null
endfunction
function Trig_Siphone_Blade_Loop_Func001Func001Func012002 takes nothing returns boolean
return ( IsUnitType(CH[MH], UNIT_TYPE_FLYING) != true ) != null
endfunction
function RJR takes nothing returns boolean
return ( ( IsUnitInGroup(CH[MH], AH) ) and ( GetBooleanAnd(( IsUnitType(CH[MH], UNIT_TYPE_STRUCTURE) != true ), ( IsUnitType(CH[MH], UNIT_TYPE_FLYING) != true )) ) ) != null
endfunction
function RKR takes nothing returns nothing
set MH=1
loop
exitwhen MH > NH
if ( (( ( IsUnitInGroup(CH[MH], AH) ) and ( GetBooleanAnd(( IsUnitType(CH[MH], UNIT_TYPE_STRUCTURE) != true ), ( IsUnitType(CH[MH], UNIT_TYPE_FLYING) != true )) ) ) != null) ) then // INLINED!!
set FH[1]=GetUnitLoc(CH[MH])
set HH[MH]=( KH[MH] / LH[MH] )
set HH[MH]=( HH[MH] + 1 )
set FH[2]=CNE(FH[1] , HH[MH] , GH[MH])
call SetUnitPositionLoc(CH[MH], FH[2])
if ( (GetRandomInt(1, 6) == 1) ) then // INLINED!!
call AddSpecialEffectLocBJ(FH[1], "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endif
call RemoveLocation(DH[1])
call RemoveLocation(DH[2])
set KH[MH]=( KH[MH] - HH[MH] )
if ( (KH[MH] <= 3.) ) then // INLINED!!
call GroupRemoveUnit(AH, CH[MH])
set HH[MH]=.0
set JH[MH]=0
set KH[MH]=.0
set LH[MH]=.0
set GH[MH]=.0
call RemoveLocation(DH[MH])
set CH[MH]=null
if ( (CountUnitsInGroup(AH) == 0) ) then // INLINED!!
set NH=0
call DisableTrigger(ELV)
endif
endif
endif
set MH=MH + 1
endloop
endfunction
function RMR takes nothing returns boolean
return ( GetSpellAbilityId() == 'A087' )
endfunction
function RPR takes nothing returns boolean
return ( CountUnitsInGroup(PH) == 0 )
endfunction
function RQR takes nothing returns boolean
return ( UH[QH] == 3 )
endfunction
function RSR takes nothing returns boolean
return ( UH[QH] == 2 )
endfunction
function RTR takes nothing returns boolean
return ( UH[QH] == 1 )
endfunction
function RUR takes nothing returns nothing
if ( (CountUnitsInGroup(PH) == 0) ) then // INLINED!!
call EnableTrigger(EPV)
endif
set QH=( QH + 1 )
set SH[QH]=GetSpellAbilityUnit()
call SetUnitPathing(SH[QH], false)
set TH[1]=GetUnitLoc(SH[QH])
set UH[QH]=GetUnitAbilityLevelSwapped('A087', SH[QH])
set WH[QH]=22.
set YH[QH]=GetSpellTargetLoc()
set ZH[QH]=DistanceBetweenPoints(TH[1], YH[QH])
if ( (UH[QH] == 1) ) then // INLINED!!
set VJ[QH]=1500.
else
if ( (UH[QH] == 2) ) then // INLINED!!
set VJ[QH]=1500.
else
if ( (UH[QH] == 3) ) then // INLINED!!
set VJ[QH]=1500.
endif
endif
endif
call GroupAddUnit(PH, SH[QH])
call RemoveLocation(TH[1])
endfunction
function RYR takes nothing returns boolean
return ( GetRandomInt(0, 101) <= 5 )
endfunction
function RZR takes nothing returns boolean
return ( GetRandomInt(1, 18) <= 3 )
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003001 takes nothing returns boolean
return ( GetOwningPlayer(GetFilterUnit()) != GetOwningPlayer(SH[EJ]) )
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003002002001 takes nothing returns boolean
return ( IsUnitInGroup(GetFilterUnit(), OJ) == false )
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003002002002 takes nothing returns boolean
return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(SH[EJ])) == false )
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003002002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitInGroup(GetFilterUnit(), OJ) == false ), ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(SH[EJ])) == false ))
endfunction
function Trig_Time_Travel_Loop_MUI_Func001Func001Func007002003002 takes nothing returns boolean
return GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitInGroup(GetFilterUnit(), OJ) == false ), ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(SH[EJ])) == false )) ))
endfunction
function R_R takes nothing returns boolean
return GetBooleanAnd(( GetOwningPlayer(GetFilterUnit()) != GetOwningPlayer(SH[EJ]) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitInGroup(GetFilterUnit(), OJ) == false ), ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(SH[EJ])) == false )) )) ))
endfunction
function R0R takes nothing returns nothing
call GroupAddUnit(OJ, GetEnumUnit())
call UnitDamageTargetBJ(SH[EJ], GetEnumUnit(), VJ[EJ], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC)
endfunction
function R1R takes nothing returns boolean
return ( CountUnitsInGroup(PH) == 0 )
endfunction
function R2R takes nothing returns boolean
return ( ZH[EJ] <= 5. )
endfunction
function R3R takes nothing returns boolean
return ( IsUnitInGroup(SH[EJ], PH) )
endfunction
function R4R takes nothing returns nothing
set EJ=1
loop
exitwhen EJ > QH
if ( (IsUnitInGroup(SH[EJ], PH)) ) then // INLINED!!
set TH[1]=GetUnitLoc(SH[EJ])
set TH[2]=CNE(TH[1] , WH[EJ] , AngleBetweenPoints(TH[1], YH[EJ]))
call SetUnitPositionLoc(SH[EJ], TH[2])
if ( (GetRandomInt(0, 101) <= 5) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'h00C', GetOwningPlayer(SH[EJ]), TH[1], bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(2., 'BTLF', bj_lastCreatedUnit)
call UnitAddAbility(bj_lastCreatedUnit, 'A04M')
call IssueImmediateOrderById(bj_lastCreatedUnit, 852127)
endif
if ( (GetRandomInt(1, 18) <= 3) ) then // INLINED!!
call CreateNUnitsAtLoc(1, 'h00C', GetOwningPlayer(SH[EJ]), TH[1], bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(.01, 'BTLF', bj_lastCreatedUnit)
endif
set XJ[EJ]=CQE(400. , TH[1] , Condition(function R_R))
call ForGroupBJ(XJ[EJ], function R0R)
call DestroyGroup(XJ[EJ])
call RemoveLocation(TH[1])
call RemoveLocation(TH[2])
set ZH[EJ]=( ZH[EJ] - WH[EJ] )
if ( (ZH[EJ] <= 5.) ) then // INLINED!!
call GroupRemoveUnit(PH, SH[EJ])
set UH[EJ]=0
set ZH[EJ]=.0
call SetUnitPathing(SH[EJ], true)
set SH[EJ]=null
set WH[EJ]=.0
call RemoveLocation(YH[EJ])
if ( (CountUnitsInGroup(PH) == 0) ) then // INLINED!!
set QH=0
call GroupClear(OJ)
call DisableTrigger(EPV)
endif
endif
endif
set EJ=EJ + 1
endloop
endfunction
function R6R takes nothing returns boolean
return ( GetSpellAbilityId() == 'A04M' )
endfunction
function R7R takes nothing returns boolean
return ( RJ == 0 )
endfunction
function Trig_Split_Knock_On_Func018002003001 takes nothing returns boolean
return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(AJ[IJ])) ) and GetUnitTypeId(GetFilterUnit()) != 'E00E'
endfunction
function Trig_Split_Knock_On_Func018002003002001 takes nothing returns boolean
return ( IsUnitAliveBJ(GetFilterUnit()) )
endfunction
function Trig_Split_Knock_On_Func018002003002002001 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ) != null
endfunction
function Trig_Split_Knock_On_Func018002003002002002001 takes nothing returns boolean
return ( GetPlayerController(GetOwningPlayer(GetFilterUnit())) != GetPlayerController(Player(PLAYER_NEUTRAL_PASSIVE)) )
endfunction
function Trig_Split_Knock_On_Func018002003002002002002 takes nothing returns boolean
return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) != null
endfunction
function Trig_Split_Knock_On_Func018002003002002002 takes nothing returns boolean
return ( GetBooleanAnd(( GetPlayerController(GetOwningPlayer(GetFilterUnit())) != GetPlayerController(Player(PLAYER_NEUTRAL_PASSIVE)) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )) ) != null
endfunction
function Trig_Split_Knock_On_Func018002003002002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ), ( GetBooleanAnd(( GetPlayerController(GetOwningPlayer(GetFilterUnit())) != GetPlayerController(Player(PLAYER_NEUTRAL_PASSIVE)) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )) )) ) != null
endfunction
function Trig_Split_Knock_On_Func018002003002 takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ), ( GetBooleanAnd(( GetPlayerController(GetOwningPlayer(GetFilterUnit())) != GetPlayerController(Player(PLAYER_NEUTRAL_PASSIVE)) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )) )) )) ) != null
endfunction
function R8R takes nothing returns boolean
return ( GetBooleanAnd(( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(AJ[IJ])) ), ( GetBooleanAnd(( IsUnitAliveBJ(GetFilterUnit()) ), ( GetBooleanAnd(( IsUnitType(GetFilterUnit(), UNIT_TYPE_ANCIENT) == false ), ( GetBooleanAnd(( GetPlayerController(GetOwningPlayer(GetFilterUnit())) != GetPlayerController(Player(PLAYER_NEUTRAL_PASSIVE)) ), ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )) )) )) )) ) != null
endfunction
function R9R takes nothing returns nothing
if ( (RJ == 0) ) then // INLINED!!
call EnableTrigger(ESV)
endif
set IJ=( IJ + 1 )
set RJ=( RJ + 1 )
set AJ[IJ]=GetSpellAbilityUnit()
set NJ[IJ]=GetUnitLoc(AJ[IJ])
set BJ[IJ]=200.
set CJ[IJ]=9.
set DJ[IJ]=( BJ[IJ] / CJ[IJ] )
set FJ[IJ]=CQE(275. , NJ[IJ] , Condition(function R8R))
endfunction
function IER takes nothing returns boolean
return ( GetRandomInt(1, 6) == 3 )
endfunction
function IXR takes nothing returns nothing
set HJ[1]=GetUnitLoc(GetEnumUnit())
set CJ[GJ]=( BJ[GJ] / DJ[GJ] )
set CJ[GJ]=( CJ[GJ] + .5 )
set HJ[2]=CNE(HJ[1] , CJ[GJ] , AngleBetweenPoints(NJ[GJ], HJ[1]))
call SetUnitPositionLoc(GetEnumUnit(), HJ[2])
if ( (GetRandomInt(1, 6) == 3) ) then // INLINED!!
call AddSpecialEffectTargetUnitBJ("origin", GetEnumUnit(), "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl")
call DestroyEffect(bj_lastCreatedEffect)
endif
call RemoveLocation(HJ[1])
call RemoveLocation(HJ[2])
endfunction
function IOR takes nothing returns boolean
return ( RJ == 0 )
endfunction
function IRR takes nothing returns boolean
return ( BJ[GJ] <= .0 )
endfunction
function IIR takes nothing returns nothing
set GJ=1
loop
exitwhen GJ > IJ
if ( (BJ[GJ] <= .0) ) then // INLINED!!
call DestroyGroup(FJ[GJ])
set AJ[GJ]=null
set BJ[GJ]=.0
set DJ[GJ]=.0
set CJ[GJ]=.0
call RemoveLocation(NJ[GJ])
set RJ=( RJ - 1 )
if ( (RJ == 0) ) then // INLINED!!
set IJ=0
call DisableTrigger(ESV)
endif
else
call ForGroupBJ(FJ[GJ], function IXR)
endif
set BJ[GJ]=( BJ[GJ] - CJ[GJ] )
set GJ=GJ + 1
endloop
endfunction
function INR takes nothing returns boolean
return ( QT[bj_forLoopAIndex] > 0 )
endfunction
function IBR takes nothing returns boolean
return ( QT[bj_forLoopAIndex] > 1 )
endfunction
function ICR takes nothing returns boolean
return ( QT[bj_forLoopAIndex] > 2 )
endfunction
function IDR takes nothing returns boolean
return ( QT[bj_forLoopAIndex] > 3 )
endfunction
function IFR takes nothing returns boolean
return ( QT[bj_forLoopAIndex] > 4 )
endfunction
function IGR takes nothing returns nothing
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=40
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
set QT[bj_forLoopAIndex]=GetRandomInt(0, XT)
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=40
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (QT[bj_forLoopAIndex] > 0) ) then // INLINED!!
set PT[bj_forLoopAIndex]=LT[GetRandomInt(1, 28)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=41
set bj_forLoopAIndexEnd=80
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (QT[bj_forLoopAIndex] > 1) ) then // INLINED!!
set PT[bj_forLoopAIndex]=LT[GetRandomInt(1, 28)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=81
set bj_forLoopAIndexEnd=120
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (QT[bj_forLoopAIndex] > 2) ) then // INLINED!!
set PT[bj_forLoopAIndex]=LT[GetRandomInt(1, 28)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=121
set bj_forLoopAIndexEnd=160
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (QT[bj_forLoopAIndex] > 3) ) then // INLINED!!
set PT[bj_forLoopAIndex]=LT[GetRandomInt(1, 28)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
set bj_forLoopAIndex=161
set bj_forLoopAIndexEnd=200
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (QT[bj_forLoopAIndex] > 4) ) then // INLINED!!
set PT[bj_forLoopAIndex]=LT[GetRandomInt(1, 28)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction
function IJR takes string s returns nothing
call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 30, s)
endfunction
function IJR2 takes string s returns nothing
call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 75, s)
endfunction
function IJR3 takes string s returns nothing
call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 150, s)
endfunction
function IKR takes nothing returns nothing
call IJR("Error: |cff00baffVery Easy|r difficulty can only be voted upon.")
endfunction
function ILR takes nothing returns nothing
if XT == 0 then
call IJR("Red has chosen |cff1ab700Easy|r.")
set XT=2
endif
endfunction
function IMR takes nothing returns nothing
if XT == 0 then
call IJR("Red has chosen |cfff6ff00Normal|r difficulty, Commanders are Normal difficulty and all offensive spells are enabled.")
set XT=3
endif
endfunction
function IPR takes nothing returns nothing
if XT == 0 then
if not BRTON then
set XT=4
call IJR("Red has chosen |cFFFE8A0ENightmare|r difficulty, Commanders are Nightmarish..")
else
call IJR("Error: |cFFFE8A0ENightmare|r difficulty can only be set in non-Boss Rush games; otherwise it must be voted upon.")
endif
endif
endfunction
function IQR takes nothing returns nothing
call IJR("Error: |cffaa0000Hell|r difficulty can only be voted upon.")
endfunction
function IQRQQ takes nothing returns nothing
if GAMEM then
if not BRTON then
if not LWMON then
call IJR("Red has chosen |cffaa0000Boss Rush|r, prepare to die, fail, and die again...")
set BRTON=true
else
call IJR("Error: |cffaa0000Boss Rush|r is incompatible with Line Wars mode. Please turn off Line Wars if you wish to enable Boss Rush.")
endif
else
call IJR("Red has disabled |cffaa0000Boss Rush|r, only one Commander will spawn per round.")
set BRTON=false
endif
endif
endfunction
function IQRQ1 takes nothing returns nothing
if GAMEM then
if not NOOBM then
call IJR("Red has chosen |cff00baffCommander Promotions|r, normal creeps will be promoted to Commanders when they kill a hero.")
set NOOBM=true
else
call IJR("Red has disabled |cff00baffCommander Promotions|r, normal creeps will not be promoted to Commanders when they kill a hero.")
set NOOBM=false
endif
endif
endfunction
function IQRQ11 takes nothing returns nothing
if GAMEM then
if not TRUEENFOS then
call IJR("Red has chosen |c00000000T|r|c00001A1Ar|r|c00003333u|r|c00004D4De|r|c00006666 |r|c00008080E|r|c00208080n|r|c00408080f|r|c00608080o|r|c00808080s|r. Thank for you playing the game it was meant to be played, in my vision. Enjoy my labor of love! |cff00baffCommander Promotions|r are enabled, and certain enemy mechanics have been upgraded to actually be a challenge. You can type -cp to turn off |cff00baffCommander Promotions|r if it's too much for you.")
set TRUEENFOS=true
set NOOBM=true
set MC[10]='n03O'
set MC[9]='e00Z'
set PK[10]='n03P'
set PK[9]='e01S'
set DT[10]="|cff00baffDiseased Bear|r"
set DT[9]="|cff00baffFlesh Giant|r"
set NT[10]="Diseased Bears occasionally |cffee0000knockback enemies|r in an area. They have |cffee0000Evasion|r and |cffee0000Disease Cloud|r, and their Commander has |cffee000080% Evasion|r and |cffee000020% Max Health Regeneration|r. It also has |cffee0000Endurance Aura|r."
set NT[9]="Flesh Giants have |cffee0000Leap|r and|cffee0000 80% Magic and Ranged Attack Reduction|r. Their commander also |cffee0000Leaps|s, |cffee0000KNOCKING YOU BACK|r with every attack. He also has a |cffee0000MASSIVE ARMOR AURA|r and |cffee0000HEALING AURA|r,plus |cffee0000damage reduction against attacks|r, |cffee000090% Magic and Ranged attack resistance|r, and |cffee00005% Maximum Health Regeneration|r. He is protected by an |cffee0000Evil Angel|r, which gives a chance to survive lethal damage."
else
call IJR("Red has disabled |c00000000T|r|c00001A1Ar|r|c00003333u|r|c00004D4De|r|c00006666 |r|c00008080E|r|c00208080n|r|c00408080f|r|c00608080o|r|c00808080s|r. :( |cff00baffCommander Promotions|r has been disabled. Creeps are easiser. GLFH.")
set TRUEENFOS=false
set NOOBM=false
set MC[9]='n03O'
set MC[10]='e00Z'
set PK[9]='n03P'
set PK[10]='e01S'
set DT[9]="|cff00baffDiseased Bear|r"
set DT[10]="|cff00baffFlesh Giant|r"
set NT[9]="Diseased Bears occasionally |cffee0000knockback enemies|r in an area. They have |cffee0000Evasion|r and |cffee0000Disease Cloud|r, and their Commander has |cffee000080% Evasion|r and |cffee000020% Max Health Regeneration|r. It also has |cffee0000Endurance Aura|r."
set NT[10]="Flesh Giants have |cffee0000Leap|r and|cffee0000 80% Magic and Ranged Attack Reduction|r. Their commander also |cffee0000Leaps|s, |cffee0000KNOCKING YOU BACK|r with every attack. He also has a |cffee0000MASSIVE ARMOR AURA|r and |cffee0000HEALING AURA|r,plus |cffee0000damage reduction against attacks|r, |cffee000090% Magic and Ranged attack resistance|r, and |cffee00005% Maximum Health Regeneration|r. He is protected by an |cffee0000Evil Angel|r, which gives a chance to survive lethal damage."
endif
endif
endfunction
function IQRQ2 takes nothing returns nothing
//if FLAGREMATCH then
//call IJR("Error: Stats are already being recorded for this match.")
//else
//call IJR("Stats will now be recorded for this match.")
//set FLAGREMATCH=true
//endif
endfunction
function IQRQ3 takes nothing returns nothing
local unit u
local integer i=0

if GAMEM then
if not LWMON then
call IJR("Red has chosen |cff00baffLine Wars|r, unit spawning buildings have been created for all players.")
call IJR("You must use these buildings to send units to the other side for income.")
call IJR("In this mode, death will not patrol the no man's land between the two sides.")
call IJR("Red can now choose a starting income between 5 and 200 by typing -StartingIncome XXX (Default 30)")
set LWMON=true
call ForForce(bj_FORCE_ALL_PLAYERS, function ZSO)
//call MultiboardSetItemWidthBJ( AS[1], 2, 1, 12.00 )
//call MultiboardSetItemWidthBJ( AS[2], 2, 1, 12.00 )
call MultiboardSetItemValueBJ(AS[1], 2, 1, ( BS[9] + "$$$|r" ))
call MultiboardSetItemValueBJ(AS[2], 2, 1, ( BS[9] + "$$$|r" ))
if BRTON then
call IJR("|cffaa0000Boss Rush|r has been disabled.")
set BRTON=false
endif
loop
exitwhen i == 12
if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) != MAP_CONTROL_COMPUTER then
set u=CreateUnit(Player(i), 'H014', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(i), 'H015', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(i), 'H016', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
set u=CreateUnit(Player(i), 'H013', 0., - 5000., 0.)
call SetHeroLevel(u, 300, false)
set u=null
endif
set i=i + 1
endloop
else
call IJR("Red has disabled |cff00baffLine Wars|r, a normal Enfo's round will commence.")
call GroupEnumUnitsInRange(UNIT_SPAWNERS_GROUP, 0., 0., 99999., Condition(function RemoveUnitSpawners))
set LWMON=false
call ForForce(bj_FORCE_ALL_PLAYERS, function MQO)
call MultiboardSetItemValueBJ(AS[1], 2, 1, ( BS[9] + "L|r" ))
call MultiboardSetItemValueBJ(AS[2], 2, 1, ( BS[9] + "L|r" ))
endif
endif

set u=null
endfunction
function IQRQ4 takes nothing returns nothing
if GAMEM then
call IJR("Red has reset modes; Boss Rush, True Enfos Line Wars, Speedy Creeps, and Commander Promotions modes have been turned off.")
set NOOBM=true
set BRTON=false
set TRUEENFOS=false
if SpeedyGonzalez != null then
call RemoveUnit(SpeedyGonzalez)
set SpeedyGonzalez=null
endif
set MC[9]='n03O'
set MC[10]='e00Z'
set PK[9]='n03P'
set PK[10]='e01S'
set DT[9]="|cff00baffDiseased Bear|r"
set DT[10]="|cff00baffFlesh Giant|r"
set NT[9]="Diseased Bears occasionally |cffee0000knockback enemies|r in an area. They have |cffee0000Evasion|r and |cffee0000Disease Cloud|r, and their Commander has |cffee000080% Evasion|r and |cffee000020% Max Health Regeneration|r. It also has |cffee0000Endurance Aura|r."
set NT[10]="Flesh Giants have |cffee0000Leap|r and|cffee0000 80% Magic and Ranged Attack Reduction|r. Their commander also |cffee0000Leaps|s, |cffee0000KNOCKING YOU BACK|r with every attack. He also has a |cffee0000MASSIVE ARMOR AURA|r and |cffee0000HEALING AURA|r,plus |cffee0000damage reduction against attacks|r, |cffee000090% Magic and Ranged attack resistance|r, and |cffee00005% Maximum Health Regeneration|r. He is protected by an |cffee0000Evil Angel|r, which gives a chance to survive lethal damage."
if LWMON then
call MultiboardSetItemValueBJ(AS[1], 2, 1, ( BS[9] + "L|r" ))
call MultiboardSetItemValueBJ(AS[2], 2, 1, ( BS[9] + "L|r" ))
call GroupEnumUnitsInRange(UNIT_SPAWNERS_GROUP, 0., 0., 99999., Condition(function RemoveUnitSpawners))
call ForForce(bj_FORCE_ALL_PLAYERS, function MQO)
set LWMON=false
endif
endif
endfunction
function IQRQ5 takes nothing returns nothing
if GAMEM then
if SpeedyGonzalez == null then
set SpeedyGonzalez=CreateUnit(Player(0), 'o006', 0., 0., 0.)
call IJR("Red has enabled Speedy Creeps, creeps will move incredibly fast.")
else
call IJR("Red has disabled Speedy Creeps, creeps will move at normal speed.")
call RemoveUnit(SpeedyGonzalez)
set SpeedyGonzalez=null
endif
endif
endfunction
function RANDOMOVEFUNCTION takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit()) == 'ushd' and ( GetIssuedOrderId() == 851971 or GetIssuedOrderId() == 851986 or GetIssuedOrderId() == 851990 ) then
call SetUnitX(GetTriggerUnit(), 1280.)
call SetUnitY(GetTriggerUnit(), - 3840.)
endif
return false
endfunction
function RANDOMFILTER takes nothing returns boolean
if GetUnitTypeId(GetFilterUnit()) == 'ushd' then
call SetUnitX(GetFilterUnit(), 1280.)
call SetUnitY(GetFilterUnit(), - 3840.)
endif
return false
endfunction
function LETSGOALLRANDOM takes nothing returns nothing
call GroupEnumUnitsInRect(RANDOMGROUP, GetPlayableMapRect(), Filter(function RANDOMFILTER))
endfunction
function IQRQ6 takes nothing returns nothing
if GAMEM then
if ALLRANDOM == false then
set ALLRANDOM=true
call IJR("Red has chosen |c00FF0101A|r|c00FF900Fl|r|c00FEC808l|r|c00FEFF01 |r|c008FDF00R|r|c0021C000a|r|c0001BBFFn|r|c00025EFFd|r|c000201FFo|r|c007F0080m|r. Enjoy the 30 potions and have fun! If you would like to random an advanced hero promote yourself.")
call GroupEnumUnitsInRect(RANDOMGROUP, GetPlayableMapRect(), Filter(function RANDOMFILTER)) // INLINED!!
set RANDOMOVE=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(RANDOMOVE, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
call TriggerRegisterAnyUnitEventBJ(RANDOMOVE, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
call TriggerAddCondition(RANDOMOVE, Condition(function RANDOMOVEFUNCTION))
endif
endif
endfunction
function s__Modes_reset takes nothing returns boolean
set XT=0
set ST=false
return false
endfunction
function ISR takes nothing returns nothing
local trigger t=CreateTrigger()
call BlzChangeMinimapTerrainTex("war3mapImported\\custom_minimap.tga")
set AQE=VJX("D1" , true , function IKR)
set GIV[( AQE ) * 12 + ( 0 )]=true
set ASE=VJX("D2" , true , function ILR)
set GIV[( ASE ) * 12 + ( 0 )]=true
set ATE=VJX("D3" , true , function IMR)
set GIV[( ATE ) * 12 + ( 0 )]=true
set AUE=VJX("D4" , true , function IPR)
set GIV[( AUE ) * 12 + ( 0 )]=true
set AWE=VJX("D5" , true , function IQR)
set GIV[( AWE ) * 12 + ( 0 )]=true
set AWEQQ=VJX("br" , true , function IQRQQ)
set GIV[( AWEQQ ) * 12 + ( 0 )]=true
set AWEQ1=VJX("cp" , true , function IQRQ1)
set GIV[( AWEQ1 ) * 12 + ( 0 )]=true
set AWEQ11=VJX("te" , true , function IQRQ11)
set GIV[( AWEQ11 ) * 12 + ( 0 )]=true
set AWEQ2=VJX("sr" , true , function IQRQ2)
set GIV[( AWEQ2 ) * 12 + ( 0 )]=true
set AWEQ3=VJX("lw" , true , function IQRQ3)
set GIV[( AWEQ3 ) * 12 + ( 0 )]=true
set AWEQ4=VJX("rm" , true , function IQRQ4)
set GIV[( AWEQ4 ) * 12 + ( 0 )]=true
set AWEQ5=VJX("sc" , true , function IQRQ5)
set GIV[( AWEQ5 ) * 12 + ( 0 )]=true
set AWEQ6=VJX("ar" , true , function IQRQ6)
set GIV[( AWEQ6 ) * 12 + ( 0 )]=true
//call IJR2("|cffff0000Please wait while the map is loading. There will be heavy lag for around 60 seconds while resources are being preloaded.|r")
//call IJR2("|cffff0000Please do not drop laggers during this time.|r")
call IJR2("|cffffcc00Available Mode strings:|r -d2 (Easy), -d3 (Normal), -d4 (Nightmare),-d5 (Hell), -te(|c00000000T|r|c00001A1Ar|r|c00003333u|r|c00004D4De|r|c00006666 |r|c00008080E|r|c00208080n|r|c00408080f|r|c00608080o|r|c00808080s|r.), -ar(|c00FF0101A|r|c00FF900Fl|r|c00FEC808l|r|c00FEFF01 |r|c008FDF00R|r|c0021C000a|r|c0001BBFFn|r|c00025EFFd|r|c000201FFo|r|c007F0080m|r, cannot be turned off), -br(Boss Rush), -cp(|c00800000C|r|c00790000o|r|c00730000m|r|c006C0000m|r|c00650000a|r|c005E0000n|r|c00580000d|r|c00510000e|r|c004A0000r|r|c00430000 |r|c003D0000P|r|c00360000r|r|c002F0000o|r|c00280000m|r|c00220000o|r|c001B0000t|r|c00140000i|r|c000D0000o|r|c00070000n|r|c00000000s|r, Recommended for experienced players),")
call IJR2("-lw(Line Wars mode), -sc(Speedy Creeps, Recommended for Line Wars),-rm (Resets all modes to default)")
call IJR2("Players will be able to vote on a difficulty setting if Red does not set a difficulty.")
call IJR("                                                                              ")
call IJR("|c00630064Support the map by following me on Twitch:|r |c00FF0101t|r|c00F80112w|r|c00F20122i|r|c00EB0133t|r|c00E50144c|r|c00DE0154h|r|c00D80065.|r|c00D10075t|r|c00CB0086v|r|c00C40097/|r|c00BE00A7s|r|c00B700B8t|r|c00B200A7r|r|c00AD0097i|r|c00A80086k|r|c00A30075e|r|c009E0064s|r|c00990054t|r|c00940043p|r|c008F0032l|r|c008A0021a|r|c00850011y|r|c00800000s|r")
//call IJR("                                                                              ")
//call IJR3("The |cFF09F3F7Recipe Shop, |r|cFFFFCC00Venus|r, allows you to view and buy all recipe items in the game from anywhere on the map. Items bought this way will cost 10% more than if you had made the item yourself from its components. However, it is a good way for new players to get acquainted with all the items in the game.")

//call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS,60.,"|cff00ffffAnnouncing the first ever Enfo's TS FFB Edition tournament; with a cash prize of 250+ usd, and taking place in August.Please out our discord for more info: https://discord.gg/9fuCGD3. Also thank you to the patrons at https://www.patreon.com/EnfosFFB for contrubiting to the prize money so I don't have to pay too much out of pocket. GLHF!|r")

set TIPST[0]=true
set TIPST[1]=true
set TIPST[2]=true
set TIPST[3]=true
set TIPST[4]=true
set TIPST[5]=true
set TIPST[6]=true
set TIPST[7]=true
set TIPST[8]=true
set TIPST[9]=true
set TIPST[10]=true
set TIPST[11]=true
set VoracityInt[0]=0
set VoracityInt[1]=0
set VoracityInt[2]=0
set VoracityInt[3]=0
set VoracityInt[4]=0
set VoracityInt[5]=0
set VoracityInt[6]=0
set VoracityInt[7]=0
set VoracityInt[8]=0
set VoracityInt[9]=0
set VoracityInt[10]=0
set VoracityInt[11]=0
set t=null
endfunction
function IUR takes nothing returns boolean
return ( GetEnumUnit() == PL[bj_forLoopAIndex] ) and ( TT[bj_forLoopAIndex] )
endfunction
function IWR takes nothing returns boolean
return ( (( GetEnumUnit() == PL[bj_forLoopAIndex] ) and ( TT[bj_forLoopAIndex] )) ) // INLINED!!
endfunction
function IYR takes nothing returns nothing
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
if ( (( GetEnumUnit() == PL[bj_forLoopAIndex] ) and ( TT[bj_forLoopAIndex] )) ) then // INLINED!!
call UnitDamageTargetEx(OG , GetEnumUnit() , 60000. , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
set TT[bj_forLoopAIndex]=false
endif
set bj_forLoopAIndex=bj_forLoopAIndex + 1
endloop
endfunction
function IZR takes nothing returns nothing
set UT=GetSpellTargetLoc()
set OG=GetTriggerUnit()
set bj_wantDestroyGroup=true
call ForGroupBJ(CTE(240. , UT), function IYR)
call RemoveLocation(UT)
endfunction
//function I0R takes nothing returns boolean
//return((GetSpellAbilityId()=='A02J')or(GetSpellAbilityId()=='A0BG')or(GetSpellAbilityId()=='A0GX')or(GetSpellAbilityId()=='A08X')or(GetSpellAbilityId()=='A08V')or(GetSpellAbilityId()=='A08H')or(GetSpellAbilityId()=='A03F')and not JT[(1+GetPlayerId(GetOwningPlayer(GetTriggerUnit())))])
//endfunction
//function I1R takes nothing returns boolean
//return(I0R())
//endfunction
function I3R takes nothing returns nothing
if not JT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
set JT[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=true
endif
endfunction                
    
        function TipsToggleFunc takes nothing returns boolean
    if TIPST[GetPlayerId(GetTriggerPlayer())] then
    set TIPST[GetPlayerId(GetTriggerPlayer())]=false
    call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0, 0, 10., "Wave information has been turned off.")
    else
    set TIPST[GetPlayerId(GetTriggerPlayer())]=true
    call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0, 0, 10., "Wave information has been turned on.")
    endif
        return false
    endfunction
                
    function LichToggleFunc takes nothing returns boolean
    if LICHS[GetPlayerId(GetTriggerPlayer())] then
    set LICHS[GetPlayerId(GetTriggerPlayer())]=false
    call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0, 0, 10., "Minion auto-selection has been turned off.")
    else
    set LICHS[GetPlayerId(GetTriggerPlayer())]=true
    call DisplayTimedTextToPlayer(GetTriggerPlayer(), 0, 0, 10., "Minion auto-selection has been turned on.")
    endif
        return false
    endfunction

function s__ReviveSafe___revivec__allocate takes nothing returns integer
 local integer this=si__ReviveSafe___revivec_F
    if ( this != 0 ) then
        set si__ReviveSafe___revivec_F=si__ReviveSafe___revivec_V[this]
    else
        set si__ReviveSafe___revivec_I=si__ReviveSafe___revivec_I + 1
        set this=si__ReviveSafe___revivec_I
    endif
    if ( this > 8190 ) then
        return 0
    endif

    set si__ReviveSafe___revivec_V[this]=- 1
 return this
endfunction

//Generated destructor of ReviveSafe___revivec
function s__ReviveSafe___revivec_deallocate takes integer this returns nothing
    if this == null then
        return
    elseif ( si__ReviveSafe___revivec_V[this] != - 1 ) then
        return
    endif
    set si__ReviveSafe___revivec_V[this]=si__ReviveSafe___revivec_F
    set si__ReviveSafe___revivec_F=this
endfunction


        
    function ReviveSafe___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local real x= GetRectCenterX(GD[s__ReviveSafe___revivec_i[data]])
        local real y= GetRectCenterY(GD[s__ReviveSafe___revivec_i[data]])
        
        call ReviveHero(LC[s__ReviveSafe___revivec_i[data]], x, y, true)
        call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "Revival time is over, hero will hopefully have been revived. Please report the revive bug by sending me the replay. Contact me at Strikest@us.east or my e-mail, waytocrumble11@gmail.com.")
        
        call s__ReviveSafe___revivec_deallocate(data)
        call ReleaseTimer(t)
        set t=null
    endfunction
    
        
    function ReviveSafe___OnSpell takes nothing returns boolean
    local timer t
    local integer data
    local integer i= GetPlayerId(GetTriggerPlayer()) + 1
        if not UnitAlive(LC[i]) then
        set data=s__ReviveSafe___revivec__allocate()
        set s__ReviveSafe___revivec_i[data]=i
        set t=(NewTimerEx(0)) // INLINED!!
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
        call TimerStart(t, 10. + GetHeroLevel(LC[i]), false, function ReviveSafe___Handler)
        call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., "Attempting to fix revive bug. Hero will hopefully revive after the revival time.")
        endif
        
        set t=null
        return false
    endfunction


function DtaHoliday___OnSpell takes nothing returns nothing
        local real x= GetUnitX(GetTriggerUnit())
        local real y= GetUnitY(GetTriggerUnit())

        //if GetSpellAbilityId() == 'A0AG' then
            call DestroyEffect(AddSpecialEffect("war3mapImported\\BonediggerHaloTC.mdl", x, y))
        //endif
        
        //return false
    endfunction


function DandDecay__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()

if UnitAlive(u) and GetUnitTypeId(u) == 'uskm' then
if GetUnitAbilityLevel(u, 'A0AD') == 0 then
call UnitAddAbility(u, 'A0AD')
endif
call SetUnitAbilityLevel(u, 'A0AD', DandDecay__Level)
call UnitMakeAbilityPermanent(u, true, 'A0AD')
call BlzSetUnitAbilityManaCost(u, 'A0AD', DandDecay__Level - 1, 0)
endif

set u=null
return false
endfunction

function DandDecay___OnSpell takes nothing returns nothing
        local real x= GetSpellTargetX()
        local real y= GetSpellTargetY()
        local unit u

        
        //if GetSpellAbilityId() == 'A0AD' then
            set u=CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'h007', x, y, 0.)
            call UnitAddAbility(u, 'A0AF')
            call SetUnitAbilityLevel(u, 'A0AF', GetUnitAbilityLevel(GetTriggerUnit(), 'A0AD'))
            call IssuePointOrder(u, "deathanddecay", x, y)
            call UnitApplyTimedLife(u, 'BTLF', 25.)
        //endif
        
		if GetUnitAbilityLevel(GetTriggerUnit(), 'A0MD') == 1 then
			set DandDecay__Level=GetUnitAbilityLevel(GetTriggerUnit(), 'A0AD')
			call GroupEnumUnitsOfPlayer(DandDecay__GROUP, GetOwningPlayer(GetTriggerUnit()), Filter(function DandDecay__FilterActions))
		endif
		

        set u=null
        //return false
    endfunction

function s__DeathCall___DCall__allocate takes nothing returns integer
 local integer this=si__DeathCall___DCall_F
    if ( this != 0 ) then
        set si__DeathCall___DCall_F=si__DeathCall___DCall_V[this]
    else
        set si__DeathCall___DCall_I=si__DeathCall___DCall_I + 1
        set this=si__DeathCall___DCall_I
    endif
    if ( this > 8190 ) then
        return 0
    endif

    set si__DeathCall___DCall_V[this]=- 1
 return this
endfunction

//Generated destructor of DeathCall___DCall
function s__DeathCall___DCall_deallocate takes integer this returns nothing
    if this == null then
        return
    elseif ( si__DeathCall___DCall_V[this] != - 1 ) then
        return
    endif
    set si__DeathCall___DCall_V[this]=si__DeathCall___DCall_F
    set si__DeathCall___DCall_F=this
endfunction

function s__DeathCall___DCall_destroy takes integer this returns nothing
set s__DeathCall___DCall_cast[this]=null
set s__DeathCall___DCall_t[this]=null
set s__DeathCall___DCall_attach[this]=null
call s__DeathCall___DCall_deallocate(this)
endfunction

function DeathCall___Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u
local texttag tt
local integer i

if UnitAlive(s__DeathCall___DCall_t[data]) then

set u=CreateUnit(GetOwningPlayer(s__DeathCall___DCall_cast[data]), 'h007', GetUnitX(s__DeathCall___DCall_t[data]), GetUnitY(s__DeathCall___DCall_t[data]), .0)
call UnitAddAbility(u, 'A0AN')
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkForce.mdx", GetUnitX(s__DeathCall___DCall_t[data]), GetUnitY(s__DeathCall___DCall_t[data])))
if IsUnitType(s__DeathCall___DCall_t[data], UNIT_TYPE_ANCIENT) then
call UnitDamageTarget(u, s__DeathCall___DCall_t[data], ( GetWidgetLife(s__DeathCall___DCall_t[data]) / 3. ), false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTarget(u, s__DeathCall___DCall_t[data], 999999999., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endif
call UnitApplyTimedLife(u, 'BTLF', 1.)
call IssueImmediateOrder(u, "roar")

	if DeathStacks[GetUnitUserData(s__DeathCall___DCall_cast[data])] < 4444 then
            set DeathStacks[GetUnitUserData(s__DeathCall___DCall_cast[data])]=DeathStacks[GetUnitUserData(s__DeathCall___DCall_cast[data])] + 24
		if DeathStacks[GetUnitUserData(s__DeathCall___DCall_cast[data])] >= 4444 then
		call UnitAddAbility(s__DeathCall___DCall_cast[data], 'A0MD')
				call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Ghost Strike.mdx", s__DeathCall___DCall_cast[data], "origin"))
		endif
		else
		set i=GetRandomInt(0, 2)
		if i == 0 then
		call SetHeroInt(s__DeathCall___DCall_cast[data], GetHeroInt(s__DeathCall___DCall_cast[data], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl", s__DeathCall___DCall_cast[data], "origin"))
		endif
				if i == 1 then
		call SetHeroStr(s__DeathCall___DCall_cast[data], GetHeroStr(s__DeathCall___DCall_cast[data], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", s__DeathCall___DCall_cast[data], "origin"))
		endif
		if i == 2 then
		call SetHeroAgi(s__DeathCall___DCall_cast[data], GetHeroAgi(s__DeathCall___DCall_cast[data], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIam\\AIamTarget.mdl", s__DeathCall___DCall_cast[data], "origin"))
		endif
		endif

else
call DisplayTextToPlayer(GetOwningPlayer(s__DeathCall___DCall_cast[data]), 0., 0., "|c00000000D|r|c00050005e|r|c00090009a|r|c000E000Et|r|c00130013h|r|c00180018 |r|c001C001Ci|r|c00210021s|r|c00260026 |r|c002B002BD|r|c002F002Fi|r|c00340034s|r|c002F002Fp|r|c002A002Al|r|c00240024e|r|c001F001Fa|r|c001A001As|r|c00150015e|r|c00100010d|r|c000A000A.|r|c00050005.|r|c00000000.|r")
set tt=CreateTextTag()
call SetTextTagText(tt, "|c00000000f|r|c001A001Aa|r|c00340034i|r|c00000000l|r", .024)
call SetTextTagPos(tt, GetUnitX(s__DeathCall___DCall_t[data]), GetUnitY(s__DeathCall___DCall_t[data]), .0)
call SetTextTagColor(tt, 255, 0, 0, 255)
call SetTextTagVelocity(tt, .0, .04)
call SetTextTagVisibility(tt, true)
call SetTextTagFadepoint(tt, 2.)
call SetTextTagLifespan(tt, 5.)
call SetTextTagPermanent(tt, false)

set u=CreateUnit(Player(PLAYER_NEUTRAL_AGGRESSIVE), 'h007', GetUnitX(s__DeathCall___DCall_t[data]), GetUnitY(s__DeathCall___DCall_t[data]), .0)
call UnitAddAbility(u, 'ACcb')
call SetUnitAbilityLevel(u, 'ACcb', 6)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call IssueTargetOrderById(u, 852095, s__DeathCall___DCall_cast[data])
endif
call DestroyEffect(s__DeathCall___DCall_attach[data])
call ReleaseTimer(t)
call s__DeathCall___DCall_destroy(data)


set tt=null
set t=null
set u=null
endfunction

function DeathCall___OnSpell takes nothing returns nothing
        local timer t
        local integer data
        
        //if GetSpellAbilityId() == 'A0AM' then
            set data=s__DeathCall___DCall__allocate()
            set s__DeathCall___DCall_cast[data]=GetTriggerUnit()
            set s__DeathCall___DCall_t[data]=GetSpellTargetUnit()
            set s__DeathCall___DCall_attach[data]=AddSpecialEffectTarget("war3mapImported\\Death Spell.mdx", s__DeathCall___DCall_t[data], "origin")
            set t=(NewTimerEx(0)) // INLINED!! // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
            call TimerStart(t, 5., false, function DeathCall___Handler)
        //endif
        
        set t=null
        //return false
    endfunction

function s__CalloftheHaunted___CotH__allocate takes nothing returns integer
 local integer this=si__CalloftheHaunted___CotH_F
    if ( this != 0 ) then
        set si__CalloftheHaunted___CotH_F=si__CalloftheHaunted___CotH_V[this]
    else
        set si__CalloftheHaunted___CotH_I=si__CalloftheHaunted___CotH_I + 1
        set this=si__CalloftheHaunted___CotH_I
    endif
    if ( this > 8190 ) then
        return 0
    endif

    set si__CalloftheHaunted___CotH_V[this]=- 1
 return this
endfunction

//Generated destructor of CalloftheHaunted___CotH
function s__CalloftheHaunted___CotH_deallocate takes integer this returns nothing
    if this == null then
        return
    elseif ( si__CalloftheHaunted___CotH_V[this] != - 1 ) then
        return
    endif
    set si__CalloftheHaunted___CotH_V[this]=si__CalloftheHaunted___CotH_F
    set si__CalloftheHaunted___CotH_F=this
endfunction

    constant function CalloftheHaunted___GetPeriod takes unit u,integer level,integer level2 returns real
        return 10. - ( .5 * level )
    endfunction
    
    constant function CalloftheHaunted___GetDuration takes unit u,integer level,integer level2 returns real
        return ( 15. + 1. * level ) + ( level2 * .5 )
    endfunction
    
    constant function CalloftheHaunted___GetDurationSuper takes unit u,integer level,integer level2 returns real
        return ( 15. + 1. * level ) + ( level2 * .5 )
    endfunction
    
    constant function CalloftheHaunted___AoE takes unit u,integer level,integer level2 returns real
        return 350.
    endfunction
    
    constant function CalloftheHaunted___SuperUnitChance takes unit u,integer level,integer level2 returns real
        return 5. + 2. * level
    endfunction
    
    constant function CalloftheHaunted___SummonTypeAmount takes unit u,integer level,integer level2 returns integer
        return 4
    endfunction
    
    constant function CalloftheHaunted___GetHealth takes unit u,integer level,integer level2,integer i,integer str,integer agi,integer int,integer herolvl returns integer
        if i == 1 then
            if not LWMON and not GAMEM then
            return ( ( ( PC * PC * level * 2 ) + ( level * str * 2 ) * ( 1 + herolvl / 100 ) ) + 40 )
            else
            return ( ( ( ( herolvl * 3 / 2 ) * ( herolvl * 3 / 2 ) * level * 2 ) + ( level * str * 2 ) * ( 1 + herolvl / 100 ) ) + 40 )
            endif
        endif
        if i == 2 then
                    if not LWMON and not GAMEM then
            return ( ( PC * PC * level ) * ( 1 + herolvl / 100 ) + 40 ) + ( ( level * int ) * ( 1 + herolvl / 100 ) )
            else
            return ( ( ( herolvl * 3 / 2 ) * ( herolvl * 3 / 2 ) * level ) * ( 1 + herolvl / 100 ) + 40 ) + ( ( level * int ) * ( 1 + herolvl / 100 ) )
            endif
        endif
        if i == 3 then
                    if not LWMON and not GAMEM then
            return ( ( PC * PC * level ) * ( 1 + herolvl / 100 ) + 40 ) + ( ( level * agi ) * ( 1 + herolvl / 100 ) )
            else
             return ( ( ( herolvl * 3 / 2 ) * ( herolvl * 3 / 2 ) * level ) * ( 1 + herolvl / 100 ) + 40 ) + ( ( level * agi ) * ( 1 + herolvl / 100 ) )
            endif
        endif
        if i == 4 then
                    if not LWMON and not GAMEM then
            return ( ( PC * PC * level * ( 1 + herolvl / 100 ) ) + 40 ) + ( ( level * agi / 2 ) * ( 1 + herolvl / 100 ) ) + ( ( level * int / 2 ) * ( 1 + herolvl / 100 ) )
            else
            return ( ( herolvl * 3 / 2 ) * ( herolvl * 3 / 2 ) * level * ( 1 + herolvl / 100 ) + 40 ) + ( ( level * agi / 2 ) * ( 1 + herolvl / 100 ) ) + ( ( level * int / 2 ) * ( 1 + herolvl / 100 ) )
            endif
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetDamage takes unit u,integer level,integer level2,integer i,integer str,integer agi,integer int,integer herolvl returns integer
        if i == 1 then
                            if not LWMON and not GAMEM then
            return ( ( PC * level ) + ( level * str / 3 * 2 ) + 16 )
            else
                        return ( ( ( herolvl * 3 / 2 ) * level ) + ( level * str / 3 * 2 ) + 16 )
            endif
        endif
        if i == 2 then
                            if not LWMON and not GAMEM then
            return ( ( PC * level ) + ( level * int / 3 * 2 ) + 16 )
            else
                        return ( ( ( herolvl * 3 / 2 ) * level ) + ( level * int / 3 * 2 ) + 16 )
            endif
        endif
        if i == 3 then
                            if not LWMON and not GAMEM then
            return ( ( PC * level ) + ( level * agi / 4 * 3 ) + 16 )
            else
                        return ( ( ( herolvl * 3 / 2 ) * level ) + ( level * agi / 4 * 3 ) + 16 )
            endif
        endif
        if i == 4 then
                            if not LWMON and not GAMEM then
            return ( ( ( PC * level ) + ( level * agi / 6 ) + ( level * int / 6 ) + 16 ) * 3 )
            else
                        return ( ( ( ( herolvl * 3 / 2 ) * level ) + ( level * agi / 6 ) + ( level * int / 6 ) + 16 ) * 3 )
            endif
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetDamageSuper takes unit u,integer level,integer level2,integer int,integer herolvl returns integer
                                if not LWMON and not GAMEM then
        return ( ( 2 * PC * level ) + ( level * int / 2 ) + 16 )
        else
                return ( ( 2 * ( herolvl * 3 / 2 ) * level ) + ( level * int / 2 ) + 16 )
        endif
    endfunction

    constant function CalloftheHaunted___GetHealthSuper takes unit u,integer level,integer level2,integer str,integer herolvl returns integer
                                if not LWMON and not GAMEM then
        return ( ( ( PC * 3 * PC * level ) + ( level * str * 3 ) * ( 1 + herolvl / 100 ) ) + 40 )
        else
                return ( ( ( ( herolvl * 3 / 2 ) * 3 * ( herolvl * 3 / 2 ) * level ) + ( level * str * 3 ) * ( 1 + herolvl / 100 ) ) + 40 )
        endif
    endfunction
    
    constant function CalloftheHaunted___GetSummonType takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___UNIT1
        endif
        if i == 2 then
            return CalloftheHaunted___UNIT2
        endif
        if i == 3 then
            return CalloftheHaunted___UNIT3
        endif
        if i == 4 then
            return CalloftheHaunted___UNIT4
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetDamageTomeType takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___DAMAGE_TOME_1
        endif
        if i == 2 then
            return CalloftheHaunted___DAMAGE_TOME_2
        endif
        if i == 3 then
            return CalloftheHaunted___DAMAGE_TOME_3
        endif
        if i == 4 then
            return CalloftheHaunted___DAMAGE_TOME_4
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetHealthTomeType takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___HEALTH_TOME_1
        endif
        if i == 2 then
            return CalloftheHaunted___HEALTH_TOME_2
        endif
        if i == 3 then
            return CalloftheHaunted___HEALTH_TOME_3
        endif
        if i == 4 then
            return CalloftheHaunted___HEALTH_TOME_4
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetBirthIndex takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___UNIT1_INDEX
        endif
        if i == 2 then
            return CalloftheHaunted___UNIT2_INDEX
        endif
        if i == 3 then
            return CalloftheHaunted___UNIT3_INDEX
        endif
        if i == 4 then
            return CalloftheHaunted___UNIT4_INDEX
        endif
        return 0
    endfunction
    
    constant function CalloftheHaunted___GetAbility1 takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___UNIT1_ABILITY1
        endif
        if i == 2 then
            return CalloftheHaunted___UNIT2_ABILITY1
        endif
        if i == 3 then
            return CalloftheHaunted___UNIT3_ABILITY1
        endif
        if i == 4 then
            return CalloftheHaunted___UNIT4_ABILITY1
        endif
        return 0
    endfunction

    constant function CalloftheHaunted___GetAbility2 takes integer i returns integer
        if i == 1 then
            return CalloftheHaunted___UNIT1_ABILITY2
        endif
        if i == 2 then
            return CalloftheHaunted___UNIT2_ABILITY2
        endif
        if i == 3 then
            return CalloftheHaunted___UNIT3_ABILITY2
        endif
        if i == 4 then
            return CalloftheHaunted___UNIT4_ABILITY2
        endif
        return 0
    endfunction
    
//////////////////////////////////////////////////////NO TOUCHY PAST THIS POINT UNLESS YOU KNOW WHAT YOU ARE DOING/////////////////////////////////////////////////////////////////////////////
    
        
        function s__CalloftheHaunted___CotH_destroy takes integer this returns nothing
            set s__CalloftheHaunted___CotH_cast[this]=null
            set s__CalloftheHaunted___CotH_attach[this]=null
            call s__CalloftheHaunted___CotH_deallocate(this)
        endfunction
        

        
    function CalloftheHaunted___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local real x
        local real y
        local real d
        local real r= GetRandomReal(0., 360.)
        local real f= GetUnitFacing(s__CalloftheHaunted___CotH_cast[data])
        local integer i
        local integer hp
        local integer dmg
        local unit u
        
        set s__CalloftheHaunted___CotH_lvl[data]=GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID)
        set s__CalloftheHaunted___CotH_lvl2[data]=GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2)
        
        set d=GetRandomReal(0., CalloftheHaunted___AoE(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]))
        set i=GetRandomInt(1, CalloftheHaunted___SummonTypeAmount(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]))

        if GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data])) )], CalloftheHaunted___ABIL_ID) != 0 then
            set s__CalloftheHaunted___CotH_x[data]=GetUnitX(s__CalloftheHaunted___CotH_cast[data])
            set s__CalloftheHaunted___CotH_y[data]=GetUnitY(s__CalloftheHaunted___CotH_cast[data])
            set x=s__CalloftheHaunted___CotH_x[data] + d * Cos(r * bj_DEGTORAD)
            set y=s__CalloftheHaunted___CotH_y[data] + d * Sin(r * bj_DEGTORAD)
            if UnitAlive(s__CalloftheHaunted___CotH_cast[data]) then
            if GetUnitState(s__CalloftheHaunted___CotH_cast[data], UNIT_STATE_MANA) >= ( GetUnitState(s__CalloftheHaunted___CotH_cast[data], UNIT_STATE_MAX_MANA) / 28 ) then
call SetUnitState(s__CalloftheHaunted___CotH_cast[data], UNIT_STATE_MANA, ( GetUnitState(s__CalloftheHaunted___CotH_cast[data], UNIT_STATE_MANA) - GetUnitState(s__CalloftheHaunted___CotH_cast[data], UNIT_STATE_MAX_MANA) / 28 ))
                if GetRandomReal(0., 100.) <= CalloftheHaunted___SuperUnitChance(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]) then
                    call DestroyEffect(AddSpecialEffect(CalloftheHaunted___SUPER_EFFECT, x, y))
                    set u=CreateUnit(GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data]), CalloftheHaunted___SUPER_UNIT, x, y, f)
					if GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], 'A0MD') != 1 then
                    call UnitApplyTimedLife(u, CalloftheHaunted___TIMED_LIFE_ID, CalloftheHaunted___GetDurationSuper(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]))
                    endif
					call SetUnitAnimationByIndex(u, CalloftheHaunted___SUPER_BIRTH_INDEX)
                    call QueueUnitAnimation(u, "stand")

                        if GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2) != 0 then
                            call UnitAddAbility(u, CalloftheHaunted___SUPER_UNIT_ABILITY1)
                            call UnitAddAbility(u, CalloftheHaunted___SUPER_UNIT_ABILITY2)
                            call UnitAddAbility(u, CalloftheHaunted___SUPER_UNIT_ABILITY3)
                            call SetUnitAbilityLevel(u, CalloftheHaunted___SUPER_UNIT_ABILITY1, GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2))
                            call SetUnitAbilityLevel(u, CalloftheHaunted___SUPER_UNIT_ABILITY2, GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2))
                            call SetUnitAbilityLevel(u, CalloftheHaunted___SUPER_UNIT_ABILITY3, GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2))
                        endif










                    set hp=CalloftheHaunted___GetHealthSuper(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data] , GetHeroStr(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroLevel(s__CalloftheHaunted___CotH_cast[data]))
                    set dmg=CalloftheHaunted___GetDamageSuper(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data] , GetHeroInt(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroLevel(s__CalloftheHaunted___CotH_cast[data]))
                    call BlzSetUnitBaseDamage(u, R2I(dmg), 0)
					call BlzSetUnitMaxHP(u, R2I(hp))
					call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
                else
                    call DestroyEffect(AddSpecialEffect(CalloftheHaunted___EFFECT, x, y))
                    set u=CreateUnit(GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data]), CalloftheHaunted___GetSummonType(i), x, y, f)
					if GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], 'A0MD') != 1 then
                    call UnitApplyTimedLife(u, CalloftheHaunted___TIMED_LIFE_ID, CalloftheHaunted___GetDuration(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]))
                    endif
					call SetUnitAnimationByIndex(u, CalloftheHaunted___GetBirthIndex(i))
                    call QueueUnitAnimation(u, "stand")

                        if GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2) != 0 then
                            call UnitAddAbility(u, CalloftheHaunted___GetAbility1(i))
                            call UnitAddAbility(u, CalloftheHaunted___GetAbility2(i))
                            call SetUnitAbilityLevel(u, CalloftheHaunted___GetAbility1(i), GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2))
                            call SetUnitAbilityLevel(u, CalloftheHaunted___GetAbility2(i), GetUnitAbilityLevel(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ABIL_ID2))
                        endif








                    set hp=CalloftheHaunted___GetHealth(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data] , i , GetHeroStr(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroAgi(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroInt(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroLevel(s__CalloftheHaunted___CotH_cast[data]))
                    set dmg=CalloftheHaunted___GetDamage(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data] , i , GetHeroStr(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroAgi(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroInt(s__CalloftheHaunted___CotH_cast[data], true) , GetHeroLevel(s__CalloftheHaunted___CotH_cast[data]))
                    call BlzSetUnitBaseDamage(u, R2I(dmg), 0)
					call BlzSetUnitMaxHP(u, R2I(hp))
					call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
                    if i != 1 and IsUnitSelected(s__CalloftheHaunted___CotH_cast[data], GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data])) and LICHS[GetPlayerId(GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data]))] then
                     call SelectUnitAddForPlayer(u, GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data]))
                    endif
                endif
            else
            call Q_E(GetOwningPlayer(s__CalloftheHaunted___CotH_cast[data]) , "Not enough mana for summon.")
            endif
            endif
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
            call TimerStart(t, CalloftheHaunted___GetPeriod(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]), false, function CalloftheHaunted___Handler)
        else
            call ReleaseTimer(t)
            call DestroyEffect(s__CalloftheHaunted___CotH_attach[data])
            call UnitRemoveAbility(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___NOSTACK_ID)
            call s__CalloftheHaunted___CotH_destroy(data)
        endif
        
        set u=null
        set t=null
    endfunction
    
    function CalloftheHaunted___OnSpell takes nothing returns boolean
        local integer data
        local timer t

        if GetLearnedSkill() == CalloftheHaunted___ABIL_ID and GetUnitAbilityLevel(GetTriggerUnit(), CalloftheHaunted___NOSTACK_ID) != 1 then
            set data=s__CalloftheHaunted___CotH__allocate()
            set s__CalloftheHaunted___CotH_cast[data]=GetTriggerUnit()
            set s__CalloftheHaunted___CotH_attach[data]=AddSpecialEffectTarget(CalloftheHaunted___ATTACH, s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___ATTACH_POINT)
            call UnitAddAbility(s__CalloftheHaunted___CotH_cast[data], CalloftheHaunted___NOSTACK_ID)
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, CalloftheHaunted___GetPeriod(s__CalloftheHaunted___CotH_cast[data] , s__CalloftheHaunted___CotH_lvl[data] , s__CalloftheHaunted___CotH_lvl2[data]), false, function CalloftheHaunted___Handler)
        endif
        
        set t=null
        return false
    endfunction



function s__Chernobyliss__Cbliss__allocate takes nothing returns integer
 local integer this=si__Chernobyliss__Cbliss_F
    if ( this != 0 ) then
        set si__Chernobyliss__Cbliss_F=si__Chernobyliss__Cbliss_V[this]
    else
        set si__Chernobyliss__Cbliss_I=si__Chernobyliss__Cbliss_I + 1
        set this=si__Chernobyliss__Cbliss_I
    endif
    if ( this > 8190 ) then
        return 0
    endif

    set si__Chernobyliss__Cbliss_V[this]=- 1
 return this
endfunction

function s__Chernobyliss__Cbliss_deallocate takes integer this returns nothing
    if this == null then
        return
    elseif ( si__Chernobyliss__Cbliss_V[this] != - 1 ) then
        return
    endif
    set si__Chernobyliss__Cbliss_V[this]=si__Chernobyliss__Cbliss_F
    set si__Chernobyliss__Cbliss_F=this
endfunction

    constant function Chernobyliss__DAMAGE_PER_SECOND takes integer level,integer herostr,integer heroagi,integer heroint returns real
        return ( 50. + ( level * 40. * level ) + heroagi * 2. ) / Chernobyliss__TIMER_INTERVAL
    endfunction
    
    constant function Chernobyliss__DURATION takes integer level returns real
        return 20. + level * 2.
    endfunction
    
    constant function Chernobyliss__AOE takes integer level returns real
        return 195. + ( 5. * level )
    endfunction
    
    constant function Chernobyliss__SPREAD_AOE takes integer level returns real
        return 200.
    endfunction
    
    constant function Chernobyliss__KB_DISTANCE takes integer level returns real
        return 190. + level * 10.
    endfunction
    
    constant function Chernobyliss__CHANCE_TO_SPREAD takes integer level returns real
        return 150. / Chernobyliss__TIMER_INTERVAL
    endfunction
    
    constant function Chernobyliss__FILTER_UNITS takes unit u returns boolean
        return IsUnitEnemy(u, GetOwningPlayer(Chernobyliss__CASTER))
    endfunction
    
     
    function Chernobyliss__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local unit u
        local unit ug= null
        local integer lvl= s__Chernobyliss__Cbliss_lvl[data]
        local real dur= s__Chernobyliss__Cbliss_dur[data] - 1. / Chernobyliss__TIMER_INTERVAL
        local real life
        local real mlife
    
        if s__Chernobyliss__Cbliss_dur[data] <= 0 or not UnitAlive(s__Chernobyliss__Cbliss_t[data]) then
            call DestroyEffect(s__Chernobyliss__Cbliss_attach[data])
            call UnitRemoveAbility(s__Chernobyliss__Cbliss_t[data], Chernobyliss__SLOW_ID)

                call SetUnitVertexColor(s__Chernobyliss__Cbliss_t[data], 255, 255, 255, 255)

            call s__Chernobyliss__Cbliss_deallocate(data)
            call ReleaseTimer(t)
        else
            call UnitDamageTargetEx(s__Chernobyliss__Cbliss_cast[data] , s__Chernobyliss__Cbliss_t[data] , Chernobyliss__DAMAGE_PER_SECOND(s__Chernobyliss__Cbliss_lvl[data] , GetHeroStr(s__Chernobyliss__Cbliss_cast[data], true) , GetHeroAgi(s__Chernobyliss__Cbliss_cast[data], true) , GetHeroInt(s__Chernobyliss__Cbliss_cast[data], true)) , false , false , Chernobyliss__ATTACK_TYPE , Chernobyliss__DAMAGE_TYPE , WEAPON_TYPE_WHOKNOWS)

                set life=GetUnitState(s__Chernobyliss__Cbliss_t[data], UNIT_STATE_LIFE)
                set mlife=GetUnitState(s__Chernobyliss__Cbliss_t[data], UNIT_STATE_MAX_LIFE)
                if life / mlife >= .3 then
                    call SetUnitVertexColor(s__Chernobyliss__Cbliss_t[data], R2I(( life / mlife ) * 255.), 255, R2I(( life / mlife ) * 255.), 255)
                else
                    call SetUnitVertexColor(s__Chernobyliss__Cbliss_t[data], R2I(( life / mlife ) * 255.), 130, R2I(( life / mlife ) * 255.), 255)
                endif

            set s__Chernobyliss__Cbliss_dur[data]=s__Chernobyliss__Cbliss_dur[data] - 1. / Chernobyliss__TIMER_INTERVAL
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
            call TimerStart(t, 1. / Chernobyliss__TIMER_INTERVAL, false, function Chernobyliss__Handler)
            set Chernobyliss__CASTER=s__Chernobyliss__Cbliss_cast[data]
            set s__Chernobyliss__Cbliss_x[data]=GetUnitX(s__Chernobyliss__Cbliss_t[data])
            set s__Chernobyliss__Cbliss_y[data]=GetUnitY(s__Chernobyliss__Cbliss_t[data])
            call GroupEnumUnitsInRange(Chernobyliss__GROUP, s__Chernobyliss__Cbliss_x[data], s__Chernobyliss__Cbliss_y[data], Chernobyliss__SPREAD_AOE(lvl), null)
            loop
                set ug=FirstOfGroup(Chernobyliss__GROUP)
                exitwhen ug == null
                if UnitAlive(ug) and GetUnitAbilityLevel(ug, Chernobyliss__SLOW_ID) == 0 and s__Chernobyliss__Cbliss_dur[data] > 1. / Chernobyliss__TIMER_INTERVAL and GetRandomInt(0, 100) <= R2I(Chernobyliss__CHANCE_TO_SPREAD(lvl)) then
                    if ( IsUnitEnemy(( ug ), GetOwningPlayer(Chernobyliss__CASTER)) ) then // INLINED!!
                        set data=s__Chernobyliss__Cbliss__allocate()
                        set s__Chernobyliss__Cbliss_cast[data]=Chernobyliss__CASTER
                        set s__Chernobyliss__Cbliss_t[data]=ug
                        set s__Chernobyliss__Cbliss_x[data]=GetUnitX(ug)
                        set s__Chernobyliss__Cbliss_y[data]=GetUnitY(ug)
                        set s__Chernobyliss__Cbliss_lvl[data]=lvl
                        set s__Chernobyliss__Cbliss_dur[data]=dur
                        set s__Chernobyliss__Cbliss_attach[data]=AddSpecialEffectTarget(Chernobyliss__EFFECT2, ug, Chernobyliss__ATTACH)
                        call DestroyEffect(AddSpecialEffectTarget(Chernobyliss__EFFECT3, ug, Chernobyliss__ATTACH2))

                        call UnitAddAbility(ug, Chernobyliss__SLOW_ID)
                        call SetUnitAbilityLevel(ug, Chernobyliss__SLOW_ID, lvl)
                        
                        set t=(NewTimerEx(0)) // INLINED!! // INLINED!!
                        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
                        call TimerStart(t, 1. / Chernobyliss__TIMER_INTERVAL, false, function Chernobyliss__Handler)
                    endif
                endif
                call GroupRemoveUnit(Chernobyliss__GROUP, ug)
            endloop

        endif
    
        set t=null
        set u=null
        set ug=null
    endfunction
    
        function Chernobyliss__FilterActions takes nothing returns boolean
        local integer data
        local timer t
        local unit u= GetFilterUnit()
        local real x1= Chernobyliss__SPELL_X
        local real y1= Chernobyliss__SPELL_Y
        local real x2= GetUnitX(u)
        local real y2= GetUnitY(u)
        local real a= bj_RADTODEG * Atan2(y2 - y1, x2 - x1)
        local integer lvl= GetUnitAbilityLevel(Chernobyliss__CASTER, Chernobyliss__ABIL_ID)
        
        if UnitAlive(u) then
            if ( IsUnitEnemy(( u ), GetOwningPlayer(Chernobyliss__CASTER)) ) then // INLINED!!
                call M6E(u , ( 190. + ( lvl ) * 10. ) , Chernobyliss__KB_DURATION , a , Chernobyliss__KB_SFX , Chernobyliss__TREE_AOE , Chernobyliss__ALLOW_MOVE , Chernobyliss__CHECK_PATHING) // INLINED!!
                set data=s__Chernobyliss__Cbliss__allocate()
                set s__Chernobyliss__Cbliss_cast[data]=Chernobyliss__CASTER
                set s__Chernobyliss__Cbliss_t[data]=u
                set s__Chernobyliss__Cbliss_x[data]=x2
                set s__Chernobyliss__Cbliss_y[data]=y2
                set s__Chernobyliss__Cbliss_attach[data]=AddSpecialEffectTarget(Chernobyliss__EFFECT2, u, Chernobyliss__ATTACH)
                set s__Chernobyliss__Cbliss_lvl[data]=lvl
                set s__Chernobyliss__Cbliss_dur[data]=( 20. + ( lvl ) * 2. ) // INLINED!!
                
                call DestroyEffect(AddSpecialEffectTarget(Chernobyliss__EFFECT3, u, Chernobyliss__ATTACH2))
                call UnitAddAbility(u, Chernobyliss__SLOW_ID)
                call SetUnitAbilityLevel(u, Chernobyliss__SLOW_ID, lvl)
                
                set t=(NewTimerEx(0)) // INLINED!! // INLINED!!
                call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
                call TimerStart(t, 1. / Chernobyliss__TIMER_INTERVAL, false, function Chernobyliss__Handler)
            endif
        endif
        
        set u=null
        set t=null
        return false
    endfunction

    function Chernobyliss__Actions takes nothing returns nothing
        local real x= GetSpellTargetX()
        local real y= GetSpellTargetY()
        
        call DestroyEffect(AddSpecialEffect(Chernobyliss__EFFECT1, x, y))
        set Chernobyliss__CASTER=GetTriggerUnit()
        set Chernobyliss__SPELL_X=x
        set Chernobyliss__SPELL_Y=y
        call GroupEnumUnitsInRange(Chernobyliss__GROUP, x, y, ( 195. + ( 5. * ( GetUnitAbilityLevel(Chernobyliss__CASTER, Chernobyliss__ABIL_ID) ) ) ), Filter(function Chernobyliss__FilterActions)) // INLINED!!
    endfunction

    


function I5R takes nothing returns nothing
call SetPlayerAllianceStateBJ(Player(10), Player(12), bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(11), Player(13), bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(12), Player(10), bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(13), Player(11), bj_ALLIANCE_ALLIED_VISION)


set DT[1]="|cff00baffCrabs|r"
set DT[2]="|cff00baffGnolls|r"
set DT[3]="|cff00baffCrazed Madman|r"
set DT[4]="|cff00baffBoar Enforcer|r"
set DT[5]="|cff00baffWood Troll|r"
set DT[6]="|cff00baffSatyr Reaver|r"
set DT[7]="|cff00baffBlood Wolf|r"
set DT[8]="|cff00baffEngorged Blood Spider|r"
set DT[9]="|cff00baffDiseased Bear|r"
set DT[10]="|cff00baffFlesh Giant|r"
set DT[11]="|cff00baffFrenetic Demon|r"
set DT[12]="|cff00baffBaby Cubble Bear|r"
set DT[13]="|cff00baffTainted Sluagh|r"
set DT[14]="|cff00baffVampire|r"
set DT[15]="|cff00baffMoss Mey|r"
set DT[16]="|cff00baffRisen Stone|r"
set DT[17]="|cff00baffOgre Gladiator|r"
set DT[18]="|cff00baffBlood Troll Amazoness|r"
set DT[19]="|cff00baffSavage Peccary|r"
set DT[20]="|cff00baffLesser Crystal Dragon|r"
set DT[21]="|cff00baffYvhh la'tami|r"
set DT[22]="|cff00baffBlood Leucro|r"
set DT[23]="|cff00baffFrostwyrm|r"
set DT[24]="|cff00baffDeath Spirit|r"
set DT[25]="|cff00baffFel Rock|r"
set DT[26]="|cff00baffSea King|r"
set DT[27]="|cff00baffSkeletal Royal|r"
set DT[28]="|cff00baffBlood Marbled Angiswaerd|r"
set DT[29]="|cff00baffAdan'f Blood Warrior|r"
set DT[30]="|cff00baffZombie Necros|r"
set DT[31]="|cff00baffAdan'f War Mage|r"
set DT[32]="|cff00baffLun'Shele Deceiver|r"
set DT[33]="|cff00baffDoom Kra'hei|r"
set DT[34]="|cff00baffPoloh'izh Assassin|r"
set DT[35]="|cff00baffMisshapen Gremish'din|r"
set DT[36]="|cff00baffFanciful Aberration|r"
set DT[37]="|cff00baffForsaken Ouroboros|r"
set DT[38]="|cff00baffS'sugi Malchata|r"
set DT[39]="|cff00baffSnaer Hafwa|r"
set DT[40]="|cff00baffS'lai Screamer|r"

set NT[1]="Crabs are peaceful creatures, that generally don't do much. Their commander passively |cffee0000drains|r the mana of nearby heroes."
set NT[2]="Gnolls |cffee0000Leap|r, same deal. Their |cffee0000ranged|r commander can |cffee0000BERSERK|r; gaining maximum attack and movement speed, as well as the ability to |cffee0000climb walls|r. His |cffee0000Backstab|r ability lets him deal |cffee0000double damage|r from behind."
set NT[3]="Crazed Madmen are useless. Their |cffee0000EXTREMELY LONG RANGED commander can attack |cffee0000Multiple Enemies|r. His |cffee0000Trueshot Aura|r passively gives him a |cffee0000MASSIVE DAMAGE BOOST|r."
set NT[4]="Boar Enforcers can |cffee0000Frenzy|r to increase their attack speed. Their commander has a |cffee0000SHORT COOLDOWN REINCARNATION|r, |cffee0000HEALING WAVE|r, |cffee0000spell and damage reduction|r, and |cffee0000BERSERK|r. |cffee0000Lesser Grevious Wounds|r cause his attacks to |cffee0000stack bonus damage on subsequent hits|r, and he has|cffee0000Flat Thorns|r."
set NT[5]="Wood Trolls have a |cffee0000 STRONG STACKABLE SLOW POISON|r. Their leader is able cast |cffee0000Wrath of the Ancients,|r a |cffee0000POWERFUL SUMMONING SPELL|r. |cffee0000KILL SUMMONER FIRST|r. Once the commander is dead, the Wood Trolls lose their Slow Poison."
set NT[6]="Satyr Reavers are |cffee0000permanently invisible|r while their commander is alive, so |cffee0000GET WARDS|r. They also all posses |cffee0000BACKSTAB|r. Their commander has an |cffee0000armor-reducing attack, Vampiric Aura|r, and |cffee0000BERSERK|r."
set NT[7]="Blood Wolves have |cffee0000Bloodlust|r. Their commander has |cffee0000Feedback, Vampiric Aura, BERSERK|r,and |cffee0000BLOOD SCENT|r, which is a |cffee0000MASSIVE ATTACK SPEED AURA|r. He also has |cffee0000Critical Wound|r, for deadly crits and |cffee0000Feedback|r to combust your mana."
set NT[8]="Engorged Blood Spiders can |cffee0000LEAP|r and |cffee0000TOSS EGGS AT YOU|r. Eggs will |cffee0000HATCH INTO ADDITIONAL SPIDERS|R. Their commander shoots sticky strands of |cffee0000Web|r at you, that |cffee0000GRAB, TOSS, DAMAGE, and SLOW|r you if you get hit."
set NT[9]="Diseased Bears occasionally |cffee0000knockback enemies|r in an area. They have |cffee0000Evasion|r and |cffee0000Disease Cloud|r, and their Commander has |cffee000080% Evasion|r and |cffee000020% Max Health Regeneration|r. It also has |cffee0000Endurance Aura|r and |cffee0000Flat Thorns|r."
set NT[10]="Flesh Giants have |cffee0000Leap|r. Their commander also has|cffee0000METEOR IMPACT|, which deals |cffee0000physical area damage|r and |cffee0000knockback|r upon landing on an enemy. He also |cffee0000KNOCKS YOU BACK|r with every attack. He also has a |cffee0000MASSIVE ARMOR AURA|r and |cffee0000HEALING AURA|r,plus |cffee0000damage reduction against attacks|r, |cffee000090% Magic and Ranged attack resistance|r, and |cffee00005% Maximum Health Regeneration|r. He is protected by an |cffee0000Evil Angel|r, which gives a chance to survive lethal damage."
set NT[11]="Frenetic Demons |cffee0000cleave|r. Their commander has |cffee0000Blood Scent|r and |cffee0000Vampiric Aura|r. It also has |cffee0000MINDRIP|r, which is a |cffee000099999 Mana Burn|r. It also has |cffee0000REINCARNATION|r, and has an |cffee0000EVIL ANGEL|r."
set NT[12]="Baby Cubble Bears are all protected by |cffee0000Guardian Angels|r, which are exactly like Evil Angels. The Commander also has a |cffee0000Healing Aura|r and |cffee0000Grevious Wounds|r."
set NT[13]="Tainted Sluaghs ranged units with a |cffee0000MASSIVE CRIT|r. Their commander has |cffee0000Multishot|r and is able to |cffee0000SEVERELY SLOW YOU|r with |cffee0000VILE POISON."
set NT[14]="Vampires have natural |cffee0000Lifesteal|r and |cffee0000Bash|r. Their commander |cffee0000ATTACKS SUPER FAST|r due to his |cffee0000Overpower|r. He also has |cffee0000Vampiric Aura, Bash, and |cffee0000Grevious Wounds|r."
set NT[15]="Moss Meys have |cffee0000Leap|r, |cffee0000Backstab|r, and |cffee0000Slow Poison|r.. Their commander |cffee0000drains mana from a CRAZY LONG DISTANCE|r. It also has |cffee000080% Evasion|r and |cffee0000Backstab|r."
set NT[16]="Risen Stones have |cffee0000high magic resistance|r while their commander is alive. They also have |cffee0000ABOLISH MAGIC|r. In addition to a |cffee0000HEALING AND ARMOR AURA|r, their Commander has |cffee000090% Ranged and Spell Reduction|r, and |cffee0000knocks back on attack|r."
set NT[17]="Ogre Gladiators have |cffee0000Pulverize|r, letting them deal |cffee0000bonus damage that ignores armor|r. Their Commander has |cffee0000Command and Endurance Auras|r, has a |cffee0000Guardian Angel|r, and never misses with his |cffee0000SPIRIT STRIKE|r, whhich also grants him a 1.4x crit on his attacks."
set NT[18]="Blood Troll Amazonesses have |cffee0000 BERSERK|r and |cffee0000BASH|r. In addtion, they |cffee0000SUMMON BLOOD TOTEMS|r that need to be killed IMMEDIATELY or BAD THINGS WILL HAPPEN. Their commander also has |cffee0000Critical Wound|r."
set NT[19]="Savage Peccaries have |cffee0000Evasion|r, |cffee0000Spirit Strike|r, and |cffee0000Charge|r. Their leader has |cffee0000ARMOR CRUSH|r which temporarily nullifies your armor, and |cffee0000Berserk|r, as well as |cffee0000Vampiric Aura|r and |cffee000090% Ranged and Spell Reduction|r."
set NT[20]="Lesser Crystal Dragons have a short ranged |cffee0000TRIPLE STRIKE|r attack that can encase you in Crystal, and |cffee0000Evasion|r. Their commander has |cffee0000High Evasion|r and |cffee0000Corruption Aura|r, which decreases the armor of nearby enemy units. Also they all |cffee0000LEAP|r."
set NT[21]="Yvhh la'tamis can |cffee0000stun with their Chaos Bolt|r and cast |cffee0000Rain of Fire|r. Their commander has a |cffee0000healing aura and a mana regeneration aura|r, as well as a devastating |cffee0000Glacial Aura|r, that severely slows nearby enemies. They also all have |cffee0000Cleave|r."
set NT[22]="Blood Leucros have |cffee0000Critical Strike|r and |cffee0000Lesser Berserk|r, and their commander has |cffee0000ARMOR CRUSH|r, |cffee0000BERSERK|r, and |cffee0000Feedback|r. It also has |cffee0000Blood Scent|r and Vampiric Aura."
set NT[23]="Frost Wyrms have |cffee0000Curse, making your attacks miss a lot|r. Their leader |cffee0000Mind Rip|r and |cffee0000high Evasion|r."
set NT[24]="Death Spirits have |Frost Attack|r, |cffee0000Purge|r and |cffee0000Mana Burn|r. Their leader has |cffee0000Berserk|r and |cffee0000Corruption Aura|r. They also all have |cffee00005% Max Health Regeneration|r."
set NT[25]="Fel Rocks have |cffee0000METEOR IMPACT|r and |cffee0000possess 80% Ranged and Spell Reduction|r. Their commander has |cffee0000Spell and Ranged Attack Immunity|r, |cffee0000Guardian Angel|r, and his blows can |cffee0000knock you back|r."
set NT[26]="Sea Kings are |cffee0000PERMANENTLY INVISIBLE|r, have |cffee0000Pulverize|r, and |cffee0000Grevious Wounds|r. Their leader has spell damage reduction."
set NT[27]="Skeletal Royals have |cffee0000Feedback|r and Evasion. Their ranged commander has |cffee0000Curse|r, |cffee0000ARMOR CRUSH|r, |cffee0000Backstab|r, and |cffee0000Leap|r."
set NT[28]="Blood Marbled Angiswaerds have |cffee0000NASTY THORNS|r, as well as |cffee0000possessing 80% Ranged and Spell Reduction|r. However, if their commander is slain, they will lose their thorns. Their commander can |cffee0000can Deflect Projectiles|r."
set NT[29]="Adan'f Blood Warriors have a |cffee0000HIGHLY DAMAGING STACKABLE POISON STING|r. Their Commander has |cffee0000Armor Crush|r, |cffee0000Berserk, |cffee0000Evil Angel|r, and |cffee0000Mind Rip|r."
set NT[30]="Zombie Nomads are the precursors to your demise, with |cffee0000Vile Poison |r and |cffee0000Leap|r. Their commander has an |cffee0000Evil Angel|r."
set NT[31]="Adan'f War Mages can |cffee0000Cripple|r you severely, and cast cast |cffee0000Death Bolt|r, dealing |cffee0000MASSIVE DEATH DAMAGE|r. Their Commander has |cffee0000Curse|r, |cffee0000Mind Rip|r, can cast |cffee0000Unholy Frenzy|r, and will nuke you down with his |cffee0000Fel Bolt|r."
set NT[32]="Lun'Shele Deceivers have a ranged |cffee0000Slow Poison. Their their commander has various attack speed buffs and auras, in addition to |cffee0000Berserk|r and |cffee0000Shattering Arrows|r, which pernamently reduces the armor of units struck by her. When slain, you will recover your lost armor points."
set NT[33]="Doom Kra'hei have very high |cffee0000Spell Reduction|r and |cffee0000Spirit Strike|r. Their leader also has the Endurance and Command Auras, as well as the feared |cffee0000Armor Crush|r. In addition, he is protected by a |cffee0000Guardian angel|r."
set NT[34]="Poloh'izh are permanently invisible, possess Evasion, and have |cffee0000Backstab|r and |cffee0000Leap|r. Their Commander can |cffee0000Mind Rip|r and |cffee0000Curse|r you."
set NT[35]="Misshapen Germish'din have nothing special. Their leader possesses |cffee0000Blood Scent|r and |cffee0000Vampiric Aura|r."
set NT[36]="Fanciful Aberrations have |cffee0000Spell Damage Reduction|r and |cffee0000Thorns|r, as well as |cffee000080% Evasion|r. Their commander has an armor-reducing attack and |cffee00005% Max Health Regeneration|r."
set NT[37]="Forsaken Ouroboros high natural regeneration, as well as |cffee0000Spell Damage Reduction|r, |cffee0000Life Steal,|r and |cffee0000Spirit Strike. Their commander has |cffee0000Armor Crush, Blood Scent, Critical Wound, an area of effect lightning attack|r."
set NT[38]="S'sugi Malchata have a |cffee0000stackable poison|r attack and |cffee0000Leap|r."
set NT[39]="What? Still not dead yet? Here, have an |cffee0000Armor Crushing|r Snaer Hafwa commander! Her minions possess a slowing attack and |cffee0000Mind Rip|r."
set NT[40]="S'lai Screamers are your end. They are all protected by |cffee0000Evil Angels|r, and possess |cffee0000Armor Crush|r, |cffee0000Bash|r, |cffee0000Cripple|r, and |cffee0000Animate Dead|r."

endfunction
function I7R takes nothing returns nothing
call SetPlayerAbilityAvailableBJ(false, 'A05G', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A05Y', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A096', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A0GA', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A0H8', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A0HW', GetEnumPlayer())
call SetPlayerAbilityAvailableBJ(false, 'A0NT', GetEnumPlayer())
endfunction
function I8R takes nothing returns nothing
call ForForce(bj_FORCE_ALL_PLAYERS, function I7R)
call SetPlayerAbilityAvailableBJ(false, 'A0H8', Player(PLAYER_NEUTRAL_PASSIVE))

call RemoveUnit(X6V)
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function AVR takes nothing returns nothing
//call SetUnitVertexColorBJ(XVV,10.,10.,10.,0)
call SetUnitVertexColorBJ(OXV, 10., 10., 10., 0)
endfunction

function AAR takes nothing returns boolean
local integer D0E=B3E
call GroupClear(EYE[D0E])
return true
endfunction
function ANR takes nothing returns boolean
local integer D0E=B3E
set RTV[RUV[D0E]]=RTV[D0E]
set RUV[RTV[D0E]]=RUV[D0E]
call GCE(D0E)
return true
endfunction
function ABR takes nothing returns boolean
local integer D0E=B3E
local integer i=0
call ReleaseTimer(TOV[D0E])
call GroupRemoveUnit(KC, SQV[D0E])
loop
exitwhen i == TRV[D0E]
call YLE(SWV[SYV[D0E] + i])
set i=i + 1
endloop
return true
endfunction
function ACR takes nothing returns boolean
local integer D0E=B3E
set SJV[SKV[D0E]]=SJV[D0E]
set SKV[SJV[D0E]]=SKV[D0E]
return true
endfunction
function ADR takes nothing returns boolean
local integer D0E=B3E
set SAV[SNV[D0E]]=SAV[D0E]
set SNV[SAV[D0E]]=SNV[D0E]
return true
endfunction
function AFR takes nothing returns boolean
local integer D0E=B3E
set Q6V[Q7V[D0E]]=Q6V[D0E]
set Q7V[Q6V[D0E]]=Q7V[D0E]
return true
endfunction
function AGR takes nothing returns boolean
local integer D0E=B3E
set QZV[Q_V[D0E]]=QZV[D0E]
set Q_V[QZV[D0E]]=Q_V[D0E]
return true
endfunction
function AHR takes nothing returns boolean
local integer D0E=B3E
set QMV[QPV[D0E]]=QMV[D0E]
set QPV[QMV[D0E]]=QPV[D0E]
return true
endfunction
function AJR takes nothing returns boolean
local integer D0E=B3E
set QCV[QDV[D0E]]=QCV[D0E]
set QDV[QCV[D0E]]=QDV[D0E]
return true
endfunction
function AKR takes nothing returns boolean
local integer D0E=B3E
set QEV[QXV[D0E]]=QEV[D0E]
set QXV[QEV[D0E]]=QXV[D0E]
return true
endfunction
function ALR takes nothing returns boolean
local integer D0E=B3E
set P3V[P4V[D0E]]=P3V[D0E]
set P4V[P3V[D0E]]=P4V[D0E]
return true
endfunction
function AMR takes nothing returns boolean
local integer D0E=B3E
set MBV[MCV[D0E]]=MBV[D0E]
set MCV[MBV[D0E]]=MCV[D0E]
return true
endfunction
function APR takes nothing returns boolean
local integer D0E=B3E
set L4V[L5V[D0E]]=L4V[D0E]
set L5V[L4V[D0E]]=L5V[D0E]
return true
endfunction
function AQR takes nothing returns boolean
local integer D0E=B3E
set R0V[D0E]=null
if R7V[D0E] != null then
call DestroyEffect(R7V[D0E])
set R7V[D0E]=null
endif
set W[0]=false
set W[1]=false
return true
endfunction
function ASR takes nothing returns boolean
local integer D0E=B3E
local integer JFE=B_E
local integer i=0
local integer j=0
if JFE != 0 and IsUnitInGroup(HFV[JFE], JWV[D0E]) then
call GroupRemoveUnit(JWV[D0E], HFV[JFE])
set JUV[D0E]=JUV[D0E] - 1
set i=LoadInteger(ZA, ( JFE ), - 1) - 1
set j=LoadInteger(VN, ( JFE ), D0E)
call SaveInteger(ZA, ( JFE ), - 1, i)
call SaveInteger(ZA, ( JFE ), j, LoadInteger(ZA, ( JFE ), i))
call SaveInteger(VN, ( JFE ), LoadInteger(ZA, ( JFE ), j), j)
if i < 1 then
call FlushChildHashtable(ZA, ( JFE ))
call FlushChildHashtable(VN, ( JFE ))
endif
set B4E=true
return true
endif
set B4E=false
return true
endfunction
function ATR takes nothing returns boolean
local integer D0E=B3E
local unit u=null
loop
set u=FirstOfGroup(JWV[D0E])
exitwhen u == null
call XKX(D0E , GDV[( GetUnitUserData(( ( u ) )) )])
endloop
call GroupClear(JWV[D0E])
set JUV[D0E]=0
set u=null
return true
endfunction
function AUR takes nothing returns boolean
local integer D0E=B3E
set B5E=( GWV[D0E] )
return true
endfunction
function AWR takes nothing returns boolean
local integer D0E=B3E
if GTV[GWV[D0E]] == D0E then
call JPE(GWV[D0E])
elseif GUV[GWV[D0E]] == D0E then
call JME(GWV[D0E])
else
set GTV[GUV[D0E]]=GTV[D0E]
set GUV[GTV[D0E]]=GUV[D0E]
set GWV[GWV[D0E]]=( GWV[GWV[D0E]] ) - 1
set GTV[D0E]=0
set GUV[D0E]=0
set GWV[D0E]=0
endif
set B5E=D0E
return true
endfunction
function AYR takes nothing returns boolean
local integer D0E=B3E
local integer AZR=GUV[D0E]
set GUV[D0E]=GUV[GUV[D0E]]
set GTV[GUV[D0E]]=0
set GWV[D0E]=( GWV[D0E] ) - 1
set GTV[AZR]=0
set GUV[AZR]=0
set GWV[AZR]=0
if GTV[D0E] == AZR then
set GTV[D0E]=0
endif
set B5E=AZR
return true
endfunction
function A_R takes nothing returns boolean
local integer D0E=B3E
local integer A0R=GTV[D0E]
set GTV[D0E]=GTV[GTV[D0E]]
set GUV[GTV[D0E]]=0
set GWV[D0E]=( GWV[D0E] ) - 1
set GTV[A0R]=0
set GUV[A0R]=0
set GWV[A0R]=0
if GUV[D0E] == A0R then
set GUV[D0E]=0
endif
set B5E=A0R
return true
endfunction
function A1R takes nothing returns boolean
local integer D0E=B3E
local integer i=0
call LHE(HAV[D0E] , D0E)
if HaveSavedInteger(ZA, D0E, - 1) then
set i=LoadInteger(ZA, D0E, - 1) - 1
loop
exitwhen i < 0
call JDE(( LoadInteger(ZA, D0E, i) ) , D0E)
set i=i - 1
endloop
call FlushChildHashtable(ZA, D0E)
call FlushChildHashtable(VN, D0E)
endif
if HVV[D0E] then
call SetUnitAnimationByIndex(HFV[D0E], 90)
endif
if H_V[D0E] != null then
call DestroyEffect(H_V[D0E])
endif
if G8V[D0E] then
call V3X(HFV[D0E] , G6V[D0E])
else
call RemoveUnit(HFV[D0E])
endif
if HaveSavedInteger(ZA, 0, ( D0E )) then
call RemoveSavedInteger(ZA, 0, ( D0E ))
endif
call TZE(JVV[D0E])
set JVV[D0E]=null
if ( JBV[( D0E )] ) then
call ELX(D0E)
endif
set GDV[( GetUnitUserData(( ( HFV[D0E] ) )) )]=0
set GZV[D0E]=null
set HFV[D0E]=null
set H_V[D0E]=null
set H0V[D0E]=""
call JUE(D0E)
return true
endfunction
function A2R takes nothing returns boolean
local integer D0E=B3E
set JHV[JJV[D0E]]=JHV[D0E]
set JJV[JHV[D0E]]=JJV[D0E]
return true
endfunction
function A3R takes nothing returns boolean
local integer D0E=B3E
set GLV[GMV[D0E]]=GLV[D0E]
set GMV[GLV[D0E]]=GMV[D0E]
return true
endfunction
function A4R takes nothing returns boolean
set B4E=( GetUnitTypeId(( BYE )) == 'e001' )
return true
endfunction
function A5R takes nothing returns boolean
local integer D0E=B3E
set GDV[D0E]=0
return true
endfunction
function A6R takes nothing returns boolean
local integer D0E=B3E
set GDV[D0E]=0
return true
endfunction
function A7R takes nothing returns boolean
local integer D0E=B3E
call DZE(D0E , false)
call DWE(D0E , .0)
call DTE(D0E , true)
return true
endfunction
function A8R takes nothing returns boolean
local integer D0E=B3E
if GetUnitAbilityLevel(( YX[( ( D0E ) )] ), 'Aloc') != 1 and GetUnitTypeId(( YX[( ( D0E ) )] )) != 'e005' and GetOwningPlayer(( YX[( ( D0E ) )] )) != Player(PLAYER_NEUTRAL_PASSIVE) then
set D1V[D0E]=CreateTrigger()
call TriggerAddCondition(D1V[D0E], D0V)
call TriggerRegisterUnitEvent(D1V[D0E], ( YX[( ( D0E ) )] ), EVENT_UNIT_DAMAGED)
endif
return true
endfunction
function A9R takes nothing returns boolean
local integer D0E=B3E
if D1V[D0E] != null then
call DestroyTrigger(D1V[D0E])
endif
return true
endfunction
function NVR takes nothing returns boolean
set D0V=Condition(function YPE)
return true
endfunction
function NER takes nothing returns boolean
local integer D0E=B3E
if ( DZV[D0E] != 0 ) then
call UnitRemoveAbility(DPV[D0E], DZV[D0E])
endif
if ( DQV[D0E] != null ) then
call DestroyEffect(DQV[D0E])
set DQV[D0E]=null
endif
if ( DGV == 8190 ) then
call TimerStart(OI, 0, false, function YAE)
call ExplodeUnitBJ(DPV[D0E])
else
set DDV[DGV]=DPV[D0E]
set DFV[DGV]=TimerGetElapsed(RI) + 4.
set DGV=( ( DGV ) + 1 )
if ( DGV == 1 ) then
call TimerStart(OI, 4., false, function YAE)
endif
call SetUnitOwner(DPV[D0E], Player(PLAYER_NEUTRAL_PASSIVE), false)
endif
set DPV[D0E]=null
return true
endfunction
function NXR takes nothing returns boolean
local integer D0E=B3E
local integer i=0
loop
call WGE(D0E , DEV[DXV[D0E] + i])
set i=i + 1
exitwhen i == 6
endloop
call WHE(D0E , DOV[D0E])
set DOV[D0E]=0
return true
endfunction
function NOR takes nothing returns boolean
local integer D0E=B3E
call FlushChildHashtable(CX, ( ( D0E ) ))
return true
endfunction
function NRR takes nothing returns boolean
local integer D0E=B3E
local real x=BUE
set A6V[D0E]=x
call SetUnitX(A3V[D0E], x)
set A4V[( D0E )]=.0
return true
endfunction
function NIR takes nothing returns boolean
local integer D0E=B3E
local real y=BUE
set A7V[D0E]=y
call SetUnitY(A3V[D0E], y)
set A4V[( D0E )]=.0
return true
endfunction
function NAR takes nothing returns boolean
local integer D0E=B3E
local real K0E=BUE
local integer z=R2I(K0E * .7)
loop
exitwhen z >= 0 and z <= 252
if z > 252 then
set z=z - 252
else
set z=z + 252
endif
endloop
call SetUnitAnimationByIndex(A3V[D0E], z)
set A4V[( D0E )]=.0
return true
endfunction
function NNR takes nothing returns boolean
local integer D0E=B3E
local real K2E=BUE
set NVV[D0E]=K2E
call SetUnitTurnSpeed(A3V[D0E], K2E)
set A4V[( D0E )]=.0
return true
endfunction
function NBR takes nothing returns boolean
local integer D0E=B3E
set ACV[D0E]=null
set AJV[D0E]=null
call RemoveLocation(AJV[D0E])
return true
endfunction
function NCR takes nothing returns boolean
local integer J7E=LRE()
set FKV[J7E]=P8E(.0 , .0 , .0)
set FLV[J7E]=P8E(.0 , .0 , .0)
set FMV[J7E]=P8E(.0 , .0 , .0)
set FPV[J7E]=P8E(.0 , .0 , .0)
call DTE(( FKV[J7E] ) , false)
call DTE(( FLV[J7E] ) , false)
call DTE(( FPV[J7E] ) , false)
call DTE(( FMV[J7E] ) , false)
set F4V[J7E]=true
call J9E(J7E)
if J7E == F7V then
set F7V=F7V + 1
endif
set B5E=J7E
return true
endfunction
function NDR takes nothing returns boolean
set B4E=UKE(B3E , BYE)
return true
endfunction
function NFR takes nothing returns boolean
local integer D0E=B3E
set CWV[CYV[D0E]]=CWV[D0E]
set CYV[CWV[D0E]]=CYV[D0E]
return true
endfunction
function NGR takes nothing returns boolean
local integer D0E=B3E
set KQV[D0E]=false
set KPV[D0E]=false
set KMV[D0E]=false
set KJV[D0E]=""
set KKV[D0E]=""
set B3E=D0E
return true
endfunction
function NHR takes nothing returns boolean
local integer D0E=B3E
set B4E=true
return true
endfunction
function NJR takes nothing returns boolean
local integer D0E=B3E
return true
endfunction
function NKR takes nothing returns boolean
local integer D0E=B3E
set KTV=KDV[D0E]
set KUV=Z5E(D0E)
set KWV=KBV[D0E] - KCV[D0E]
set KZV=D0E
call LBE(D0E)
if KQV[D0E] then
call R2X(KSV[D0E] , Z5E(D0E) , KKV[D0E])
set KSV[D0E]=Z5E(D0E)
endif
if KDV[D0E] == Z5E(D0E) and KPV[D0E] then
call IVX(D0E)
return true
endif
if not KMV[D0E] then
call SaveInteger(CX, ( ( KLV[D0E] ) ), GetHandleId(( Z5E(D0E) )), ( D0E ))
endif
set KCV[D0E]=KCV[D0E] - 1
if KCV[D0E] == 0 then
if KPV[D0E] then
call Z8E(D0E , KTV)
return true
else
call IVX(D0E)
return true
endif
endif
call GroupEnumUnitsInRange(KYV, GetUnitX(Z5E(D0E)), GetUnitY(Z5E(D0E)), KFV[D0E], Condition(function IEX))
set KUV=GroupPickRandomUnit(KYV)
if KUV == null then
if KPV[D0E] then
set KUV=KTV
else
call IVX(D0E)
return true
endif
endif
call Z8E(D0E , KUV)
call GroupClear(KYV)
return true
endfunction
function NLR takes nothing returns boolean
local integer D0E=B3E
set B4E=IsUnitEnemy(KUV, GetOwningPlayer(KTV)) and GetWidgetLife(KUV) > .405 and IsUnitAliveBJ(KUV)
return true
endfunction
function NMR takes nothing returns boolean
local integer D0E=B3E
if IsEyeRat[GetUnitUserData(LC[( 1 + GetPlayerId(GetOwningPlayer(KTV)) )])] then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Banana.mdx", KUV, "chest"))
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Void.mdx", KUV, "chest"))
endif
call UnitDamageTargetEx(KTV , KUV , A6E[YYV[D0E]] + ( GetHeroAgi(LC[( 1 + GetPlayerId(GetOwningPlayer(KTV)) )], true) * GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(KTV)) )], 'A00D') * .12 * GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(KTV)) )], 'A00D') ) , true , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
return true
endfunction
function NPR takes nothing returns boolean
local integer D0E=B3E
set B4E=GetUnitState(KUV, UNIT_STATE_MANA) > .0 and GetWidgetLife(KUV) > .405 and IsUnitEnemy(KUV, GetOwningPlayer(KTV)) and not IsUnitType(KUV, UNIT_TYPE_MAGIC_IMMUNE) and IsUnitType(KUV, UNIT_TYPE_HERO) and not ( GetUnitAbilityLevel(( KUV ), 'Avul') > 0 )
return true
endfunction
function NQR takes nothing returns boolean
local integer D0E=B3E
local real BFX=GetUnitState(KUV, UNIT_STATE_MANA)
local integer ELO=GetUnitAbilityLevel(KTV, 'A00J') - 1
local real NSR=A5E[ELO] - A5E[ELO] * ( 1 - Pow(1 - .0, KWV) )
local unit u
if NSR > BFX then
set NSR=BFX
endif
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Energy Release.mdx", KUV, "origin"))
set u=CreateUnit(GetOwningPlayer(KTV), 'h007', 0., 0., 0.)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitAddAbility(u, 'A01F')
call IssueTargetOrder(u, "manaburn", KUV)
//call Q9E(KUV,R2I(NSR))
//call UnitDamageTarget(KTV,KUV,NSR,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
//call SetUnitState(KUV,UNIT_STATE_MANA,BFX-NSR)

set u=null
return true
endfunction
function NTR takes nothing returns boolean
local integer D0E=B3E
set B4E=IsUnitEnemy(KUV, GetOwningPlayer(KTV)) and GetWidgetLife(KUV) > .405 and IsUnitType(KUV, UNIT_TYPE_HERO) and not ( GetUnitAbilityLevel(( KUV ), 'Avul') > 0 ) and not IsUnitType(KUV, UNIT_TYPE_MAGIC_IMMUNE)
return true
endfunction
function NUR takes nothing returns boolean
local integer D0E=B3E
local real BFX=GetUnitState(KUV, UNIT_STATE_MANA)
local real NSR=GetUnitState(KUV, UNIT_STATE_MANA) * .5
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Energy Release.mdx", KUV, "origin"))
call SetUnitState(KUV, UNIT_STATE_MANA, BFX - NSR)
call Q9E(KUV , R2I(NSR))
set YUV[D0E]=YUV[D0E] + NSR
return true
endfunction
function NWR takes nothing returns boolean
call PCE(B0E , B_E)
return true
endfunction
function NYR takes nothing returns boolean
call T0E(B1E)
return true
endfunction
function NZR takes nothing returns boolean
call OOX(B_E , BYE)
return true
endfunction
function N_R takes nothing returns boolean
local integer E3X=MA
local integer TBE=( PA )
if IsUnitEnemy(GZV[E3X], GetOwningPlayer(GZV[TBE])) then
set G5V[E3X]=.5
call SetUnitVertexColor(HFV[E3X], 25, 100, 150, 255)
endif
return true
endfunction
function N0R takes nothing returns boolean
local integer p=B_E
call XQX(KA , HHV[p] , HJV[p] , HKV[p] , 125. , p , ( 1 ))
return true
endfunction

function N0R3 takes nothing returns boolean
local unit u= GetFilterUnit()
local unit d

if IsUnitEnemy(u, GetOwningPlayer(DEMONIC_SINGULARITY_CASTER)) and UnitAlive(u) then

call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\DarknessBomb.mdx", u, "chest"))

call UnitDamageTargetEx(DEMONIC_SINGULARITY_CASTER , ( u ) , DEMONIC_SINGULARITY_DAMAGE , false , false , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)

set d=CreateUnit(GetOwningPlayer(DEMONIC_SINGULARITY_CASTER), 'h007', GetUnitX(u), GetUnitY(u), 0.)


call UnitAddAbility(d, 'A0NB')
call IssueTargetOrderById(d, 852095, u)
call UnitApplyTimedLife(d, 'BTLF', 1.)

endif

set d=null
set u=null
return false
endfunction

function N0R2 takes nothing returns boolean
local integer p=B_E
local effect fx= AddSpecialEffect("war3mapImported\\Nether Blast IV.mdx", HHV[p], HJV[p])
call BlzSetSpecialEffectScale(fx, 2.)
call BlzSetSpecialEffectZ(fx, 300.)
call DestroyEffect(fx)

//call BJDebugMsg(GetUnitName(GZV[p]))

//call BJDebugMsg(R2S(((G3V[p])*64.)))

set DEMONIC_SINGULARITY_CASTER=GZV[p]
set DEMONIC_SINGULARITY_DAMAGE=( ( G3V[p] ) * 256. )
call GroupEnumUnitsInRange(DEMONIC_SINGULARITY_GROUP, HHV[p], HJV[p], 325., Filter(function N0R3))

call EHX(p)

set fx=null
return true
endfunction
function N1R takes nothing returns boolean
call REX(B_E , BYE)
return true
endfunction
function N2R takes nothing returns boolean
call RXX(B_E , BYE)
return true
endfunction
function N3R takes nothing returns boolean
local integer p=B_E
call EHX(p)
return true
endfunction
function N4R takes nothing returns boolean
local integer p=B_E
return true
endfunction
function N5R takes nothing returns boolean
local integer p=B_E
return true
endfunction
function N6R takes nothing returns boolean
local integer p=( MA )
if HEV[p] then
call EDX(p)
endif
return true
endfunction
function N7R takes nothing returns boolean
call RMX(B_E , BYE)
return true
endfunction
function N8R takes nothing returns boolean
call RYX(B_E , BYE)
return true
endfunction
function N9R takes nothing returns boolean
call IRX(B_E , BYE)
return true
endfunction
function BVR takes nothing returns boolean
local integer RPX=B_E
call EHX(RPX)
return true
endfunction
function BER takes nothing returns boolean
local integer RPX=B_E
local integer XSX=( ( LoadInteger(ZA, 0, ( ( RPX ) )) ) )
local integer p=0
local integer i=0
local integer ri
local real ps=1000.
local real ss=1.
local real x=0
local real y=0
local real a=0

loop
exitwhen i == ZN
set x=K2V[XSX] + GetRandomReal(.0, 200.) * Cos(GetRandomReal(.0, bj_PI * 2.))
set y=K3V[XSX] + GetRandomReal(.0, 200.) * Sin(GetRandomReal(.0, bj_PI * 2.))
set a=Atan2(y - HJV[RPX], x - HHV[RPX])
set p=XAX(HHV[RPX] , HJV[RPX] , HKV[RPX] , a)
set GZV[p]=GZV[RPX]
set G_V[p]=G_V[RPX]
set ri=GetRandomInt(0, 100)
if ri <= 20 then //lightning
call V9X(p , "war3mapImported\\LightningArrow1.mdx")
set ps=1250.
set ss=2.25
elseif ri > 20 and ri <= 40 then
call V9X(p , "Abilities\\Weapons\\FlamingArrow\\FlamingArrowMissile.mdl")
set ss=1.75
elseif ri > 40 and ri <= 60 then
call V9X(p , "Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdl")
set ps=850.
set ss=1.75
elseif ri > 60 and ri <= 80 then
call V9X(p , "war3mapImported\\CentaurArcherMissile.mdx")
set ss=1.75
elseif ri > 80 and ri <= 100 then
call V9X(p , "war3mapImported\\s_Enchanted Arrow.mdx")
set ss=1.5
endif
set G3V[p]=50.
call V8X(p , ss)
set G6V[p]=5.
set G1V[p]=80.
set G8V[p]=true
set HVV[p]=true
set HOV[p]=true
set HCV[p]=( 5 )
set HBV[p]=( 5 )
call XIX(p , x , y , .0 , ps * .75 , .1)
set i=i + 1
endloop
call JAE(XSX)
call EHX(RPX)
return true
endfunction
function BXR takes nothing returns boolean
call IBX(B_E , BYE)
return true
endfunction
function BOR takes nothing returns boolean
local integer RPX=B_E
call EHX(RPX)
return true
endfunction
function BRR takes nothing returns boolean
local integer RPX=B_E
local unit u
set u=CreateUnit(GetOwningPlayer(GZV[RPX]), 'h007', HHV[RPX], HJV[RPX], .0)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitAddAbility(u, 'A03I')
call SetUnitAbilityLevel(u, 'A03I', GetUnitAbilityLevel(GZV[RPX], 'A03M'))
call IssueTargetOrderById(u, 852095, ( HZV[( RPX )] ))
call EHX(RPX)
set u=null
return true
endfunction
function BIR takes nothing returns boolean
call IQX(B_E , BYE)
return true
endfunction
function BAR takes nothing returns boolean
local integer RPX=B_E
local unit u2=GZV[RPX]
local real x=HHV[RPX]
local real y=HJV[RPX]
call EHX(RPX)
set NB=u2
call GroupEnumUnitsInRange(AB, x, y, 250. + ( 10. * I2R(GetUnitAbilityLevel(u2, 'A017')) ), Filter(function IWX))
call DestroyEffect(AddSpecialEffect("war3mapImported\\FireNova.mdx", x, y))
set u2=null
return true
endfunction
function BNR takes nothing returns boolean
call I0X(B_E , BYE)
return true
endfunction
function BBR takes nothing returns boolean
call I4X(B_E , BYE)
return true
endfunction
function BCR takes nothing returns boolean
local integer RPX=B_E
call EHX(RPX)
return true
endfunction
function BDR takes nothing returns boolean
call AEX(B_E , BYE)
return true
endfunction
function BFR takes nothing returns boolean
local integer p=B_E
//call EHX(p)
return true
endfunction
function BGR takes nothing returns boolean
call AXX(B_E , BZE)
return true
endfunction
function BHR takes nothing returns boolean
local integer E3X=MA
local integer TBE=( PA )
if GZV[E3X] != GZV[TBE] then
call ECX(E3X , HHV[E3X] + ( ( 600. * 2.75 ) * .03125 ) * Cos(EOX(TBE)) , HJV[E3X] + ( ( 600. * 2.75 ) * .03125 ) * Sin(EOX(TBE)) , HKV[E3X] , true)
endif
return true
endfunction
function BJR takes nothing returns boolean
local integer p=B_E
call XQX(KA , HHV[p] , HJV[p] , HKV[p] , 150. , p , ( 3 ))
return true
endfunction
function BKR takes nothing returns boolean
local integer RPX=B_E
local location BLR=Location(HHV[RPX], HJV[RPX])
if JFV[RPX] then
call DestroyEffect(L8E("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl" , HHV[RPX] , HJV[RPX] , HKV[RPX]))
call OTX(GZV[RPX] , BLR , G3V[RPX] , 180. , DAMAGE_TYPE_NORMAL , ATTACK_TYPE_NORMAL , false)
else
call EHX(RPX)
endif
call RemoveLocation(BLR)
set BLR=null
return true
endfunction
function BMR takes nothing returns boolean
call AGX(B_E , BYE)
return true
endfunction
function BPR takes nothing returns boolean
local integer RPX=B_E
call EHX(RPX)
return true
endfunction
function BQR takes nothing returns boolean
local integer RPX=B_E
return true
endfunction
function BSR takes nothing returns boolean
call APX(B_E , BYE)
return true
endfunction
function BTR takes nothing returns boolean
call AZX(B_E , BYE)
return true
endfunction
function BUR takes nothing returns boolean
call A2X(B_E , BYE)
return true
endfunction
function BWR takes nothing returns boolean
call A6X(B_E , BYE)
return true
endfunction
function BYR takes nothing returns boolean
call NVX(B_E , BYE)
return true
endfunction
function BZR takes nothing returns boolean
local integer RPX=B_E
call EHX(RPX)
return true
endfunction
function B_R takes nothing returns boolean
call NEX(B_E , BZE)
return true
endfunction
function B0R takes nothing returns boolean
local integer RPX=B_E
if not EJX(RPX , ( HZV[( RPX )] )) and IsUnitInRangeXY(( HZV[( RPX )] ), HHV[RPX], HJV[RPX], G1V[RPX]) then
call NVX(RPX , ( HZV[( RPX )] ))
endif
return true
endfunction
function B1R takes nothing returns boolean
call NIX(B_E , BYE)
return true
endfunction
function B2R takes nothing returns boolean
call NBX(B_E , BZE)
return true
endfunction
function B3R takes nothing returns boolean
local integer E3X=MA
local integer TBE=( PA )
if IsUnitEnemy(GZV[E3X], GetOwningPlayer(GZV[TBE])) then
call ECX(E3X , HHV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Cos(EOX(TBE)) , HJV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Sin(EOX(TBE)) , HKV[E3X] , true)
endif
return true
endfunction
function B4R takes nothing returns boolean
local integer p=B_E
call XQX(KA , HHV[p] , HJV[p] , HKV[p] , 172. , p , ( 4 ))
return true
endfunction
function B5R takes nothing returns boolean
local integer p=MA
set G5V[p]=1.
return true
endfunction
function B6R takes nothing returns boolean
local integer p=MA
set HEV[p]=false
set G5V[p]=.1
return true
endfunction
function B7R takes nothing returns boolean
local integer RPX=B_E
local unit u
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", HHV[RPX], HJV[RPX]))
set u=CreateUnit(GetOwningPlayer(GZV[RPX]), 'n00L', HHV[RPX], HJV[RPX], 270.)
if XT == 1 then
call UnitRemoveAbility(u, 'A018')
endif
call UnitApplyTimedLife(u, 'BTLF', 45.)
call EHX(RPX)
set u=null
return true
endfunction
function B8R takes nothing returns boolean
call N6X(B_E , BYE)
return true
endfunction
function B9R takes nothing returns boolean
call BVX(B_E , BYE)
return true
endfunction
function CVR takes nothing returns boolean
local integer p=B_E
return true
endfunction
function CER takes nothing returns boolean
local integer E3X=MA
local integer TBE=( PA )
if IsUnitEnemy(GZV[E3X], GetOwningPlayer(GZV[TBE])) then
call ECX(E3X , HHV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Cos(EOX(TBE)) , HJV[E3X] + ( ( 700. * 2.75 ) * .03125 ) * Sin(EOX(TBE)) , HKV[E3X] , true)
endif
return true
endfunction
function CXR takes nothing returns boolean
local integer p=B_E
call XQX(KA , HHV[p] , HJV[p] , HKV[p] , 125. , p , ( 7 ))
return true
endfunction
function COR takes nothing returns boolean
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(P8V[d])
local real y=GetUnitY(P8V[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( P8V[d] )) )
if GetRandomReal(.0, 1.) <= .5 and not IsUnitAlly(GZV[p], GetOwningPlayer(P8V[d])) and UnitAlive(P8V[d]) then
if not XMX(AC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", P8V[d], "origin"))
call B5X(P8V[d] , a * bj_RADTODEG)
endif
endif
call XLX(AC[j] , p)
return true
endfunction
function CRR takes nothing returns boolean
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(QJV[d])
local real y=GetUnitY(QJV[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( QJV[d] )) )
if GetRandomReal(.0, 1.) <= .5 and not IsUnitAlly(GZV[p], GetOwningPlayer(QJV[d])) and UnitAlive(QJV[d]) then
if not XMX(CC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", QJV[d], "origin"))
call CCX(QJV[d] , a * bj_RADTODEG)
endif
endif
call XLX(CC[j] , p)
return true
endfunction
function CIR takes nothing returns boolean
local integer p=MA
local integer d=( PA )
local real x=GetUnitX(Q3V[d])
local real y=GetUnitY(Q3V[d])
local real a=Atan2(( HJV[p] - y ), ( HHV[p] - x ))
local integer j=( GetUnitUserData(( Q3V[d] )) )
if GetRandomReal(.0, 1.) <= .25 + ( I2R(XT) / 10. ) and not IsUnitAlly(GZV[p], GetOwningPlayer(Q3V[d])) and UnitAlive(Q3V[d]) then
if not XMX(GC[j] , p) then
set HEV[p]=false
set JGV[p]=0
call ERX(p , x + 500. * Cos(a) , y + 500. * Sin(a) , .0 , true)
call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", Q3V[d], "origin"))
call CWX(Q3V[d] , a * bj_RADTODEG)
endif
endif
call XLX(GC[j] , p)
return true
endfunction
function CAR takes nothing returns boolean
local integer p=( MA )
local real x=.0
local real y=.0
set HEV[p]=true
call DestroyEffect(L8E("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl" , HHV[p] , HJV[p] , HKV[p] - 30.))
set x=HHV[p] + 500. * Cos(EOX(p))
set y=HJV[p] + 500. * Sin(EOX(p))
call ECX(p , x , y , HKV[p] , false)
set x=HQV[p] + 500. * Cos(EOX(p))
set y=HSV[p] + 500. * Sin(EOX(p))
call ERX(p , x , y , HTV[p] , false)
call DestroyEffect(L8E("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl" , HHV[p] , HJV[p] , HKV[p] - 30.))
return true
endfunction
function CNR takes nothing returns boolean
local integer VRO=B_E
set BSE=( VRO * 1.5 ) + 10.
return true
endfunction
function CBR takes nothing returns boolean
local integer VRO=B_E
set BSE=15. + ( 2. * VRO )
return true
endfunction
function CCR takes nothing returns boolean
call TNO(B_E , BYE)
return true
endfunction
function CDR takes nothing returns boolean
local integer p=B_E
call EHX(p)
return true
endfunction
function CFR takes nothing returns boolean
call X_R(B2E , BUE , BWE)
return true
endfunction
function AIR takes nothing returns nothing
set BGE=CreateTrigger()
call TriggerAddCondition(BGE, Condition(function AAR))
set NDE=CreateTrigger()
call TriggerAddCondition(NDE, Condition(function ANR))
set BFE=CreateTrigger()
call TriggerAddCondition(BFE, Condition(function ABR))
set BDE=CreateTrigger()
call TriggerAddCondition(BDE, Condition(function ACR))
set BCE=CreateTrigger()
call TriggerAddCondition(BCE, Condition(function ADR))
set BBE=CreateTrigger()
call TriggerAddCondition(BBE, Condition(function AFR))
set BNE=CreateTrigger()
call TriggerAddCondition(BNE, Condition(function AGR))
set BAE=CreateTrigger()
call TriggerAddCondition(BAE, Condition(function AHR))
set BIE=CreateTrigger()
call TriggerAddCondition(BIE, Condition(function AJR))
set BRE=CreateTrigger()
call TriggerAddCondition(BRE, Condition(function AKR))
set BOE=CreateTrigger()
call TriggerAddCondition(BOE, Condition(function ALR))
set BXE=CreateTrigger()
call TriggerAddCondition(BXE, Condition(function AMR))
set BEE=CreateTrigger()
call TriggerAddCondition(BEE, Condition(function APR))
set NFE=CreateTrigger()
call TriggerAddCondition(NFE, Condition(function AQR))
set N9E=CreateTrigger()
call TriggerAddCondition(N9E, Condition(function ASR))
set BVE=CreateTrigger()
call TriggerAddCondition(BVE, Condition(function ATR))
set N3E=CreateTrigger()
call TriggerAddCondition(N3E, Condition(function AUR))
set N4E=CreateTrigger()
call TriggerAddCondition(N4E, Condition(function AWR))
set N5E=CreateTrigger()
call TriggerAddCondition(N5E, Condition(function AYR))
set N6E=CreateTrigger()
call TriggerAddCondition(N6E, Condition(function A_R))
set N7E=CreateTrigger()
call TriggerAddCondition(N7E, Condition(function A1R))
set N8E=CreateTrigger()
call TriggerAddCondition(N8E, Condition(function A2R))
set N2E=CreateTrigger()
call TriggerAddCondition(N2E, Condition(function A3R))
set N_E=CreateTrigger()
call TriggerAddCondition(N_E, Condition(function A4R))
set N0E=CreateTrigger()
call TriggerAddCondition(N0E, Condition(function A5R))
set N1E=CreateTrigger()
call TriggerAddCondition(N1E, Condition(function A6R))
set NGE=CreateTrigger()
call TriggerAddCondition(NGE, Condition(function A7R))
set FRV[34]=null
set FIV[34]=null
set FIV[43]=null
set FIV[89]=null
set FIV[90]=null
set FIV[91]=null
set FAV[34]=null
set FAV[43]=null
set FAV[89]=null
set FAV[90]=null
set FAV[91]=null
set FNV[34]=null
set FNV[43]=null
set FNV[89]=null
set FNV[90]=null
set FNV[91]=null
set FBV[34]=null
set FBV[43]=null
set FBV[89]=null
set FBV[90]=null
set FBV[91]=null
set FCV[34]=null
set FCV[43]=null
set FCV[89]=null
set FCV[90]=null
set FCV[91]=null
set FDV[34]=null
set FDV[43]=null
set FDV[89]=null
set FDV[90]=null
set FDV[91]=null
set FFV[34]=null
set FFV[43]=null
set FFV[89]=null
set FFV[90]=null
set FFV[91]=null
set FGV[34]=null
set FGV[43]=null
set FGV[89]=null
set FGV[90]=null
set FGV[91]=null
set NUE=CreateTrigger()
call TriggerAddCondition(NUE, Condition(function A8R))
set NWE=CreateTrigger()
call TriggerAddCondition(NWE, Condition(function A9R))
set NYE=CreateTrigger()
call TriggerAddCondition(NYE, Condition(function NVR))
set NTE=CreateTrigger()
call TriggerAddCondition(NTE, Condition(function NER))
set NSE=CreateTrigger()
call TriggerAddCondition(NSE, Condition(function NXR))
set NCE[7]=CreateTrigger()
set NCE[8]=NCE[7]
set NCE[9]=NCE[7]
set NCE[10]=NCE[7]
call TriggerAddCondition(NCE[7], Condition(function NOR))
set B3V[22]=null
set B4V[22]=null
set B5V[22]=null
set B6V[22]=null
set NJE=CreateTrigger()
call TriggerAddCondition(NJE, Condition(function NRR))
set NKE=CreateTrigger()
call TriggerAddCondition(NKE, Condition(function NIR))
set NLE=CreateTrigger()
call TriggerAddCondition(NLE, Condition(function NAR))
set NME=CreateTrigger()
call TriggerAddCondition(NME, Condition(function NNR))
set NHE=CreateTrigger()
call TriggerAddCondition(NHE, Condition(function NBR))
set NZE=CreateTrigger()
call TriggerAddCondition(NZE, Condition(function NCR))
set FOV[34]=null
set NPE=CreateTrigger()
call TriggerAddCondition(NPE, Condition(function NDR))
set NQE=CreateTrigger()
call TriggerAddCondition(NQE, Condition(function NFR))
set B2V[22]=null
set NAE[43]=CreateTrigger()
call TriggerAddCondition(NAE[43], Condition(function NHR))
call TriggerAddAction(NAE[43], function NHR)
set NNE[43]=CreateTrigger()
call TriggerAddCondition(NNE[43], Condition(function NJR))
call TriggerAddAction(NNE[43], function NJR)
set FRV[43]=CreateTrigger()
set FRV[89]=FRV[43]
set FRV[90]=FRV[43]
set FRV[91]=FRV[43]
call TriggerAddCondition(FRV[43], Condition(function NKR))
call TriggerAddAction(FRV[43], function NKR)
set FOV[43]=CreateTrigger()
set FOV[89]=FOV[43]
set FOV[90]=FOV[43]
set FOV[91]=FOV[43]
call TriggerAddCondition(FOV[43], Condition(function NGR))
set NAE[91]=CreateTrigger()
call TriggerAddCondition(NAE[91], Condition(function NLR))
call TriggerAddAction(NAE[91], function NLR)
set NNE[91]=CreateTrigger()
call TriggerAddCondition(NNE[91], Condition(function NMR))
call TriggerAddAction(NNE[91], function NMR)
set NAE[89]=CreateTrigger()
call TriggerAddCondition(NAE[89], Condition(function NPR))
call TriggerAddAction(NAE[89], function NPR)
set NNE[89]=CreateTrigger()
call TriggerAddCondition(NNE[89], Condition(function NQR))
call TriggerAddAction(NNE[89], function NQR)
set NAE[90]=CreateTrigger()
call TriggerAddCondition(NAE[90], Condition(function NTR))
call TriggerAddAction(NAE[90], function NTR)
set NNE[90]=CreateTrigger()
call TriggerAddCondition(NNE[90], Condition(function NUR))
call TriggerAddAction(NNE[90], function NUR)
set BKE[1]=CreateTrigger()
call TriggerAddAction(BKE[1], function NWR)
call TriggerAddCondition(BKE[1], Condition(function NWR))
set BLE[1]=CreateTrigger()
call TriggerAddAction(BLE[1], function NYR)
call TriggerAddCondition(BLE[1], Condition(function NYR))
set BME[1]=CreateTrigger()
call TriggerAddAction(BME[1], function NZR)
call TriggerAddCondition(BME[1], Condition(function NZR))
set BJE[1]=CreateTrigger()
call TriggerAddAction(BJE[1], function N_R)
call TriggerAddCondition(BJE[1], Condition(function N_R))
set BHE[1]=CreateTrigger()
call TriggerAddAction(BHE[1], function N0R)
call TriggerAddCondition(BHE[1], Condition(function N0R))
set BHE[666]=CreateTrigger()
call TriggerAddAction(BHE[666], function N0R2)
call TriggerAddCondition(BHE[666], Condition(function N0R2))
set BME[2]=CreateTrigger()
call TriggerAddAction(BME[2], function N1R)
call TriggerAddCondition(BME[2], Condition(function N1R))
set BME[20]=CreateTrigger()
call TriggerAddAction(BME[20], function N2R)
call TriggerAddCondition(BME[20], Condition(function N2R))
set BHE[2]=CreateTrigger()
call TriggerAddAction(BHE[2], function N3R)
call TriggerAddCondition(BHE[2], Condition(function N3R))
set BHE[3]=CreateTrigger()
call TriggerAddAction(BHE[3], function N4R)
call TriggerAddCondition(BHE[3], Condition(function N4R))
set BHE[4]=CreateTrigger()
call TriggerAddAction(BHE[4], function N5R)
call TriggerAddCondition(BHE[4], Condition(function N5R))
set BJE[2]=CreateTrigger()
call TriggerAddAction(BJE[2], function N6R)
call TriggerAddCondition(BJE[2], Condition(function N6R))
set BME[3]=CreateTrigger()
call TriggerAddAction(BME[3], function N7R)
call TriggerAddCondition(BME[3], Condition(function N7R))
set BME[4]=CreateTrigger()
call TriggerAddAction(BME[4], function N8R)
call TriggerAddCondition(BME[4], Condition(function N8R))
set BME[5]=CreateTrigger()
call TriggerAddAction(BME[5], function N9R)
call TriggerAddCondition(BME[5], Condition(function N9R))
set BHE[5]=CreateTrigger()
call TriggerAddAction(BHE[5], function BVR)
call TriggerAddCondition(BHE[5], Condition(function BVR))
set BHE[6]=CreateTrigger()
call TriggerAddAction(BHE[6], function BER)
call TriggerAddCondition(BHE[6], Condition(function BER))
set BME[6]=CreateTrigger()
call TriggerAddAction(BME[6], function BXR)
call TriggerAddCondition(BME[6], Condition(function BXR))
set BHE[8]=CreateTrigger()
call TriggerAddAction(BHE[8], function BOR)
call TriggerAddCondition(BHE[8], Condition(function BOR))
set BHE[7]=CreateTrigger()
call TriggerAddAction(BHE[7], function BRR)
call TriggerAddCondition(BHE[7], Condition(function BRR))
set BME[7]=CreateTrigger()
call TriggerAddAction(BME[7], function BIR)
call TriggerAddCondition(BME[7], Condition(function BIR))
set BHE[9]=CreateTrigger()
call TriggerAddAction(BHE[9], function BAR)
call TriggerAddCondition(BHE[9], Condition(function BAR))
set BME[8]=CreateTrigger()
call TriggerAddAction(BME[8], function BNR)
call TriggerAddCondition(BME[8], Condition(function BNR))
set BME[9]=CreateTrigger()
call TriggerAddAction(BME[9], function BBR)
call TriggerAddCondition(BME[9], Condition(function BBR))
set BHE[10]=CreateTrigger()
call TriggerAddAction(BHE[10], function BCR)
call TriggerAddCondition(BHE[10], Condition(function BCR))
set BME[10]=CreateTrigger()
call TriggerAddAction(BME[10], function BDR)
call TriggerAddCondition(BME[10], Condition(function BDR))
set BHE[12]=CreateTrigger()
call TriggerAddAction(BHE[12], function BFR)
call TriggerAddCondition(BHE[12], Condition(function BFR))
set BPE[1]=CreateTrigger()
call TriggerAddAction(BPE[1], function BGR)
call TriggerAddCondition(BPE[1], Condition(function BGR))
set BJE[3]=CreateTrigger()
call TriggerAddAction(BJE[3], function BHR)
call TriggerAddCondition(BJE[3], Condition(function BHR))
set BHE[11]=CreateTrigger()
call TriggerAddAction(BHE[11], function BJR)
call TriggerAddCondition(BHE[11], Condition(function BJR))
set BHE[13]=CreateTrigger()
call TriggerAddAction(BHE[13], function BKR)
call TriggerAddCondition(BHE[13], Condition(function BKR))
set BME[11]=CreateTrigger()
call TriggerAddAction(BME[11], function BMR)
call TriggerAddCondition(BME[11], Condition(function BMR))
set BHE[15]=CreateTrigger()
call TriggerAddAction(BHE[15], function BPR)
call TriggerAddCondition(BHE[15], Condition(function BPR))
set BHE[14]=CreateTrigger()
call TriggerAddAction(BHE[14], function BQR)
call TriggerAddCondition(BHE[14], Condition(function BQR))
set BME[12]=CreateTrigger()
call TriggerAddAction(BME[12], function BSR)
call TriggerAddCondition(BME[12], Condition(function BSR))
set BME[13]=CreateTrigger()
call TriggerAddAction(BME[13], function BTR)
call TriggerAddCondition(BME[13], Condition(function BTR))
set BME[14]=CreateTrigger()
call TriggerAddAction(BME[14], function BUR)
call TriggerAddCondition(BME[14], Condition(function BUR))
set BME[15]=CreateTrigger()
call TriggerAddAction(BME[15], function BWR)
call TriggerAddCondition(BME[15], Condition(function BWR))
set BME[16]=CreateTrigger()
call TriggerAddAction(BME[16], function BYR)
call TriggerAddCondition(BME[16], Condition(function BYR))
set BHE[16]=CreateTrigger()
call TriggerAddAction(BHE[16], function BZR)
call TriggerAddCondition(BHE[16], Condition(function BZR))
set BPE[2]=CreateTrigger()
call TriggerAddAction(BPE[2], function B_R)
call TriggerAddCondition(BPE[2], Condition(function B_R))
set BHE[17]=CreateTrigger()
call TriggerAddAction(BHE[17], function B0R)
call TriggerAddCondition(BHE[17], Condition(function B0R))
set BME[17]=CreateTrigger()
call TriggerAddAction(BME[17], function B1R)
call TriggerAddCondition(BME[17], Condition(function B1R))
set BPE[3]=CreateTrigger()
call TriggerAddAction(BPE[3], function B2R)
call TriggerAddCondition(BPE[3], Condition(function B2R))
set BJE[4]=CreateTrigger()
call TriggerAddAction(BJE[4], function B3R)
call TriggerAddCondition(BJE[4], Condition(function B3R))
set BHE[18]=CreateTrigger()
call TriggerAddAction(BHE[18], function B4R)
call TriggerAddCondition(BHE[18], Condition(function B4R))
set BJE[5]=CreateTrigger()
call TriggerAddAction(BJE[5], function B5R)
call TriggerAddCondition(BJE[5], Condition(function B5R))
set BJE[6]=CreateTrigger()
call TriggerAddAction(BJE[6], function B6R)
call TriggerAddCondition(BJE[6], Condition(function B6R))
set BHE[19]=CreateTrigger()
call TriggerAddAction(BHE[19], function B7R)
call TriggerAddCondition(BHE[19], Condition(function B7R))
set BME[18]=CreateTrigger()
call TriggerAddAction(BME[18], function B8R)
call TriggerAddCondition(BME[18], Condition(function B8R))
set BME[19]=CreateTrigger()
call TriggerAddAction(BME[19], function B9R)
call TriggerAddCondition(BME[19], Condition(function B9R))
set BHE[21]=CreateTrigger()
call TriggerAddAction(BHE[21], function CVR)
call TriggerAddCondition(BHE[21], Condition(function CVR))
set BJE[7]=CreateTrigger()
call TriggerAddAction(BJE[7], function CER)
call TriggerAddCondition(BJE[7], Condition(function CER))
set BHE[20]=CreateTrigger()
call TriggerAddAction(BHE[20], function CXR)
call TriggerAddCondition(BHE[20], Condition(function CXR))
set BJE[8]=CreateTrigger()
call TriggerAddAction(BJE[8], function COR)
call TriggerAddCondition(BJE[8], Condition(function COR))
set BJE[9]=CreateTrigger()
call TriggerAddAction(BJE[9], function CRR)
call TriggerAddCondition(BJE[9], Condition(function CRR))
set BJE[10]=CreateTrigger()
call TriggerAddAction(BJE[10], function CIR)
call TriggerAddCondition(BJE[10], Condition(function CIR))
set BJE[11]=CreateTrigger()
call TriggerAddAction(BJE[11], function CAR)
call TriggerAddCondition(BJE[11], Condition(function CAR))
set BQE[1]=CreateTrigger()
call TriggerAddAction(BQE[1], function CNR)
call TriggerAddCondition(BQE[1], Condition(function CNR))
set BQE[2]=CreateTrigger()
call TriggerAddAction(BQE[2], function CBR)
call TriggerAddCondition(BQE[2], Condition(function CBR))
set BME[21]=CreateTrigger()
call TriggerAddAction(BME[21], function CCR)
call TriggerAddCondition(BME[21], Condition(function CCR))
set BHE[22]=CreateTrigger()
call TriggerAddAction(BHE[22], function CDR)
call TriggerAddCondition(BHE[22], Condition(function CDR))
set BTE[1]=CreateTrigger()
call TriggerAddAction(BTE[1], function CFR)
call TriggerAddCondition(BTE[1], Condition(function CFR))
call ExecuteFunc("UZE")
call ExecuteFunc("W9E")
call ExecuteFunc("Y6E")
call ExecuteFunc("V2X")
call ExecuteFunc("E7X")
call ExecuteFunc("NSX")
call ExecuteFunc("N_X")
call ExecuteFunc("B4X")
call ExecuteFunc("CVX")
call ExecuteFunc("CBX")
call ExecuteFunc("CJX")
call ExecuteFunc("CUX")
call ExecuteFunc("C1X")
call ExecuteFunc("C9X")
call ExecuteFunc("DLX")
//call ExecuteFunc("LSE")
call ExecuteFunc("QLE")
call ExecuteFunc("Q5E")
call ExecuteFunc("TCE")
call ExecuteFunc("WXE")
call ExecuteFunc("Y5E")
call ExecuteFunc("ZQE")
call ExecuteFunc("VHX")
call ExecuteFunc("VSX")
call ExecuteFunc("VYX")
call ExecuteFunc("XNX")
call ExecuteFunc("R6X")
call ExecuteFunc("D9X")
call ExecuteFunc("E7O")
call ExecuteFunc("ISR")

endfunction
//===========================================================================
// Trigger: TimerUtils
//===========================================================================
//TESH.scrollpos=41
//TESH.alwaysfold=0
//===========================================================================
// Trigger: SecretCodeLadyVashj
//===========================================================================

// scope SecretCodeRevealLadyVashj begins


function SecretCodeRevealLadyVashj___Conditions takes nothing returns boolean
if GetItemTypeId(GetManipulatedItem()) == 'I04E' then
call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "-Lady Vashj the Unwavering")
	endif

return false
endfunction

function SecretCodeRevealLadyVashj___OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_USE_ITEM)
        call TriggerAddCondition(t, Condition(function SecretCodeRevealLadyVashj___Conditions))
endfunction
// scope SecretCodeRevealLadyVashj ends

//===========================================================================
// Trigger: Rat Ranger
//===========================================================================

// scope RatRanger begins
 
 function RatRanger___Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Rat#21173" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'N01S' then
 call BlzSetUnitSkin(LC[1 + id], 'N01Q')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[47])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[47])
call BlzSetHeroProperName(LC[1 + id], "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
call BlzSetUnitName(LC[1 + id], "|c000100DAR|r|c000B00D3a|r|c001500CCt|r|c001F00C6l|r|c002800BFi|r|c003200B8n|r|c003C00B1g|r|c004600AB |r|c005000A4G|r|c005A009Du|r|c00630096n|r|c006D0090n|r|c00770089e|r|c00810082r|r")
set IsRangerRat[GetUnitUserData(LC[1 + id])]=true
 endif
endif

 return false
 endfunction
 
  function RatRanger___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Ratty Ranger", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function RatRanger___Conditions))
    endfunction
// scope RatRanger ends
//===========================================================================
// Trigger: Army Ranger
//===========================================================================

// scope GreenRanger begins
 
 function GreenRanger___Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "DrunkCat#1765" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'N01S' then
 call BlzSetUnitSkin(LC[1 + id], 'N03U')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[53])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[53])
call BlzSetHeroProperName(LC[1 + id], "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call BlzSetUnitName(LC[1 + id], "|cff008044Green Infantry Sniper|r")
set IsRangerGreen[GetUnitUserData(LC[1 + id])]=true
 endif
endif

 return false
 endfunction
 
  function GreenRanger___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Army Sniper", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function GreenRanger___Conditions))
    endfunction
// scope GreenRanger ends
//===========================================================================
// Trigger: Useless Ranger
//===========================================================================

// scope UselessRanger begins
 
 function UselessRanger___Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "useless#1203" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'N01S' then
 call BlzSetUnitSkin(LC[1 + id], 'N01M')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[42])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[42])
call BlzSetUnitName(LC[1 + id], "Useless Ranger")
set IsRangerUseless[GetUnitUserData(LC[1 + id])]=true
 endif
endif

 return false
 endfunction
 
  function UselessRanger___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Useless Ranger", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function UselessRanger___Conditions))
    endfunction
// scope UselessRanger ends
//===========================================================================
// Trigger: Rat Thief
//===========================================================================

// scope RatThief begins
 
 function RatThief___Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Rat#21173" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E01L' then
 call BlzSetUnitSkin(LC[1 + id], 'E01M')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[49])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[49])
call BlzSetHeroProperName(LC[1 + id], "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
call BlzSetUnitName(LC[1 + id], "|c02F101FFR|r|c02D901F6a|r|c02C101EDt|r|c01A901E4t|r|c019101DBy|r|c017900D2 |r|c016100CAT|r|c014900C1h|r|c003100B8i|r|c001900AFe|r|c000100A6f|r")
set IsThiefRat[GetUnitUserData(LC[1 + id])]=true
endif
endif

 return false
 endfunction
 
  function RatThief___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Ratty Thief", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function RatThief___Conditions))
    endfunction
// scope RatThief ends
//===========================================================================
// Trigger: Nzoth Citadel Copy
//===========================================================================

// scope NzothCit begins
 
 function NzothCit___Conditions takes nothing returns boolean
 local real x1
local real x2
local real y1
local real y2
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Rat#21173" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E00E' then
 call BlzSetUnitSkin(LC[1 + id], 'E01I')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[50])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[50])
call BlzSetHeroProperName(LC[1 + id], "|c02F101FFN|r|c02C101ED'|r|c019101DBz|r|c016100CAo|r|c003100B8t|r|c000100A6h|r")
call BlzSetUnitName(LC[1 + id], "|c02F101FFT|r|c02DB01F7h|r|c02C501EFe|r|c01B001E7 |r|c019A01DFO|r|c018401D7l|r|c016E00CEd|r|c015800C6e|r|c014200BEr|r|c002D00B6g|r|c001700AEo|r|c000100A6d|r")
set IsCitGod[GetUnitUserData(LC[1 + id])]=true

set x1=GetUnitX(LC[1 + id])
set y1=GetUnitY(LC[1 + id])
    set x2=x1 + 300. * Cos(225. * bj_DEGTORAD)
    set y2=y1 + 300. * Sin(225. * bj_DEGTORAD)

call CreateUnit(GetTriggerPlayer(), 'h01W', x2, y2, 225.)

    set x2=x1 + 300. * Cos(135. * bj_DEGTORAD)
    set y2=y1 + 300. * Sin(135. * bj_DEGTORAD)

call CreateUnit(GetTriggerPlayer(), 'h01V', x2, y2, 135.)


    set x2=x1 + 300. * Cos(315. * bj_DEGTORAD)
    set y2=y1 + 300. * Sin(315. * bj_DEGTORAD)

call CreateUnit(GetTriggerPlayer(), 'h01V', x2, y2, 315.)

    set x2=x1 + 300. * Cos(45. * bj_DEGTORAD)
    set y2=y1 + 300. * Sin(45. * bj_DEGTORAD)

call CreateUnit(GetTriggerPlayer(), 'h01V', x2, y2, 45.)


endif
 endif

 return false
 endfunction
 
  function NzothCit___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Oldergod", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function NzothCit___Conditions))
    endfunction
// scope NzothCit ends
//===========================================================================
// Trigger: ChomoAM
//===========================================================================

// scope ChonkAM begins
 
 function ChonkAM___Conditions takes nothing returns boolean
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Fumandra#2247" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E011' then
 call BlzSetUnitSkin(LC[1 + id], 'O00E')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[52])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[52])
call BlzSetHeroProperName(LC[1 + id], "|c007F1080C|r|c00970B55h|r|c00B0052Bo|r|c00C80000m|r|c00BA0000o|r|c00AB0000s|r|c009D0000u|r|c008E0000k|r|c00800000e|r")
call BlzSetUnitName(LC[1 + id], "|c007F1080A|r|c00910C60r|r|c00A40840c|r|c00B60420a|r|c00C80000n|r|c00BC0000e|r|c00B00000 |r|c00A40000C|r|c00980000a|r|c008C0000t|r|c00800000?|r")
set IsAMChonk[GetUnitUserData(LC[1 + id])]=true



endif
 endif

 return false
 endfunction
 
  function ChonkAM___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-ChonkAM", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function ChonkAM___Conditions))
    endfunction
// scope ChonkAM ends
//===========================================================================
// Trigger: QueenTyrael
//===========================================================================

// scope QobTyrael begins
 
 function QobTyrael___Conditions takes nothing returns boolean
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Rat#21173" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" or GetPlayerName(GetTriggerPlayer()) == "tyreal#11180" then
 if GetUnitTypeId(LC[1 + id]) == 'E006' then
 call BlzSetUnitSkin(LC[1 + id], 'E01X')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[54])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[54])
call BlzSetHeroProperName(LC[1 + id], "Tyrael")
call BlzSetUnitName(LC[1 + id], "Archangel of Heaven")
set IsQoBTyrael[GetUnitUserData(LC[1 + id])]=true



endif
 endif

 return false
 endfunction
 
  function QobTyrael___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Tyrael", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function QobTyrael___Conditions))
    endfunction
// scope QobTyrael ends
//===========================================================================
// Trigger: GrakeTank
//===========================================================================

// scope GrakeTank begins
 
 function GrakeTank___Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Fumandra#2247" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E01C' then
 call BlzSetUnitSkin(LC[1 + id], 'E01R')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[51])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[51])
call BlzSetHeroProperName(LC[1 + id], "T-90S")
call BlzSetUnitName(LC[1 + id], "Modernized Tank")
set IsGrakeTank[GetUnitUserData(LC[1 + id])]=true
endif
endif

 return false
 endfunction
 
  function GrakeTank___OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Tanky Grake", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function GrakeTank___Conditions))
    endfunction
// scope GrakeTank ends
//===========================================================================
// Trigger: Custom Skin Illusions
//===========================================================================

// scope CustomSkinIllusions begins

 
 
    function CustomSkinIllusions___Actions takes nothing returns boolean
 local unit u= GetSummonedUnit()
 local unit c= GetSummoningUnit()
if ( IsRangerRat[GetUnitUserData(c)] or IsThiefRat[GetUnitUserData(c)] or IsRangerGreen[GetUnitUserData(c)] ) and IsUnitIllusion(u) and GetUnitAbilityLevel(u, 'BIil') != 1 then
if IsRangerRat[GetUnitUserData(c)] then
set IsRangerRat[GetUnitUserData(u)]=true
endif

if IsThiefRat[GetUnitUserData(c)] then
set IsThiefRat[GetUnitUserData(u)]=true
endif

if IsRangerGreen[GetUnitUserData(c)] then
set IsRangerGreen[GetUnitUserData(u)]=true
endif

if IsRangerRat[GetUnitUserData(c)] then
if GetUnitTypeId(c) == 'N01S' or GetUnitTypeId(c) == 'N01Q' then

call BlzSetUnitSkin(u, 'N01Q')
call BlzSetHeroProperName(u, "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")

endif

if GetUnitTypeId(c) == 'N01T' or GetUnitTypeId(c) == 'N032' then

call BlzSetUnitSkin(u, 'N032')
call BlzSetHeroProperName(u, "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")

endif
endif

if IsRangerGreen[GetUnitUserData(c)] then
if GetUnitTypeId(c) == 'N01S' or GetUnitTypeId(c) == 'N01Q' then

call BlzSetUnitSkin(u, 'N03U')
call BlzSetHeroProperName(u, "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call SetUnitVertexColor(u, 10, 35, 10, 255)
endif

if GetUnitTypeId(c) == 'N01T' or GetUnitTypeId(c) == 'N032' then

call BlzSetUnitSkin(u, 'N03V')
call BlzSetHeroProperName(u, "|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call SetUnitVertexColor(u, 10, 35, 10, 255)
endif

//call SetUnitVertexColor(c,10,35,10,255)
endif



if GetUnitTypeId(c) == 'E01L' then

call BlzSetUnitSkin(u, 'E01M')
call BlzSetHeroProperName(u, "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")

endif
endif

set c=null
set u=null
return false
    endfunction
    


        function CustomSkinIllusions___OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SUMMON)
    call TriggerAddCondition(t, Condition(function CustomSkinIllusions___Actions))
    endfunction
// scope CustomSkinIllusions ends

//===========================================================================
// Trigger: SecretCodeFallenOneDrop
//===========================================================================

// scope SecretCodeFallenOneDrop begins


function SecretCodeFallenOneDrop__Conditions takes nothing returns boolean
local unit u= GetTriggerUnit()

if IsUnitType(u, UNIT_TYPE_ANCIENT) and GetPlayerController(GetOwningPlayer(u)) == MAP_CONTROL_COMPUTER and GetRandomInt(0, 1777) == 777 then
call CreateItem('I04D', GetUnitX(u), GetUnitY(u))
endif
set u=null
return false
endfunction

function SecretCodeFallenOneDrop__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
        call TriggerAddCondition(t, Condition(function SecretCodeFallenOneDrop__Conditions))
endfunction
// scope SecretCodeFallenOneDrop ends

//===========================================================================
// Trigger: SecretCodeFallenOne
//===========================================================================

// scope SecretCodeRevealFallenOne begins


function SecretCodeRevealFallenOne__Conditions takes nothing returns boolean
if GetItemTypeId(GetManipulatedItem()) == 'I04D' then
call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "-Dullahan The Fallen One :)")
	endif

return false
endfunction

function SecretCodeRevealFallenOne__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_USE_ITEM)
        call TriggerAddCondition(t, Condition(function SecretCodeRevealFallenOne__Conditions))
endfunction
// scope SecretCodeRevealFallenOne ends

//===========================================================================
// Trigger: SecretCodeLadyVashjDrop
//===========================================================================

// scope SecretCodeLadyVashjDrop begins


function SecretCodeLadyVashjDrop__Conditions takes nothing returns boolean
local unit u= GetTriggerUnit()

if IsUnitType(u, UNIT_TYPE_ANCIENT) and GetPlayerController(GetOwningPlayer(u)) == MAP_CONTROL_COMPUTER and GetRandomInt(0, 3666) == 666 then
call CreateItem('I04E', GetUnitX(u), GetUnitY(u))
endif
set u=null
return false
endfunction

function SecretCodeLadyVashjDrop__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
        call TriggerAddCondition(t, Condition(function SecretCodeLadyVashjDrop__Conditions))
endfunction
// scope SecretCodeLadyVashjDrop ends

//===========================================================================
// Trigger: Ratty Rage
//===========================================================================
// scope RattyRage begins

 



function s__RattyRage__RatR_destroy takes integer this returns nothing

set s__RattyRage__RatR_u[this]=null
call s__RattyRage__RatR_deallocate(this)
endfunction

function RattyRage__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if not UnitAlive(s__RattyRage__RatR_u[data]) or GetHeroProperName(s__RattyRage__RatR_u[data]) == "Mira Shadewither" or s__RattyRage__RatR_u[data] == null then
if IsRangerRat[GetUnitUserData(s__RattyRage__RatR_u[data])] then
call BlzSetUnitSkin(s__RattyRage__RatR_u[data], 'N032')
call BlzSetHeroProperName(s__RattyRage__RatR_u[data], "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
endif

if IsRangerGreen[GetUnitUserData(s__RattyRage__RatR_u[data])] then
call BlzSetUnitSkin(s__RattyRage__RatR_u[data], 'N03V')
//call BlzSetHeroProperName(data.u,"|c00000000D|r|c00404040r|r|c00808080u|r|c00BFBFBFn|r|c00FFFFFFk|r|c00E4AAAAC|r|c00C95555a|r|c00AE0000t|r")
call SetUnitVertexColor(s__RattyRage__RatR_u[data], 10, 35, 10, 255)
endif
//call BlzSetUnitName(data.u,"|c000100DAR|r|c000B00D3a|r|c001500CCt|r|c001F00C6l|r|c002800BFi|r|c003200B8n|r|c003C00B1g|r|c004600AB |r|c005000A4G|r|c005A009Du|r|c00630096n|r|c006D0090n|r|c00770089e|r|c00810082r|r")
    call ReleaseTimer(t)
    call s__RattyRage__RatR_destroy(data)

else

//if not data.b then
if IsRangerRat[GetUnitUserData(s__RattyRage__RatR_u[data])] then
call BlzSetUnitSkin(s__RattyRage__RatR_u[data], 'N032')
endif
if IsRangerGreen[GetUnitUserData(s__RattyRage__RatR_u[data])] then
call BlzSetUnitSkin(s__RattyRage__RatR_u[data], 'N03V')
//call SetUnitVertexColor(data.u,10,35,10,255)
endif
//set data.b = true
//endif

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!

call TimerStart(t, .03, false, function RattyRage__Handler)

endif


set t=null
endfunction
 
    function RattyRage__Actions takes nothing returns nothing
 local unit u= GetTriggerUnit()
local timer t
local integer data

if GetSpellAbilityId() == RattyRage__SPELL_ID and ( IsRangerRat[GetUnitUserData(u)] or IsRangerGreen[GetUnitUserData(u)] ) then


if GetUnitTypeId(u) == 'N01S' or GetUnitTypeId(u) == 'N01T' then

set t=(NewTimerEx(0)) // INLINED!!
set data=s__RattyRage__RatR__allocate()

if IsRangerRat[GetUnitUserData(u)] then

call BlzSetUnitSkin(u, 'N032')

endif

if IsRangerGreen[GetUnitUserData(u)] then

call BlzSetUnitSkin(u, 'N03V')
//call SetUnitVertexColor(u,10,35,10,255)

endif


set s__RattyRage__RatR_u[data]=u

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!

call TimerStart(t, .1, false, function RattyRage__Handler)

endif

endif

set t=null
set u=null
    endfunction
    



        function RattyRage__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(RattyRage__SPELL_ID , function RattyRage__Actions)
    endfunction
// scope RattyRage ends

//===========================================================================
// Trigger: CustomFallenOne
//===========================================================================

// scope CustomFallenOne begins
 
 function CustomFallenOne__Conditions takes nothing returns boolean
 //local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
//if GetPlayerName(GetTriggerPlayer()) == "useless#1203" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E01C' and not IsUnitType(LC[1 + id], UNIT_TYPE_MAGIC_IMMUNE) then
 call BlzSetUnitSkin(LC[1 + id], 'E00U')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[45])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[45])
call BlzSetUnitName(LC[1 + id], "Fallen One")
call BlzSetHeroProperName(LC[1 + id], "Dullahan")
set IsFallenOne[GetUnitUserData(LC[1 + id])]=true
 endif
//endif
 return false
 endfunction
 
  function CustomFallenOne__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Dullahan The Fallen One :)", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function CustomFallenOne__Conditions))
    endfunction
// scope CustomFallenOne ends
//===========================================================================
// Trigger: CustomBard
//===========================================================================

// scope CustomBard begins
 
 function CustomBard__Conditions takes nothing returns boolean

local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" or GetEventPlayerChatString() == "-Lady Vashj the Unwavering" then
 if GetUnitTypeId(LC[1 + id]) == 'E013' then
 call BlzSetUnitSkin(LC[1 + id], 'E00R')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[44])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[44])
call BlzSetUnitName(LC[1 + id], "Handmaiden of Azshara")
call BlzSetHeroProperName(LC[1 + id], "Lady Vashj")
//call UnitAddAbility(LC[1+id],'A0JJ')
set IsBardCustom[GetUnitUserData(LC[1 + id])]=true
 endif
endif
 return false
 endfunction
 
  function CustomBard__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Lady Vashj", false)
	call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Lady Vashj the Unwavering", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function CustomBard__Conditions))
    endfunction
// scope CustomBard ends
//===========================================================================
// Trigger: CustomSkaar
//===========================================================================

// scope MechaSkaar begins
 
 function MechaSkaar__Conditions takes nothing returns boolean

local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" or GetEventPlayerChatString() == "-Thanks for being a subscriber :)" then
 if GetUnitTypeId(LC[1 + id]) == 'E004' then
 call BlzSetUnitSkin(LC[1 + id], 'E01Y')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[55])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[55])
call BlzSetUnitName(LC[1 + id], "Mechanical Horror")
call BlzSetHeroProperName(LC[1 + id], "Mecha Sk'aar")
//call UnitAddAbility(LC[1+id],'A0JJ')
set IsMechaSkaar[GetUnitUserData(LC[1 + id])]=true
 endif
endif
 return false
 endfunction
 
  function MechaSkaar__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Mecha Skaar", false)
	call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Thanks for being a subscriber :)", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function MechaSkaar__Conditions))
    endfunction
// scope MechaSkaar ends
//===========================================================================
// Trigger: Mecha Spikes
//===========================================================================
//TESH.scrollpos=35
//TESH.alwaysfold=0

// scope SpikeDMech begins
     // private struct RB
      //  effect r1
	//effect r2
	//effect r3
	//effect r4

     //   method destroy takes nothing returns nothing
      //      call DestroyEffect(this.r1)
	//	call DestroyEffect(this.r2)
//call DestroyEffect(this.r3)
//call DestroyEffect(this.r4)

//set this.r1 = null
//set this.r2 = null
//set this.r3 = null
//set this.r4 = null
      //      call this.deallocate()
      //  endmethod
   // endstruct
  
 

  
  function SpikeDMech__Conditions takes nothing returns boolean

	  if IsMechaSkaar[GetUnitUserData(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])] then
	if GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0M9') == 1 then
	call UnitRemoveAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0M9')
	else
	call UnitAddAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0M9')
	endif
	endif
	
        return false
    endfunction
   
    function SpikeDMech__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-spiked mech", true)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function SpikeDMech__Conditions))
    endfunction
// scope SpikeDMech ends
//===========================================================================
// Trigger: Useless Skaar
//===========================================================================

// scope UselessSkaar begins
 
 function UselessSkaar__Conditions takes nothing returns boolean
 //local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "useless#1203" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" or GetPlayerName(GetTriggerPlayer()) == "Rat#21173" then
 if GetUnitTypeId(LC[1 + id]) == 'E004' then
 call BlzSetUnitSkin(LC[1 + id], 'E00Q')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[43])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[43])
call BlzSetUnitName(LC[1 + id], "Useless Horror")
set IsSkaarUseless[GetUnitUserData(LC[1 + id])]=true
 endif
endif
 return false
 endfunction
 
  function UselessSkaar__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Useless Horror", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function UselessSkaar__Conditions))
    endfunction
// scope UselessSkaar ends
//===========================================================================
// Trigger: Eye of the Rat
//===========================================================================

// scope EyeoftheRat begins
 
 function EyeoftheRat__Conditions takes nothing returns boolean
 local integer lvl
local integer id= GetPlayerId(GetTriggerPlayer())
if GetPlayerName(GetTriggerPlayer()) == "Rat#21173" or GetPlayerName(GetTriggerPlayer()) == "Strikest#1504" then
 if GetUnitTypeId(LC[1 + id]) == 'E000' then
 call BlzSetUnitSkin(LC[1 + id], 'O00B')
call MultiboardSetItemIconBJ(AS[1], 1, ( WS[1 + id] + 2 ), SQ[48])
call MultiboardSetItemIconBJ(AS[2], 1, ( WS[1 + id] + 2 ), SQ[48])
call BlzSetHeroProperName(LC[1 + id], "|c000100CAR|r|c006407FFA|r|c00DC01FFT|r")
call BlzSetUnitName(LC[1 + id], "|c000100E2E|r|c000F00DFy|r|c001D00DBe|r|c002B00D8 |r|c003800D4o|r|c004600D1f|r|c005400CE |r|c006200CAt|r|c007000C7h|r|c007E00C4e|r|c008B00C0 |r|c009900BDR|r|c00A700B9a|r|c00B500B6t|r")
set IsEyeRat[GetUnitUserData(LC[1 + id])]=true
 endif
endif

 return false
 endfunction
 
  function EyeoftheRat__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Eye of the Rat", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function EyeoftheRat__Conditions))
    endfunction
// scope EyeoftheRat ends
//===========================================================================
// Trigger: Tank Grake Learn
//===========================================================================
// scope TankGrakeLearn begins





function TankGrakeLearn__Conditions takes nothing returns boolean

if GetLearnedSkill() == TankGrakeLearn__SPELL_ID and IsGrakeTank[GetUnitUserData(GetTriggerUnit())] then
if GetUnitAbilityLevel(GetTriggerUnit(), TankGrakeLearn__SPELL_ID2) != 1 then
call UnitAddAbility(GetTriggerUnit(), TankGrakeLearn__SPELL_ID2)
endif

endif

return false
endfunction

//===========================================================================
function TankGrakeLearn__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(t, Condition(function TankGrakeLearn__Conditions))

endfunction
// scope TankGrakeLearn ends
//===========================================================================
// Trigger: Protect Items
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ProtectItems begins


        function s__Prot_destroy takes integer this returns nothing
        set s__Prot_p[this]=null
        call s__Prot_deallocate(this)
        endfunction

    function ProtectItems__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
            call IssueImmediateOrderById(s__Prot_p[data], 851972)
            call Q_E(GetOwningPlayer(s__Prot_p[data]) , "Unable to attack items.")
            call ReleaseTimer(t)
            call s__Prot_destroy(data)
            
    set t=null
    endfunction

    function ProtectItems__Actions takes nothing returns nothing
        local integer data= s__Prot__allocate()
        local timer t= (NewTimerEx(0)) // INLINED!!

        set s__Prot_p[data]=GetTriggerUnit()
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, 0.0, false, function ProtectItems__Handler)
        
        set t=null
    endfunction
    
    function ProtectItems__Conditions takes nothing returns boolean
    if GetIssuedOrderId() == String2OrderIdBJ("attack") and GetOrderTargetItem() != null then
    call ProtectItems__Actions()
    endif
    return false
    endfunction
    
    function ProtectItems__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
        call TriggerAddCondition(t, Condition(function ProtectItems__Conditions))
    endfunction
// scope ProtectItems ends
//===========================================================================
// Trigger: Display Index
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope DisplayIndex begins
 
 function DisplayIndex__Conditions takes nothing returns boolean
 

 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., I2S(XO))
 
 
 return false
 endfunction
 
  function DisplayIndex__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-indexes", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function DisplayIndex__Conditions))
    endfunction
// scope DisplayIndex ends
//===========================================================================
// Trigger: Fountain Guardians
//===========================================================================

// scope SpawnTheseFountains begins

function SpawnTheseFountains__OnInit takes nothing returns nothing

set FountainGuardWest=CreateUnit(Player(PLAYER_NEUTRAL_AGGRESSIVE), 'h01I', - 6404.5, 1178.7, 0.)
set FountainGuardEast=CreateUnit(Player(PLAYER_NEUTRAL_AGGRESSIVE), 'h01I', 6393.0, 1184.9, 0.)

endfunction

// scope SpawnTheseFountains ends
//===========================================================================
// Trigger: Hero Dummies
//===========================================================================
//TESH.scrollpos=100
//TESH.alwaysfold=0
// scope HeroDummyInit begins

function HeroDummyInit__OnInit takes nothing returns nothing
local unit u
local location center
//local effect fx
set FU=GetRectCenter(NW)
call CreateNUnitsAtLoc(1, 'Nplh', Player(PLAYER_NEUTRAL_PASSIVE), FU, 214.)
call RemoveLocation(FU)

//set FU=GetRectCenter(LW)
//call CreateNUnitsAtLoc(1,'Nplh',Player(PLAYER_NEUTRAL_PASSIVE),FU,214.)
//call RemoveLocation(FU)

//call CreateNUnitsAtLoc(1,'Nplh',Player(PLAYER_NEUTRAL_PASSIVE),FU,214.)
set center=GetRectCenter(ZW)
set FU=PolarProjectionBJ(center, 250., 180.)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("war3mapImported\\Dathylos.mdx", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call UnitAddAbility(bj_lastCreatedUnit, 'Amrf')
call UnitRemoveAbility(bj_lastCreatedUnit, 'Amrf')
call SetUnitFlyHeight(bj_lastCreatedUnit, 120., 0.)
call RemoveLocation(FU)
call RemoveLocation(center)

set FU=GetRectCenter(YU)
call CreateNUnitsAtLoc(1, 'U00Z', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call UnitAddAbility(bj_lastCreatedUnit, 'Aloc')
call RemoveLocation(FU)

set FU=GetRectCenter(ZU)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("units\\creeps\\SylvanusWindrunner\\SylvanusWindrunner.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.2, 1.2, 1.2)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(VW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("units\\nightelf\\HeroDemonHunter\\HeroDemonHunter.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(EW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("units\\nightelf\\Huntress\\Huntress.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.2, 1.2, 1.2)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(XW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("Units\\Creeps\\FirePandarenBrewmaster\\FirePandarenBrewmaster.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.1, 1.1, 1.1)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(OW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("Units\\Creeps\\EarthPandarenBrewmaster\\EarthPandarenBrewmaster.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.1, 1.1, 1.1)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(RW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("Units\\Creeps\\BansheeRanger\\BansheeRanger.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.4, 1.4, 1.4)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_AGGRESSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(IW)
call CreateNUnitsAtLoc(1, 'U00N', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call UnitAddAbility(bj_lastCreatedUnit, 'Aloc')
call RemoveLocation(FU)

set FU=GetRectCenter(AW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 270.)
call AddSpecialEffectTarget("war3mapImported\\Cosmos Eye.mdl", bj_lastCreatedUnit, "origin")
call SetUnitVertexColorBJ(bj_lastCreatedUnit, 100, 0.00, 100, 0)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(BW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("Units\\Naga\\NagaSiren\\NagaSiren.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.1, 1.1, 1.1)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(CW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("war3mapImported\\WitchDoctor.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.1, 1.1, 1.1)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(DW)
call CreateNUnitsAtLoc(1, 'E019', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call UnitAddAbility(bj_lastCreatedUnit, 'Aloc')
call RemoveLocation(FU)

set FU=GetRectCenter(FW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("units\\creeps\\LordGarithos\\LordGarithos.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.3, 1.3, 1.3)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(GW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("units\\naga\\HeroNagaSeawitch\\HeroNagaSeawitch.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, .9, .9, .9)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(HW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("war3mapImported\\Pilgrim.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.6, 1.6, 1.6)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(JW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("war3mapImported\\Retributer.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.05, 1.05, 1.05)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(KW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 180.)
call AddSpecialEffectTarget("Units\\Creeps\\HeroTinker\\HeroTinker.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(MW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("war3mapImported\\HeroSealedPython.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(PW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("units\\human\\BloodElfSpellThief\\BloodElfSpellThief.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, .9, .9, .9)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(QW)
call CreateNUnitsAtLoc(1, 'E011', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call UnitAddAbility(bj_lastCreatedUnit, 'Aloc')
call RemoveLocation(FU)

set FU=GetRectCenter(SW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("units\\nightelf\\DruidoftheTalon\\DruidoftheTalon.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.3, 1.3, 1.3)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(TW)
call CreateNUnitsAtLoc(1, 'h01C', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)

call RemoveLocation(FU)

set FU=GetRectCenter(UW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("units\\demon\\ChaosWarlock\\ChaosWarlock.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.2, 1.2, 1.2)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(WW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("units\\creeps\\assassin\\assassin.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.1, 1.1, 1.1)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(YW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("Units\\Creeps\\StormPandarenBrewmaster\\StormPandarenBrewmaster.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, .9, .9, .9)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(ZW)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("units\\undead\\HeroLich\\HeroLich.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(EY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\demon\\HeroChaosBladeMaster\\HeroChaosBladeMaster.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(XY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\creeps\\Owlbear\\Owlbear.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.05, 1.05, 1.05)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(OY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\human\\HeroPaladin\\HeroPaladin.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.3, 1.3, 1.3)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(RY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\orc\\Tauren\\Tauren.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(IY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\other\\Proudmoore\\Proudmoore.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.05, 1.05, 1.05)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(AY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\human\\HeroMountainKing\\HeroMountainKing.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.21, 1.21, 1.21)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(NY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("Units\\Creeps\\Beastmaster\\Beastmaster.mdl", bj_lastCreatedUnit, "origin")
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(BY)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call AddSpecialEffectTarget("units\\human\\TheCaptain\\TheCaptain.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.5, 1.5, 1.5)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)

set FU=GetRectCenter(CY)
call CreateNUnitsAtLoc(1, 'E01H', Player(PLAYER_NEUTRAL_PASSIVE), FU, .0)
call UnitAddAbility(bj_lastCreatedUnit, 'Aloc')
call RemoveLocation(FU)

set center=GetRectCenter(MW)
set FU=PolarProjectionBJ(center, 250., 0.)
call CreateNUnitsAtLoc(1, 'h010', Player(PLAYER_NEUTRAL_PASSIVE), FU, 90.)
call AddSpecialEffectTarget("war3mapImported\\RazorArm-Automaton.mdl", bj_lastCreatedUnit, "origin")
call SetUnitScale(bj_lastCreatedUnit, 1.8, 1.8, 1.8)
call SetUnitVertexColor(bj_lastCreatedUnit, 190, 190, 190, 255)
call SetUnitColor(bj_lastCreatedUnit, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))
call RemoveLocation(FU)
call RemoveLocation(center)

set u=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h010', - 1396., - 3900., 0.)
call AddSpecialEffectTarget("war3mapImported\\IronQueen81x.mdl", u, "origin")
call SetUnitScale(u, 1.3, 1.3, 1.3)
call SetUnitColor(u, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))


set u=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h010', 3.8, - 6200.3, 90.)
call AddSpecialEffectTarget("war3mapImported\\HeroFlameLord.mdx", u, "origin")
call SetUnitScale(u, 1.3, 1.3, 1.3)
call SetUnitColor(u, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))

set u=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h010', - 1150., - 5125., 0.)
call AddSpecialEffectTarget("war3mapImported\\Mars.mdx", u, "origin")
call SetUnitScale(u, 1.15, 1.15, 1.15)
call SetUnitColor(u, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))

set u=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h010', 3.8, - 3960., 270.)
call AddSpecialEffectTarget("war3mapImported\\LordofDarkness.MDX", u, "origin")
call SetUnitScale(u, 1.2, 1.2, 1.2)
call SetUnitColor(u, GetPlayerColor(Player(PLAYER_NEUTRAL_PASSIVE)))

set bj_wantDestroyGroup=true







call ForGroupBJ(CPE(PU), function MUO)
set u=null
set center=null
//set fx = null
endfunction
// scope HeroDummyInit ends
//===========================================================================
// Trigger: Death Zone
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
// scope NoMansLand begins


        function s__NoMansLand__Noman_destroy takes integer this returns nothing
            set s__NoMansLand__Noman_u[this]=null
            set s__NoMansLand__Noman_e[this]=null
            call s__NoMansLand__Noman_deallocate(this)
        endfunction

function NoMansLand__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local texttag tt
local location loc

if Rects_IsUnitInRect(s__NoMansLand__Noman_u[data] , NO_MANS_LAND) or Rects_IsUnitInRect(s__NoMansLand__Noman_u[data] , NO_MANS_LAND2) or Rects_IsUnitInRect(s__NoMansLand__Noman_u[data] , NO_MANS_LAND3) then
call DestroyEffect(s__NoMansLand__Noman_e[data])
set loc=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(s__NoMansLand__Noman_u[data])) )])
call SetUnitPositionLoc(s__NoMansLand__Noman_u[data], loc)
call RemoveLocation(loc)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ChaosExplosion.mdx", s__NoMansLand__Noman_u[data], "chest"))
call KillUnit(s__NoMansLand__Noman_u[data])
call DisplayTextToPlayer(GetOwningPlayer(s__NoMansLand__Noman_u[data]), 0., 0., "|cFF8A0209Y U NO LISTEN???|r")
else
call DisplayTextToPlayer(GetOwningPlayer(s__NoMansLand__Noman_u[data]), 0., 0., "|cFFC00141Y|r|cFFB80A48o|r|cFFB0134Eu|r|cFFA81C54 |r|cFFA0245Bh|r|cFF982D62a|r|cFF903668v|r|cFF883F6Ee|r|cFF804875 |r|cFF78507Ce|r|cFF705982s|r|cFF686288c|r|cFF606B8Fa|r|cFF587496p|r|cFF507D9Ce|r|cFF4886A2d|r|cFF408EA9 |r|cFF3897B0d|r|cFF30A0B6e|r|cFF28A9BCa|r|cFF20B2C3t|r|cFF18BACAh|r|cFF10C3D0.|r|cFF08CCD6.|r|cFF00D5DD.|r")
call DestroyEffect(s__NoMansLand__Noman_e[data])
set tt=CreateTextTag()
call SetTextTagText(tt, "fail", .024)
call SetTextTagPos(tt, GetUnitX(s__NoMansLand__Noman_u[data]), GetUnitY(s__NoMansLand__Noman_u[data]), .0)
call SetTextTagColor(tt, 255, 0, 0, 255)
call SetTextTagVelocity(tt, .0, .04)
call SetTextTagVisibility(tt, true)
call SetTextTagFadepoint(tt, 2.)
call SetTextTagLifespan(tt, 5.)
call SetTextTagPermanent(tt, false)
endif

call ReleaseTimer(t)
call s__NoMansLand__Noman_destroy(data)

set loc=null
set t=null
set tt=null
endfunction

function NoMansLand__Conditions takes nothing returns boolean
local integer data
local timer t
if GetOwningPlayer(GetEnteringUnit()) != Player(15) and not LWMON and GetUnitAbilityLevel(GetEnteringUnit(), 'Aloc') != 1 and GetUnitAbilityLevel(GetEnteringUnit(), 'A07S') != 1 and GetUnitTypeId(GetEnteringUnit()) != 'H013' and GetUnitTypeId(GetEnteringUnit()) != 'H014' and GetUnitTypeId(GetEnteringUnit()) != 'H015' and GetUnitTypeId(GetEnteringUnit()) != 'H016' and GetUnitTypeId(GetEnteringUnit()) != 'n00E' and GetUnitTypeId(GetEnteringUnit()) != 'h000' and GetUnitTypeId(GetEnteringUnit()) != 'ushd' and GetUnitTypeId(GetEnteringUnit()) != 'h007' and BlzIsUnitInvulnerable(GetEnteringUnit()) == false and not M5E(GetEnteringUnit()) and ( GetPlayerController(GetOwningPlayer(GetEnteringUnit())) != MAP_CONTROL_COMPUTER ) then
set t=(NewTimerEx(0)) // INLINED!!
set data=s__NoMansLand__Noman__allocate()
set s__NoMansLand__Noman_u[data]=GetEnteringUnit()
set s__NoMansLand__Noman_e[data]=AddSpecialEffectTarget("war3mapImported\\Death Spell.mdx", s__NoMansLand__Noman_u[data], "origin")
call DisplayTextToPlayer(GetOwningPlayer(s__NoMansLand__Noman_u[data]), 0., 0., "|cFF8A0209D|r|cFF8C020Be|r|cFF8E020Da|r|cFF90020Ft|r|cFF910211h|r|cFF930213 |r|cFF950215h|r|cFF970217a|r|cFF990218s|r|cFF9B021A |r|cFF9D021Cm|r|cFF9E021Ea|r|cFFA00220r|r|cFFA20222k|r|cFFA40224e|r|cFFA60126d|r|cFFA80128 |r|cFFAA012Ay|r|cFFAC012Co|r|cFFAD012Eu|r|cFFAF0130.|r|cFFB10132.|r|cFFB30133.|r|cFFB50135 |r|cFFB70137y|r|cFFB90139o|r|cFFBA013Bu|r|cFFBC013D |r|cFFBE013Fh|r|cFFC00141a|r|cFFBE013Fv|r|cFFBC013De|r|cFFBA013B |r|cFFB90139f|r|cFFB70137i|r|cFFB50135v|r|cFFB30133e|r|cFFB10132 |r|cFFAF0130s|r|cFFAD012Ee|r|cFFAC012Cc|r|cFFAA012Ao|r|cFFA80128n|r|cFFA60126d|r|cFFA40224s|r|cFFA20222 |r|cFFA00220t|r|cFF9E021Eo|r|cFF9D021C |r|cFF9B021At|r|cFF990218u|r|cFF970217r|r|cFF950215n|r|cFF930213 |r|cFF910211b|r|cFF90020Fa|r|cFF8E020Dc|r|cFF8C020Bk|r|cFF8A0209.|r")
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .2, false, function NoMansLand__Handler)
endif

set t=null
return false
endfunction

function NoMansLand__OnInit takes nothing returns nothing
local trigger trig= CreateTrigger()
set NO_MANS_LAND=Rect(- 3330., - 8192., 3200., 8192.)
set NO_MANS_LAND2=Rect(- 7601.2, 2134.2, - 5334.9, 8062.3)
set NO_MANS_LAND3=Rect(5187.3, 2134.5, 7430.6, 8062.5)
call TriggerRegisterEnterRectSimple(trig, NO_MANS_LAND)
call TriggerRegisterEnterRectSimple(trig, NO_MANS_LAND2)
call TriggerRegisterEnterRectSimple(trig, NO_MANS_LAND3)
call TriggerAddCondition(trig, Condition(function NoMansLand__Conditions))
endfunction

// scope NoMansLand ends

//===========================================================================
// Trigger: Starting Income
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0

// scope StartingIncome begins

function StartingIncome__Conditions takes nothing returns boolean
local integer i= S2I(SubString(GetEventPlayerChatString(), 16, StringLength(GetEventPlayerChatString())))
local integer i2= 0

if GAMEM and LWMON then
if i >= 200 then
set i=200
endif
if i <= 5 then
set i=5
endif
set StartingIncomeVar=i
call DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Starting income set to " + I2S(i) + ".")
loop
exitwhen i2 == 12
set Income[i2]=i
set i2=i2 + 1
endloop
endif

return false
endfunction

function StartingIncome__OnInit takes nothing returns nothing
local trigger trig= CreateTrigger()
call TriggerRegisterPlayerChatEvent(trig, Player(0), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(1), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(2), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(3), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(4), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(5), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(6), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(7), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(8), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(9), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(10), "-StartingIncome ", false)
call TriggerRegisterPlayerChatEvent(trig, Player(11), "-StartingIncome ", false)
call TriggerAddCondition(trig, Condition(function StartingIncome__Conditions))


endfunction
// scope StartingIncome ends

//===========================================================================
// Trigger: Income
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
//===========================================================================
// Trigger: Autopool Waffle
//===========================================================================
//TESH.scrollpos=84
//TESH.alwaysfold=0
 
 
// scope Autopool begins
   
        function s__Autopool__AP_destroy takes integer this returns nothing
            set s__Autopool__AP_pooler[this]=null
            set s__Autopool__AP_poolee[this]=null
            call s__Autopool__AP_deallocate(this)
        endfunction
   
    function Autopool__disableAutopool takes nothing returns nothing
        if AutopoolOn[GetPlayerId(GetTriggerPlayer())] then
            set AutopoolOn[GetPlayerId(GetTriggerPlayer())]=false
            call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "Turning off autopool...")
        endif
 
    endfunction
   
    function Autopool__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local integer gold
        local integer wood
        local integer gold2
        local integer wood2
       
        if GetPlayerSlotState(s__Autopool__AP_poolee[data]) != PLAYER_SLOT_STATE_PLAYING or GetPlayerSlotState(s__Autopool__AP_pooler[data]) != PLAYER_SLOT_STATE_PLAYING or not AutopoolOn[GetPlayerId(s__Autopool__AP_pooler[data])] then
            set AutopoolOn2[GetPlayerId(s__Autopool__AP_pooler[data])]=false
            call DisplayTextToPlayer(s__Autopool__AP_pooler[data], 0., 0., "Autosend disabled.")
            call s__Autopool__AP_destroy(data)
            call ReleaseTimer(t)
            else
           
            set gold=GetPlayerState(s__Autopool__AP_pooler[data], PLAYER_STATE_RESOURCE_GOLD)
            set wood=GetPlayerState(s__Autopool__AP_pooler[data], PLAYER_STATE_RESOURCE_LUMBER)
           
            call SetPlayerState(s__Autopool__AP_pooler[data], PLAYER_STATE_RESOURCE_GOLD, 0)
            call SetPlayerState(s__Autopool__AP_pooler[data], PLAYER_STATE_RESOURCE_LUMBER, 0)
           
            set gold2=GetPlayerState(s__Autopool__AP_poolee[data], PLAYER_STATE_RESOURCE_GOLD)
            set wood2=GetPlayerState(s__Autopool__AP_poolee[data], PLAYER_STATE_RESOURCE_LUMBER)
           
            if gold + gold2 >= 10000000 then
                call SetPlayerState(s__Autopool__AP_poolee[data], PLAYER_STATE_RESOURCE_GOLD, 10000000)
                call DisplayTextToPlayer(s__Autopool__AP_pooler[data], 0., 0., "Warning: Autopool player has maximum gold. Stop pooling to prevent loss of resources. To turn off autosend, type -autopool/autosend off.")
                call DisplayTextToPlayer(s__Autopool__AP_poolee[data], 0., 0., "Warning: You have maximum gold. Either spend it or convert it to prevent loss of resources.")
                else
                call SetPlayerState(s__Autopool__AP_poolee[data], PLAYER_STATE_RESOURCE_GOLD, gold + gold2)
            endif
           
            call SetPlayerState(s__Autopool__AP_poolee[data], PLAYER_STATE_RESOURCE_LUMBER, wood + wood2)
           
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 10., false, function Autopool__Handler)
        endif
       
        set t=null
    endfunction
    
    function Autopool__setAutopool takes player pooler,player poolee returns nothing
        local timer t
        local integer data
        set t=(NewTimerEx(0)) // INLINED!!
        set data=s__Autopool__AP__allocate()
       
        set s__Autopool__AP_pooler[data]=pooler
        set s__Autopool__AP_poolee[data]=poolee
       
        set AutopoolOn[GetPlayerId(s__Autopool__AP_pooler[data])]=true
        set AutopoolOn2[GetPlayerId(s__Autopool__AP_pooler[data])]=true
       
        call DisplayTextToPlayer(pooler, 0., 0., "Autosending to " + GetPlayerName(poolee) + ".")
        call DisplayTextToPlayer(poolee, 0., 0., "Automatically receiving gold from " + GetPlayerName(pooler) + ".")
       
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, 10., false, function Autopool__Handler)
        
        set t=null
    endfunction    
    
   
    function Autopool__Conditions takes nothing returns boolean
        local string payload=  ( SubString(GetEventPlayerChatString(), 10, StringLength(GetEventPlayerChatString())) )
        local integer PlayerString
        local timer t
        local integer data
        if payload == "off" then
            call Autopool__disableAutopool()
            set t=null
            set payload=null
            return false
        endif
        set PlayerString=S2I(payload) - 1
        if PlayerString < 12 and PlayerString >= 0 then
            if not AutopoolOn[GetPlayerId(GetTriggerPlayer())] and GetPlayerSlotState(Player(PlayerString)) == PLAYER_SLOT_STATE_PLAYING and IsPlayerAlly(GetTriggerPlayer(), Player(PlayerString)) and not AutopoolOn2[GetPlayerId(GetTriggerPlayer())] and GetTriggerPlayer() != Player(PlayerString) and PlayerString != GetPlayerId(GetTriggerPlayer()) and GetPlayerController(Player(PlayerString)) != MAP_CONTROL_COMPUTER then
                call Autopool__setAutopool(GetTriggerPlayer() , Player(PlayerString))
            else
                call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "Error: Invalid input or you are already autosending someone. To turn off autosend, type -autopool/-autosend off.")
            endif
            else
            call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "Error: Invalid input.")
        endif
        
        set payload=null
        set t=null
        return false
    endfunction
   
    function Autopool__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-autosend", false)
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-autopool", false)
        set AutopoolOn[pid]=false
        set AutopoolOn2[pid]=false
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function Autopool__Conditions))
    endfunction
// scope Autopool ends
//===========================================================================
// Trigger: Pick Aether Construct
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AetherConstructSelect begins

    function AetherConstructSelect__Conditions takes nothing returns boolean
    local location l__HeroCreateLocation
    if ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) then
        set l__HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
        call CreateNUnitsAtLoc(1, 'U000', GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, 270.)
        if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
            call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
        endif
        set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
        set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
        //call AddSpecialEffectTargetUnitBJ("origin",bj_lastCreatedUnit,UD[(1+GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)))])
        call AddSpecialEffectLocBJ(l__HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, .3)
        //call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        //call DestroyEffect(bj_lastCreatedEffect)
        call UnitAddAbility(GetTriggerUnit(), 'A0ER')
        call UnitRemoveAbility(GetTriggerUnit(), 'A0ER')
        call RemoveUnit(GetTriggerUnit())
        call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
        call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[40])
        call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
        call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[40])
    endif
    
    set l__HeroCreateLocation=null
    return false
    endfunction
    
    function AetherConstructSelect__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterUnitInRangeSimple(t, 80., XQV)
        call TriggerAddCondition(t, Condition(function AetherConstructSelect__Conditions))
    endfunction
// scope AetherConstructSelect ends
//===========================================================================
// Trigger: Pick Firelord
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope FirelordSelect begins

    function FirelordSelect__Conditions takes nothing returns boolean
    local location l__HeroCreateLocation
    if ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) then
        set l__HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
        call CreateNUnitsAtLoc(1, 'N01O', GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, 270.)
        if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
            call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
        endif
        set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
        set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
        //call AddSpecialEffectTargetUnitBJ("origin",bj_lastCreatedUnit,UD[(1+GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)))])
        call AddSpecialEffectLocBJ(l__HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, .3)
        //call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        //call DestroyEffect(bj_lastCreatedEffect)
        //call UnitAddAbility(GetTriggerUnit(),'A0ER')
        //call UnitRemoveAbility(GetTriggerUnit(),'A0ER')
        call RemoveUnit(GetTriggerUnit())
        call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
        call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[46])
        call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
        call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[46])
    endif
    
    set l__HeroCreateLocation=null
    return false
    endfunction
    
    function FirelordSelect__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterUnitInRangeSimple(t, 80., FIRELORDCIRCLE)
        call TriggerAddCondition(t, Condition(function FirelordSelect__Conditions))
    endfunction
// scope FirelordSelect ends
//===========================================================================
// Trigger: Pick Tritus
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope TritusSelect begins

    function TritusSelect__Conditions takes nothing returns boolean
    local location l__HeroCreateLocation
    if ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) then
        set l__HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
        call CreateNUnitsAtLoc(1, 'E01Z', GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, 270.)
        if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
            call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
        endif
        set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
        set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
        //call AddSpecialEffectTargetUnitBJ("origin",bj_lastCreatedUnit,UD[(1+GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)))])
        call AddSpecialEffectLocBJ(l__HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, .3)
        //call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        //call DestroyEffect(bj_lastCreatedEffect)
        //call UnitAddAbility(GetTriggerUnit(),'A0ER')
        //call UnitRemoveAbility(GetTriggerUnit(),'A0ER')
        call RemoveUnit(GetTriggerUnit())
        call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
        call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[56])
        call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
        call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[56])
    endif
    
    set l__HeroCreateLocation=null
    return false
    endfunction
    
    function TritusSelect__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterUnitInRangeSimple(t, 80., TRITUSCIRCLE)
        call TriggerAddCondition(t, Condition(function TritusSelect__Conditions))
    endfunction
// scope TritusSelect ends
//===========================================================================
// Trigger: Pick Moloch
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope MolochSelect begins

    function MolochSelect__Conditions takes nothing returns boolean
    local location l__HeroCreateLocation
    if ( GetUnitTypeId(GetTriggerUnit()) == 'ushd' ) then
        set l__HeroCreateLocation=GetRectCenter(GD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )])
        call CreateNUnitsAtLoc(1, 'E020', GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, 270.)
        if OD[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )] then
            call UnitAddItemByIdSwapped('I01I', bj_lastCreatedUnit)
        endif
        set LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]=bj_lastCreatedUnit
        set MQ[( 1 + GetPlayerId(GetTriggerPlayer()) )]=bj_lastCreatedUnit
        //call AddSpecialEffectTargetUnitBJ("origin",bj_lastCreatedUnit,UD[(1+GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)))])
        call AddSpecialEffectLocBJ(l__HeroCreateLocation, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl")
        call DestroyEffect(bj_lastCreatedEffect)
        call PanCameraToTimedLocForPlayer(GetOwningPlayer(GetTriggerUnit()), l__HeroCreateLocation, .3)
        //call AddSpecialEffectLocBJ(GetUnitLoc(GetTriggerUnit()),"Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        //call DestroyEffect(bj_lastCreatedEffect)
        //call UnitAddAbility(GetTriggerUnit(),'A0ER')
        //call UnitRemoveAbility(GetTriggerUnit(),'A0ER')
        call RemoveUnit(GetTriggerUnit())
        call MultiboardSetItemStyleBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), true, true)
        call MultiboardSetItemIconBJ(AS[1], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[57])
        call MultiboardSetItemStyleBJ(AS[2], 1, ( YS + ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 3 ) ), true, true)
        call MultiboardSetItemIconBJ(AS[2], 1, ( WS[( 1 + GetPlayerId(GetOwningPlayer(bj_lastCreatedUnit)) )] + 2 ), SQ[57])
    endif
    
    set l__HeroCreateLocation=null
    return false
    endfunction
    
    function MolochSelect__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterUnitInRangeSimple(t, 80., MOLOCHCIRCLE)
        call TriggerAddCondition(t, Condition(function MolochSelect__Conditions))
    endfunction
// scope MolochSelect ends
//===========================================================================
// Trigger: Summon Courier
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope SummonCourier begins

function SummonCourier__OnSpell takes nothing returns boolean
local unit u
local integer i
local real a
local real x
local real y
        if GetSpellAbilityId() == 'A0FZ' then
        
        set u=GetTriggerUnit()
        set i=GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
        set a=GetUnitFacing(u)
        set x=GetUnitX(u) + 200. * Cos(a * bj_DEGTORAD)
        set y=GetUnitY(u) + 200. * Sin(a * bj_DEGTORAD)
        
        if SummonCourier__Courier[i] != null or UnitAlive(SummonCourier__Courier[i]) then
        call UnitRemoveItemFromSlot(SummonCourier__Courier[i], 0)
        call UnitRemoveItemFromSlot(SummonCourier__Courier[i], 1)
        call KillUnit(SummonCourier__Courier[i])
        endif
        
        set SummonCourier__Courier[i]=null
    
        if GetPlayerName(Player(i)) == "Strikest#1504" or GetPlayerName(Player(i)) == "KindInMind#2657" or GetPlayerName(Player(i)) == "Mike#22559" or GetPlayerName(Player(i)) == "MokT#1639" or GetPlayerName(Player(i)) == "Fabs#1762" or GetPlayerName(Player(i)) == "dkang#1347" or GetPlayerName(Player(i)) == "Vision#2578" or GetPlayerName(Player(i)) == "SpeedMachine#11873" or GetPlayerName(Player(i)) == "Fun#11323" or GetPlayerName(Player(i)) == "useless#1203" or GetPlayerName(Player(i)) == "Quan#12708" or GetPlayerName(Player(i)) == "vicemob#1569" or GetPlayerName(Player(i)) == "DrunkPenguin#21498" or GetPlayerName(Player(i)) == "Rat#21173" or GetPlayerName(Player(i)) == "Fumandra#2247" or GetPlayerName(Player(i)) == "Loona#1398" or GetPlayerName(Player(i)) == "DrunkCat#1765" then


	if GetPlayerName(Player(i)) == "Strikest#1504" then

	if GetUnitTypeId(LC[1 + GetPlayerId(Player(i))]) == 'E020' then

	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e021', x, y, GetUnitFacing(u))

else

	if GetRandomInt(0, 100) >= 50 then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e01W', x, y, GetUnitFacing(u))
	else
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00M', x, y, GetUnitFacing(u))
	endif
	endif

endif

	if GetPlayerName(Player(i)) == "Fabs#1762" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00H', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "DrunkCat#1765" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e01V', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "Fumandra#2247" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e01N', x, y, GetUnitFacing(u))
	endif


	if GetPlayerName(Player(i)) == "DrunkPenguin#21498" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00W', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "Loona#1398" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e01T', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "KindInMind#2657" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00S', x, y, GetUnitFacing(u))
	call SetUnitVertexColor(SummonCourier__Courier[i], 100, 150, 255, 128)
	endif


	if GetPlayerName(Player(i)) == "Rat#21173" then
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e010', x, y, GetUnitFacing(u))
	call SetUnitVertexColor(SummonCourier__Courier[i], 100, 150, 255, 128)
	endif

	if GetPlayerName(Player(i)) == "Mike#22559" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00I', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "Quan#12708" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00V', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "vicemob#1569" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00T', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "MokT#1639" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00F', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "dkang#1347" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00J', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "Fun#11323" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00N', x, y, GetUnitFacing(u))
	endif


	
	if GetPlayerName(Player(i)) == "SpeedMachine#11873" then
	if GetRandomInt(0, 100) >= 50 then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00L', x, y, GetUnitFacing(u))
	else
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00O', x, y, GetUnitFacing(u))
	endif
	endif

	if GetPlayerName(Player(i)) == "Vision#2578" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00K', x, y, GetUnitFacing(u))
	endif

	if GetPlayerName(Player(i)) == "useless#1203" then
	set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00P', x, y, GetUnitFacing(u))
	endif

        else
        set SummonCourier__Courier[i]=CreateUnit(Player(i), 'e00A', x, y, GetUnitFacing(u))
	
        endif
        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earthshock.mdl", SummonCourier__Courier[i], "chest"))
        
        endif
        
        set u=null
        return false
endfunction
//===========================================================================
function SummonCourier__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(trig, Condition(function SummonCourier__OnSpell))
endfunction
// scope SummonCourier ends
//===========================================================================
// Trigger: UnitCleanup
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope UnitCleanup begins

function UnitCleanup__Actions takes nothing returns boolean
local unit u= GetTriggerUnit()

if IsUnitInGroup(u, PATHING_GROUP) then
    call GroupRemoveUnit(PATHING_GROUP, u)
endif

set u=null
return false
endfunction

//===========================================================================
function UnitCleanup__OnInit takes nothing returns nothing
    local trigger t= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(t, Condition(function UnitCleanup__Actions))
    set t=null
endfunction

// scope UnitCleanup ends
//===========================================================================
// Trigger: Corruption
//===========================================================================

// scope Corruption begins

function Corruption__Actions takes nothing returns boolean
local player p
local integer id=0
local integer o
local real ar
local real x
local real y
local real a
local unit u
local integer i= 0
local item it
loop
exitwhen id > 9
	set p=Player(id)
	if UnitAlive(LC[id + 1]) then

		loop
		exitwhen i > 5
		set it=UnitItemInSlot(LC[id + 1], i)
		if GetItemType(it) == ITEM_TYPE_ARTIFACT then
		set CorruptAmount[id]=CorruptAmount[id] + GetItemLevel(it)
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[id])
		endif
		set i=i + 1
		endloop
	if GetUnitAbilityLevel(LC[id + 1], 'B05P') == 1 then
		set CorruptAmount[id]=CorruptAmount[id] + 10
		call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[id])
	endif
	if CorruptAmount[id] >= 100 and not BlzIsUnitInvulnerable(LC[id + 1]) and GetUnitAbilityLevel(LC[id + 1], 'A0N9') != 1 then
		if IsPlayerAlly(p, Player(10)) then
			set o=11
		else
			set o=10
		endif
		set x=GetUnitX(LC[id + 1])
		set y=GetUnitY(LC[id + 1])
		set a=GetUnitFacing(LC[id + 1])

		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", LC[id + 1], "chest"))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\CorpseExplodeFire.mdx", LC[id + 1], "chest"))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\CorpseExplodeFire.mdx", LC[id + 1], "head"))
	set ar=BlzGetUnitArmor(LC[id + 1])
	call KillUnit(LC[id + 1])
		call DestroyEffect(AddSpecialEffect("BigBloodEX-NoSplat-NoGutz.mdx", x, y))
		//call DestroyEffect(AddSpecialEffect("war3mapImported\\Blood Explosion.mdx",x,y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\Soul Requiem.mdx", x, y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\Soul Blast.mdx", x, y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\OrbofCorruption.mdx", x, y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\Soul Discharge Purple.mdx", x, y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\Call of Dread Purple.mdx", x, y))
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[1 + id] + ( GetPlayerName(p) + "|r" ) ) + ( " |c00BD00EEh|r|c00B800D6a|r|c00B400BEs|r|c00AF01A7 |r|c00AB018Fl|r|c00A60177e|r|c00A2015Ft|r|c009D0147 |r|c00990230T|r|c00940218h|r|c00900200e|r|c0093021B |r|c00960137C|r|c009A0152o|r|c009D016Dr|r|c00A00089r|r|c00A300A4u|r|c00A100A3p|r|c009E00A2t|r|c009C00A2o|r|c009A00A1r|r|c009700A0 |r|c0095009Fo|r|c0093009Ev|r|c0091009Ee|r|c008E009Dr|r|c008C009Ct|r|c008A009Ba|r|c0087009Ak|r|c0085009Ae|r|c00830099 |r|c00800098h|r|c007E0097i|r|c007C0096m|r|c007A0096.|r|c00770095.|r|c00750094.|r" ) ))
		set u=CreateUnit(Player(o), 'u002', x, y, a)
		call BlzSetUnitMaxHP(u, ( BlzGetUnitMaxHP(LC[id + 1]) * 5 ) + ( BlzGetUnitMaxMana(LC[id + 1]) * 5 ))
		call SetWidgetLife(u, ( BlzGetUnitMaxHP(LC[id + 1]) * 5 ) + ( BlzGetUnitMaxMana(LC[id + 1]) * 5 ))
		call BlzSetUnitArmor(u, ar)
		call BlzSetUnitBaseDamage(u, ( BlzGetUnitMaxHP(LC[id + 1]) / 5 ) + ( BlzGetUnitMaxMana(LC[id + 1]) / 5 ), 0)
	set CorruptAmount[id]=0
	call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, 0)
	endif
endif
set i=0
set id=id + 1
endloop

set it=null
set u=null
set p=null
return false
endfunction

function Corruption__OnInit takes nothing returns nothing
    local trigger t= CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(t, 5)
    call TriggerAddCondition(t, Condition(function Corruption__Actions))
endfunction

// scope Corruption ends

//===========================================================================
// Trigger: Shopsystem
//===========================================================================
//TESH.scrollpos=12
//TESH.alwaysfold=0

//===========================================================================
// Trigger: ExampleTrigger
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0


//===========================================================================
// Trigger: Evasion Mastery
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope EvasionMastery begins


    function EvasionMastery__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0AP') >= 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= EvasionMastery__values[GetUnitAbilityLevel(u, 'A0AP')] and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function EvasionMastery__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function EvasionMastery__Actions))

	set EvasionMastery__values[1]=15
	set EvasionMastery__values[2]=20
	set EvasionMastery__values[3]=25
	set EvasionMastery__values[4]=30
	set EvasionMastery__values[5]=45
	set EvasionMastery__values[6]=50
	set EvasionMastery__values[7]=55
	set EvasionMastery__values[8]=60
	set EvasionMastery__values[9]=65
	set EvasionMastery__values[10]=70
    endfunction
    
// scope EvasionMastery ends
//===========================================================================
// Trigger: Combat MasteryEvasion
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope CombatMasteryEvasion begins


    function CombatMasteryEvasion__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0AC') >= 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= GetUnitAbilityLevel(u, 'A0AC') * 5 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function CombatMasteryEvasion__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CombatMasteryEvasion__Actions))
    endfunction
    
// scope CombatMasteryEvasion ends
//===========================================================================
// Trigger: Glythides
//===========================================================================
//TESH.scrollpos=5
//TESH.alwaysfold=0
// scope GlythidesGift begins

        function s__GlythidesGift__Glyth_destroy takes integer this returns nothing
	set s__GlythidesGift__Glyth_p[this]=null
            set s__GlythidesGift__Glyth_u[this]=null
            call s__GlythidesGift__Glyth_deallocate(this)
        endfunction

function GlythidesGift__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if GetUnitAbilityLevel(s__GlythidesGift__Glyth_u[data], 'BNdh') != 1 or s__GlythidesGift__Glyth_i[data] == 13 then
call CameraClearNoiseForPlayer(s__GlythidesGift__Glyth_p[data])
call ReleaseTimer(t)
call s__GlythidesGift__Glyth_destroy(data)
else
set s__GlythidesGift__Glyth_i[data]=s__GlythidesGift__Glyth_i[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1., false, function GlythidesGift__Handler)
endif

set t=null
endfunction

function GlythidesGift__Conditions takes nothing returns nothing
local integer data
local timer t
if GetSpellTargetUnit() == LC[( 1 + GetPlayerId(GetOwningPlayer(GetSpellTargetUnit())) )] then
set t=(NewTimerEx(0)) // INLINED!!
set data=s__GlythidesGift__Glyth__allocate()
set s__GlythidesGift__Glyth_u[data]=GetSpellTargetUnit()
set s__GlythidesGift__Glyth_i[data]=0
set s__GlythidesGift__Glyth_p[data]=GetOwningPlayer(s__GlythidesGift__Glyth_u[data])
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!

call CameraSetTargetNoiseForPlayer(s__GlythidesGift__Glyth_p[data], 1600., 600.)

call TimerStart(t, .01, false, function GlythidesGift__Handler)
endif

set t=null
endfunction

function GlythidesGift__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A03X' , function GlythidesGift__Conditions)
endfunction

// scope GlythidesGift ends

//===========================================================================
// Trigger: Charge
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope Charge begins


        function s__Charge__TempA_create takes nothing returns integer
            local integer data= s__Charge__TempA__allocate()
            if s__Charge__TempA_g[data] == null then
                set s__Charge__TempA_g[data]=CreateGroup()
            endif
            return data
        endfunction

        function s__Charge__TempA_destroy takes integer this returns nothing
            call GroupClear(s__Charge__TempA_g[this])
		call DestroyGroup(s__Charge__TempA_g[this])
		set s__Charge__TempA_g[this]=null
            set s__Charge__TempA_c[this]=null
            set s__Charge__TempA_fx1[this]=null
            call s__Charge__TempA_deallocate(this)
        endfunction





    function Charge__FilterActions takes nothing returns boolean
        local unit u= GetFilterUnit()
 local unit d
        local player p
        if UnitAlive(u) then
            if IsUnitEnemy(u, GetOwningPlayer(Charge__CASTER)) and not IsUnitInGroup(u, Charge__GROUP2) then
                call UnitDamageTargetEx(Charge__CASTER , u , Charge__DAMAGE , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
                call GroupAddUnit(Charge__GROUP2, u)

set p=GetOwningPlayer(Charge__CASTER)

if p == Player(10) then
set p=Player(12)
else
if p == Player(11) then
set p=Player(13)
endif
endif


set d=CreateUnit(p, 'h007', GetUnitX(u), GetUnitY(u), 0.)


call UnitAddAbility(d, 'A0O2')
call IssueTargetOrderById(d, 852095, u)
call UnitApplyTimedLife(d, 'BTLF', 1.)


                call DestroyEffect(AddSpecialEffectTarget(Charge__EFFECT, u, Charge__ATTACH_POINT))
            endif
        endif

	set p=null
	set d=null
        set u=null
        return false
    endfunction

function Charge__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__Charge__TempA_current[data] == 32 then
call DestroyEffect(s__Charge__TempA_fx1[data])
call ReleaseTimer(t)
call s__Charge__TempA_destroy(data)
else

set Charge__GROUP2=s__Charge__TempA_g[data]
set Charge__CASTER=s__Charge__TempA_c[data]
set Charge__DAMAGE=s__Charge__TempA_dmg[data]
call GroupEnumUnitsInRange(Charge__GROUP, s__Charge__TempA_x[data], s__Charge__TempA_y[data], 200., Filter(function Charge__FilterActions))

call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", s__Charge__TempA_x[data], s__Charge__TempA_y[data]))

if TRUEENFOS then

set s__Charge__TempA_x[data]=s__Charge__TempA_x[data] + 45 * Cos(s__Charge__TempA_a[data] * bj_DEGTORAD)
set s__Charge__TempA_y[data]=s__Charge__TempA_y[data] + 45 * Sin(s__Charge__TempA_a[data] * bj_DEGTORAD)

else

set s__Charge__TempA_x[data]=s__Charge__TempA_x[data] + 18 * Cos(s__Charge__TempA_a[data] * bj_DEGTORAD)
set s__Charge__TempA_y[data]=s__Charge__TempA_y[data] + 18 * Sin(s__Charge__TempA_a[data] * bj_DEGTORAD)

endif

if IsTerrainWalkable(s__Charge__TempA_x[data] , s__Charge__TempA_y[data]) then

call SetUnitX(s__Charge__TempA_c[data], s__Charge__TempA_x[data])
call SetUnitY(s__Charge__TempA_c[data], s__Charge__TempA_y[data])

else

call DestroyEffect(s__Charge__TempA_fx1[data])
call ReleaseTimer(t)
call s__Charge__TempA_destroy(data)

set t=null

return

endif


set s__Charge__TempA_current[data]=s__Charge__TempA_current[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function Charge__Handler)


endif

set t=null
endfunction

function Charge__Actions takes nothing returns nothing
local timer t
local integer data= s__Charge__TempA_create()
local integer lvl

set s__Charge__TempA_c[data]=GetTriggerUnit()
set s__Charge__TempA_x[data]=GetUnitX(s__Charge__TempA_c[data])
set s__Charge__TempA_y[data]=GetUnitY(s__Charge__TempA_c[data])
set s__Charge__TempA_a[data]=GetUnitFacing(s__Charge__TempA_c[data])
set s__Charge__TempA_current[data]=0


set s__Charge__TempA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Valiant Charge.mdx", s__Charge__TempA_c[data], "chest")
call BlzSetSpecialEffectScale(s__Charge__TempA_fx1[data], .65)

if TRUEENFOS then

set s__Charge__TempA_dmg[data]=BlzGetUnitBaseDamage(s__Charge__TempA_c[data], 0) * 3.
else

set s__Charge__TempA_dmg[data]=BlzGetUnitBaseDamage(s__Charge__TempA_c[data], 0) * 2.
endif


set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function Charge__Handler)

set t=null
endfunction


//===========================================================================
function Charge__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Charge__SPELL_ID , function Charge__Actions)
endfunction
// scope Charge ends

//===========================================================================
// Trigger: Triple Strike
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope TripleStrike begins


    function TripleStrike__Actions takes nothing returns boolean
        local unit u= GetEventDamageSource()
 local unit d
 local player p

        if GetUnitAbilityLevel(u, TripleStrike__SPELL_ID) == 1 and GetEventDamage() > 0 and u != GetTriggerUnit() and (CI[NI]) and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) then // INLINED!!
            if TripleStrike[GetUnitUserData(u)] > 0 then
		set TripleStrike[GetUnitUserData(u)]=TripleStrike[GetUnitUserData(u)] - 1
			

		if TripleStrike[GetUnitUserData(u)] == 0 then
		call UnitRemoveAbility(u, TripleStrike__SPELL_ID2)
		call BlzSetUnitAttackCooldown(u, 3.6, 0)

		endif
		else

		set TripleStrike[GetUnitUserData(u)]=2

		call UnitAddAbility(u, TripleStrike__SPELL_ID2)
		call UnitMakeAbilityPermanent(u, true, TripleStrike__SPELL_ID2)
		call BlzSetUnitAttackCooldown(u, .35, 0)
            endif

		if GetRandomInt(0, 99) <= 14 then

set p=GetOwningPlayer(u)

if p == Player(10) then
set p=Player(12)
else
if p == Player(11) then
set p=Player(13)
endif
endif
			
		
set d=CreateUnit(p, 'h007', GetUnitX(u), GetUnitY(u), 0.)


call UnitAddAbility(d, 'A0O3')
call IssueTargetOrderById(d, 852095, GetTriggerUnit())
call UnitApplyTimedLife(d, 'BTLF', 1.)
		endif
endif



	set p=null
        set d=null
        set u=null
        return false
    endfunction
    
    function TripleStrike__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function TripleStrike__Actions))
    endfunction
    
// scope TripleStrike ends
//===========================================================================
// Trigger: Nuclear Option
//===========================================================================
// scope NuclearOption begins
 
 

 
    function NuclearOption__Actions takes nothing returns nothing
 local unit u= GetTriggerUnit()
local unit c
local player p

set p=GetOwningPlayer(u)

if p == Player(10) then
set p=Player(12)
else
if p == Player(11) then
set p=Player(13)
endif
endif

set c=CreateUnit(p, 'h007', GetUnitX(u), GetUnitY(u), GetUnitFacing(u))

call UnitAddAbility(c, 'A084')
call IssuePointOrderById(c, 852652, GetSpellTargetX(), GetSpellTargetY())
call UnitApplyTimedLife(c, 'BTLF', 4.)


set p=null
set c=null
set u=null
    endfunction
    


        function NuclearOption__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(NuclearOption__SPELL_ID , function NuclearOption__Actions)
    endfunction
// scope NuclearOption ends

//===========================================================================
// Trigger: Spider Poison
//===========================================================================
//===========================================================================
// Trigger: Creep Evasion 80
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope CreepEvasion80 begins

    function CreepEvasion80__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A04H') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 80 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'BEar') != 1 and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitTypeId(a) != 'h00L' and GetUnitTypeId(a) != 'h01Q' and GetUnitTypeId(a) != 'h01T' then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function CreepEvasion80__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CreepEvasion80__Actions))
    endfunction
    
// scope CreepEvasion80 ends
//===========================================================================
// Trigger: Creep Evasion 15
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope CreepEvasion15 begins

    function CreepEvasion15__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'ACev') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 15 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'BEar') != 1 and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitTypeId(a) != 'h01Q' and GetUnitTypeId(a) != 'h01T' then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function CreepEvasion15__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CreepEvasion15__Actions))
    endfunction
    
// scope CreepEvasion15 ends
//===========================================================================
// Trigger: Curse Miss
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope CurseMiss begins

    function CurseMiss__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(a, 'Bcrs') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 66 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'BEar') != 1 and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function CurseMiss__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CurseMiss__Actions))
    endfunction
    
// scope CurseMiss ends
//===========================================================================
// Trigger: Always Berserk
//===========================================================================
// scope AlwaysBerserk begins

function AlwaysBerserk__Conditions takes nothing returns boolean
local unit u= GetAttacker()
if GetUnitAbilityLevel(u, 'Absk') == 1 and GetUnitAbilityLevel(u, 'Bbsk') != 1 then
call IssueImmediateOrderById(u, 852100)
endif
if GetUnitAbilityLevel(u, 'A0KQ') == 1 and GetUnitAbilityLevel(u, 'Bbsk') != 1 then
call IssueImmediateOrderById(u, 852561)
endif
set u=null
return false
endfunction


function AlwaysBerserk__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ATTACKED)
        call TriggerAddCondition(t, Condition(function AlwaysBerserk__Conditions))
endfunction
// scope AlwaysBerserk ends
//===========================================================================
// Trigger: SetPathing
//===========================================================================
//TESH.scrollpos=10
//TESH.alwaysfold=0


//===========================================================================
// Trigger: Leap
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope Leapy begins





        function s__Leapy__Leapy_destroy takes integer this returns nothing
        set s__Leapy__Leapy_c[this]=null
	set s__Leapy__Leapy_t[this]=null
	call DestroyEffect(s__Leapy__Leapy_fx[this])
call DestroyEffect(s__Leapy__Leapy_fx2[this])
	//call BJDebugMsg("destroyed")
	set s__Leapy__Leapy_fx[this]=null
set s__Leapy__Leapy_fx2[this]=null
        call s__Leapy__Leapy_deallocate(this)
        endfunction

    function Leapy__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
 local real d= 100.

	if TRUEENFOS then
	set d=300.
	endif
    
    if IsUnitEnemy(u, GetOwningPlayer(Leapy__CASTER)) and UnitAlive(u) and GetUnitTypeId(u) != 'H00B' then
    call UnitDamageTargetEx(Leapy__CASTER , u , Leapy__DAMAGE + BlzGetUnitMaxHP(u) * .15 , false , true , ATTACK_TYPE_SIEGE , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", u, "chest"))
	if not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and GetUnitTypeId(u) != 'E00E' and not BlzIsUnitInvulnerable(u) then
	call M6E(u , d , .75 , bj_RADTODEG * Atan2(GetUnitY(u) - Leapy__YY, GetUnitX(u) - Leapy__XX) , "war3mapImported\\Dust.mdx" , .0 , true , false)
	endif

	endif
    
    set u=null
    return false
    endfunction

    function Leapy__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

	//call BJDebugMsg(R2S(data.h))
	if s__Leapy__Leapy_d[data] >= .6 then

    call SetUnitFlyHeight(s__Leapy__Leapy_c[data], 0., 0.0)
if GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'h00S' then
//call BJDebugMsg("happened")
call DestroyEffect(AddSpecialEffect("war3mapImported\\Blood Massacre.mdx", GetUnitX(s__Leapy__Leapy_c[data]), GetUnitY(s__Leapy__Leapy_c[data])))
call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodEX-Special.mdx", GetUnitX(s__Leapy__Leapy_c[data]), GetUnitY(s__Leapy__Leapy_c[data])))
endif
	call IssueTargetOrder(s__Leapy__Leapy_c[data], "attack", s__Leapy__Leapy_t[data])
if TRUEENFOS then
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__Leapy__Leapy_c[data] ) , ( BONUS_ATTACK_SPEED ) , (( ( 1.2 * ( XT - 2 ) ) )*1.0) , (( 2.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__Leapy__Leapy_c[data] ) , ( BONUS_MOVEMENT_SPEED ) , (( ( 120. + ( ( XT - 3 ) * 30. ) ) )*1.0) , (( 3.)*1.0) , true) // INLINED!!
else
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__Leapy__Leapy_c[data] ) , ( BONUS_ATTACK_SPEED ) , (( ( .75 * ( XT - 2 ) ) )*1.0) , (( 2.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__Leapy__Leapy_c[data] ) , ( BONUS_MOVEMENT_SPEED ) , (( ( 60. * ( XT - 2 ) ) )*1.0) , (( 3.)*1.0) , true) // INLINED!!
endif

if ( TRUEENFOS and GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e00Z' ) or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e01S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02I' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02J' then
set Leapy__CASTER=s__Leapy__Leapy_c[data]
if TRUEENFOS then
set Leapy__DAMAGE=BlzGetUnitBaseDamage(s__Leapy__Leapy_c[data], 0) * 1.5
else
set Leapy__DAMAGE=BlzGetUnitBaseDamage(s__Leapy__Leapy_c[data], 0) * .75
endif
set Leapy__XX=GetUnitX(s__Leapy__Leapy_c[data])
set Leapy__YY=GetUnitY(s__Leapy__Leapy_c[data])
call GroupEnumUnitsInRange(Leapy__GROUP, Leapy__XX, Leapy__YY, 256., Filter(function Leapy__FilterActions))
call DestroyEffect(AddSpecialEffect("war3mapImported\\NewDirtEXNofire.mdx", Leapy__XX, Leapy__YY))
endif
    call s__Leapy__Leapy_destroy(data)
    call ReleaseTimer(t)

else

if s__Leapy__Leapy_d[data] < .48 then

set s__Leapy__Leapy_h[data]=s__Leapy__Leapy_h[data] + 6
call SetUnitFlyHeight(s__Leapy__Leapy_c[data], s__Leapy__Leapy_h[data], 0.0)
else
set s__Leapy__Leapy_h[data]=s__Leapy__Leapy_h[data] - 24
call SetUnitFlyHeight(s__Leapy__Leapy_c[data], s__Leapy__Leapy_h[data], 0.0)
endif


set s__Leapy__Leapy_d[data]=s__Leapy__Leapy_d[data] + .01
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Leapy__Handler)
    endif
    
    set t=null
    endfunction

   
    function Leapy__Actions takes nothing returns nothing
    local timer t
    local integer data
 local real d= 0
local real a= 0
local real cx= 0
local real cy= 0
local real tx=0
local real ty=0
local real dx=0
local real dy= 0
local real x= 0
local real y= 0
local real a2= 0
local player p

	if ( ( ( not TRUEENFOS and GetRandomInt(0, 100) >= 65 ) or ( TRUEENFOS and GetRandomInt(0, 100) >= 33 ) ) and ( GetUnitTypeId(GetTriggerUnit()) == 'n02E' ) ) or ( ( ( not TRUEENFOS and GetRandomInt(0, 100) >= 90 ) or ( TRUEENFOS and GetRandomInt(0, 100) >= 33 ) ) and ( GetUnitTypeId(GetTriggerUnit()) == 'n03M' ) ) and GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_COMPUTER then

set t=(NewTimerEx(0)) // INLINED!!
	set data=s__Leapy__Leapy__allocate()

set s__Leapy__Leapy_c[data]=GetTriggerUnit()
set a2=GetUnitFacing(s__Leapy__Leapy_c[data])
set p=GetOwningPlayer(s__Leapy__Leapy_c[data])
    set x=GetUnitX(s__Leapy__Leapy_c[data]) + 45. * Cos(a2 * bj_DEGTORAD)
    set y=GetUnitY(s__Leapy__Leapy_c[data]) + 45. * Sin(a2 * bj_DEGTORAD)
set s__Leapy__Leapy_c[data]=null
    set s__Leapy__Leapy_c[data]=CreateUnit(p, 'h00S', x, y, a2)
	call SetUnitPropWindow(s__Leapy__Leapy_c[data], 0.)

call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodEX-Special.mdx", x, y))
     
set s__Leapy__Leapy_t[data]=GetSpellTargetUnit()

set cx=GetUnitX(s__Leapy__Leapy_c[data])
set cy=GetUnitY(s__Leapy__Leapy_c[data])
set tx=GetUnitX(s__Leapy__Leapy_t[data])
set ty=GetUnitY(s__Leapy__Leapy_t[data])



set a=bj_RADTODEG * Atan2(ty - cy, tx - cx)
	
    set dx=tx - cx
    set dy=ty - cy
    set d=( SquareRoot(dx * dx + dy * dy) ) + 80.

        call UnitAddAbility(s__Leapy__Leapy_c[data], 'Amrf')
        call UnitRemoveAbility(s__Leapy__Leapy_c[data], 'Amrf')
set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\Carrion Bat Blood HD.mdx", s__Leapy__Leapy_c[data], "chest")

call M6E(s__Leapy__Leapy_c[data] , d , .6 , a , "none.mdl" , .0 , true , false)

set s__Leapy__Leapy_d[data]=.01
set s__Leapy__Leapy_h[data]=6
call SetUnitFlyHeight(s__Leapy__Leapy_c[data], s__Leapy__Leapy_h[data], 0.0)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Leapy__Handler)
	else
    
	set t=(NewTimerEx(0)) // INLINED!!
	set data=s__Leapy__Leapy__allocate()

    set s__Leapy__Leapy_c[data]=GetTriggerUnit()
set s__Leapy__Leapy_t[data]=GetSpellTargetUnit()

set cx=GetUnitX(s__Leapy__Leapy_c[data])
set cy=GetUnitY(s__Leapy__Leapy_c[data])
set tx=GetUnitX(s__Leapy__Leapy_t[data])
set ty=GetUnitY(s__Leapy__Leapy_t[data])
        call UnitAddAbility(s__Leapy__Leapy_c[data], 'Amrf')
        call UnitRemoveAbility(s__Leapy__Leapy_c[data], 'Amrf')

set a=bj_RADTODEG * Atan2(ty - cy, tx - cx)
	
    set dx=tx - cx
    set dy=ty - cy
    set d=( SquareRoot(dx * dx + dy * dy) ) + 80.



call M6E(s__Leapy__Leapy_c[data] , d , .6 , a , "none.mdl" , .0 , true , false)

if GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02E' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n00S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n030' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n01U' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'u00Q' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'u00P' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02G' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02O' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02P' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e00Z' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e01S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03Q' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02Z' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03M' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02I' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02J' then

if GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02E' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n030' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'u00Q' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02G' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02O' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02P' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03Q' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02Z' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03M' then
set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\Carrion Bat Blood HD.mdx", s__Leapy__Leapy_c[data], "chest")
endif
if GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e00Z' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'e01S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02I' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n02J' then

set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\Valiant Charge.mdx", s__Leapy__Leapy_c[data], "chest")
set s__Leapy__Leapy_fx2[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Fire.mdx", s__Leapy__Leapy_c[data], "chest")
endif

if GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n00S' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n01U' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'u00P' or GetUnitTypeId(s__Leapy__Leapy_c[data]) == 'n03S' then

if GetRandomInt(0, 100) >= 50 then

set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\Carrion Bat Avocado HD.mdx", s__Leapy__Leapy_c[data], "chest")

else

set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\Carrion Bat Jade HD.mdx", s__Leapy__Leapy_c[data], "chest")

endif

endif

else



set s__Leapy__Leapy_fx[data]=AddSpecialEffectTarget("Abilities\\Weapons\\WaterElementalMissile\\WaterElementalMissile.mdl", s__Leapy__Leapy_c[data], "chest")
set s__Leapy__Leapy_fx2[data]=AddSpecialEffectTarget("war3mapImported\\SlideWater.mdx", s__Leapy__Leapy_c[data], "chest")
endif

set s__Leapy__Leapy_d[data]=.01
set s__Leapy__Leapy_h[data]=6
call SetUnitFlyHeight(s__Leapy__Leapy_c[data], s__Leapy__Leapy_h[data], 0.0)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Leapy__Handler)
	endif
set p=null
    set t=null
    endfunction
    

    function Leapy__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0K9' , function Leapy__Actions)
    endfunction
// scope Leapy ends
//===========================================================================
// Trigger: Always Leap
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AlwaysLeap2 begins

function AlwaysLeap2__Actions takes nothing returns boolean
local unit a= GetAttacker()
local unit t= GetTriggerUnit()
if GetUnitAbilityLevel(a, 'A0K9') == 1 then
    call IssueTargetOrderById(a, 852601, t)
endif



if GetUnitAbilityLevel(a, 'A023') == 1 then
    call IssuePointOrderById(a, 852555, GetUnitX(t), GetUnitY(t))
endif


	if GetUnitAbilityLevel(a, 'A0O1') == 1 then
if TRUEENFOS then


    call IssueImmediateOrderById(a, 852520)


else

if GetRandomInt(0, 99) <= 30 then
    call IssueImmediateOrderById(a, 852520)
endif
endif
endif

if GetUnitAbilityLevel(t, 'A0K9') == 1 then

call IssueTargetOrderById(t, 852601, a)
endif

if GetUnitAbilityLevel(t, 'A023') == 1 then
    call IssuePointOrderById(t, 852555, GetUnitX(a), GetUnitY(a))
endif


	if GetUnitAbilityLevel(t, 'A0O1') == 1 then
if TRUEENFOS then


    call IssueImmediateOrderById(t, 852520)


else

if GetRandomInt(0, 99) <= 30 then
    call IssueImmediateOrderById(t, 852520)
endif
endif
endif

set t=null
set a=null
return false
endfunction

//===========================================================================
function AlwaysLeap2__OnInit takes nothing returns nothing
    local trigger t= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddCondition(t, Condition(function AlwaysLeap2__Actions))
    set t=null
endfunction

// scope AlwaysLeap2 ends
//===========================================================================
// Trigger: Always Leap DD
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AlwaysLeapTwice begins

    function AlwaysLeapTwice__Actions takes nothing returns boolean
local unit t= GetTriggerUnit()
if GetUnitAbilityLevel(t, 'A0K9') == 1 then

call IssueTargetOrderById(t, 852601, GetEventDamageSource())
endif

if GetUnitAbilityLevel(t, 'A023') == 1 then
    call IssuePointOrderById(t, 852555, GetUnitX(GetEventDamageSource()), GetUnitY(GetEventDamageSource()))
endif


	if GetUnitAbilityLevel(t, 'A0O1') == 1 then
if TRUEENFOS then


    call IssueImmediateOrderById(t, 852520)


else

if GetRandomInt(0, 99) <= 30 then
    call IssueImmediateOrderById(t, 852520)
endif
endif
endif

set t=null
        return false
    endfunction
    
    function AlwaysLeapTwice__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function AlwaysLeapTwice__Actions))
    endfunction
    
// scope AlwaysLeapTwice ends
//===========================================================================
// Trigger: Rain of Fire
//===========================================================================
//TESH.scrollpos=99
//TESH.alwaysfold=0
// scope RainOfFireWave21 begins
 

  
 
    function RainOfFireWave21__Actions takes nothing returns nothing
local unit u
	
local unit t= GetTriggerUnit()
local player p= GetOwningPlayer(t)

if p == Player(10) then
set p=Player(12)
else
if p == Player(11) then
set p=Player(13)
endif
endif
			
		
set u=CreateUnit(p, 'h007', GetUnitX(t), GetUnitY(t), 0.)


call UnitAddAbility(u, 'A01N')
call IssuePointOrderById(u, 852238, GetSpellTargetX(), GetSpellTargetY())
call UnitApplyTimedLife(u, 'BTLF', 6.1)

set u=null
set p=null
    endfunction
    

        function RainOfFireWave21__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(RainOfFireWave21__SPELL_ID , function RainOfFireWave21__Actions)
    endfunction
// scope RainOfFireWave21 ends

//===========================================================================
// Trigger: TankUnstuck
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope TankAntistuck begins

    function TankAntistuck__Actions takes nothing returns boolean
local unit t= GetTriggerUnit()
if GetUnitTypeId(t) == 'h00B' and ( GetUnitCurrentOrder(t) == 852580 or GetUnitCurrentOrder(t) == 852592 or GetUnitCurrentOrder(t) == 852232 ) then


call IssueImmediateOrderById(t, 851972)

endif
set t=null
        return false
    endfunction
    
    function TankAntistuck__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function TankAntistuck__Actions))
    endfunction
    
// scope TankAntistuck ends
//===========================================================================
// Trigger: Always Deathbolt
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AlwaysDeathBolt begins

function AlwaysDeathBolt__Actions takes nothing returns boolean
local unit a= GetAttacker()

if ( GetUnitTypeId(a) == 'n03C' or ( GetUnitTypeId(a) == 'n03B' and GetRandomInt(0, 100) >= 50 and not TRUEENFOS ) or ( GetUnitTypeId(a) == 'n03B' and TRUEENFOS ) ) then
if GetUnitCurrentOrder(a) != 852230 then
    call IssueTargetOrderById(a, 852230, GetTriggerUnit())
endif
endif

set a=null
return false
endfunction

//===========================================================================
function AlwaysDeathBolt__OnInit takes nothing returns nothing
    local trigger t= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddCondition(t, Condition(function AlwaysDeathBolt__Actions))
    set t=null
endfunction

// scope AlwaysDeathBolt ends
//===========================================================================
// Trigger: Forest Call
//===========================================================================
//TESH.scrollpos=406
//TESH.alwaysfold=0
//===========================================================================
//A spell that creates a Green Paradise. This paradise spawns friendly trees 
//and ancients to aid you. While inside the paradise, friendly units also get 
//extra abilities. The weaker the tree, the more chances it has to be spawned.
//
//Requires TimerUtils and Table
//
//@author Flame_Phoenix 
//
//@credits
//- the-thingy, Kyrbi0, Pyrogasm, Anitarf
//- My first teacher of vJASS: Blue_Jeans
//- All other people I forgot or ignored
//
//@version 1.6
//===========================================================================
// scope ForestCall begins
    
    //This will be needed for spell's core, don't change
    
//===========================================================================
//=============================SETUP START===================================
//===========================================================================
    
//===========================================================================
//============================TREE SETUP=====================================
//===========================================================================
    
    function ForestCall__TreeCalibration takes nothing returns nothing
        
        //here we type all types of units this spell can have
        //in this case I use 6 types of units
        set ForestCall__treeType[1]='e008' //Treant
        set ForestCall__treeType[2]='e007' //Ancient Protector
        set ForestCall__treeType[3]='e009' //Tree of Life
        
        //Here we type the chances that each unit has to be spawned
        //Note that the chances start in 0 and go to 1.0
        //All chances together must be equal to 1.0, for the spell to work
        //properly.
        
        //level 1 chances
        set s__chancesPerTreeType[ForestCall__treeChances[1]+1]=0.5
        set s__chancesPerTreeType[ForestCall__treeChances[1]+2]=0.3
        set s__chancesPerTreeType[ForestCall__treeChances[1]+3]=0.2

        
        //level 2 chances
        set s__chancesPerTreeType[ForestCall__treeChances[2]+1]=0.4
        set s__chancesPerTreeType[ForestCall__treeChances[2]+2]=0.3
        set s__chancesPerTreeType[ForestCall__treeChances[2]+3]=0.3

        
        //level 3 chances
        set s__chancesPerTreeType[ForestCall__treeChances[3]+1]=0.3
        set s__chancesPerTreeType[ForestCall__treeChances[3]+2]=0.3
        set s__chancesPerTreeType[ForestCall__treeChances[3]+3]=0.4

    
        //PS: note that in all levels, if we sum the chances, we ALWAYS get 1
    endfunction
    
    constant function ForestCall__TreeLife takes integer level returns real
        //the amount of time each tree will have, if ChannelTrees() is false
        return 60.
    endfunction

    constant function ForestCall__ChannelTrees takes integer level returns boolean
        //if true it will make all spawned trees die when the caster stops the channel
        //if false, it allows the trees to have TreeLife() seconds of life and they
        //will not die when the caster stops the channel
        //in this case my trees have die when the channel stops in levels 1 and 2, but
        //in level 3 they get 30 seconds of life.
        return false
    endfunction
    
    constant function ForestCall__TreesPerCycle takes integer level returns integer
        //the number of trees that will be created each cycle
        return 1 + ( level * 0 )
    endfunction
    
    constant function ForestCall__Cycle takes integer level returns real
        //the cycle which will determine when we create trees
        //this means, TreesPerCycle() trees are created every cycle
        //in this case, we create 1 tree per second (in this case a second 
        //is a cycle)
        return .25
    endfunction
    
//===========================================================================
//============================EFFECT SETUP===================================
//===========================================================================
    
    constant function ForestCall__DummyEffectId takes integer level returns integer
        //the rawcode of the dummy unit that will be effect
        //this is in a function so you can have different effects in different
        //levels
        return 'h017'
    endfunction
    
    constant function ForestCall__MinRange takes integer level returns real
        //in this case we don't have a minimum range, which means we can 
        //create trees at the center of the circle
        //the minimum range is smaller circle, inside the area of the spell
        //in which trees will not be created
        return 0.
    endfunction
    
    constant function ForestCall__MaxRange takes integer level returns real
        //this ensures trees are not created outside the AOE of the spell
        //this gives the AOE of the spell. This is the max AOE of the spell.
        return 300. + ( level * 0 )
    endfunction
    
    constant function ForestCall__CircleCount takes integer level returns integer
        //the number of circles that will be created to give the illusion of the effect
        //effect. The more circles the more realistic, but more CPU will be needed.
        return 3 + level
    endfunction
    
    constant function ForestCall__InnerCyrcleUnits takes integer level returns integer
        //the number of units that the most inner circle will have
        return level + 5
    endfunction
    
    constant function ForestCall__InnerCyrcleUnitsIncrease takes integer level returns integer
        //the increment of units per circle
        return 0
    endfunction
//===========================================================================
//=============================SETUP END=====================================
//===========================================================================
    
//processed :    type chancesPerTreeType extends real array[ForestCall__ARRAY_SIZE]
    
    
        
        function s__ForestCall__MyStruct_create takes unit caster,real locX,real locY returns integer
            local integer data= s__ForestCall__MyStruct__allocate()
            
            //set variables about the caster
            set s__ForestCall__MyStruct_caster[data]=caster
            set s__ForestCall__MyStruct_level[data]=GetUnitAbilityLevel(s__ForestCall__MyStruct_caster[data], ForestCall__AID)
            
            //variables about the location
            set s__ForestCall__MyStruct_spellLocX[data]=locX
            set s__ForestCall__MyStruct_spellLocY[data]=locY
            
            //the timer which will determine when we create trees
            //creates a treeeverytime it expires
            set s__ForestCall__MyStruct_cycleTimer[data]=(NewTimerEx(0)) // INLINED!!
            
            //This groups will save the dumy effect effects, so we can kill them 
            //when the caster stops the channeling
            set s__ForestCall__MyStruct_dummyEffects[data]=CreateGroup()
            
            //if we want the trees to die when the caster stops channel
            //then we create this group so we can add all trees to it
            //then we kill the trees when the caster stops the channel
            if ( ForestCall__ChannelTrees(s__ForestCall__MyStruct_level[data]) ) then
                set s__ForestCall__MyStruct_trees[data]=CreateGroup()
            endif
            
            return data
        endfunction
        
        function s__ForestCall__MyStruct_onDestroy takes integer this returns nothing
            
            //here we select all units from the effect group and we kill them all ! =P
            //thus meaning that the effect effects will disappear ! 
            local unit f
            loop
                set f=FirstOfGroup(s__ForestCall__MyStruct_dummyEffects[this])
                exitwhen ( f == null )
                call GroupRemoveUnit(s__ForestCall__MyStruct_dummyEffects[this], f)
                call KillUnit(f)
            endloop
            
            //if the variable is true, then trees group was created and it has
            //units, and so now we kill them all.
            if ( ForestCall__ChannelTrees(s__ForestCall__MyStruct_level[this]) ) then
                loop
                    set f=FirstOfGroup(s__ForestCall__MyStruct_trees[this])
                    exitwhen ( f == null )
                    call GroupRemoveUnit(s__ForestCall__MyStruct_trees[this], f)
                    call KillUnit(f)
                endloop
            
            call DestroyGroup(s__ForestCall__MyStruct_trees[this])
            endif
            
            //since the spell is not active anymore, we clean the Table     
            call FlushChildHashtable(ForestCall__activeTable, GetHandleId(s__ForestCall__MyStruct_caster[this]))
            
            //the units are not anymore in the active units group.
            call GroupRemoveUnit(ForestCall__TreeInvocationCasters, s__ForestCall__MyStruct_caster[this])
            
            //releasing the timer for TimerUitls to use one day later =D
            call ReleaseTimer(s__ForestCall__MyStruct_cycleTimer[this])
            call DestroyGroup(s__ForestCall__MyStruct_dummyEffects[this])
        endfunction

//Generated destructor of ForestCall__MyStruct
function s__ForestCall__MyStruct_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__ForestCall__MyStruct_V[this]!=-1) then
        return
    endif
    call s__ForestCall__MyStruct_onDestroy(this)
    set si__ForestCall__MyStruct_V[this]=si__ForestCall__MyStruct_F
    set si__ForestCall__MyStruct_F=this
endfunction
    
//===========================================================================
    function ForestCall__onStop takes nothing returns boolean
        local integer data
        local unit u= GetTriggerUnit()
        
        //when a unit stops the channel, we verify if that unit is inside the
        //catsers group. If so, than it is because it is our caster casting this spell
        //and so we recover information about him and we make the spell end
        if ( IsUnitInGroup(u, ForestCall__TreeInvocationCasters) ) then
            //recover the data from the caster
            set data=LoadInteger(ForestCall__activeTable, GetHandleId(u), 0)
            
            //now, time to clean the mess once again
            call s__ForestCall__MyStruct_deallocate(data)
        endif

        set u=null
        
        return false
    endfunction
//===========================================================================
    //Function made by Themerion and adapted by Flame_Phoenix
    //Creates circles of dummy units to give the illusion of the effect effect
    function ForestCall__createGreenEffect takes integer aStruct returns nothing
        local integer data= aStruct
        
        // forPlayer     -> Create the units for which player?
        local player forPlayer= GetOwningPlayer(s__ForestCall__MyStruct_caster[data])
        
        // innerRadius   -> The radius of the innermost circle
        // outerRadius   -> The radius of the outmost circle
        local real innerRadius= ForestCall__MinRange(s__ForestCall__MyStruct_level[data])
        local real outerRadius= (300. + ( (s__ForestCall__MyStruct_level[data]) * 0 )) // INLINED!!
        
        // x and y       -> Center of circles
        local real x= s__ForestCall__MyStruct_spellLocX[data]
        local real y= s__ForestCall__MyStruct_spellLocY[data]

        local real radiusInc= ( outerRadius - innerRadius ) / I2R((3 + (s__ForestCall__MyStruct_level[data])) - 1) // INLINED!!
        
        //see functions they call
        local integer fxcount= ((s__ForestCall__MyStruct_level[data]) + 5) // INLINED!!
        local integer fxcountinc= ForestCall__InnerCyrcleUnitsIncrease(s__ForestCall__MyStruct_level[data])
        
        local unit greenEffect
        
        local real phi= 0
        local real phiInc

        loop
            exitwhen ( innerRadius + 0.001 >= outerRadius )

            set phi=0
            set phiInc=2 * bj_PI / I2R(fxcount)
            
            loop
                exitwhen ( phi + 0.001 >= 2 * bj_PI )
                //we add the units to a group, so we can kill them when we want ! =P
                set greenEffect=CreateUnit(Player(15), ForestCall__DummyEffectId(s__ForestCall__MyStruct_level[data]), x + innerRadius * Cos(phi), y + innerRadius * Sin(phi), 180 + Rad2Deg(phi))
                call GroupAddUnit(s__ForestCall__MyStruct_dummyEffects[data], greenEffect)
                if ( s__ForestCall__MyStruct_level[data] == 1 ) then
                   // call SetUnitAbilityLevel(greenEffect, FOREST_AURA, 1)
                elseif ( s__ForestCall__MyStruct_level[data] == 2 ) then
                  //  call SetUnitAbilityLevel(greenEffect, FOREST_AURA, 2)
                elseif ( s__ForestCall__MyStruct_level[data] == 3 ) then
                  //  call SetUnitAbilityLevel(greenEffect, FOREST_AURA, 3)
                endif
                set phi=phi + phiInc
            endloop
            
            set innerRadius=innerRadius + radiusInc
            set fxcount=fxcount + fxcountinc
        
        endloop
        
        set forPlayer=null
        set greenEffect=null
    endfunction
//===========================================================================
    //Function made by Vexorian, it selects a random region in a disk. 
    //All regions have the same chance of beeing choosen
    function ForestCall__GetRandomPointInDisk takes real centerx,real centery,real minradius,real maxradius returns location
        local real d= SquareRoot(GetRandomReal(minradius * minradius, maxradius * maxradius))
        local real a= GetRandomReal(0, 2 * bj_PI)
        return Location(centerx + d * Cos(a), centery + d * Sin(a))
    endfunction
//===========================================================================
    function ForestCall__createTrees takes nothing returns nothing
        //we get the structure from the timer
        local integer data= ((LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer()))))) // INLINED!!
        
        //variables for us to know where the trees will born
        local location point
        local real randomX
        local real randomY
        
        //just to keep count about how many trees we created
        local integer loopCounter= 0
        
        //variables about the trees
        local unit tree
        local real treeFacing= GetUnitFacing(s__ForestCall__MyStruct_caster[data])
        
        //Here we spawn the trees 
        loop
            exitwhen ( loopCounter >= (1 + ( (s__ForestCall__MyStruct_level[data]) * 0 )) ) // INLINED!!
                
            set point=ForestCall__GetRandomPointInDisk(s__ForestCall__MyStruct_spellLocX[data] , s__ForestCall__MyStruct_spellLocY[data] , ForestCall__MinRange(s__ForestCall__MyStruct_level[data]) , (300. + ( (s__ForestCall__MyStruct_level[data]) * 0 ))) // INLINED!!
            set randomX=GetLocationX(point)
            set randomY=GetLocationY(point)
            
            set tree=PlaceRandomUnit(ForestCall__TREE_POOLS[s__ForestCall__MyStruct_level[data]], GetOwningPlayer(s__ForestCall__MyStruct_caster[data]), randomX, randomY, treeFacing)
            call SetUnitAnimation(tree, ForestCall__ANIMATION)
            
            //if ChannelTrees(data.level) is true we add the treeto it 
            //so we can keep track of it and kill it later in the "onDestroy"
            //method
            //else if the variable is false, it means that the group was not
            //created, and we ant the units to have a LifeTime
            if ( ForestCall__ChannelTrees(s__ForestCall__MyStruct_level[data]) ) then
                call GroupAddUnit(s__ForestCall__MyStruct_trees[data], tree)
            else
                call UnitApplyTimedLife(tree, 'BTLF', ForestCall__TreeLife(s__ForestCall__MyStruct_level[data]))
            endif
            
            call RemoveLocation(point)
            set point=null
                
            set loopCounter=loopCounter + 1
        endloop
    
    set tree=null

    endfunction
//===========================================================================
    function ForestCall__Conditions takes nothing returns boolean
        local integer data
        local location spellLoc
        
        if ( GetSpellAbilityId() == ForestCall__AID ) then
            //setting variables for the struct
            set spellLoc=GetSpellTargetLoc()
            set data=s__ForestCall__MyStruct_create(GetTriggerUnit() , GetLocationX(spellLoc) , GetLocationY(spellLoc))
            
            //put the struct in the Table, we just use the caster's handle adress as 
            //the key which tells us where in the Table the struct is stored
            call SaveInteger(ForestCall__activeTable, GetHandleId(s__ForestCall__MyStruct_caster[data]), 0, data)

            //  we add the casting unit to some sort of "pool"
            call GroupAddUnit(ForestCall__TreeInvocationCasters, s__ForestCall__MyStruct_caster[data])
            
            //now we create the green effects
            call ForestCall__createGreenEffect(data)
            
            //we attach the struct to the timer
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__ForestCall__MyStruct_cycleTimer[data] )), ( (data))) // INLINED!!
            call TimerStart(s__ForestCall__MyStruct_cycleTimer[data], ForestCall__Cycle(s__ForestCall__MyStruct_level[data]), true, function ForestCall__createTrees)
            
            //cleaning up the mess
            call RemoveLocation(spellLoc)
        endif
        
        set spellLoc=null
        
        return false
    endfunction
//==========================================================================
    function ForestCall__Init takes nothing returns nothing
        //these integers are counters for a loop and will be used later
        local integer i
        local integer j
        
        //here we set up the triggers we will need
        
        //Creates the trigger for when the unit start the effect of the spell
        local trigger ForestCallTrigger= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(ForestCallTrigger, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        call TriggerAddCondition(ForestCallTrigger, Condition(function ForestCall__Conditions))
        
        //Creates the trigger for when the unit ceases the channel
        set ForestCallTrigger=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(ForestCallTrigger, EVENT_PLAYER_UNIT_SPELL_ENDCAST)
        call TriggerAddCondition(ForestCallTrigger, Condition(function ForestCall__onStop))

        set ForestCallTrigger=null
        
        //set our globals
        set ForestCall__activeTable=InitHashtable()
        set ForestCall__TreeInvocationCasters=CreateGroup()

        //now we will Create UnitPools using loops and the
        //counters
        
        //in this loop we create the 2D dynamic arrays, and create an UnitPool 
        //for each level
        set i=1
        loop
            exitwhen ( i > ForestCall__MAX_LEVELS )
            set ForestCall__treeChances[i]=s__chancesPerTreeType__allocate()
            set ForestCall__TREE_POOLS[i]=CreateUnitPool()
            set i=i + 1
        endloop
        
        //here we fill all our arrays
        call ForestCall__TreeCalibration()
        
        //here we add the units to the UnitPools with a respective weight per level
        //PS: "weitgh" is the chances a unit has of being spawned.
        set i=1
        set j=1
        loop
            exitwhen ( i > ForestCall__MAX_LEVELS )
            loop
                exitwhen ( j > ForestCall__MAX_TYPES )
                call UnitPoolAddUnitType(ForestCall__TREE_POOLS[i], ForestCall__treeType[j], s__chancesPerTreeType[ForestCall__treeChances[i]+j])
                set j=j + 1
            endloop
            set j=1
            set i=i + 1
        endloop
        
    endfunction
// scope ForestCall ends
//===========================================================================
// Trigger: Ranged Damage Reduction
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope RangedDamageReduction begins

    function RangedDamageReduction__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        //local real d = GetEventDamage() * 25.
        //local texttag tt
        //local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0HP') == 1 and GetEventDamage() > 0 and a != u then
            if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) or GetUnitTypeId(a) == 'N00D' then
                if ( BI[NI] ) == ( LN ) or GetUnitTypeId(a) == 'N00D' then
                    set DI[NI]=DI[NI] + ( GetEventDamage() * .9 )
                endif
            endif
        endif

        
        set u=null
        set a=null
        //set Q7E=null
        //set tt=null
        return false
    endfunction
    
    function RangedDamageReduction__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function RangedDamageReduction__Actions))
    endfunction
    
// scope RangedDamageReduction ends
//===========================================================================
// Trigger: Ranged Damage Reduction 80
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope RangedDamageReduction80 begins

    function RangedDamageReduction80__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        //local real d = GetEventDamage() * 25.
        //local texttag tt
        //local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0HS') == 1 and GetEventDamage() > 0 and a != u then
            if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) or GetUnitTypeId(a) == 'N00D' then
                if ( BI[NI] ) == ( LN ) or GetUnitTypeId(a) == 'N00D' then
                    set DI[NI]=DI[NI] + ( GetEventDamage() * .8 )
                endif
            endif
        endif

        
        set u=null
        set a=null
        //set Q7E=null
        //set tt=null
        return false
    endfunction
    
    function RangedDamageReduction80__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function RangedDamageReduction80__Actions))
    endfunction
    
// scope RangedDamageReduction80 ends
//===========================================================================
// Trigger: Fel Bolt
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope FelBolt begins

    
        
            function s__FelBolt__LB_destroy takes integer this returns nothing
            set s__FelBolt__LB_u[this]=null
            call DestroyEffect(s__FelBolt__LB_hl[this])
            call DestroyEffect(s__FelBolt__LB_hr[this])
            set s__FelBolt__LB_hl[this]=null
            set s__FelBolt__LB_hr[this]=null
            set s__FelBolt__LB_t[this]=null
            call s__FelBolt__LB_deallocate(this)
        endfunction
    

    
    function FelBolt__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local real dmg
 local integer lvl
     local real dx= GetUnitX(s__FelBolt__LB_t[data]) - GetUnitX(s__FelBolt__LB_u[data])
     local real dy= GetUnitY(s__FelBolt__LB_t[data]) - GetUnitY(s__FelBolt__LB_u[data])

        //call BJDebugMsg("Hander begins handling")
        
        //if GetUnitCurrentOrder(data.u) != 852600 then
        if GetUnitCurrentOrder(s__FelBolt__LB_u[data]) != 852230 or SquareRoot(dx * dx + dy * dy) >= 700. then
        //call BJDebugMsg("Is order Id correct?")
        
        if s__FelBolt__LB_time[data] >= 1.92 then
        //Actions
        //static method U2U takes lightning l, unit s, unit t, real time, real z1, real z2, real startAlpha, real endAlpha returns nothing
        call s__TimedL_U2U(AddLightningEx("GRNL", true, GetUnitX(s__FelBolt__LB_u[data]), GetUnitY(s__FelBolt__LB_u[data]), 40., GetUnitX(s__FelBolt__LB_t[data]), GetUnitY(s__FelBolt__LB_t[data]), 30.) , s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        
	set lvl=GetUnitAbilityLevel(s__FelBolt__LB_u[data], FelBolt__ABIL_ID)
	set dmg=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__FelBolt__LB_u[data])) )], true) * 7.5 * lvl ) + ( BlzGetUnitBaseDamage(s__FelBolt__LB_u[data], 0) * .5 * lvl )
        if s__FelBolt__LB_mob[data] then
call UnitDamageTargetEx(s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , ( BlzGetUnitBaseDamage(s__FelBolt__LB_u[data], 0) * 2. ) + ( BlzGetUnitMaxHP(s__FelBolt__LB_t[data]) * .15 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
        call UnitDamageTargetEx(s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , dmg , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
        endif
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Massacre Blight.mdx", s__FelBolt__LB_t[data], "chest"))
        call IssueImmediateOrder(s__FelBolt__LB_u[data], "stop")

        
        endif
        
        call ReleaseTimer(t)
        call s__FelBolt__LB_destroy(data)
        call s__ProgressBar_destroy(s__FelBolt__LB_cast[data])
        
        else
        
        set s__FelBolt__LB_time[data]=s__FelBolt__LB_time[data] + .02
        call s__ProgressBar_setPercentage(s__FelBolt__LB_cast[data],R2I(s__FelBolt__LB_time[data] * 50.) , 1)
        
        if s__FelBolt__LB_time[data] == 1.06 then
        call SetUnitAnimation(s__FelBolt__LB_u[data], "attack")
        endif
        
        if s__FelBolt__LB_time[data] >= 2. then
        //Actions

	set lvl=GetUnitAbilityLevel(s__FelBolt__LB_u[data], FelBolt__ABIL_ID)
	set dmg=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__FelBolt__LB_u[data])) )], true) * 7.5 * lvl ) + ( BlzGetUnitBaseDamage(s__FelBolt__LB_u[data], 0) * .5 * lvl )
        
        call s__TimedL_U2U(AddLightningEx("GRNL", true, GetUnitX(s__FelBolt__LB_u[data]), GetUnitY(s__FelBolt__LB_u[data]), 40., GetUnitX(s__FelBolt__LB_t[data]), GetUnitY(s__FelBolt__LB_t[data]), 30.) , s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        
if s__FelBolt__LB_mob[data] then
call UnitDamageTargetEx(s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , ( BlzGetUnitBaseDamage(s__FelBolt__LB_u[data], 0) * 2. ) + ( BlzGetUnitMaxHP(s__FelBolt__LB_t[data]) * .15 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(s__FelBolt__LB_u[data] , s__FelBolt__LB_t[data] , dmg , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Massacre Blight.mdx", s__FelBolt__LB_t[data], "chest"))
        call IssueImmediateOrder(s__FelBolt__LB_u[data], "stop")
        
        
        call ReleaseTimer(t)
        call s__FelBolt__LB_destroy(data)
        call s__ProgressBar_destroy(s__FelBolt__LB_cast[data])
        else
        
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, .02, false, function FelBolt__Handler)
        
        endif
        
        endif
        
        
        set t=null
    endfunction
    

    
    function FelBolt__OnSpell takes nothing returns boolean
        local timer t
        local integer data
        
        //call BJDebugMsg("Is event firing?")
        
        
        if GetSpellAbilityId() == FelBolt__ABIL_ID then
            //call BJDebugMsg("Spell begins casting")
            


            set t=(NewTimerEx(0)) // INLINED!!
            set data=s__FelBolt__LB__allocate()
            set s__FelBolt__LB_u[data]=GetTriggerUnit()

if GetUnitTypeId(s__FelBolt__LB_u[data]) == 'n03C' then

set s__FelBolt__LB_mob[data]=true
else
set s__FelBolt__LB_mob[data]=false

endif
            set s__FelBolt__LB_t[data]=GetSpellTargetUnit()
            set s__FelBolt__LB_hl[data]=AddSpecialEffectTarget("war3mapImported\\Ember Green.mdx", s__FelBolt__LB_u[data], "hand, left")
            set s__FelBolt__LB_hr[data]=AddSpecialEffectTarget("war3mapImported\\Ember Green.mdx", s__FelBolt__LB_u[data], "hand, right")
            set s__FelBolt__LB_time[data]=0
            
            
            set s__FelBolt__LB_cast[data]=s__ProgressBar_create()
            set s__ProgressBar_xOffset[s__FelBolt__LB_cast[data]]=- 15
if s__FelBolt__LB_mob[data] then
            call SetUnitFlyHeight(s__ProgressBar_bar[(s__FelBolt__LB_cast[data])], ((400)*1.0), 0) // INLINED!!
else
call SetUnitFlyHeight(s__ProgressBar_bar[(s__FelBolt__LB_cast[data])], ((175)*1.0), 0) // INLINED!!

endif
		if s__FelBolt__LB_mob[data] then
call s__ProgressBar__set_size(s__FelBolt__LB_cast[data],1.75)
else
            call s__ProgressBar__set_size(s__FelBolt__LB_cast[data],.8)

endif
            call SetUnitColor(s__ProgressBar_bar[(s__FelBolt__LB_cast[data])], (GetPlayerColor(GetOwningPlayer(s__FelBolt__LB_u[data])))) // INLINED!!
            call s__ProgressBar__set_targetUnit(s__FelBolt__LB_cast[data],s__FelBolt__LB_u[data])
            
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .02, false, function FelBolt__Handler)
        endif
        
        set t=null
        return false
    endfunction
    
    function FelBolt__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SPELL_CAST)
        call TriggerAddCondition(trig, Condition(function FelBolt__OnSpell))
        set trig=null
    endfunction
    
// scope FelBolt ends


//===========================================================================
// Trigger: Tree AI
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope TreeAI begins

function TreeAI__Actions takes nothing returns nothing
if GetUnitTypeId(GetAttacker()) == 'n025' then
call IssuePointOrder(GetAttacker(), "deathanddecay", GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit()))
endif
endfunction

function TreeAI__OnInit takes nothing returns nothing
local trigger trig= CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddAction(trig, function TreeAI__Actions)

endfunction

// scope TreeAI ends
//===========================================================================
// Trigger: Summon Blood Priestiss
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope SummonBloodPriestess begins
 
 

 
    function SummonBloodPriestess__Actions takes nothing returns nothing
  local unit u= GetTriggerUnit()
 local real a= GetRandomReal(0., 360.)
 local real d= GetRandomReal(60., 575.)
 local real x
 local real y
 local effect fx

	set x=GetUnitX(u) + d * Cos(a * bj_DEGTORAD)
	set y=GetUnitY(u) + d * Sin(a * bj_DEGTORAD)

	call CreateUnit(GetOwningPlayer(u), 'n03I', x, y, a + 180.)

	set fx=AddSpecialEffect("war3mapImported\\Soul Beam Red.mdx", x, y)
	call BlzSetSpecialEffectScale(fx, .7)
	call DestroyEffect(fx)

set u=null
set fx=null
    endfunction
    


        function SummonBloodPriestess__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(SummonBloodPriestess__SPELL_ID , function SummonBloodPriestess__Actions)
    endfunction
// scope SummonBloodPriestess ends

//===========================================================================
// Trigger: Blood Berserk Summon Totem
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope SummonBloodTotem begins


   
    function SummonBloodTotem__Actions takes nothing returns nothing
 local unit c= GetTriggerUnit()
 local real a= GetUnitFacing(c)
 local real x= GetUnitX(c) + 70. * Cos(a * bj_DEGTORAD)
 local real y= GetUnitY(c) + 70. * Sin(a * bj_DEGTORAD)


	if ( ( TRUEENFOS == false and GetRandomInt(0, 100) >= 50 ) or ( TRUEENFOS ) ) then
	call IssuePointOrderById(c, 852619, x, y)
	endif


	set c=null

    endfunction
    

    function SummonBloodTotem__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0KQ' , function SummonBloodTotem__Actions)
    endfunction
// scope SummonBloodTotem ends
//===========================================================================
// Trigger: Corruptor Fear
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope CorruptorFear begins


        function s__CorruptorFear__FearIS_destroy takes integer this returns nothing
        set s__CorruptorFear__FearIS_c[this]=null
        set s__CorruptorFear__FearIS_u[this]=null
        call s__CorruptorFear__FearIS_deallocate(this)
        endfunction

    function CorruptorFear__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local integer l__F
    local real r
    
    
    if CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] > 0 and s__CorruptorFear__FearIS_i[data] < 160 and UnitAlive(s__CorruptorFear__FearIS_u[data]) and LC[( 1 + GetPlayerId(GetOwningPlayer(s__CorruptorFear__FearIS_u[data])) )] == s__CorruptorFear__FearIS_u[data] then
    if s__CorruptorFear__FearIS_i[data] == 0 then
        if GetLocalPlayer() == Player(s__CorruptorFear__FearIS_p[data]) then
    call EnableUserControl(false)
    endif
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((s__CorruptorFear__FearIS_u[data])), 0)) then // INLINED!!
                        set l__F=s__Fear_get(s__CorruptorFear__FearIS_u[data])
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + 5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=s__CorruptorFear__FearIS_u[data]
                        set s__Fear_path[l__F]=CorruptorFear__PATH
                        set s__Fear_attach[l__F]=CorruptorFear__ATTACH
                        set s__Fear_steps[(l__F)]=(R2I(((((5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
    endif
    call PanCameraToForPlayer(Player(s__CorruptorFear__FearIS_p[data]), GetUnitX(s__CorruptorFear__FearIS_u[data]), GetUnitY(s__CorruptorFear__FearIS_u[data]))
    set s__CorruptorFear__FearIS_i[data]=s__CorruptorFear__FearIS_i[data] + 1
	if s__CorruptorFear__FearIS_i[data] == 33 or s__CorruptorFear__FearIS_i[data] == 65 or s__CorruptorFear__FearIS_i[data] == 97 or s__CorruptorFear__FearIS_i[data] == 129 or s__CorruptorFear__FearIS_i[data] == 1 then
		set CorruptAmount[s__CorruptorFear__FearIS_p[data]]=CorruptAmount[s__CorruptorFear__FearIS_p[data]] + 1
	endif
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function CorruptorFear__Handler)
    else

	set CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])]=CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] - 1
    if GetLocalPlayer() == Player(s__CorruptorFear__FearIS_p[data]) and CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] == 0 then
    call EnableUserControl(true)
    endif

	if CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] == 0 then

	call UnitRemoveAbility(s__CorruptorFear__FearIS_u[data], 'A0LK')
	call UnitRemoveAbility(s__CorruptorFear__FearIS_u[data], 'B05Q')
	endif
    call s__CorruptorFear__FearIS_destroy(data)
    call ReleaseTimer(t)
    endif
    
    set t=null
    endfunction

   
    function CorruptorFear__Actions takes nothing returns boolean
    local timer t
    local integer data
    
if GetUnitTypeId(GetEventDamageSource()) == 'u002' and GetRandomInt(0, 100) <= 20 and not IsUnitType(GetTriggerUnit(), UNIT_TYPE_MAGIC_IMMUNE) then
	set t=(NewTimerEx(0)) // INLINED!!
	set data=s__CorruptorFear__FearIS__allocate()
    set s__CorruptorFear__FearIS_c[data]=GetEventDamageSource()

    set s__CorruptorFear__FearIS_u[data]=GetTriggerUnit()
set s__CorruptorFear__FearIS_i[data]=0

if CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] == 0 then
call UnitAddAbility(s__CorruptorFear__FearIS_u[data], 'A0LK')
endif
    set CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])]=CorruptorFear__fearstacks[GetUnitUserData(s__CorruptorFear__FearIS_u[data])] + 1
    set s__CorruptorFear__FearIS_p[data]=GetPlayerId(GetOwningPlayer(s__CorruptorFear__FearIS_u[data]))
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    if IsUnitIllusion(s__CorruptorFear__FearIS_u[data]) then
        call UnitDamageTarget(s__CorruptorFear__FearIS_c[data], s__CorruptorFear__FearIS_u[data], GetUnitState(s__CorruptorFear__FearIS_u[data], UNIT_STATE_MAX_LIFE) * 3., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
    endif
    
    
    call TimerStart(t, .03125, false, function CorruptorFear__Handler)
    endif
    set t=null
return false
    endfunction
    

    function CorruptorFear__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CorruptorFear__Actions))
    endfunction
// scope CorruptorFear ends
//===========================================================================
// Trigger: FlyingEvasion
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope FlyingEvasion begins

    function FlyingEvasion__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0DO') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 70 and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' then
            if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
                if ( BI[NI] ) == ( LN ) then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function FlyingEvasion__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function FlyingEvasion__Actions))
    endfunction
    
// scope FlyingEvasion ends
//===========================================================================
// Trigger: Item Evasion 25
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ItemEvasion25 begins

    function ItemEvasion25__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
  
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A08Q') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 25 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function ItemEvasion25__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ItemEvasion25__Actions))
    endfunction
    
// scope ItemEvasion25 ends
//===========================================================================
// Trigger: Item Evasion 35
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ItemEvasion35 begins

    function ItemEvasion35__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
  
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A08P') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 35 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function ItemEvasion35__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ItemEvasion35__Actions))
    endfunction
    
// scope ItemEvasion35 ends
//===========================================================================
// Trigger: Item Evasion 40
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ItemEvasion40 begins

    function ItemEvasion40__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
  
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A08R') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 40 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function ItemEvasion40__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ItemEvasion40__Actions))
    endfunction
    
// scope ItemEvasion40 ends
//===========================================================================
// Trigger: Item Evasion 50
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ItemEvasion50 begins

    function ItemEvasion50__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
  
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0IP') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 50 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function ItemEvasion50__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ItemEvasion50__Actions))
    endfunction
    
// scope ItemEvasion50 ends
//===========================================================================
// Trigger: Item Evasion 75
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ItemEvasion75 begins

    function ItemEvasion75__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
  
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0JH') == 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= 75 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function ItemEvasion75__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ItemEvasion75__Actions))
    endfunction
    
// scope ItemEvasion75 ends
//===========================================================================
// Trigger: Excess Lose Corr
//===========================================================================
// scope ExcessLoseCorr begins


function ExcessLoseCorr__OnSpell takes nothing returns boolean
        if CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and GetUnitTypeId(GetTriggerUnit()) == 'n013' and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) then
            set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 2
if CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] < 0 then
set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=0
endif
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function ExcessLoseCorr__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function ExcessLoseCorr__OnSpell))
endfunction
// scope ExcessLoseCorr ends
//===========================================================================
// Trigger: Faustian Demon Health Restoration
//===========================================================================
// scope FaustianHeal begins


function FaustianHeal__OnSpell takes nothing returns boolean
        if GetUnitTypeId(GetTriggerUnit()) == 'u006' and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) then
            call SetWidgetLife(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], GetWidgetLife(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) + ( BlzGetUnitMaxHP(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) - GetWidgetLife(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) ) * .25)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Heal Orange.mdx", LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], "origin"))
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function FaustianHeal__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function FaustianHeal__OnSpell))
endfunction
// scope FaustianHeal ends
//===========================================================================
// Trigger: DemonicHandEyeLoseCOrr
//===========================================================================
// scope DemonicHandLoseCorr begins


function DemonicHandLoseCorr__OnSpell takes nothing returns boolean
        if ( UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04Q') or UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04N') ) and GetRandomInt(0, 99) <= 54 and CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 1
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function DemonicHandLoseCorr__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DemonicHandLoseCorr__OnSpell))
endfunction
// scope DemonicHandLoseCorr ends
//===========================================================================
// Trigger: DemonicMutilatorLoseCor
//===========================================================================
// scope DemonicHandLoseCorr2 begins


function DemonicHandLoseCorr2__OnSpell takes nothing returns boolean
        if ( UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04R') ) and GetRandomInt(0, 99) <= 43 and CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 2
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
call UnitDamageTargetEx(GetTriggerUnit() , GetKillingUnit() , BlzGetUnitMaxHP(GetKillingUnit()) * .0666 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ThornsAura\\ThornsAuraDamage.mdl", GetKillingUnit(), "head"))
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function DemonicHandLoseCorr2__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DemonicHandLoseCorr2__OnSpell))
endfunction
// scope DemonicHandLoseCorr2 ends
//===========================================================================
// Trigger: TrueMutilator
//===========================================================================
// scope DemonicHandLoseCorr3 begins


function DemonicHandLoseCorr3__OnSpell takes nothing returns boolean
        if ( UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04W') ) and GetRandomInt(0, 99) <= 65 and CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
		if CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] == 1 then
		set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=0
		else
		set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 2
		endif
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
call UnitDamageTargetEx(GetTriggerUnit() , GetKillingUnit() , BlzGetUnitMaxHP(GetKillingUnit()) * .0666 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ThornsAura\\ThornsAuraDamage.mdl", GetKillingUnit(), "head"))
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function DemonicHandLoseCorr3__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DemonicHandLoseCorr3__OnSpell))
endfunction
// scope DemonicHandLoseCorr3 ends
//===========================================================================
// Trigger: DemonicMutilatorLoseCorr
//===========================================================================
// scope DemonicMutilatorsLoseCorr begins


function DemonicMutilatorsLoseCorr__OnSpell takes nothing returns boolean
        if ( UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04R') or UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04W') ) and CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and IsUnitAlly(GetKillingUnit(), GetOwningPlayer(GetTriggerUnit())) and GetKillingUnit() != null then
            
if IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) and not IsUnitIllusion(GetTriggerUnit()) then

set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=0
else
if CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] >= 20 then
set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 20
else
set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=0
endif
endif
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function DemonicMutilatorsLoseCorr__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DemonicMutilatorsLoseCorr__OnSpell))
endfunction
// scope DemonicMutilatorsLoseCorr ends
//===========================================================================
// Trigger: DemonicEyeStickSwordBowLoseCOrr Copy
//===========================================================================
// scope DemonicMutilatorLoseCorr begins


function DemonicMutilatorLoseCorr__OnSpell takes nothing returns boolean
        if ( UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04T') or UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I04U') ) and GetRandomInt(0, 99) <= 47 and CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] > 0 and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            
if CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] == 1 then
set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=0
else
set CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]=CorruptAmount[( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )] - 2
endif
call SetPlayerState(GetOwningPlayer(GetKillingUnit()), PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[GetPlayerId(GetOwningPlayer(GetKillingUnit()))])
//call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function DemonicMutilatorLoseCorr__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DemonicMutilatorLoseCorr__OnSpell))
endfunction
// scope DemonicMutilatorLoseCorr ends
//===========================================================================
// Trigger: Demon Carapace Demonic Offering
//===========================================================================

//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope DemonicOffering begins



function DemonicOffering__Actions takes nothing returns nothing
local unit c= GetTriggerUnit()
local integer o
local player p= GetOwningPlayer(c)
local integer id= GetPlayerId(p)
local unit u
local real x
local real a
local real y
local real d
local real ar

if GetRandomInt(1, 100) <= 33 then
if GetRandomInt(1, 100) <= 32 then

set o=id

else

		if IsPlayerAlly(p, Player(10)) then
			set o=11
		else
			set o=10
		endif
endif
		set d=GetRandomReal(50., 300.)
		set a=GetRandomReal(0., 360.)
		set x=GetUnitX(LC[id + 1]) + d * Cos(a * bj_DEGTORAD)
		set y=GetUnitY(LC[id + 1]) + d * Sin(a * bj_DEGTORAD)

	set ar=BlzGetUnitArmor(LC[id + 1])

if ar >= 1000 then
	set ar=666
	endif

		call DestroyEffect(AddSpecialEffect("war3mapImported\\ChaosExplosion.mdx", x, y))
		set u=CreateUnit(Player(o), 'u006', x, y, a - 180.)
		call BlzSetUnitMaxHP(u, R2I(GetWidgetLife(LC[id + 1]) * .33 * 5.))
		call SetWidgetLife(u, GetWidgetLife(LC[id + 1]) * .33 * 5.)
		call BlzSetUnitArmor(u, ar / 2)
		call BlzSetUnitBaseDamage(u, R2I(GetWidgetLife(LC[id + 1]) * .33 * .5), 0)


	if GetUnitBonus(c , BONUS_HEALTH) >= 100000 then
		
		if IsPlayerAlly(p, Player(10)) then
			set o=11
		else
			set o=10
		endif

		call SetUnitOwner(u, Player(o), true)

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(u) * 10)
		call SetWidgetLife(u, BlzGetUnitMaxHP(u) * 1.)
		call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) * 10, 0)
call SetUnitScale(u, 6., 6., 6.)
		call ZWE(u , 500.)
		call IssueTargetOrderById(u, 851983, c)

	call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(p) )] + ( GetPlayerName(p) + "|r" ) ) + ( " |c00800000has reached the pinnacle of Demon diplomacy...Now to reap the fruits of his labours.|r" ) ))

	endif

endif
call SetWidgetLife(LC[id + 1], GetWidgetLife(LC[id + 1]) * .67)
if CorruptAmount[id] > 0 then
set CorruptAmount[id]=CorruptAmount[id] - 14
	if CorruptAmount[id] < 0 then
	set CorruptAmount[id]=0
	endif
call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[id])
endif

set c=null
set p=null
set u=null
endfunction

//===========================================================================
function DemonicOffering__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(DemonicOffering__SPELL_ID , function DemonicOffering__Actions)
endfunction
// scope DemonicOffering ends
//===========================================================================
// Trigger: Demon Vessel Demonic Offering Copy
//===========================================================================

//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope DemonicOfferingVessel begins



function DemonicOfferingVessel__Actions takes nothing returns nothing
local unit c= GetTriggerUnit()
local integer o
local player p= GetOwningPlayer(c)
local integer id= GetPlayerId(p)
local unit u
local real x
local real a
local real y
local real d
local real ar

if GetRandomInt(1, 100) <= 32 then
if GetRandomInt(1, 100) <= 32 then

set o=id

else

		if IsPlayerAlly(p, Player(10)) then
			set o=11
		else
			set o=10
		endif
endif
		set d=GetRandomReal(50., 300.)
		set a=GetRandomReal(0., 360.)
		set x=GetUnitX(LC[id + 1]) + d * Cos(a * bj_DEGTORAD)
		set y=GetUnitY(LC[id + 1]) + d * Sin(a * bj_DEGTORAD)

	set ar=BlzGetUnitArmor(LC[id + 1])

		call DestroyEffect(AddSpecialEffect("war3mapImported\\ChaosExplosion.mdx", x, y))
		set u=CreateUnit(Player(o), 'u006', x, y, a - 180.)
		call BlzSetUnitMaxHP(u, R2I(GetWidgetLife(LC[id + 1]) * .36 * 5.))
		call SetWidgetLife(u, GetWidgetLife(LC[id + 1]) * .36 * 5.)
	if ar >= 1000 then
	set ar=666
	endif
		call BlzSetUnitArmor(u, ar / 2)
		call BlzSetUnitBaseDamage(u, R2I(GetWidgetLife(LC[id + 1]) * .36 * .5), 0)

	if GetUnitBonus(c , BONUS_HEALTH) >= 100000 then
		
		if IsPlayerAlly(p, Player(10)) then
			set o=11
		else
			set o=10
		endif

		call SetUnitOwner(u, Player(o), true)

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(u) * 10)
		call SetWidgetLife(u, BlzGetUnitMaxHP(u) * 1.)
		call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) * 10, 0)
call SetUnitScale(u, 6., 6., 6.)
		call ZWE(u , 500.)
		call IssueTargetOrderById(u, 851983, c)

	call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(p) )] + ( GetPlayerName(p) + "|r" ) ) + ( " |c00800000has reached the pinnacle of Demon diplomacy...Now to reap the fruits of his labours.|r" ) ))

	endif

endif
call SetWidgetLife(LC[id + 1], GetWidgetLife(LC[id + 1]) * .64)
if CorruptAmount[id] > 0 then
set CorruptAmount[id]=CorruptAmount[id] - 21
	if CorruptAmount[id] < 0 then
	set CorruptAmount[id]=0
	endif
call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, CorruptAmount[id])
endif

set c=null
set p=null
set u=null
endfunction

//===========================================================================
function DemonicOfferingVessel__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(DemonicOfferingVessel__SPELL_ID , function DemonicOfferingVessel__Actions)
endfunction
// scope DemonicOfferingVessel ends
//===========================================================================
// Trigger: Item Sets
//===========================================================================
//TESH.scrollpos=16
//TESH.alwaysfold=0
// ItemSet demo

// Description: Learn how to easy setup item sets. 
// Scroll down to function Init to see how to use ItemSet API



// scope ItemSetDemo begins


    // Runs when a set is completed. Check function Init how to register functions.
    //private function OnComplete takes nothing returns boolean
      //  local string setName  = GetTriggerItemSet().name
        //local string unitName = GetUnitName(GetTriggerItemSetUnit())
        //call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 1, unitName + " completed " + setName + "!")
        //return false
    //endfunction

    // runs when a set was prev complete.
    //private function OnInComplete takes nothing returns boolean
      //  call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 1, "incomplete")
        //return false
    //endfunction
    
    function ItemSetDemo__d takes nothing returns boolean
        call s__ItemSet_onItemUnequip(GetTriggerUnit() , GetItemTypeId(GetManipulatedItem()))
        return false
    endfunction

    function ItemSetDemo__p takes nothing returns boolean
        call s__ItemSet_onItemEquip(GetTriggerUnit() , GetItemTypeId(GetManipulatedItem()))
        return false
    endfunction
    
    function ItemSetDemo__Init takes nothing returns nothing
        local trigger onPick= CreateTrigger()
        local trigger onDrop= CreateTrigger()
        
        
        local integer new= s__ItemSet_create("Tranquil Warfare" , "war3mapImported\\DalaranAura.mdx" , "origin")
 local integer new2= s__ItemSet_create("The Witch's Tithe" , "war3mapImported\\Bondage Red HD2.mdx" , "chest")
        call s__ItemSet_addItem(new,'I045')
        call s__ItemSet_addItem(new,'I032')
        call s__ItemSet_addItem(new,'I040')
        call s__ItemSet_addAbility(new,2 , 'A0G6')
        call s__ItemSet_addAbility(new,3 , 'A0G7')
        call s__ItemSet_addAbility(new,3 , 'A0G8')

        call s__ItemSet_addAbility(new,3 , 'A0GA')
        

	
        call s__ItemSet_addItem(new2,'I03V')
        call s__ItemSet_addItem(new2,'I036')
        call s__ItemSet_addItem(new2,'I048')
	call s__ItemSet_addAbility(new2,2 , 'A0L4')
	call s__ItemSet_addAbility(new2,2 , 'A0L3')
	call s__ItemSet_addAbility(new2,2 , 'A0L7')
	call s__ItemSet_addAbility(new2,3 , 'A0LA')
call s__ItemSet_addAbility(new2,3 , 'A0L5')
call s__ItemSet_addAbility(new2,3 , 'A0NW')
        call s__ItemSet_addBuffIndicator(new2,1 , 'A0LB' , 'B05L')
        call s__ItemSet_addBuffIndicator(new2,2 , 'A0LC' , 'B05M')
        call s__ItemSet_addBuffIndicator(new2,3 , 'A0LD' , 'B05N')


        
        call s__ItemSet_addBuffIndicator(new,1 , 'A0G4' , 'B04C')
        call s__ItemSet_addBuffIndicator(new,2 , 'A0G5' , 'B04B')
        call s__ItemSet_addBuffIndicator(new,3 , 'A0G3' , 'B041')
        
        
        //call RegisterItemSetEvent(ItemSet.COMPLETE, function OnComplete)
        //call RegisterItemSetEvent(ItemSet.INCOMPLETE, function OnInComplete)
        
        
        call TriggerAddCondition(onPick, Condition(function ItemSetDemo__p))
        call TriggerAddCondition(onDrop, Condition(function ItemSetDemo__d))
        call TriggerRegisterAnyUnitEventBJ(onPick, EVENT_PLAYER_UNIT_PICKUP_ITEM)
        call TriggerRegisterAnyUnitEventBJ(onDrop, EVENT_PLAYER_UNIT_DROP_ITEM)
    endfunction

// scope ItemSetDemo ends

//===========================================================================
// Trigger: The Witchs Tithe
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope TheWitchsTithe begins
 
 

 
    function TheWitchsTithe__Actions takes nothing returns nothing
  local unit u= LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
	
	if GetUnitAbilityLevel(u, 'A0LE') != 1 then
		call UnitAddAbility(u, 'A0LE')
		call UnitAddAbility(u, 'A0LF')
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Mana Burn Red.mdx", u, "chest"))
		//call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Evisceration.mdx",u,"chest"))

call s__TimedL_P2U(AddLightningEx("RENL", true, GetUnitX(u), GetUnitY(u), 1500., GetUnitX(u), GetUnitY(u), GetUnitFlyHeight(u)) , u , 1.0 , GetUnitX(u) , GetUnitY(u) , 1500. , GetUnitFlyHeight(u) , 1. , 1.)

 
	else
	if not BlzIsUnitInvulnerable(u) and GetUnitAbilityLevel(u, 'A0N9') != 1 then
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Mana Burn Red.mdx", u, "chest"))
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Chain Impale.mdx", u, "origin"))
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Desecrate.mdx", u, "origin"))
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", u, "chest"))
	call KillUnit(u)
	call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(u)) )] + ( GetPlayerName(GetOwningPlayer(u)) + "|r" ) ) + ( " |c007F1080h|r|c00840F77a|r|c00890E6Es|r|c008F0D65 |r|c00940B5Bp|r|c00990A52a|r|c009E0949i|r|c00A40840d|r|c00A90737 |r|c00AE062ET|r|c00B30525h|r|c00B8031Be|r|c00BE0212 |r|c00C30109W|r|c00C80000i|r|c00C40000t|r|c00C10000c|r|c00BD0000h|r|c00BA0000 |r|c00B60000Q|r|c00B20000u|r|c00AF0000e|r|c00AB0000e|r|c00A80000n|r|c00A40000'|r|c00A00000s|r|c009D0000 |r|c00990000T|r|c00960000i|r|c00920000t|r|c008E0000h|r|c008B0000e|r|c00870000.|r|c00840000.|r|c00800000.|r" ) ))
	endif
	endif
set u=null

    endfunction
    


        function TheWitchsTithe__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(TheWitchsTithe__SPELL_ID , function TheWitchsTithe__Actions)
    endfunction
// scope TheWitchsTithe ends

//===========================================================================
// Trigger: Witchs Tithe Paid
//===========================================================================
// scope WitchsTithePaid begins


function WitchsTithePaid__OnSpell takes nothing returns boolean
local unit u= LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]
        if GetUnitAbilityLevel(u, 'A0LE') == 1 then
		call UnitRemoveAbility(u, 'A0LE')
		call UnitRemoveAbility(u, 'B05O')
		call UnitRemoveAbility(u, 'A0LF')
		call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodEX-Special.mdx", GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit())))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special.mdx", u, "origin"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Bondage Red HD2.mdx", u, "chest"))
        endif
set u=null
        return false
endfunction
//===========================================================================
function WitchsTithePaid__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function WitchsTithePaid__OnSpell))
endfunction
// scope WitchsTithePaid ends
//===========================================================================
// Trigger: Eternitys End
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope EternitysEnd begins

    function EternitysEnd__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()

    
    if IsUnitEnemy(u, GetOwningPlayer(EternitysEnd__CASTER)) and UnitAlive(u) then
    call UnitDamageTargetEx(EternitysEnd__CASTER , u , EternitysEnd__AMOUNT , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadowCannon.mdx", u, "chest"))
    endif
    
    set u=null
    return false
    endfunction

function EternitysEnd__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local real x= GetUnitX(u)
local real y= GetUnitY(u)

set EternitysEnd__AMOUNT=GetWidgetLife(u) * .99 * 2.

call SetWidgetLife(u, GetWidgetLife(u) * .01)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PeterifyVer.2.mdx", u, "chest"))

call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(0. * bj_DEGTORAD), y + 300. * Sin(0. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(45. * bj_DEGTORAD), y + 300. * Sin(45. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(90. * bj_DEGTORAD), y + 300. * Sin(90. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(135. * bj_DEGTORAD), y + 300. * Sin(135. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(180. * bj_DEGTORAD), y + 300. * Sin(180. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(225. * bj_DEGTORAD), y + 300. * Sin(225. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(270. * bj_DEGTORAD), y + 300. * Sin(270. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\s_ShadowEruption_Rain.mdx", x + 300. * Cos(315. * bj_DEGTORAD), y + 300. * Sin(315. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(0. * bj_DEGTORAD), y + 300. * Sin(0. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(45. * bj_DEGTORAD), y + 300. * Sin(45. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(90. * bj_DEGTORAD), y + 300. * Sin(90. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(135. * bj_DEGTORAD), y + 300. * Sin(135. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(180. * bj_DEGTORAD), y + 300. * Sin(180. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(225. * bj_DEGTORAD), y + 300. * Sin(225. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(270. * bj_DEGTORAD), y + 300. * Sin(270. * bj_DEGTORAD)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightningNova.mdx", x + 300. * Cos(315. * bj_DEGTORAD), y + 300. * Sin(315. * bj_DEGTORAD)))
set EternitysEnd__CASTER=u
    
call GroupEnumUnitsInRange(EternitysEnd__GROUP, x, y, 500., Filter(function EternitysEnd__FilterActions))

set u=null
endfunction

//===========================================================================
function EternitysEnd__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EternitysEnd__SPELL_ID , function EternitysEnd__Actions)
endfunction
// scope EternitysEnd ends
//===========================================================================
// Trigger: Ragnaros
//===========================================================================
//TESH.scrollpos=101
//TESH.alwaysfold=0
// scope Ragnaros begins


function s__Ragnaros__Ragnas2_destroy takes integer this returns nothing
set s__Ragnaros__Ragnas2_u[this]=null
call s__Ragnaros__Ragnas2_deallocate(this)
endfunction

        function s__Ragnaros__Ragnas_destroy takes integer this returns nothing
            set s__Ragnaros__Ragnas_u[this]=null
            set s__Ragnaros__Ragnas_u1[this]=null
            set s__Ragnaros__Ragnas_u2[this]=null
            set s__Ragnaros__Ragnas_u3[this]=null
            call s__Ragnaros__Ragnas_deallocate(this)
        endfunction

function Ragnaros__Handler2 takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call UnitRemoveAbility(s__Ragnaros__Ragnas2_u[data], Ragnaros__DBUFF_ID)
call s__Ragnaros__Ragnas2_destroy(data)
call ReleaseTimer(t)

set t=null
endfunction

function Ragnaros__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local timer t
local integer data

if IsUnitEnemy(u, GetOwningPlayer(Ragnaros__CASTER)) and GetUnitAbilityLevel(u, Ragnaros__DBUFF_ID) == 0 and GetUnitAbilityLevel(Ragnaros__CASTER, 'A07S') == 0 then
set t=(NewTimerEx(0)) // INLINED!!
set data=s__Ragnaros__Ragnas2__allocate()
call UnitAddAbility(u, Ragnaros__DBUFF_ID)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Flameshock.mdx", u, "chest"))
call UnitDamageTarget(Ragnaros__CASTER, u, GetHeroStr(Ragnaros__CASTER, true) * 10., false, true, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
set s__Ragnaros__Ragnas2_u[data]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 15., false, function Ragnaros__Handler2)
endif

set u=null
set t=null
return false
endfunction

function Ragnaros__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x
local real y

if GetUnitAbilityLevel(s__Ragnaros__Ragnas_u[data], Ragnaros__ABIL_ID) != 0 and LC[( 1 + GetPlayerId(GetOwningPlayer(s__Ragnaros__Ragnas_u[data])) )] == s__Ragnaros__Ragnas_u[data] then
set Ragnaros__CASTER=s__Ragnaros__Ragnas_u[data]
set s__Ragnaros__Ragnas_a1[data]=s__Ragnaros__Ragnas_a1[data] + 2.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a1[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a1[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnaros__Ragnas_u1[data], x)
call SetUnitY(s__Ragnaros__Ragnas_u1[data], y)
call GroupEnumUnitsInRange(Ragnaros__GROUP, x, y, 116., Filter(function Ragnaros__FilterActions))
set s__Ragnaros__Ragnas_a2[data]=s__Ragnaros__Ragnas_a2[data] + 2.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a2[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a2[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnaros__Ragnas_u2[data], x)
call SetUnitY(s__Ragnaros__Ragnas_u2[data], y)
call GroupEnumUnitsInRange(Ragnaros__GROUP, x, y, 116., Filter(function Ragnaros__FilterActions))
set s__Ragnaros__Ragnas_a3[data]=s__Ragnaros__Ragnas_a3[data] + 2.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a3[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a3[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnaros__Ragnas_u3[data], x)
call SetUnitY(s__Ragnaros__Ragnas_u3[data], y)
call GroupEnumUnitsInRange(Ragnaros__GROUP, x, y, 116., Filter(function Ragnaros__FilterActions))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Ragnaros__Handler)
else
            call RemoveUnit(s__Ragnaros__Ragnas_u1[data])
            call RemoveUnit(s__Ragnaros__Ragnas_u2[data])
            call RemoveUnit(s__Ragnaros__Ragnas_u3[data])
            call s__Ragnaros__Ragnas_destroy(data)
            call ReleaseTimer(t)
endif

set t=null
endfunction

function Ragnaros__Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__Ragnaros__Ragnas__allocate()
local real x
local real y

set s__Ragnaros__Ragnas_u[data]=GetTriggerUnit()
set s__Ragnaros__Ragnas_a1[data]=0.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a1[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a1[data] * bj_DEGTORAD)
set s__Ragnaros__Ragnas_u1[data]=CreateUnit(GetOwningPlayer(s__Ragnaros__Ragnas_u[data]), Ragnaros__DUMMY_ID, x, y, 0.)
set s__Ragnaros__Ragnas_a2[data]=120.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a2[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a2[data] * bj_DEGTORAD)
set s__Ragnaros__Ragnas_u2[data]=CreateUnit(GetOwningPlayer(s__Ragnaros__Ragnas_u[data]), Ragnaros__DUMMY_ID, x, y, 0.)
set s__Ragnaros__Ragnas_a3[data]=240.
set x=GetUnitX(s__Ragnaros__Ragnas_u[data]) + 128. * Cos(s__Ragnaros__Ragnas_a3[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnaros__Ragnas_u[data]) + 128. * Sin(s__Ragnaros__Ragnas_a3[data] * bj_DEGTORAD)
set s__Ragnaros__Ragnas_u3[data]=CreateUnit(GetOwningPlayer(s__Ragnaros__Ragnas_u[data]), Ragnaros__DUMMY_ID, x, y, 0.)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Ragnaros__Handler)

set t=null
endfunction

function Ragnaros__Conditions takes nothing returns boolean
    if GetItemTypeId(GetManipulatedItem()) == Ragnaros__ITEM_ID and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) then
    if GetUnitAbilityLevel(GetTriggerUnit(), Ragnaros__ABIL_ID) == 0 then
        call Ragnaros__Actions()
        call UnitAddAbility(GetTriggerUnit(), Ragnaros__ABIL_ID)
    endif
    endif
    return false
endfunction

//===========================================================================
function Ragnaros__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(trig, Condition(function Ragnaros__Conditions))
endfunction

// scope Ragnaros ends


//===========================================================================
// Trigger: Fear Item
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope FearItem begins



        function s__FearItem__FearIS_destroy takes integer this returns nothing
        set s__FearItem__FearIS_c[this]=null
        set s__FearItem__FearIS_u[this]=null
        call s__FearItem__FearIS_deallocate(this)
        endfunction

    function FearItem__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local integer l__F
    local real r
    
    
    if GetUnitAbilityLevel(s__FearItem__FearIS_u[data], 'B03K') > 0 and s__FearItem__FearIS_i[data] < 160 and UnitAlive(s__FearItem__FearIS_u[data]) and LC[( 1 + GetPlayerId(GetOwningPlayer(s__FearItem__FearIS_u[data])) )] == s__FearItem__FearIS_u[data] then
    if s__FearItem__FearIS_i[data] == 0 or s__FearItem__FearIS_i[data] == - 1440 then
        if GetLocalPlayer() == Player(s__FearItem__FearIS_p[data]) then
    call EnableUserControl(false)
    endif
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((s__FearItem__FearIS_u[data])), 0)) then // INLINED!!
                        set l__F=s__Fear_get(s__FearItem__FearIS_u[data])
			if s__FearItem__FearIS_revenge[data] then
			set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + 50.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
			else
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + 5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
			endif
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=s__FearItem__FearIS_u[data]
                        set s__Fear_path[l__F]=FearItem__PATH
                        set s__Fear_attach[l__F]=FearItem__ATTACH
			if s__FearItem__FearIS_revenge[data] then
			set s__Fear_steps[(l__F)]=(R2I(((((50.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
			else
                        set s__Fear_steps[(l__F)]=(R2I(((((5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
			endif
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
    endif
    call PanCameraToForPlayer(Player(s__FearItem__FearIS_p[data]), GetUnitX(s__FearItem__FearIS_u[data]), GetUnitY(s__FearItem__FearIS_u[data]))
    set s__FearItem__FearIS_i[data]=s__FearItem__FearIS_i[data] + 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function FearItem__Handler)
    else
    if GetLocalPlayer() == Player(s__FearItem__FearIS_p[data]) then
    call EnableUserControl(true)
    endif
    call s__FearItem__FearIS_destroy(data)
    call ReleaseTimer(t)
    endif
    
    set t=null
    endfunction

   
    function FearItem__Actions takes nothing returns nothing
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__FearItem__FearIS__allocate()
    
    set s__FearItem__FearIS_c[data]=GetTriggerUnit()
if GetUnitAbilityLevel(s__FearItem__FearIS_c[data], 'A0G0') == 1 then
set s__FearItem__FearIS_u[data]=LC[( 1 + GetPlayerId(GetOwningPlayer(s__FearItem__FearIS_c[data])) )]
set s__FearItem__FearIS_i[data]=- 1440
set s__FearItem__FearIS_revenge[data]=true
call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(s__FearItem__FearIS_c[data])) )] + ( GetPlayerName(GetOwningPlayer(s__FearItem__FearIS_c[data])) + "|r" ) ) + ( " has succumbed to Dementia." ) ))
else
    set s__FearItem__FearIS_u[data]=GetSpellTargetUnit()
set s__FearItem__FearIS_i[data]=0
set s__FearItem__FearIS_revenge[data]=false
endif
    
    set s__FearItem__FearIS_p[data]=GetPlayerId(GetOwningPlayer(s__FearItem__FearIS_u[data]))
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    if IsUnitIllusion(s__FearItem__FearIS_u[data]) then
        call UnitDamageTarget(s__FearItem__FearIS_c[data], s__FearItem__FearIS_u[data], GetUnitState(s__FearItem__FearIS_u[data], UNIT_STATE_MAX_LIFE) * 3., false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
    endif
    
    
    call TimerStart(t, .03125, false, function FearItem__Handler)
    
    set t=null
    endfunction
    

    function FearItem__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0CX' , function FearItem__Actions)
    endfunction
// scope FearItem ends
//===========================================================================
// Trigger: AntiMagicCharges
//===========================================================================

// scope AntiMagicCharges begins


function AntiMagicCharges__Conditions takes nothing returns boolean
local item i= GetManipulatedItem()
if GetItemTypeId(i) == 'I01K' then
	if GetItemCharges(i) == 0 then

	call RemoveItem(i)
	endif
endif

set i=null
return false
endfunction

function AntiMagicCharges__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_USE_ITEM)
        call TriggerAddCondition(t, Condition(function AntiMagicCharges__Conditions))
endfunction
// scope AntiMagicCharges ends

//===========================================================================
// Trigger: Prides Downfall
//===========================================================================
//TESH.scrollpos=16
//TESH.alwaysfold=0
// scope PDownfall begins


        function s__PDown_destroy takes integer this returns nothing
        set s__PDown_c[this]=null
        set s__PDown_u[this]=null
        call s__PDown_deallocate(this)
        endfunction

    function PDownfall__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local unit u
    local real r
 local unit revenge

	if GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') == 1 then
	set revenge=s__PDown_u[data]
	set s__PDown_u[data]=LC[( 1 + GetPlayerId(GetOwningPlayer(s__PDown_c[data])) )]
	call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(s__PDown_c[data])) )] + ( GetPlayerName(GetOwningPlayer(s__PDown_c[data])) + "|r" ) ) + ( " has let Pride become his downfall." ) ))
	endif
    
    if GetUnitAbilityLevel(s__PDown_u[data], 'BHbn') > 0 or GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') == 1 then
	if GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') == 1 then
set u=CreateUnit(GetOwningPlayer(revenge), 'h00W', GetUnitX(s__PDown_u[data]), GetUnitY(s__PDown_u[data]), 0.0)
else
    set u=CreateUnit(GetOwningPlayer(s__PDown_c[data]), 'h00W', GetUnitX(s__PDown_u[data]), GetUnitY(s__PDown_u[data]), 0.0)
endif
    call UnitApplyTimedLife(u, 'BTLF', 1.)
    if IsUnitEnemy(s__PDown_u[data], GetOwningPlayer(s__PDown_c[data])) or GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') == 1 then
    if IsUnitType(s__PDown_u[data], UNIT_TYPE_HERO) and GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') != 1 then
    set r=( ( 5. * GetHeroInt(s__PDown_u[data], true) * GetUnitAbilityLevel(s__PDown_u[data], 'A038') ) + ( 5. * GetHeroStr(s__PDown_u[data], true) * GetUnitAbilityLevel(s__PDown_u[data], 'A039') ) + ( 5. * GetHeroAgi(s__PDown_u[data], true) * GetUnitAbilityLevel(s__PDown_u[data], 'A01J') ) )
    call UnitDamageTargetEx(u , s__PDown_u[data] , r , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
    call Q9E(s__PDown_u[data] , R2I(r))
    else

	if GetUnitAbilityLevel(s__PDown_c[data], 'A0G0') == 1 then
set r=666666.
else
    set r=( ( 25. * GetHeroInt(s__PDown_c[data], true) * GetUnitAbilityLevel(s__PDown_c[data], 'A038') ) + ( 25. * GetHeroStr(s__PDown_c[data], true) * GetUnitAbilityLevel(s__PDown_c[data], 'A039') ) + ( 25. * GetHeroAgi(s__PDown_c[data], true) * GetUnitAbilityLevel(s__PDown_c[data], 'A01J') ) )
endif
call UnitDamageTargetEx(u , s__PDown_u[data] , r , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
    call Q9E(s__PDown_u[data] , R2I(r))
    endif
    endif
    endif
    
    call s__PDown_destroy(data)
    call ReleaseTimer(t)
    
set revenge=null
    set u=null
    set t=null
    endfunction

   
    function PDownfall__PridesDownfallFunc takes nothing returns nothing
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__PDown__allocate()
    
    set s__PDown_c[data]=GetTriggerUnit()
    set s__PDown_u[data]=GetSpellTargetUnit()
    call SetUnitState(s__PDown_c[data], UNIT_STATE_MANA, GetUnitState(s__PDown_c[data], UNIT_STATE_MANA) / 2.)
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, .01, false, function PDownfall__Handler)
    
    set t=null
    endfunction
    

    
    function PDownfall__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0B8' , function PDownfall__PridesDownfallFunc)
    endfunction
// scope PDownfall ends
//===========================================================================
// Trigger: Wand Courier Punishment
//===========================================================================
//TESH.scrollpos=5
//TESH.alwaysfold=0
// scope WandCourierPunishment begins

        function s__WandCourierPunishment__WandP_destroy takes integer this returns nothing
call DestroyEffect(s__WandCourierPunishment__WandP_fx[this])
	set s__WandCourierPunishment__WandP_fx[this]=null
            set s__WandCourierPunishment__WandP_u[this]=null
            call s__WandCourierPunishment__WandP_deallocate(this)
        endfunction

function WandCourierPunishment__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__WandCourierPunishment__WandP_u[data] == null or not UnitAlive(s__WandCourierPunishment__WandP_u[data]) or s__WandCourierPunishment__WandP_i[data] == 60 then
call ReleaseTimer(t)
call s__WandCourierPunishment__WandP_destroy(data)
else

call SetWidgetLife(s__WandCourierPunishment__WandP_u[data], GetWidgetLife(s__WandCourierPunishment__WandP_u[data]) - ( GetWidgetLife(s__WandCourierPunishment__WandP_u[data]) * .2 ))
call SetUnitState(s__WandCourierPunishment__WandP_u[data], UNIT_STATE_MANA, 0.)

set s__WandCourierPunishment__WandP_i[data]=s__WandCourierPunishment__WandP_i[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1., false, function WandCourierPunishment__Handler)
endif

set t=null
endfunction

function WandCourierPunishment__Conditions takes nothing returns nothing
local integer data
local timer t
if GetUnitAbilityLevel(GetTriggerUnit(), 'A0G0') == 1 then

set t=(NewTimerEx(0)) // INLINED!!
set data=s__WandCourierPunishment__WandP__allocate()
set s__WandCourierPunishment__WandP_u[data]=LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]
set s__WandCourierPunishment__WandP_i[data]=0
set s__WandCourierPunishment__WandP_fx[data]=AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\TornadoElemental.mdl", s__WandCourierPunishment__WandP_u[data], "origin")

call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., "An ominous wind from the East blows for " + ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(s__WandCourierPunishment__WandP_u[data])) )] + ( GetPlayerName(GetOwningPlayer(s__WandCourierPunishment__WandP_u[data])) + "|r" ) ) + ( "..." ) ))

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!



call TimerStart(t, .01, false, function WandCourierPunishment__Handler)
endif

set t=null
endfunction

function WandCourierPunishment__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A04G' , function WandCourierPunishment__Conditions)
endfunction

// scope WandCourierPunishment ends

//===========================================================================
// Trigger: Losing Item Ragnas
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope LoseRagnas begins

function LoseRagnas__Conditions takes nothing returns boolean
    if GetItemTypeId(GetManipulatedItem()) == 'I030' then
        call UnitRemoveAbility(GetTriggerUnit(), 'A0C9')
    endif
    return false
endfunction

//===========================================================================
function LoseRagnas__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DROP_ITEM)
    call TriggerAddCondition(trig, Condition(function LoseRagnas__Conditions))
endfunction
// scope LoseRagnas ends

//===========================================================================
// Trigger: Losing Item Ragnarok
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope LoseRagnok begins

function LoseRagnok__Conditions takes nothing returns boolean
    if GetItemTypeId(GetManipulatedItem()) == 'I02V' then
        call UnitRemoveAbility(GetTriggerUnit(), 'A0C8')
    endif
    return false
endfunction

//===========================================================================
function LoseRagnok__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DROP_ITEM)
    call TriggerAddCondition(trig, Condition(function LoseRagnok__Conditions))
endfunction
// scope LoseRagnok ends

//===========================================================================
// Trigger: Ragnarok
//===========================================================================
//TESH.scrollpos=36
//TESH.alwaysfold=0
// scope Ragnarok begins


function s__Ragnarok__Ragnak2_destroy takes integer this returns nothing
set s__Ragnarok__Ragnak2_u[this]=null
call s__Ragnarok__Ragnak2_deallocate(this)
endfunction

        function s__Ragnarok__Ragnak_destroy takes integer this returns nothing
            set s__Ragnarok__Ragnak_u[this]=null
            set s__Ragnarok__Ragnak_u1[this]=null
            set s__Ragnarok__Ragnak_u2[this]=null
            set s__Ragnarok__Ragnak_u3[this]=null
            set s__Ragnarok__Ragnak_u4[this]=null
            call s__Ragnarok__Ragnak_deallocate(this)
        endfunction

function Ragnarok__Handler2 takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call UnitRemoveAbility(s__Ragnarok__Ragnak2_u[data], Ragnarok__DBUFF_ID)
call s__Ragnarok__Ragnak2_destroy(data)
call ReleaseTimer(t)

set t=null
endfunction

function Ragnarok__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local timer t
local integer data

if IsUnitEnemy(u, GetOwningPlayer(Ragnarok__CASTER)) and GetUnitAbilityLevel(u, Ragnarok__DBUFF_ID) == 0 and GetUnitAbilityLevel(Ragnarok__CASTER, 'A07S') == 0 then
set t=(NewTimerEx(0)) // INLINED!!
set data=s__Ragnarok__Ragnak2__allocate()
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Flameshock.mdx", u, "chest"))
call UnitAddAbility(u, Ragnarok__DBUFF_ID)
call UnitDamageTarget(Ragnarok__CASTER, u, GetHeroStr(Ragnarok__CASTER, true) * 30., false, true, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
set s__Ragnarok__Ragnak2_u[data]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 5., false, function Ragnarok__Handler2)
endif

set u=null
set t=null
return false
endfunction

function Ragnarok__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real x
local real y

if GetUnitAbilityLevel(s__Ragnarok__Ragnak_u[data], Ragnarok__ABIL_ID) != 0 and LC[( 1 + GetPlayerId(GetOwningPlayer(s__Ragnarok__Ragnak_u[data])) )] == s__Ragnarok__Ragnak_u[data] then
set Ragnarok__CASTER=s__Ragnarok__Ragnak_u[data]
set s__Ragnarok__Ragnak_a1[data]=s__Ragnarok__Ragnak_a1[data] + 2.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a1[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a1[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnarok__Ragnak_u1[data], x)
call SetUnitY(s__Ragnarok__Ragnak_u1[data], y)
call GroupEnumUnitsInRange(Ragnarok__GROUP, x, y, 116., Filter(function Ragnarok__FilterActions))
set s__Ragnarok__Ragnak_a2[data]=s__Ragnarok__Ragnak_a2[data] + 2.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a2[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a2[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnarok__Ragnak_u2[data], x)
call SetUnitY(s__Ragnarok__Ragnak_u2[data], y)
call GroupEnumUnitsInRange(Ragnarok__GROUP, x, y, 116., Filter(function Ragnarok__FilterActions))
set s__Ragnarok__Ragnak_a3[data]=s__Ragnarok__Ragnak_a3[data] + 2.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a3[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a3[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnarok__Ragnak_u3[data], x)
call SetUnitY(s__Ragnarok__Ragnak_u3[data], y)
call GroupEnumUnitsInRange(Ragnarok__GROUP, x, y, 116., Filter(function Ragnarok__FilterActions))
set s__Ragnarok__Ragnak_a4[data]=s__Ragnarok__Ragnak_a4[data] + 2.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a4[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a4[data] * bj_DEGTORAD)
call SetUnitX(s__Ragnarok__Ragnak_u4[data], x)
call SetUnitY(s__Ragnarok__Ragnak_u4[data], y)
call GroupEnumUnitsInRange(Ragnarok__GROUP, x, y, 116., Filter(function Ragnarok__FilterActions))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Ragnarok__Handler)
else
            call RemoveUnit(s__Ragnarok__Ragnak_u1[data])
            call RemoveUnit(s__Ragnarok__Ragnak_u2[data])
            call RemoveUnit(s__Ragnarok__Ragnak_u3[data])
            call RemoveUnit(s__Ragnarok__Ragnak_u4[data])
            call s__Ragnarok__Ragnak_destroy(data)
            call ReleaseTimer(t)
endif

set t=null
endfunction

function Ragnarok__Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__Ragnarok__Ragnak__allocate()
local real x
local real y

set s__Ragnarok__Ragnak_u[data]=GetTriggerUnit()
set s__Ragnarok__Ragnak_a1[data]=0.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a1[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a1[data] * bj_DEGTORAD)
set s__Ragnarok__Ragnak_u1[data]=CreateUnit(GetOwningPlayer(s__Ragnarok__Ragnak_u[data]), Ragnarok__DUMMY_ID, x, y, 0.)
set s__Ragnarok__Ragnak_a2[data]=90.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a2[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a2[data] * bj_DEGTORAD)
set s__Ragnarok__Ragnak_u2[data]=CreateUnit(GetOwningPlayer(s__Ragnarok__Ragnak_u[data]), Ragnarok__DUMMY_ID, x, y, 0.)
set s__Ragnarok__Ragnak_a3[data]=180.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a3[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a3[data] * bj_DEGTORAD)
set s__Ragnarok__Ragnak_u3[data]=CreateUnit(GetOwningPlayer(s__Ragnarok__Ragnak_u[data]), Ragnarok__DUMMY_ID, x, y, 0.)
set s__Ragnarok__Ragnak_a4[data]=270.
set x=GetUnitX(s__Ragnarok__Ragnak_u[data]) + 128. * Cos(s__Ragnarok__Ragnak_a4[data] * bj_DEGTORAD)
set y=GetUnitY(s__Ragnarok__Ragnak_u[data]) + 128. * Sin(s__Ragnarok__Ragnak_a4[data] * bj_DEGTORAD)
set s__Ragnarok__Ragnak_u4[data]=CreateUnit(GetOwningPlayer(s__Ragnarok__Ragnak_u[data]), Ragnarok__DUMMY_ID, x, y, 0.)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Ragnarok__Handler)

set t=null
endfunction

function Ragnarok__Conditions takes nothing returns boolean
    if GetItemTypeId(GetManipulatedItem()) == Ragnarok__ITEM_ID and IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) then
    if GetUnitAbilityLevel(GetTriggerUnit(), Ragnarok__ABIL_ID) == 0 then
        call Ragnarok__Actions()
        call UnitAddAbility(GetTriggerUnit(), Ragnarok__ABIL_ID)
    endif
    endif
    return false
endfunction

//===========================================================================
function Ragnarok__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddCondition(trig, Condition(function Ragnarok__Conditions))
endfunction

// scope Ragnarok ends


//===========================================================================
// Trigger: CrucibleHeal
//===========================================================================
// scope CrucibleHeal begins


function CrucibleHeal__OnSpell takes nothing returns boolean
        if UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I03C') and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            call SetWidgetLife(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], GetWidgetLife(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) + ( GetUnitState(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], UNIT_STATE_MAX_LIFE) * .05 ))
            call SetUnitState(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], UNIT_STATE_MANA, GetUnitState(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], UNIT_STATE_MANA) + ( GetUnitState(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], UNIT_STATE_MAX_MANA) * .0066 ))
            //call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function CrucibleHeal__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function CrucibleHeal__OnSpell))
endfunction
// scope CrucibleHeal ends
//===========================================================================
// Trigger: SinisterJar
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
// scope SinisterJar begins

    function SinisterJar__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local real d= GetEventDamage() * 25.
        
        if ( UnitHasItemOfTypeBJ(u, 'I034') or UnitHasItemOfTypeBJ(u, 'I035') ) and GetEventDamage() >= GetWidgetLife(u) and GetEventDamage() > 0 and a != u then
            if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
                if ( BI[NI] ) == ( LN ) then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
                        call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
                    else
                        call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
                    endif
                    if ( UnitHasItemOfTypeBJ(u, 'I035') ) then
                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
                        call RemoveItem(GetItemOfTypeFromUnitBJ(u, 'I035'))
                    else
                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
                        call RemoveItem(GetItemOfTypeFromUnitBJ(u, 'I034'))
                    endif
                endif
            else
                set DI[NI]=DI[NI] + GetEventDamage()
                if GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
                    call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
                else
                    call SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_LIFE) + d)
                endif
                if ( UnitHasItemOfTypeBJ(u, 'I035') ) then
                    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "chest"))
                    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\OrbOfCorruption.mdx", u, "origin"))
                    call RemoveItem(GetItemOfTypeFromUnitBJ(u, 'I035'))
                else
                    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))
                    call RemoveItem(GetItemOfTypeFromUnitBJ(u, 'I034'))
                endif
            endif
        endif

        
        set u=null
        set a=null
        return false
    endfunction
    
    function SinisterJar__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function SinisterJar__Actions))
    endfunction
    
// scope SinisterJar ends
//===========================================================================
// Trigger: NinjaRope
//===========================================================================
//TESH.scrollpos=585
//TESH.alwaysfold=0
//==============================================================================
//  Ninja Rope 1.01 -- Spell Making Session #10 -- by masda70
//==============================================================================
//    Ninja Rope by masda70,
//     - specifically made for wc3c's Spell Making Session #10  
//     - inspired from Team17's Worms game     
//     - adjusted to fit wc3's RTS combat, so as to have particular uses in different mainstream map types.
//
//   Requirements:
//     - vJASS
//     - Timer Ticket library made by cohadar
//     - Perfect Unit Indexing library made by cohadar
//     - Two abilities, the main one to cast the spell and the other to stop swinging
//     - The attach point unit, which is a rope in this demo
//   Credits to:
//      * Cohadar for his TT and PUI libraries
//      * Vexorian for vJass
//      * PipeDream and all of the other grimoire contributors
//      * Rei, for his feedback
//      * Wc3campaigns for hosting this spell making contest
//
//   Setup:
//     - Look below for CUSTOMIZABLE VALUES, and change as you wish both balance, skill progression, SFX and object data
//     - Look further below for the DIFFERENTIAL EQUATION, if you wish to play with it
//     - Look for SPELL_CONFLICT variables to configure conflicting spells, such as entangling roots and ensnare, which are supposed to prevent moevment
//      configuring this is done by setting up the exact buffs, that when removed will trigger the desired effect.
//
//   Public functions:
//     - NinjaRope_UnitStopSpell takes unit caster : provides a way to stop the unit from swinging, possibly used in conjunction with other spells
//       requiring total control of hero's movement, or perhaps to prevent abuse of a certain spell or item with this ability.
//==============================================================================    

// scope NinjaRope begins

//==============================================================================    
//                         -- CUSTOMIZABLE VALUES  --  
//==============================================================================   

    
    
    

    function NinjaRope__InitVars takes nothing returns nothing
        set NinjaRope__ROPE_STABLELENGTH[1]=700.
        set NinjaRope__ROPE_STABLELENGTH[2]=700.
        set NinjaRope__ROPE_STABLELENGTH[3]=700.
        
        set NinjaRope__ROPE_ATTACHHEIGHT[1]=800.
        set NinjaRope__ROPE_ATTACHHEIGHT[2]=800.
        set NinjaRope__ROPE_ATTACHHEIGHT[3]=800.
        
        set NinjaRope__ANGLE_INITIALVELOCITY[1]=- 0.5
        set NinjaRope__ANGLE_INITIALVELOCITY[2]=- 0.5
        set NinjaRope__ANGLE_INITIALVELOCITY[3]=- 0.5
        
        //Ladder conflicting BUFFS are setup here for the demo
        set NinjaRope__SPELL_CONFLICT_IDS[1]='BEer' //Entaling roots
        set NinjaRope__SPELL_CONFLICT_IDS[2]='Beng' //Raider's Ensnare
        set NinjaRope__SPELL_CONFLICT_IDS[3]='Bcy2' //DoTT's Cyclone
    endfunction

//==============================================================================    
//                      -- END OF CUSTOMIZABLE VALUES  --  
//==============================================================================    

//==============================================================================
     //UnitXYZ and Z handling
    
    function NinjaRope__UnitAddZ takes unit u returns nothing
        call UnitAddAbility(u, 'Amrf')
        call UnitRemoveAbility(u, 'Amrf')
    endfunction

    function NinjaRope__GetUnitZ takes unit u returns real
        call MoveLocation(NinjaRope__LocationZ, GetUnitX(u), GetUnitY(u))
        return GetLocationZ(NinjaRope__LocationZ) + GetUnitFlyHeight(u)
    endfunction
    
    function NinjaRope__SetUnitXYZ takes unit u,real x,real y,real z returns nothing
        call SetUnitX(u, x)
        call SetUnitY(u, y)
        call MoveLocation(NinjaRope__LocationZ, x, y)
        call SetUnitFlyHeight(u, z - GetLocationZ(NinjaRope__LocationZ), 0.)
    endfunction
    
//==============================================================================
    
    
    
        

        

        
        
        
        

        

        function s__NinjaRope__SpellData_CalcVelocity takes integer this returns nothing
            set s__NinjaRope__SpellData_cvelx[this]=Cos(s__NinjaRope__SpellData_tetaP[this]) * s__NinjaRope__SpellData_utetax[this] * s__NinjaRope__SpellData_tetaV[this] * s__NinjaRope__SpellData_ropelength[this]
            set s__NinjaRope__SpellData_cvely[this]=Cos(s__NinjaRope__SpellData_tetaP[this]) * s__NinjaRope__SpellData_utetay[this] * s__NinjaRope__SpellData_tetaV[this] * s__NinjaRope__SpellData_ropelength[this]
            set s__NinjaRope__SpellData_cvelz[this]=- Sin(s__NinjaRope__SpellData_tetaP[this]) * s__NinjaRope__SpellData_vtetaz[this] * s__NinjaRope__SpellData_tetaV[this] * s__NinjaRope__SpellData_ropelength[this]
        endfunction
        function s__NinjaRope__SpellData_CheckCollision takes integer this returns boolean
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this] - NinjaRope__UNIT_COLLISIONRADIUS, s__NinjaRope__SpellData_cposy[this])
            set NinjaRope__z1=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this] + NinjaRope__UNIT_COLLISIONRADIUS, s__NinjaRope__SpellData_cposy[this])
            set NinjaRope__z2=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this], s__NinjaRope__SpellData_cposy[this] - NinjaRope__UNIT_COLLISIONRADIUS)
            set NinjaRope__z3=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this], s__NinjaRope__SpellData_cposy[this] + NinjaRope__UNIT_COLLISIONRADIUS)
            set NinjaRope__z4=GetLocationZ(NinjaRope__LocationZ)
            if NinjaRope__z1 > s__NinjaRope__SpellData_cposz[this] or NinjaRope__z2 > s__NinjaRope__SpellData_cposz[this] or NinjaRope__z3 > s__NinjaRope__SpellData_cposz[this] or NinjaRope__z4 > s__NinjaRope__SpellData_cposz[this] then
                return true
            else
                return false
            endif
        endfunction
        function s__NinjaRope__SpellData_Bounce takes integer this returns nothing
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this] - NinjaRope__BOUNCE_SAMPLERADIUS, s__NinjaRope__SpellData_cposy[this])
            set NinjaRope__z1=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this] + NinjaRope__BOUNCE_SAMPLERADIUS, s__NinjaRope__SpellData_cposy[this])
            set NinjaRope__z2=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this], s__NinjaRope__SpellData_cposy[this] - NinjaRope__BOUNCE_SAMPLERADIUS)
            set NinjaRope__z3=GetLocationZ(NinjaRope__LocationZ)
            call MoveLocation(NinjaRope__LocationZ, s__NinjaRope__SpellData_cposx[this], s__NinjaRope__SpellData_cposy[this] + NinjaRope__BOUNCE_SAMPLERADIUS)
            set NinjaRope__z4=GetLocationZ(NinjaRope__LocationZ)
            set NinjaRope__z1=( NinjaRope__z1 - NinjaRope__z2 ) * 2. * NinjaRope__BOUNCE_SAMPLERADIUS
            set NinjaRope__z2=( NinjaRope__z3 - NinjaRope__z4 ) * 2. * NinjaRope__BOUNCE_SAMPLERADIUS
            set NinjaRope__z3=NinjaRope__BOUNCE_SAMPLERADIUS
            call s__NinjaRope__SpellData_CalcVelocity(this)
            if NinjaRope__z1 * s__NinjaRope__SpellData_cvelx[this] + NinjaRope__z2 * s__NinjaRope__SpellData_cvely[this] + NinjaRope__z3 * s__NinjaRope__SpellData_cvelz[this] <= 0. then
                if s__NinjaRope__SpellData_tetaV[this] < 0. then
                    set s__NinjaRope__SpellData_tetaV[this]=- s__NinjaRope__SpellData_tetaV[this] + NinjaRope__BOUNCE_ANGLEVELOCITYGAIN
                else
                    set s__NinjaRope__SpellData_tetaV[this]=- s__NinjaRope__SpellData_tetaV[this] - NinjaRope__BOUNCE_ANGLEVELOCITYGAIN
                endif
            endif
        endfunction
        function s__NinjaRope__SpellData_BoundBounce takes integer this,real x,real y returns nothing
            call s__NinjaRope__SpellData_CalcVelocity(this)
            if x * s__NinjaRope__SpellData_cvelx[this] + y * s__NinjaRope__SpellData_cvely[this] <= 0. then
                if s__NinjaRope__SpellData_tetaV[this] < 0. then
                    set s__NinjaRope__SpellData_tetaV[this]=- s__NinjaRope__SpellData_tetaV[this] + NinjaRope__BOUNCE_ANGLEVELOCITYGAIN
                else
                    set s__NinjaRope__SpellData_tetaV[this]=- s__NinjaRope__SpellData_tetaV[this] - NinjaRope__BOUNCE_ANGLEVELOCITYGAIN
                endif
            endif
        endfunction
        function s__NinjaRope__SpellData_onDestroy takes integer this returns nothing
        local real height= 0.
        
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U00O' or GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U003' then
            set height=30.
            endif
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U000' then
            set height=120.
            endif
            
            call SetUnitFlyHeight(s__NinjaRope__SpellData_Caster[this], height, 0.)
            call SetUnitPathing(s__NinjaRope__SpellData_Caster[this], true)
            set s__NinjaRope__SpellData_CasterData[GetUnitUserData(s__NinjaRope__SpellData_Caster[this])]=0
            if s__NinjaRope__SpellData_Caster[this] != null then
                call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], NinjaRope__ABILITY_STOPID)
							if GetUnitAbilityLevel(s__NinjaRope__SpellData_Caster[this], 'A0O7') != 0 then
			call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], 'A0O7')
			endif
            endif
            set s__NinjaRope__SpellData_Caster[this]=null
            if s__NinjaRope__SpellData_AttachPoint[this] != null then
                call KillUnit(s__NinjaRope__SpellData_AttachPoint[this])
            endif
            set s__NinjaRope__SpellData_AttachPoint[this]=null
            if s__NinjaRope__SpellData_bolt[this] != null then
                call DestroyLightning(s__NinjaRope__SpellData_bolt[this])
            endif
            set s__NinjaRope__SpellData_bolt[this]=null
            call TriggerRemoveCondition(s__NinjaRope__SpellData_onDeath[this], s__NinjaRope__SpellData_onDeathCond[this])
            call DestroyTrigger(s__NinjaRope__SpellData_onDeath[this])
            set s__NinjaRope__SpellData_onDeathCond[this]=null
            set s__NinjaRope__SpellData_onDeath[this]=null
        endfunction

//Generated destructor of NinjaRope__SpellData
function s__NinjaRope__SpellData_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NinjaRope__SpellData_V[this]!=-1) then
        return
    endif
    call s__NinjaRope__SpellData_onDestroy(this)
    set si__NinjaRope__SpellData_V[this]=si__NinjaRope__SpellData_F
    set si__NinjaRope__SpellData_F=this
endfunction

        function s__NinjaRope__SpellData_onDeathCondition takes nothing returns boolean
            set s__NinjaRope__SpellData_ticks[(s__NinjaRope__SpellData_CasterData[GetUnitUserData(GetTriggerUnit())])]=0 // INLINED!!
            return false
        endfunction
        function s__NinjaRope__SpellData_create takes unit u returns integer
            local integer this=s__NinjaRope__SpellData__allocate()
            set s__NinjaRope__SpellData_Caster[this]=u
            call NinjaRope__UnitAddZ(u)
            call SetUnitPathing(u, false)
            call UnitAddAbility(s__NinjaRope__SpellData_Caster[this], NinjaRope__ABILITY_STOPID)
			if UnitHasItemOfTypeBJ(s__NinjaRope__SpellData_Caster[this], 'I04Y') then
			call UnitAddAbility(s__NinjaRope__SpellData_Caster[this], 'A0O7')
			endif
            set s__NinjaRope__SpellData_CasterData[GetUnitUserData(u)]=this

            set s__NinjaRope__SpellData_onDeath[this]=CreateTrigger()
            call TriggerRegisterUnitEvent(s__NinjaRope__SpellData_onDeath[this], s__NinjaRope__SpellData_Caster[this], EVENT_UNIT_DEATH)
            set s__NinjaRope__SpellData_onDeathCond[this]=TriggerAddCondition(s__NinjaRope__SpellData_onDeath[this], Condition(function s__NinjaRope__SpellData_onDeathCondition))
            
            set s__NinjaRope__SpellData_cposx[this]=GetUnitX(u)
            set s__NinjaRope__SpellData_cposy[this]=GetUnitY(u)
            set s__NinjaRope__SpellData_cposz[this]=NinjaRope__GetUnitZ(u)
            return this
        endfunction
        function s__NinjaRope__SpellData_recreate takes integer this returns nothing

            if s__NinjaRope__SpellData_AttachPoint[this] != null then
                call KillUnit(s__NinjaRope__SpellData_AttachPoint[this])
            endif
            set s__NinjaRope__SpellData_AttachPoint[this]=null
            if s__NinjaRope__SpellData_bolt[this] != null then
                call DestroyLightning(s__NinjaRope__SpellData_bolt[this])
            endif
            set s__NinjaRope__SpellData_bolt[this]=null
            call KillUnit(s__NinjaRope__SpellData_AttachPoint[this])
            set s__NinjaRope__SpellData_initfall[this]=false
        endfunction
        function s__NinjaRope__SpellData_Stop takes integer this returns nothing
            set s__NinjaRope__SpellData_ticks[this]=0
        endfunction


//==============================================================================
//                  -- DIFFERENTIAL EQUATION  -- 
//
//  d^2(Teta)/dt^2=-g/L*Sin(Teta)-F*d(Teta)/dt
//
//  where g is the acceleration due to standard gravity, the minus sign is included in the constant value for this demo
//          L is the length of the rope
//          F is the velocity friction's coef
//          Teta is the algebraic angle between the rope and the Z-Axis in the plane in which the movement occurs.
//
//  located here due to the problem of availability of private structs
//==============================================================================
    
    function NinjaRope__AngularAcceleration takes integer data returns real
        return ( NinjaRope__GRAVITY_ACCELERATION / s__NinjaRope__SpellData_ropelength[data] ) * Sin(s__NinjaRope__SpellData_tetaP[data]) - NinjaRope__ANGLE_VELOCITYFRICTION * s__NinjaRope__SpellData_tetaV[data]
    endfunction   

//==============================================================================
//              -- END OF DIFFERENTIAL EQUATION  --
//==============================================================================
    
        function s__NinjaRope__FallingBolt_onDestroy takes integer this returns nothing
            call DestroyLightning(s__NinjaRope__FallingBolt_bolt[this])
            set s__NinjaRope__FallingBolt_bolt[this]=null
        endfunction

//Generated destructor of NinjaRope__FallingBolt
function s__NinjaRope__FallingBolt_deallocate takes integer this returns nothing
    if this==null then
        return
    elseif (si__NinjaRope__FallingBolt_V[this]!=-1) then
        return
    endif
    call s__NinjaRope__FallingBolt_onDestroy(this)
    set si__NinjaRope__FallingBolt_V[this]=si__NinjaRope__FallingBolt_F
    set si__NinjaRope__FallingBolt_F=this
endfunction
        function s__NinjaRope__FallingBolt_Vanish takes nothing returns boolean
            local timer t= GetExpiredTimer()
            local integer this= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
            set s__NinjaRope__FallingBolt_l[this]=s__NinjaRope__FallingBolt_l[this] - NinjaRope__FALLINGBOLT_STEP
            if s__NinjaRope__FallingBolt_l[this] <= 0. then
                call s__NinjaRope__FallingBolt_deallocate(this)
                call ReleaseTimer(t)
                return true
            endif
            call MoveLightningEx(s__NinjaRope__FallingBolt_bolt[this], true, s__NinjaRope__FallingBolt_x[this], s__NinjaRope__FallingBolt_y[this], s__NinjaRope__FallingBolt_z[this], s__NinjaRope__FallingBolt_x[this] + s__NinjaRope__FallingBolt_utx[this] * Sin(s__NinjaRope__FallingBolt_tP[this]) * s__NinjaRope__FallingBolt_l[this], s__NinjaRope__FallingBolt_y[this] + s__NinjaRope__FallingBolt_uty[this] * Sin(s__NinjaRope__FallingBolt_tP[this]) * s__NinjaRope__FallingBolt_l[this], s__NinjaRope__FallingBolt_z[this] - 70. + s__NinjaRope__FallingBolt_vtz[this] * Cos(s__NinjaRope__FallingBolt_tP[this]) * s__NinjaRope__FallingBolt_l[this])
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( this)) // INLINED!!
            call TimerStart(t, .03125, false, function s__NinjaRope__FallingBolt_Vanish)
            set t=null
            return false
        endfunction
        function s__NinjaRope__FallingBolt_create takes integer data returns integer
            local timer t= (NewTimerEx(0)) // INLINED!!
            local integer this=s__NinjaRope__FallingBolt__allocate()
            set s__NinjaRope__FallingBolt_bolt[this]=s__NinjaRope__SpellData_bolt[data]
            set s__NinjaRope__FallingBolt_x[this]=s__NinjaRope__SpellData_aposx[data] + s__NinjaRope__SpellData_utetax[data] * Sin(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
            set s__NinjaRope__FallingBolt_y[this]=s__NinjaRope__SpellData_aposy[data] + s__NinjaRope__SpellData_utetay[data] * Sin(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
            set s__NinjaRope__FallingBolt_z[this]=s__NinjaRope__SpellData_aposz[data] - Cos(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
            set s__NinjaRope__FallingBolt_utx[this]=s__NinjaRope__SpellData_utetax[data]
            set s__NinjaRope__FallingBolt_uty[this]=s__NinjaRope__SpellData_utetay[data]
            set s__NinjaRope__FallingBolt_vtz[this]=s__NinjaRope__SpellData_vtetaz[data]
            set s__NinjaRope__FallingBolt_tP[this]=s__NinjaRope__SpellData_tetaP[data]
            set s__NinjaRope__FallingBolt_l[this]=s__NinjaRope__SpellData_ropelength[data]
            
            set s__NinjaRope__SpellData_bolt[data]=null
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( this)) // INLINED!!
            call TimerStart(t, .03125, false, function s__NinjaRope__FallingBolt_Vanish)
            
            set t=null
            return this
        endfunction

//==============================================================================


    function NinjaRope__PeriodicIntegration takes nothing returns boolean
    local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local boolean b=false
        local unit u=s__NinjaRope__SpellData_Caster[data]
        local integer i
        local real height= 1.
        
            if GetUnitTypeId(u) == 'U00O' or GetUnitTypeId(u) == 'U003' then
            set height=30.
            endif
            if GetUnitTypeId(u) == 'U000' then
            set height=120.
            endif
            
            if s__NinjaRope__SpellData_ticks[data] == 0 then //let gravity pull the unit back to a normal position
                if not s__NinjaRope__SpellData_initfall[data] then
                    call s__NinjaRope__FallingBolt_create(data)
                    call s__NinjaRope__SpellData_CalcVelocity(data)
                    set s__NinjaRope__SpellData_initfall[data]=true
                endif
                set s__NinjaRope__SpellData_cposx[data]=s__NinjaRope__SpellData_cposx[data] + .03125 * s__NinjaRope__SpellData_cvelx[data]
                set s__NinjaRope__SpellData_cposy[data]=s__NinjaRope__SpellData_cposy[data] + .03125 * s__NinjaRope__SpellData_cvely[data]
                set s__NinjaRope__SpellData_cposz[data]=s__NinjaRope__SpellData_cposz[data] + .03125 * s__NinjaRope__SpellData_cvelz[data]
                set s__NinjaRope__SpellData_cvelz[data]=s__NinjaRope__SpellData_cvelz[data] + .03125 * NinjaRope__GRAVITY_ACCELERATION
                call NinjaRope__SetUnitXYZ(u , s__NinjaRope__SpellData_cposx[data] , s__NinjaRope__SpellData_cposy[data] , s__NinjaRope__SpellData_cposz[data])

                if s__NinjaRope__SpellData_cposx[data] < NinjaRope__bound_L then
                    set s__NinjaRope__SpellData_cvelx[data]=0
                elseif s__NinjaRope__SpellData_cposx[data] > NinjaRope__bound_R then
                    set s__NinjaRope__SpellData_cvelx[data]=0
                endif
                if s__NinjaRope__SpellData_cposy[data] < NinjaRope__bound_B then
                    set s__NinjaRope__SpellData_cvely[data]=0
                elseif s__NinjaRope__SpellData_cposy[data] > NinjaRope__bound_U then
                    set s__NinjaRope__SpellData_cvely[data]=0
                endif
                if GetUnitFlyHeight(u) <= height then
                //call SetTimerData(t,data)
                //call TimerStart(t,.03125,false,function PeriodicIntegration)
                    call ReleaseTimer(t)
                    call s__NinjaRope__SpellData_deallocate(data)
                    set u=null
                    set t=null
                    return true
                endif
                call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
                call TimerStart(t, .03125, false, function NinjaRope__PeriodicIntegration)
                //call ReleaseTimer(t)
                set t=null
                set u=null
                return false
            else
                set i=1
                if NinjaRope__SPELL_CONFLICT_ON then // check conflicts
                    loop
                        exitwhen i > NinjaRope__SPELL_CONFLICT_NUMBER
                        if GetUnitAbilityLevel(u, NinjaRope__SPELL_CONFLICT_IDS[i]) > 0 then
                            set s__NinjaRope__SpellData_ticks[data]=0
                            set s__NinjaRope__SpellData_tetaV[data]=0
                            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
                            call TimerStart(t, .03125, false, function NinjaRope__PeriodicIntegration)
                            set t=null
                            set u=null
                            return false
                        endif
                        set i=i + 1
                    endloop
                endif
                set s__NinjaRope__SpellData_ticks[data]=s__NinjaRope__SpellData_ticks[data] - 1
                //Applying LeapFrog
                set s__NinjaRope__SpellData_tetaP[data]=s__NinjaRope__SpellData_tetaP[data] + s__NinjaRope__SpellData_tetaV[data] * .03125 + s__NinjaRope__SpellData_tetaA[data] * .03125 * .03125 * 0.5
                set NinjaRope__temp=s__NinjaRope__SpellData_tetaA[data]
                set s__NinjaRope__SpellData_tetaA[data]=NinjaRope__AngularAcceleration(data)
                set s__NinjaRope__SpellData_tetaV[data]=s__NinjaRope__SpellData_tetaV[data] + ( s__NinjaRope__SpellData_tetaA[data] + NinjaRope__temp ) * .03125 * 0.5
                //End of integration
                //Reduce owl distance
                if s__NinjaRope__SpellData_owld[data] != 0. then
                    set b=true
                    if s__NinjaRope__SpellData_owld[data] > s__NinjaRope__SpellData_owlspeed[data] then
                        set s__NinjaRope__SpellData_owld[data]=s__NinjaRope__SpellData_owld[data] - s__NinjaRope__SpellData_owlspeed[data]
                        set s__NinjaRope__SpellData_owlx[data]=s__NinjaRope__SpellData_aposx[data] + s__NinjaRope__SpellData_utetax[data] * Sin(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
                        set s__NinjaRope__SpellData_owly[data]=s__NinjaRope__SpellData_aposy[data] + s__NinjaRope__SpellData_utetay[data] * Sin(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
                        set s__NinjaRope__SpellData_owlz[data]=s__NinjaRope__SpellData_aposz[data] + s__NinjaRope__SpellData_vtetaz[data] * Cos(s__NinjaRope__SpellData_owlteta[data]) * ( s__NinjaRope__SpellData_owld[data] )
                    else
                        set s__NinjaRope__SpellData_owld[data]=0.
                        set s__NinjaRope__SpellData_owlx[data]=s__NinjaRope__SpellData_aposx[data]
                        set s__NinjaRope__SpellData_owly[data]=s__NinjaRope__SpellData_aposy[data]
                        set s__NinjaRope__SpellData_owlz[data]=s__NinjaRope__SpellData_aposz[data]
                    endif
                endif
                
                //Apply changes to position
                set s__NinjaRope__SpellData_cposx[data]=s__NinjaRope__SpellData_owlx[data] + s__NinjaRope__SpellData_utetax[data] * Sin(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_ropelength[data]
                set s__NinjaRope__SpellData_cposy[data]=s__NinjaRope__SpellData_owly[data] + s__NinjaRope__SpellData_utetay[data] * Sin(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_ropelength[data]
                set s__NinjaRope__SpellData_cposz[data]=s__NinjaRope__SpellData_owlz[data] + s__NinjaRope__SpellData_vtetaz[data] * Cos(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_ropelength[data]
                call MoveLightningEx(s__NinjaRope__SpellData_bolt[data], true, s__NinjaRope__SpellData_cposx[data], s__NinjaRope__SpellData_cposy[data], s__NinjaRope__SpellData_cposz[data] + NinjaRope__UNIT_ATTACHHEIGHT, s__NinjaRope__SpellData_owlx[data], s__NinjaRope__SpellData_owly[data], s__NinjaRope__SpellData_owlz[data] - 70.)
                call NinjaRope__SetUnitXYZ(s__NinjaRope__SpellData_AttachPoint[data] , s__NinjaRope__SpellData_owlx[data] , s__NinjaRope__SpellData_owly[data] , s__NinjaRope__SpellData_owlz[data])
                
                    if s__NinjaRope__SpellData_CheckCollision(data) then

                        call s__NinjaRope__SpellData_Bounce(data)

                    endif


                if s__NinjaRope__SpellData_cposx[data] < NinjaRope__bound_L then
                    call s__NinjaRope__SpellData_BoundBounce(data,1. , 0.)
                elseif s__NinjaRope__SpellData_cposx[data] > NinjaRope__bound_R then
                    call s__NinjaRope__SpellData_BoundBounce(data,- 1. , 0)
                endif
                if s__NinjaRope__SpellData_cposy[data] < NinjaRope__bound_B then
                    call s__NinjaRope__SpellData_BoundBounce(data,0. , 1.)
                elseif s__NinjaRope__SpellData_cposy[data] > NinjaRope__bound_U then
                    call s__NinjaRope__SpellData_BoundBounce(data,0. , - 1.)
                endif
                call NinjaRope__SetUnitXYZ(u , s__NinjaRope__SpellData_cposx[data] , s__NinjaRope__SpellData_cposy[data] , s__NinjaRope__SpellData_cposz[data]) //Is he going to be at some nice position??
                call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
                call TimerStart(t, .03125, false, function NinjaRope__PeriodicIntegration)
                set u=null
                set t=null
                return false
            endif
    endfunction
    
//==============================================================================

    function NinjaRope__Conditions takes nothing returns boolean
        return GetSpellAbilityId() == NinjaRope__ABILITY_ID and GetUnitTypeId(GetTriggerUnit()) != 'E00E'
    endfunction   
    
    function NinjaRope__Actions takes nothing returns nothing
        local timer t
        local integer data
        local real duration=15.
        local location target=GetSpellTargetLoc()
        local real length
        local unit u=GetTriggerUnit()
        local location casterloc=GetUnitLoc(u)
        local integer level=GetUnitAbilityLevel(u, NinjaRope__ABILITY_ID)
        local integer i=1
        if NinjaRope__SPELL_CONFLICT_ON then // check conflicts
            loop
                exitwhen i > NinjaRope__SPELL_CONFLICT_NUMBER
                if GetUnitAbilityLevel(u, NinjaRope__SPELL_CONFLICT_IDS[i]) > 0 then
                    call UnitRemoveAbility(u, NinjaRope__SPELL_CONFLICT_IDS[i])
                endif
                set i=i + 1
            endloop
        endif
        if s__NinjaRope__SpellData_CasterData[GetUnitUserData(u)] != 0 then
        
            set data=s__NinjaRope__SpellData_CasterData[GetUnitUserData(u)]
            call s__NinjaRope__FallingBolt_create(data)
            call s__NinjaRope__SpellData_recreate(data)
            set s__NinjaRope__SpellData_tetaV[data]=- RAbsBJ(s__NinjaRope__SpellData_tetaV[data])

        else
            set data=s__NinjaRope__SpellData_create(u)

            set s__NinjaRope__SpellData_tetaV[data]=NinjaRope__ANGLE_INITIALVELOCITY[level]
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .03125, false, function NinjaRope__PeriodicIntegration)

        endif
   
            set s__NinjaRope__SpellData_ticks[data]=R2I(duration / .03125)
        
            set s__NinjaRope__SpellData_ropelength[data]=NinjaRope__ROPE_STABLELENGTH[level]
            set s__NinjaRope__SpellData_aposx[data]=GetLocationX(target)
            set s__NinjaRope__SpellData_aposy[data]=GetLocationY(target)
            set s__NinjaRope__SpellData_aposz[data]=NinjaRope__ROPE_ATTACHHEIGHT[level] + RMaxBJ(GetLocationZ(casterloc), GetLocationZ(target))

            set length=SquareRoot(( s__NinjaRope__SpellData_aposx[data] - s__NinjaRope__SpellData_cposx[data] ) * ( s__NinjaRope__SpellData_aposx[data] - s__NinjaRope__SpellData_cposx[data] ) + ( s__NinjaRope__SpellData_aposy[data] - s__NinjaRope__SpellData_cposy[data] ) * ( s__NinjaRope__SpellData_aposy[data] - s__NinjaRope__SpellData_cposy[data] ))

            set s__NinjaRope__SpellData_utetax[data]=( s__NinjaRope__SpellData_cposx[data] - s__NinjaRope__SpellData_aposx[data] ) / length
            set s__NinjaRope__SpellData_utetay[data]=( s__NinjaRope__SpellData_cposy[data] - s__NinjaRope__SpellData_aposy[data] ) / length
            set s__NinjaRope__SpellData_vtetaz[data]=- 1.

            set length=SquareRoot(( s__NinjaRope__SpellData_aposx[data] - s__NinjaRope__SpellData_cposx[data] ) * ( s__NinjaRope__SpellData_aposx[data] - s__NinjaRope__SpellData_cposx[data] ) + ( s__NinjaRope__SpellData_aposy[data] - s__NinjaRope__SpellData_cposy[data] ) * ( s__NinjaRope__SpellData_aposy[data] - s__NinjaRope__SpellData_cposy[data] ) + ( s__NinjaRope__SpellData_aposz[data] - s__NinjaRope__SpellData_cposz[data] ) * ( s__NinjaRope__SpellData_aposz[data] - s__NinjaRope__SpellData_cposz[data] ))
            set s__NinjaRope__SpellData_tetaP[data]=Acos(( s__NinjaRope__SpellData_aposz[data] - s__NinjaRope__SpellData_cposz[data] ) / length)
            set s__NinjaRope__SpellData_tetaA[data]=NinjaRope__AngularAcceleration(data)
            
            set s__NinjaRope__SpellData_owld[data]=length - s__NinjaRope__SpellData_ropelength[data]
            set s__NinjaRope__SpellData_owlx[data]=s__NinjaRope__SpellData_aposx[data] + s__NinjaRope__SpellData_utetax[data] * Sin(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_owld[data]
            set s__NinjaRope__SpellData_owly[data]=s__NinjaRope__SpellData_aposy[data] + s__NinjaRope__SpellData_utetay[data] * Sin(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_owld[data]
            set s__NinjaRope__SpellData_owlz[data]=s__NinjaRope__SpellData_aposz[data] + s__NinjaRope__SpellData_vtetaz[data] * Cos(s__NinjaRope__SpellData_tetaP[data]) * s__NinjaRope__SpellData_owld[data]
            set s__NinjaRope__SpellData_owlteta[data]=s__NinjaRope__SpellData_tetaP[data]
            set s__NinjaRope__SpellData_owlspeed[data]=RAbsBJ(( s__NinjaRope__SpellData_owld[data] ) * .03125 / NinjaRope__OWL_STABILISATIONTIME)
 

            set s__NinjaRope__SpellData_AttachPoint[data]=CreateUnit(GetOwningPlayer(s__NinjaRope__SpellData_Caster[data]), NinjaRope__UNIT_ID, 0., 0., bj_RADTODEG * Atan2(s__NinjaRope__SpellData_aposy[data] - s__NinjaRope__SpellData_cposy[data], s__NinjaRope__SpellData_aposx[data] - s__NinjaRope__SpellData_cposx[data]))
            set s__NinjaRope__SpellData_bolt[data]=AddLightningEx(NinjaRope__LIGHTNING_TYPE, true, s__NinjaRope__SpellData_cposx[data], s__NinjaRope__SpellData_cposy[data], s__NinjaRope__SpellData_cposz[data] + NinjaRope__UNIT_ATTACHHEIGHT, s__NinjaRope__SpellData_owlx[data], s__NinjaRope__SpellData_owly[data], s__NinjaRope__SpellData_owlz[data])
            call NinjaRope__SetUnitXYZ(s__NinjaRope__SpellData_AttachPoint[data] , s__NinjaRope__SpellData_owlx[data] , s__NinjaRope__SpellData_owly[data] , s__NinjaRope__SpellData_owlz[data])

            call NinjaRope__UnitAddZ(s__NinjaRope__SpellData_AttachPoint[data])
                    

        call RemoveLocation(target)
        call RemoveLocation(casterloc)
        set casterloc=null
        set target=null
        set u=null
        set t=null
    endfunction
    function NinjaRope__ConditionsStop takes nothing returns boolean
     //   return  GetSpellAbilityId() == ABILITY_STOPID    
        return s__NinjaRope__SpellData_CasterData[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])] != 0
    endfunction
    function NinjaRope__ActionsStop takes nothing returns nothing
        if s__NinjaRope__SpellData_CasterData[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])] != 0 then
            set s__NinjaRope__SpellData_ticks[(s__NinjaRope__SpellData_CasterData[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])])]=0 // INLINED!!
        endif
    endfunction

    //===========================================================================
    //                          Public functions
    //===========================================================================
    
    function NinjaRope_UnitStopSpell takes unit u returns nothing
        if s__NinjaRope__SpellData_CasterData[GetUnitUserData(u)] != 0 then
            set s__NinjaRope__SpellData_ticks[(s__NinjaRope__SpellData_CasterData[GetUnitUserData(u)])]=0 // INLINED!!
        endif
    endfunction
    function NinjaRope__InitTrig takes nothing returns nothing
        call TriggerExecute(st___prototype4[(2)]) // INLINED!!
        set NinjaRope__bound_L=GetRectMinX(bj_mapInitialPlayableArea)
        set NinjaRope__bound_R=GetRectMaxX(bj_mapInitialPlayableArea)
        set NinjaRope__bound_B=GetRectMinY(bj_mapInitialPlayableArea)
        set NinjaRope__bound_U=GetRectMaxY(bj_mapInitialPlayableArea)
        set NinjaRope__trg=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(NinjaRope__trg, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        call TriggerAddCondition(NinjaRope__trg, Condition(function NinjaRope__Conditions))
        call TriggerAddAction(NinjaRope__trg, function NinjaRope__Actions)
        set NinjaRope__trg=CreateTrigger()
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(0))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(1))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(2))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(3))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(4))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(5))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(6))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(7))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(8))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(9))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(10))
        call TriggerRegisterPlayerEventEndCinematic(NinjaRope__trg, Player(11))
        call TriggerAddCondition(NinjaRope__trg, Condition(function NinjaRope__ConditionsStop))
        call TriggerAddAction(NinjaRope__trg, function NinjaRope__ActionsStop)
    endfunction

// scope NinjaRope ends
//===========================================================================
// Trigger: Pacify
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Pacify begins
    

    
    function Pacify__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetAttacker(), 'B03B') == 1 or GetUnitAbilityLevel(GetTriggerUnit(), 'B03B') == 1 then
     if GetUnitTypeId(GetTriggerUnit()) != 'E00E' then
	call IssueImmediateOrder(GetAttacker(), "stop")
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl", GetAttacker(), "chest"))
    call M6E(GetAttacker() , 300. , .3 , GetUnitFacing(GetAttacker()) - 180. , ".mdl" , .0 , false , false)
endif
    endif
    return false
    endfunction
    
    function Pacify__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ATTACKED)
        call TriggerAddCondition(t, Condition(function Pacify__Conditions))
    endfunction
// scope Pacify ends
//===========================================================================
// Trigger: Wrath
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope WrathActive begins


function WrathActive__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()

if IsUnitEnemy(u, GetOwningPlayer(WrathActive__CASTER)) and UnitAlive(u) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) then
call UnitDamageTargetEx(WrathActive__CASTER , u , WrathActive__DAMAGE , false , true , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_FORCE , WEAPON_TYPE_WHOKNOWS)
endif

set u=null
return false
endfunction

function WrathActive__Actions takes nothing returns nothing
local unit u= GetSpellTargetUnit()

call DestroyEffect(AddSpecialEffect("war3mapImported\\CorpseExplodeFire.mdx", GetUnitX(u), GetUnitY(u)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\CorspeBomb.mdx", GetUnitX(u), GetUnitY(u)))
call DestroyEffect(AddSpecialEffect("BigBloodEX-NoSplat-NoGutz.mdx", GetUnitX(u), GetUnitY(u)))
call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodEX-Special.mdx", GetUnitX(u), GetUnitY(u)))

set WrathActive__DAMAGE=GetWidgetLife(u) * 3.
set WrathActive__CASTER=GetTriggerUnit()

call GroupEnumUnitsInRange(WrathActive__GROUP, GetUnitX(u), GetUnitY(u), 375., Filter(function WrathActive__FilterActions))

call ExplodeUnitBJ(u)

set u=null
endfunction


//===========================================================================
function WrathActive__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0FN' , function WrathActive__Actions)
endfunction
// scope WrathActive ends

//===========================================================================
// Trigger: Defend
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Defend begins




        function s__Defend__Dstruct_destroy takes integer this returns nothing
        set s__Defend__Dstruct_u[this]=null
 call s__Defend__Dstruct_deallocate(this)
        endfunction


    function Defend__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call ShowUnit(s__Defend__Dstruct_u[data], false)
call KillUnit(s__Defend__Dstruct_u[data])
call RemoveUnit(s__Defend__Dstruct_u[data])

    call s__Defend__Dstruct_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction


    function Defend__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local unit d
        local timer t
 local integer data

        if GetUnitAbilityLevel(u, 'B05B') == 1 and GetEventDamage() > 1. and a != u and GetRandomInt(0, 100) <= 50 then
            if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
                if ( BI[NI] ) == ( LN ) then
                    set DI[NI]=DI[NI] + ( GetEventDamage() )

 			call DestroyEffect(AddSpecialEffectTarget("RandomSlash.mdl", u, "origin"))
set d=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), GetUnitTypeId(u), GetUnitX(u), GetUnitY(u), bj_RADTODEG * Atan2(GetUnitY(a) - GetUnitY(u), GetUnitX(a) - GetUnitX(u)))

call UnitAddAbility(d, 'Aloc')
call SetUnitPathing(d, false)
call SetUnitTimeScale(d, 3.)
call SetUnitVertexColor(d, 255, 255, 255, 80)
call SetUnitScale(d, 1.5, .0, .0)
call SetUnitX(d, GetUnitX(u))
call SetUnitY(d, GetUnitY(u))
call SetUnitAnimation(d, "attack")
call SetUnitOwner(d, GetOwningPlayer(u), true)
call SetUnitOwner(d, Player(PLAYER_NEUTRAL_PASSIVE), false)
call UnitDamageTargetEx(d , d , .0 , false , false , null , null , WEAPON_TYPE_METAL_LIGHT_SLICE)
//call UnitApplyTimedLife(d,'BTLF',.03)
set data=s__Defend__Dstruct__allocate()
set s__Defend__Dstruct_u[data]=d
set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, .4, false, function Defend__Handler)
                endif
            endif
        endif


	set t=null
        set d=null
        set u=null
        set a=null
        return false
    endfunction
    
    function Defend__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function Defend__Actions))
    endfunction
    
// scope Defend ends
//===========================================================================
// Trigger: IndulgenceActive
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope IndulgenceActive begins

function IndulgenceActive__Actions takes nothing returns nothing
local unit u= GetSpellTargetUnit()

if GetUnitAbilityLevel(u, 'A0E0') != 1 then
call UnitAddAbility(u, 'A0E0')
call UnitAddAbility(u, 'A0E4')
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special.mdx", u, "origin"))
call SetUnitPathing(u, false)
call ZWE(u , 500.)
call IssueTargetOrder(u, "attack", GetTriggerUnit())
endif

set u=null
endfunction


//===========================================================================
function IndulgenceActive__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0DR' , function IndulgenceActive__Actions)
endfunction
// scope IndulgenceActive ends

//===========================================================================
// Trigger: Indulgence OnSummon
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope IndulgenceOnSumm begins
   

    
    function IndulgenceOnSumm__Conditions takes nothing returns boolean

    local unit u= GetSummonedUnit()
    if GetUnitTypeId(u) == 'n013' and GetRandomInt(0, 99) >= 49 then
	call BlzSetUnitSkin(u, 'n03Z')
    endif

    set u=null
    return false
    endfunction
    
    function IndulgenceOnSumm__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SUMMON)
        call TriggerAddCondition(t, Condition(function IndulgenceOnSumm__Conditions))
    endfunction
// scope IndulgenceOnSumm ends
//===========================================================================
// Trigger: Indulgence
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Indulgence begins


function Indulgence__OnSpell takes nothing returns boolean
        if UnitHasItemOfTypeBJ(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], 'I03F') and GetRandomInt(0, 99) <= 44 and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            call SetHeroInt(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], GetHeroInt(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl", LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], "origin"))
            //call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function Indulgence__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function Indulgence__OnSpell))
endfunction
// scope Indulgence ends
//===========================================================================
// Trigger: For the Cause
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ForTheCause begins


function ForTheCause__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()

if IsUnitEnemy(u, GetOwningPlayer(ForTheCause__CASTER)) and UnitAlive(u) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(u, UNIT_TYPE_ANCIENT) then
call UnitDamageTargetEx(ForTheCause__CASTER , u , 200. , false , true , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_FORCE , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", GetUnitX(u), GetUnitY(u)))
endif

set u=null
return false
endfunction

function ForTheCause__Actions takes nothing returns nothing

set ForTheCause__CASTER=GetTriggerUnit()

call DestroyEffect(AddSpecialEffect("war3mapImported\\NuclearExplosion5.mdx", GetUnitX(ForTheCause__CASTER), GetUnitY(ForTheCause__CASTER)))

call KillUnit(CreateUnit(GetOwningPlayer(ForTheCause__CASTER), 'h019', GetUnitX(ForTheCause__CASTER), GetUnitY(ForTheCause__CASTER), 0.))

call GroupEnumUnitsInRange(ForTheCause__GROUP, GetUnitX(ForTheCause__CASTER), GetUnitY(ForTheCause__CASTER), 924., Filter(function ForTheCause__FilterActions))

call KillUnit(ForTheCause__CASTER)

endfunction


//===========================================================================
function ForTheCause__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0FQ' , function ForTheCause__Actions)
endfunction
// scope ForTheCause ends

//===========================================================================
// Trigger: LASEERRRRSSSSS
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope LAsers begins





function s__LAsers__FT_destroy takes integer this returns nothing

set IsChannelingRedLaser[GetUnitUserData(s__LAsers__FT_c[this])]=false
call DestroyEffect(s__LAsers__FT_fx[this])
set s__LAsers__FT_fx[this]=null
set s__LAsers__FT_c[this]=null
call DestroyLightning(s__LAsers__FT_l[this])
set s__LAsers__FT_l[this]=null
set s__LAsers__FT_p[this]=null
call s__LAsers__FT_deallocate(this)
endfunction


  




function LAsers__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit FoG
local group g
//local real z
local real cm= GetUnitState(s__LAsers__FT_c[data], UNIT_STATE_MANA)
local integer i

if s__LAsers__FT_i[data] <= 0 or cm <= s__LAsers__FT_m[data] * .04 or IsChannelingRedLaser[GetUnitUserData(s__LAsers__FT_c[data])] == false or not UnitAlive(s__LAsers__FT_c[data]) or s__LAsers__FT_c[data] == null then


call s__LAsers__FT_destroy(data)
call ReleaseTimer(t)

else

if s__LAsers__FT_anim[data] then
call QueueUnitAnimation(s__LAsers__FT_c[data], "spell")
endif

set g=CreateGroup()
call s__LineSegment_EnumUnitsEx((g ) , (( s__LAsers__FT_x1[data] )*1.0) , (( s__LAsers__FT_y1[data] )*1.0) , (( s__LAsers__FT_x2[data] )*1.0) , (( s__LAsers__FT_y2[data] )*1.0) , (( 70.)*1.0) , false) //takes group whichgroup, real ax, real ay, real bx, real by, real offset returns nothing // INLINED!!

loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)
                //call MoveLocation(LOC,GetUnitX(FoG),GetUnitY(FoG))
		//set z = GetLocationZ(LOC)+BlzGetUnitZ(FoG)
                if IsUnitEnemy(FoG, s__LAsers__FT_p[data]) and UnitAlive(FoG) then //and ((z<= data.z1+95. and z>=data.z1-95.)or(z<= data.z2+65. and z>=data.z2-65.)) then

		call UnitDamageTargetEx(s__LAsers__FT_c[data] , FoG , GetHeroInt(s__LAsers__FT_c[data], true) * 22.22 * .03125 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_PLANT , WEAPON_TYPE_WHOKNOWS)
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Leak.mdx", FoG, "chest"))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Leak.mdx", FoG, "head"))
		//call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EraserFire.mdl",FoG,"chest"))
		endif

            endloop
            call DestroyGroup(g)

call SetUnitState(s__LAsers__FT_c[data], UNIT_STATE_MANA, cm - ( s__LAsers__FT_m[data] * .04 * .03125 ))


set s__LAsers__FT_a[data]=bj_RADTODEG * Atan2(MouseY[s__LAsers__FT_id[data]] - s__LAsers__FT_y1[data], MouseX[s__LAsers__FT_id[data]] - s__LAsers__FT_x1[data])
set s__LAsers__FT_x2[data]=s__LAsers__FT_x1[data] + 1200. * Cos(s__LAsers__FT_a[data] * bj_DEGTORAD)
set s__LAsers__FT_y2[data]=s__LAsers__FT_y1[data] + 1200. * Sin(s__LAsers__FT_a[data] * bj_DEGTORAD)


call MoveLocation(LAsers__LOC, s__LAsers__FT_x2[data], s__LAsers__FT_y2[data])

set s__LAsers__FT_z2[data]=GetLocationZ(LAsers__LOC) + 45.

call SetUnitFacing(s__LAsers__FT_c[data], s__LAsers__FT_a[data])

call MoveLightningEx(s__LAsers__FT_l[data], true, s__LAsers__FT_x1[data], s__LAsers__FT_y1[data], s__LAsers__FT_z1[data], s__LAsers__FT_x2[data], s__LAsers__FT_y2[data], s__LAsers__FT_z2[data])
call BlzSetSpecialEffectX(s__LAsers__FT_fx[data], s__LAsers__FT_x2[data])
call BlzSetSpecialEffectY(s__LAsers__FT_fx[data], s__LAsers__FT_y2[data])
call BlzSetSpecialEffectHeight(s__LAsers__FT_fx[data], s__LAsers__FT_z2[data] + 30.)
call BlzSetSpecialEffectZ(s__LAsers__FT_fx[data], s__LAsers__FT_z2[data] + 30.)

set s__LAsers__FT_i[data]=s__LAsers__FT_i[data] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function LAsers__Handler)


endif

set g=null
set FoG=null
set t=null
endfunction


function LAsers__Actions takes nothing returns nothing
local timer t
local integer data


if IsChannelingRedLaser[GetUnitUserData(GetTriggerUnit())] == false then

set data=s__LAsers__FT__allocate()
set t=(NewTimerEx(0)) // INLINED!!

set s__LAsers__FT_c[data]=GetTriggerUnit()
set s__LAsers__FT_i[data]=1280

set s__LAsers__FT_x1[data]=GetUnitX(s__LAsers__FT_c[data])
set s__LAsers__FT_y1[data]=GetUnitY(s__LAsers__FT_c[data])

call MoveLocation(LAsers__LOC, s__LAsers__FT_x1[data], s__LAsers__FT_y1[data])

set s__LAsers__FT_z1[data]=GetLocationZ(LAsers__LOC) + 45.

set s__LAsers__FT_a[data]=bj_RADTODEG * Atan2(GetSpellTargetY() - s__LAsers__FT_y1[data], GetSpellTargetX() - s__LAsers__FT_x1[data])

call SetUnitFacing(s__LAsers__FT_c[data], s__LAsers__FT_a[data])

   // local real x = GetLocationX(source) + dist * Cos(angle * bj_DEGTORAD)
    //local real y = GetLocationY(source) + dist * Sin(angle * bj_DEGTORAD)
set s__LAsers__FT_x2[data]=s__LAsers__FT_x1[data] + 1200. * Cos(s__LAsers__FT_a[data] * bj_DEGTORAD)
set s__LAsers__FT_y2[data]=s__LAsers__FT_y1[data] + 1200. * Sin(s__LAsers__FT_a[data] * bj_DEGTORAD)

call MoveLocation(LAsers__LOC, s__LAsers__FT_x2[data], s__LAsers__FT_y2[data])

set s__LAsers__FT_z2[data]=GetLocationZ(LAsers__LOC) + 45.

set s__LAsers__FT_p[data]=GetOwningPlayer(s__LAsers__FT_c[data])
set s__LAsers__FT_m[data]=BlzGetUnitMaxMana(s__LAsers__FT_c[data])
set s__LAsers__FT_l[data]=AddLightningEx("REFB", true, s__LAsers__FT_x1[data], s__LAsers__FT_y1[data], s__LAsers__FT_z1[data], s__LAsers__FT_x2[data], s__LAsers__FT_y2[data], s__LAsers__FT_z2[data])
set s__LAsers__FT_id[data]=GetPlayerId(s__LAsers__FT_p[data])

set s__LAsers__FT_fx[data]=AddSpecialEffect("war3mapImported\\Ember Red.mdx", s__LAsers__FT_x2[data], s__LAsers__FT_y2[data])
call BlzSetSpecialEffectHeight(s__LAsers__FT_fx[data], s__LAsers__FT_z1[data] + 30.)
call BlzSetSpecialEffectZ(s__LAsers__FT_fx[data], s__LAsers__FT_z1[data] + 30.)
call BlzSetSpecialEffectScale(s__LAsers__FT_fx[data], 1.75)

set s__LAsers__FT_anim[data]=false

if GetUnitTypeId(s__LAsers__FT_c[data]) == 'N01O' or GetUnitTypeId(s__LAsers__FT_c[data]) == 'U00O' then
call SetUnitAnimation(s__LAsers__FT_c[data], "stand channel")
else
if GetUnitTypeId(s__LAsers__FT_c[data]) == 'E019' or GetUnitTypeId(s__LAsers__FT_c[data]) == 'N01S' or GetUnitTypeId(s__LAsers__FT_c[data]) == 'N01T' or GetUnitTypeId(s__LAsers__FT_c[data]) == 'E01C' then
call SetUnitAnimation(s__LAsers__FT_c[data], "stand victory")
else
call SetUnitAnimation(s__LAsers__FT_c[data], "spell")
set s__LAsers__FT_anim[data]=true
endif
endif

set IsChannelingRedLaser[GetUnitUserData(s__LAsers__FT_c[data])]=true
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function LAsers__Handler)

endif

set t=null
endfunction

//===========================================================================
function LAsers__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(LAsers__SPELL_ID , function LAsers__Actions)
endfunction
// scope LAsers ends
//===========================================================================
// Trigger: ENDLASERCAST
//===========================================================================
// scope EndLaserCast begins

function EndLaserCast__Actions takes nothing returns boolean
    if GetSpellAbilityId() == 'A0M4' then
	set IsChannelingRedLaser[GetUnitUserData(GetTriggerUnit())]=false
	endif
        return false
endfunction


//===========================================================================
function EndLaserCast__OnInit takes nothing returns nothing
    local trigger t= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_ENDCAST)
    call TriggerAddCondition(t, Condition(function EndLaserCast__Actions))

endfunction

// scope EndLaserCast ends
//===========================================================================
// Trigger: Soulreaver
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Soulrend begins


         function s__Soulrend__FB2_destroy takes integer this returns nothing
		set s__Soulrend__FB2_u[this]=null
            call s__Soulrend__FB2_deallocate(this)
        endfunction

function Soulrend__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call s__NewBonusUtils__NewBonusUtils_linkBuff((s__Soulrend__FB2_u[data] ) , ( BONUS_MAGIC_RESISTANCE ) , (( - .25 )*1.0) , ( Soulrend__SPELL_ID2) , false) // INLINED!!

call ReleaseTimer(t)
call s__Soulrend__FB2_destroy(data)

set t=null
endfunction


    function Soulrend__Actions takes nothing returns boolean


        local unit a= GetEventDamageSource()
 local integer i= GetPlayerId(GetOwningPlayer(a)) + 1
        local unit u= GetTriggerUnit()
 local unit d
 local timer t
 local integer data

if ( GetUnitAbilityLevel(LC[i], Soulrend__SPELL_ID) != 0 or GetUnitAbilityLevel(a, Soulrend__SPELL_ID) != 0 ) and GetUnitAbilityLevel(u, Soulrend__SPELL_ID2) == 0 then

if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
if ( BI[NI] ) == ( LN ) or ( BI[NI] ) == DAMAGE_TYPE_COLD or ( BI[NI] ) == DAMAGE_TYPE_LIGHTNING or ( BI[NI] ) == DAMAGE_TYPE_MAGIC or ( BI[NI] ) == DAMAGE_TYPE_UNIVERSAL then
set d=CreateUnit(GetOwningPlayer(a), 'h007', GetUnitX(u), GetUnitY(u), 0.)
call UnitAddAbility(d, 'A0MZ')
call IssueTargetOrderById(d, 852149, u)
call UnitApplyTimedLife(d, 'BTLF', 1)

set t=(NewTimerEx(0)) // INLINED!!
set data=s__Soulrend__FB2__allocate()
set s__Soulrend__FB2_u[data]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Soulrend__Handler)

endif
else
set d=CreateUnit(GetOwningPlayer(a), 'h007', GetUnitX(u), GetUnitY(u), 0.)
call UnitAddAbility(d, 'A0MZ')
call IssueTargetOrderById(d, 852149, u)
call UnitApplyTimedLife(d, 'BTLF', 1)

set t=(NewTimerEx(0)) // INLINED!!
set data=s__Soulrend__FB2__allocate()
set s__Soulrend__FB2_u[data]=u
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function Soulrend__Handler)
endif
endif

set t=null
set d=null
set a=null
set u=null

        return false
    endfunction
    
    function Soulrend__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function Soulrend__Actions))
    endfunction
    
// scope Soulrend ends
//===========================================================================
// Trigger: Rains Of Castamere
//===========================================================================
//TESH.scrollpos=35
//TESH.alwaysfold=0

// scope Rains begins
        function s__Rains__AP_destroy takes integer this returns nothing
            set s__Rains__AP_playa[this]=null
            call s__Rains__AP_deallocate(this)
        endfunction
  
  function Rains__Handler takes nothing returns nothing
  local timer t= GetExpiredTimer()
  local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
  local integer i= 15
  local real a
  local real d
  
  if RainsOn[GetPlayerId(s__Rains__AP_playa[data])] then
  call DestroyEffect(AddSpecialEffect("war3mapImported\\CorpseRain.mdx", GetUnitX(LC[1 + GetPlayerId(s__Rains__AP_playa[data])]), GetUnitY(LC[1 + GetPlayerId(s__Rains__AP_playa[data])])))
  loop
  exitwhen i == 0
  set a=GetRandomReal(0., 360.)
  set d=GetRandomReal(0., 225.)
  call DestroyEffect(AddSpecialEffect("war3mapImported\\CorpseRain.mdx", GetUnitX(LC[1 + GetPlayerId(s__Rains__AP_playa[data])]) + d * Cos(a * bj_DEGTORAD), GetUnitY(LC[1 + GetPlayerId(s__Rains__AP_playa[data])]) + d * Sin(a * bj_DEGTORAD)))
  set i=i - 1
  endloop
  call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
  call TimerStart(t, .5, false, function Rains__Handler)
  else
  call s__Rains__AP_destroy(data)
  call ReleaseTimer(t)
  endif
  
  set t=null
  endfunction
  
 

  
  function Rains__Conditions takes nothing returns boolean
        local string payload=  ( SubString(GetEventPlayerChatString(), 18, StringLength(GetEventPlayerChatString())) )
        local timer t
        local integer data
        if payload == "off" then
        if RainsOn[GetPlayerId(GetTriggerPlayer())] then
              set RainsOn[GetPlayerId(GetTriggerPlayer())]=false
            endif
            set t=null
            set payload=null
            return false
        else
            if not RainsOn[GetPlayerId(GetTriggerPlayer())] then
            set RainsOn[GetPlayerId(GetTriggerPlayer())]=true
            set t=(NewTimerEx(0)) // INLINED!!
            set data=s__Rains__AP__allocate()
            set s__Rains__AP_playa[data]=GetTriggerPlayer()
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 1., false, function Rains__Handler)
            endif
        endif
        
        set payload=null
        set t=null
        return false
    endfunction
   
    function Rains__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-It's Raining Men", false)
        set RainsOn[pid]=false
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function Rains__Conditions))
    endfunction
// scope Rains ends
//===========================================================================
// Trigger: Rainbow
//===========================================================================
//TESH.scrollpos=35
//TESH.alwaysfold=0

// scope Rainbow begins
     // private struct RB
      //  effect r1
	//effect r2
	//effect r3
	//effect r4

     //   method destroy takes nothing returns nothing
      //      call DestroyEffect(this.r1)
	//	call DestroyEffect(this.r2)
//call DestroyEffect(this.r3)
//call DestroyEffect(this.r4)

//set this.r1 = null
//set this.r2 = null
//set this.r3 = null
//set this.r4 = null
      //      call this.deallocate()
      //  endmethod
   // endstruct
  
 

  
  function Rainbow__Conditions takes nothing returns boolean
        
	if LC[( 1 + GetPlayerId(GetTriggerPlayer()) )] != null and not RainbowOn[GetUnitUserData(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])] then
	set RainbowOn[GetUnitUserData(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )])]=true
	call UnitAddAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0IY')
	call UnitAddAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0J1')
	call UnitAddAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0IZ')
	call UnitAddAbility(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], 'A0J0')

	call UnitMakeAbilityPermanent(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], true, 'A0IY')
	call UnitMakeAbilityPermanent(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], true, 'A0J1')
	call UnitMakeAbilityPermanent(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], true, 'A0IZ')
	call UnitMakeAbilityPermanent(LC[( 1 + GetPlayerId(GetTriggerPlayer()) )], true, 'A0J0')
	endif
	
        return false
    endfunction
   
    function Rainbow__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-rainbow", true)
        set RainbowOn[pid]=false
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function Rainbow__Conditions))
    endfunction
// scope Rainbow ends
//===========================================================================
// Trigger: SavageStrikes
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope SavageStrikes begins

    function SavageStrikes__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local real d= GetEventDamage()
        local texttag tt
        local string Q7E
 local real life= GetWidgetLife(a)
 local integer maxhp= BlzGetUnitMaxHP(a)
 local integer lvl= GetUnitAbilityLevel(a, 'A0NJ')
 local effect fx
        
        if lvl != 0 and d > 0 and a != u and ( ( life < ( maxhp * .5 ) and GetRandomInt(0, 100) <= ( 50 + ( lvl * 5 ) ) ) or ( life >= ( maxhp * .5 ) and GetRandomInt(0, 100) <= ( 25 + ( lvl * 2.5 ) ) ) ) and (CI[NI]) and IsUnitEnemy(u, GetOwningPlayer(a)) then // INLINED!!



                    set tt=CreateTextTag()
                    set Q7E=I2S(R2I(d * 2.)) + "!"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(u), GetUnitY(u), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)

		    call UnitDamageTargetEx(a , u , d , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)

set fx=AddSpecialEffectTarget("war3mapImported\\Heal Orange2.mdx", a, "origin")



call DestroyEffect(fx)

call SetWidgetLife(a, life + ( maxhp - life ) * ( .01 + .004 * lvl ))


        endif

        set fx=null
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function SavageStrikes__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function SavageStrikes__Actions))
    endfunction
    
// scope SavageStrikes ends
//===========================================================================
// Trigger: Starlight Sphere Int Gain
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope StarlightInt begins


function StarlightInt__OnSpell takes nothing returns boolean
        if GetUnitTypeId(GetKillingUnit()) == 'e00D' and GetRandomInt(0, 100) <= 35 and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            call SetHeroInt(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], GetHeroInt(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl", LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )], "origin"))
            //call DisplayTextToPlayer(Player(0),0.,0.,GetUnitName(GetKillingUnit())+" killed "+GetUnitName(GetTriggerUnit()))
        endif
        return false
endfunction
//===========================================================================
function StarlightInt__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function StarlightInt__OnSpell))
endfunction
// scope StarlightInt ends
//===========================================================================
// Trigger: Double Strike
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope DoubleStrike begins


    function DoubleStrike__Actions takes nothing returns boolean
        local unit u= GetEventDamageSource()

        
        if GetUnitAbilityLevel(u, DoubleStrike__SPELL_ID) == 1 and GetEventDamage() > 0 and u != GetTriggerUnit() and (CI[NI]) and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) then // INLINED!!
            if GetUnitAbilityLevel(u, DoubleStrike__SPELL_ID2) == 1 then
		call UnitRemoveAbility(u, DoubleStrike__SPELL_ID2)
		if GetUnitAbilityLevel(u, 'A0MH') == 1 then
		call BlzSetUnitAttackCooldown(u, 1.8, 0)
		else
		call BlzSetUnitAttackCooldown(u, 3.6, 0)
		endif
		else
		call UnitAddAbility(u, DoubleStrike__SPELL_ID2)
		call UnitMakeAbilityPermanent(u, true, DoubleStrike__SPELL_ID2)
		call BlzSetUnitAttackCooldown(u, .5, 0)
            endif
        endif

        
        set u=null
        return false
    endfunction
    
    function DoubleStrike__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function DoubleStrike__Actions))
    endfunction
    
// scope DoubleStrike ends
//===========================================================================
// Trigger: Wargodbleed
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope BleedingSpears begins



         function s__BleedingSpears__FB_destroy takes integer this returns nothing
            set s__BleedingSpears__FB_caster[this]=null
		set s__BleedingSpears__FB_u[this]=null
		call DestroyEffect(s__BleedingSpears__FB_fx[this])
		set s__BleedingSpears__FB_fx[this]=null
            call s__BleedingSpears__FB_deallocate(this)
        endfunction


         function s__BleedingSpears__FB2_destroy takes integer this returns nothing
            set s__BleedingSpears__FB2_caster[this]=null
		set s__BleedingSpears__FB2_u[this]=null
            call s__BleedingSpears__FB2_deallocate(this)
        endfunction

function BleedingSpears__Handler2 takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u= null
local effect fx
if s__BleedingSpears__FB2_i[data] == 16 then

call ReleaseTimer(t)
call s__BleedingSpears__FB2_destroy(data)

else

set s__BleedingSpears__FB2_x[data]=s__BleedingSpears__FB2_x[data] + 11.71875 * Cos(s__BleedingSpears__FB2_a[data] * bj_DEGTORAD)
set s__BleedingSpears__FB2_y[data]=s__BleedingSpears__FB2_y[data] + 11.71875 * Sin(s__BleedingSpears__FB2_a[data] * bj_DEGTORAD)

if IsTerrainWalkable(s__BleedingSpears__FB2_x[data] , s__BleedingSpears__FB2_y[data]) then
call SetUnitX(s__BleedingSpears__FB2_u[data], s__BleedingSpears__FB2_x[data])
call SetUnitY(s__BleedingSpears__FB2_u[data], s__BleedingSpears__FB2_y[data])
set fx=AddSpecialEffect("war3mapImported\\Cannonball.mdx", s__BleedingSpears__FB2_x[data], s__BleedingSpears__FB2_y[data])
call BlzSetSpecialEffectScale(fx, .75)

call DestroyEffect(fx)


set s__BleedingSpears__FB2_i[data]=s__BleedingSpears__FB2_i[data] + 1

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function BleedingSpears__Handler2)

else

set u=CreateUnit(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]), 'h007', GetUnitX(u), GetUnitY(u), 0.)

call UnitDamageTargetEx(s__BleedingSpears__FB2_caster[data] , s__BleedingSpears__FB2_u[data] , GetHeroAgi(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], true) * 5. , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
              set fx=AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", s__BleedingSpears__FB2_u[data], "chest")

call BlzSetSpecialEffectScale(fx, .75)

call DestroyEffect(fx)
call UnitAddAbility(u, 'A0MF')
call IssueTargetOrderById(u, 852095, s__BleedingSpears__FB2_u[data])
call UnitApplyTimedLife(u, 'BTLF', 1.)

if GetUnitAbilityLevel(s__BleedingSpears__FB2_u[data], 'B05V') != 1 then

set Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))])]=Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))])] + 1
			if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))])] == 250 then
			call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Gatekeepers_Pact.mdx", LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], "origin"))
			call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], 'A0MH')
			call BlzSetUnitAttackCooldown(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], 1.8, 0)
			endif
			if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))])] > 250 then
			call SetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], false) + 1, true)
            		call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB2_caster[data]))], "origin"))
		
			endif

endif

call ReleaseTimer(t)
call s__BleedingSpears__FB2_destroy(data)
endif

endif

set fx=null
set u=null
set t=null
endfunction


function BleedingSpears__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])] == 0 then
call UnitRemoveAbility(s__BleedingSpears__FB_u[data], BleedingSpears__SPELL_ID2)
call UnitRemoveAbility(s__BleedingSpears__FB_u[data], 'A0MQ')
    call ReleaseTimer(t)
    call s__BleedingSpears__FB_destroy(data)
else

if s__BleedingSpears__FB_i[data] == 0 or not UnitAlive(s__BleedingSpears__FB_u[data]) or s__BleedingSpears__FB_u[data] == null then


set BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])]=BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])] - 1

if BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])] == 0 then
call UnitRemoveAbility(s__BleedingSpears__FB_u[data], BleedingSpears__SPELL_ID2)
call UnitRemoveAbility(s__BleedingSpears__FB_u[data], 'A0MQ')
endif

    call ReleaseTimer(GetExpiredTimer())
    call s__BleedingSpears__FB_destroy(data)
else
set s__BleedingSpears__FB_i[data]=s__BleedingSpears__FB_i[data] - 1

call DisableTrigger(WARGODBLEED)
call UnitDamageTargetEx(s__BleedingSpears__FB_caster[data] , s__BleedingSpears__FB_u[data] , s__BleedingSpears__FB_dmg[data] , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , null)
call EnableTrigger(WARGODBLEED)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1.0, false, function BleedingSpears__Handler)

endif
endif

set t=null
endfunction


    function BleedingSpears__Actions takes nothing returns nothing
local integer data= 0
 local timer t
local unit u= GetTriggerUnit()
local real x= GetUnitX(u)
local real y= GetUnitY(u)
local timer t2= (NewTimerEx(0)) // INLINED!!
local integer data2= s__BleedingSpears__FB2__allocate()

if BleedStacks[GetUnitUserData(u)] == 10 then

call DisableTrigger(WARGODBLEED)
call UnitDamageTargetEx(GetEventDamageSource() , u , ( BlzGetUnitMaxHP(u) - GetWidgetLife(u) ) * .1 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , null)
call EnableTrigger(WARGODBLEED)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodySplat Missile.mdx", s__BleedingSpears__FB_u[data], "chest"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodbathTarget.mdx", s__BleedingSpears__FB_u[data], "chest"))
else

set t=(NewTimerEx(0)) // INLINED!!

set data=s__BleedingSpears__FB__allocate()

set s__BleedingSpears__FB_u[data]=GetTriggerUnit()

set s__BleedingSpears__FB_fx[data]=AddSpecialEffectTarget("war3mapImported\\Lascerate.mdx", s__BleedingSpears__FB_u[data], "chest")

if BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])] == 0 then
call UnitAddAbility(s__BleedingSpears__FB_u[data], BleedingSpears__SPELL_ID2)
call UnitAddAbility(s__BleedingSpears__FB_u[data], 'A0MQ')
endif

set BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])]=BleedStacks[GetUnitUserData(s__BleedingSpears__FB_u[data])] + 1
set s__BleedingSpears__FB_caster[data]=GetEventDamageSource()
set s__BleedingSpears__FB_dmg[data]=GetHeroAgi(LC[1 + GetPlayerId(GetOwningPlayer(s__BleedingSpears__FB_caster[data]))], true) * .5
set s__BleedingSpears__FB_i[data]=10
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function BleedingSpears__Handler)

endif

set s__BleedingSpears__FB2_caster[data2]=GetEventDamageSource()
set s__BleedingSpears__FB2_u[data2]=u
set s__BleedingSpears__FB2_i[data2]=0
set s__BleedingSpears__FB2_x[data2]=GetUnitX(s__BleedingSpears__FB2_u[data2])
set s__BleedingSpears__FB2_y[data2]=GetUnitY(s__BleedingSpears__FB2_u[data2])
set s__BleedingSpears__FB2_a[data2]=bj_RADTODEG * Atan2(s__BleedingSpears__FB2_y[data2] - GetUnitY(s__BleedingSpears__FB2_caster[data2]), s__BleedingSpears__FB2_x[data2] - GetUnitX(s__BleedingSpears__FB2_caster[data2]))
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
call TimerStart(t2, .03125, false, function BleedingSpears__Handler2)

set t2=null
set t=null
set u=null

    endfunction
    
    function BleedingSpears__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()
    if GetUnitAbilityLevel(u, BleedingSpears__SPELL_ID) != 0 and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > 1. and GetUnitAbilityLevel(u, 'BIil') != 1 and ( BI[NI] ) == ( LN ) then
	call BleedingSpears__Actions()
    endif

set u=null
    return false
    endfunction
    
    function BleedingSpears__OnInit takes nothing returns nothing
        set WARGODBLEED=CreateTrigger()
        call TriggerAddCondition(WARGODBLEED, Condition(function BleedingSpears__Conditions))
        call MOE(II , ( WARGODBLEED ))
    endfunction
// scope BleedingSpears ends
//===========================================================================
// Trigger: Skewer
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope SkewerA begins


        function s__SkewerA__TempA_create takes nothing returns integer
            local integer data= s__SkewerA__TempA__allocate()
            if s__SkewerA__TempA_g[data] == null then
                set s__SkewerA__TempA_g[data]=CreateGroup()
            endif
            return data
        endfunction

        function s__SkewerA__TempA_destroy takes integer this returns nothing
            call GroupClear(s__SkewerA__TempA_g[this])
		call DestroyGroup(s__SkewerA__TempA_g[this])
		set s__SkewerA__TempA_g[this]=null
            set s__SkewerA__TempA_c[this]=null
            set s__SkewerA__TempA_fx1[this]=null
            call s__SkewerA__TempA_deallocate(this)
        endfunction


function SkewerA__GroupActions3 takes nothing returns nothing
set skewered[GetUnitUserData(GetEnumUnit())]=false
endfunction

function SkewerA__GroupActions2 takes nothing returns nothing
local unit u= GetEnumUnit()
local unit d

if isimpaled[GetUnitUserData(u)] then

set isimpaled[GetUnitUserData(u)]=false

else

set d=CreateUnit(GetOwningPlayer(SkewerA__CASTER), 'h007', GetUnitX(u), GetUnitY(u), 0.)

call UnitDamageTargetEx(SkewerA__CASTER , u , SkewerA__DAMAGE2 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
               call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", u, "chest"))

call UnitAddAbility(d, 'A0MF')
call IssueTargetOrderById(d, 852095, u)
call UnitApplyTimedLife(d, 'BTLF', 1.)

set skewered[GetUnitUserData(u)]=false

set Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])]=Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] + 1
if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] == 250 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Gatekeepers_Pact.mdx", LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], "origin"))
call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], 'A0MH')
call BlzSetUnitAttackCooldown(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], 1.8, 0)
endif
		if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] > 250 then
		call SetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], "origin"))
		endif

endif

set d=null
set u=null
endfunction


function SkewerA__GroupActions takes nothing returns nothing
local unit u= GetEnumUnit()
local real x
local real y
local unit d

if not isimpaled[GetUnitUserData(u)] then

set x=GetUnitX(u) + 31.25 * Cos(SkewerA__ANGLE * bj_DEGTORAD)
set y=GetUnitY(u) + 31.25 * Sin(SkewerA__ANGLE * bj_DEGTORAD)

if IsTerrainWalkable(x , y) then

call SetUnitX(u, x)
call SetUnitY(u, y)
call DestroyEffect(AddSpecialEffectTarget(SkewerA__EFFECT, u, SkewerA__ATTACH_POINT))
else
set isimpaled[GetUnitUserData(u)]=true

set d=CreateUnit(GetOwningPlayer(SkewerA__CASTER), 'h007', GetUnitX(u), GetUnitY(u), 0.)

call UnitDamageTargetEx(SkewerA__CASTER , u , SkewerA__DAMAGE2 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
               call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", u, "chest"))

call UnitAddAbility(d, 'A0MF')
call IssueTargetOrderById(d, 852095, u)
call UnitApplyTimedLife(d, 'BTLF', 1.)



set Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])]=Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] + 1
if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] == 250 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Gatekeepers_Pact.mdx", LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], "origin"))
call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], 'A0MH')
call BlzSetUnitAttackCooldown(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], 1.8, 0)
endif
		if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))])] > 250 then
		call SetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", LC[1 + GetPlayerId(GetOwningPlayer(SkewerA__CASTER))], "origin"))
		endif


endif
endif

set d=null
set u=null
endfunction

    function SkewerA__FilterActions takes nothing returns boolean
        local unit u= GetFilterUnit()
        
        if UnitAlive(u) then
            if IsUnitEnemy(u, GetOwningPlayer(SkewerA__CASTER)) and not IsUnitInGroup(u, SkewerA__GROUP2) and not skewered[GetUnitUserData(u)] then
                call UnitDamageTargetEx(SkewerA__CASTER , u , SkewerA__DAMAGE , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
                call GroupAddUnit(SkewerA__GROUP2, u)
		set skewered[GetUnitUserData(u)]=true
                call DestroyEffect(AddSpecialEffectTarget(SkewerA__EFFECT, u, SkewerA__ATTACH_POINT))
            endif
        endif
        set u=null
        return false
    endfunction

function SkewerA__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__SkewerA__TempA_current[data] == 32 then
call DestroyEffect(s__SkewerA__TempA_fx1[data])
call ForGroup(s__SkewerA__TempA_g[data], function SkewerA__GroupActions3)
call ReleaseTimer(t)
call s__SkewerA__TempA_destroy(data)
else

set SkewerA__GROUP2=s__SkewerA__TempA_g[data]
set SkewerA__CASTER=s__SkewerA__TempA_c[data]
set SkewerA__DAMAGE=s__SkewerA__TempA_dmg[data]
call GroupEnumUnitsInRange(SkewerA__GROUP, s__SkewerA__TempA_x[data], s__SkewerA__TempA_y[data], 180., Filter(function SkewerA__FilterActions))

set s__SkewerA__TempA_x[data]=s__SkewerA__TempA_x[data] + 35.9375 * Cos(s__SkewerA__TempA_a[data] * bj_DEGTORAD)
set s__SkewerA__TempA_y[data]=s__SkewerA__TempA_y[data] + 35.9375 * Sin(s__SkewerA__TempA_a[data] * bj_DEGTORAD)

if IsTerrainWalkable(s__SkewerA__TempA_x[data] , s__SkewerA__TempA_y[data]) then // or GetUnitTypeId(data.c) == 'n03Y' then

call SetUnitX(s__SkewerA__TempA_c[data], s__SkewerA__TempA_x[data])
call SetUnitY(s__SkewerA__TempA_c[data], s__SkewerA__TempA_y[data])
set SkewerA__ANGLE=s__SkewerA__TempA_a[data]
set SkewerA__CASTER=s__SkewerA__TempA_c[data]
set SkewerA__DAMAGE2=s__SkewerA__TempA_dmg[data]
call ForGroup(s__SkewerA__TempA_g[data], function SkewerA__GroupActions)

set s__SkewerA__TempA_current[data]=s__SkewerA__TempA_current[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function SkewerA__Handler)

else

call DestroyEffect(AddSpecialEffect("war3mapImported\\NewDirtEXNofire.mdx", GetUnitX(s__SkewerA__TempA_c[data]), GetUnitY(s__SkewerA__TempA_c[data])))

set SkewerA__DAMAGE2=s__SkewerA__TempA_dmg[data]
call ForGroup(s__SkewerA__TempA_g[data], function SkewerA__GroupActions2)

call DestroyEffect(s__SkewerA__TempA_fx1[data])
call ReleaseTimer(t)
call s__SkewerA__TempA_destroy(data)

endif

endif

set t=null
endfunction

function SkewerA__Actions takes nothing returns nothing
local timer t
local integer data= s__SkewerA__TempA_create()
local integer lvl

set s__SkewerA__TempA_c[data]=GetTriggerUnit()
set s__SkewerA__TempA_x[data]=GetUnitX(s__SkewerA__TempA_c[data])
set s__SkewerA__TempA_y[data]=GetUnitY(s__SkewerA__TempA_c[data])
set s__SkewerA__TempA_a[data]=GetUnitFacing(s__SkewerA__TempA_c[data])
set s__SkewerA__TempA_current[data]=0

set lvl=GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(s__SkewerA__TempA_c[data]))], SkewerA__SPELL_ID)

set s__SkewerA__TempA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Valiant Charge.mdx", s__SkewerA__TempA_c[data], "chest")
call BlzSetSpecialEffectScale(s__SkewerA__TempA_fx1[data], 1.3)

set s__SkewerA__TempA_dmg[data]=( GetHeroAgi(LC[1 + GetPlayerId(GetOwningPlayer(s__SkewerA__TempA_c[data]))], true) * 5. * lvl ) + ( GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(s__SkewerA__TempA_c[data]))], true) * 4. * lvl )



set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function SkewerA__Handler)

set t=null
endfunction


//===========================================================================
function SkewerA__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(SkewerA__SPELL_ID , function SkewerA__Actions)
call RegisterSpellEffectEvent(SkewerA__SPELL_ID2 , function SkewerA__Actions)
endfunction
// scope SkewerA ends

//===========================================================================
// Trigger: Searing Aegis
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope SearingAegis begins


         function s__SearingAegis__FB2_destroy takes integer this returns nothing
            set s__SearingAegis__FB2_caster[this]=null
		set s__SearingAegis__FB2_u[this]=null
            call s__SearingAegis__FB2_deallocate(this)
        endfunction

function SearingAegis__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u= null
local effect fx

if s__SearingAegis__FB2_i[data] == 24 then

call ReleaseTimer(t)
call s__SearingAegis__FB2_destroy(data)

else

set s__SearingAegis__FB2_x[data]=s__SearingAegis__FB2_x[data] + 15.625 * Cos(s__SearingAegis__FB2_a[data] * bj_DEGTORAD)
set s__SearingAegis__FB2_y[data]=s__SearingAegis__FB2_y[data] + 15.625 * Sin(s__SearingAegis__FB2_a[data] * bj_DEGTORAD)

if IsTerrainWalkable(s__SearingAegis__FB2_x[data] , s__SearingAegis__FB2_y[data]) then
call SetUnitX(s__SearingAegis__FB2_u[data], s__SearingAegis__FB2_x[data])
call SetUnitY(s__SearingAegis__FB2_u[data], s__SearingAegis__FB2_y[data])

set fx=AddSpecialEffect("war3mapImported\\Cannonball.mdx", s__SearingAegis__FB2_x[data], s__SearingAegis__FB2_y[data])
call BlzSetSpecialEffectScale(fx, .75)

call DestroyEffect(fx)

set s__SearingAegis__FB2_i[data]=s__SearingAegis__FB2_i[data] + 1

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function SearingAegis__Handler)

else

set u=CreateUnit(GetOwningPlayer(s__SearingAegis__FB2_caster[data]), 'h007', GetUnitX(u), GetUnitY(u), 0.)

call UnitDamageTargetEx(s__SearingAegis__FB2_caster[data] , s__SearingAegis__FB2_u[data] , s__SearingAegis__FB2_dmg[data] , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
               
set fx=AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", s__SearingAegis__FB2_u[data], "chest")

call BlzSetSpecialEffectScale(fx, .75)

call DestroyEffect(fx)

call UnitAddAbility(u, 'A0MF')
call IssueTargetOrderById(u, 852095, s__SearingAegis__FB2_u[data])

call UnitApplyTimedLife(u, 'BTLF', 1.)


set Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))])]=Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))])] + 1
if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))])] == 250 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Gatekeepers_Pact.mdx", LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], "origin"))
call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], 'A0MH')
call BlzSetUnitAttackCooldown(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], 1.8, 0)
endif
if Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))])] > 250 then
		call SetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", LC[1 + GetPlayerId(GetOwningPlayer(s__SearingAegis__FB2_caster[data]))], "origin"))
		endif

call ReleaseTimer(t)
call s__SearingAegis__FB2_destroy(data)
endif

endif

set fx=null
set u=null
set t=null
endfunction

function SearingAegis__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local real a= bj_RADTODEG * Atan2(GetUnitY(u) - SearingAegis__CASTY, GetUnitX(u) - SearingAegis__CASTX)
local integer data
local timer t


if IsUnitEnemy(u, GetOwningPlayer(SearingAegis__CASTER)) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and UnitAlive(u) and a >= SearingAegis__ANGLE - 75 and a <= SearingAegis__ANGLE + 75 then
set data=s__SearingAegis__FB2__allocate()
set t=(NewTimerEx(0)) // INLINED!!
set s__SearingAegis__FB2_caster[data]=SearingAegis__CASTER
set s__SearingAegis__FB2_u[data]=u
set s__SearingAegis__FB2_i[data]=0
set s__SearingAegis__FB2_x[data]=GetUnitX(s__SearingAegis__FB2_u[data])
set s__SearingAegis__FB2_y[data]=GetUnitY(s__SearingAegis__FB2_u[data])
set s__SearingAegis__FB2_a[data]=a
set s__SearingAegis__FB2_dmg[data]=SearingAegis__DAMAGE
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function SearingAegis__Handler)

call UnitDamageTargetEx(s__SearingAegis__FB2_caster[data] , s__SearingAegis__FB2_u[data] , s__SearingAegis__FB2_dmg[data] , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)



endif

set t=null
set u=null
return false
endfunction

    function SearingAegis__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local integer lvl= GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(u))], SearingAegis__SPELL_ID)
 local real angle= bj_RADTODEG * Atan2(GetUnitY(a) - GetUnitY(u), GetUnitX(a) - GetUnitX(u))
 local effect fx
 local real x
 local real y
 local real face= GetUnitFacing(u)

if GetUnitAbilityLevel(u, SearingAegis__SPELL_ID2) == 1 and angle >= face - 75 and angle <= face + 75 then

if ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) then
if ( BI[NI] ) == ( LN ) or ( BI[NI] ) == DAMAGE_TYPE_COLD or ( BI[NI] ) == DAMAGE_TYPE_LIGHTNING or ( BI[NI] ) == DAMAGE_TYPE_MAGIC or ( BI[NI] ) == DAMAGE_TYPE_UNIVERSAL then
set DI[NI]=DI[NI] + ( GetEventDamage() * ( 1. - .25 - ( lvl * .05 ) ) )
endif
else
set DI[NI]=DI[NI] + ( GetEventDamage() * ( 1. - .25 - ( lvl * .05 ) ) )
endif

if GetRandomInt(1, 100) <= 15 + ( 5 * lvl ) then

set SearingAegis__CASTX=GetUnitX(u)
set SearingAegis__CASTY=GetUnitY(u)

set x=SearingAegis__CASTX + 100. * Cos(face * bj_DEGTORAD)
set y=SearingAegis__CASTY + 100. * Sin(face * bj_DEGTORAD)

set fx=AddSpecialEffect("war3mapImported\\GodsRebuke.mdx", x, y)
call BlzSetSpecialEffectScale(fx, 1.1)
call BlzSetSpecialEffectYaw(fx, face * ( bj_PI / 180.00 ))
call DestroyEffect(fx)

set SearingAegis__CASTER=u
set SearingAegis__DAMAGE=GetHeroStr(LC[1 + GetPlayerId(GetOwningPlayer(u))], true) * lvl * 3.
set SearingAegis__ANGLE=face

call GroupEnumUnitsInRange(SearingAegis__GROUP, SearingAegis__CASTX, SearingAegis__CASTY, 300., Filter(function SearingAegis__FilterActions))

endif

endif

set fx=null
set a=null
set u=null
        return false
    endfunction
    
    function SearingAegis__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function SearingAegis__Actions))
    endfunction
    
// scope SearingAegis ends
//===========================================================================
// Trigger: MalVladis Pantheon
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope MalVladisPantheon begins


function MalVladisPantheon__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local real face= GetUnitFacing(u)
local real x= GetUnitX(u) + 300. * Cos(( face - 180 ) * bj_DEGTORAD)
local real y= GetUnitY(u) + 300. * Sin(( face - 180 ) * bj_DEGTORAD)
local integer i= 0
local real x2= x + 600. * Cos(( face - 90 ) * bj_DEGTORAD)
local real y2= y + 600. * Sin(( face - 90 ) * bj_DEGTORAD)
local unit s
local player p= GetOwningPlayer(u)
local integer hp= BlzGetUnitMaxHP(u)
local real armor= BlzGetUnitArmor(u)
local integer damage= ( GetUnitAbilityLevel(u, MalVladisPantheon__SPELL_ID) * 2 * GetHeroAgi(u, true) ) + ( GetUnitAbilityLevel(u, MalVladisPantheon__SPELL_ID) * 2 * GetHeroStr(u, true) )

loop
exitwhen i == 9
set s=CreateUnit(p, MalVladisPantheon__UNIT_ID, x2, y2, face)
call BlzSetUnitMaxHP(s, hp)
call SetWidgetLife(s, hp * 1.)
call BlzSetUnitArmor(s, armor)
call BlzSetUnitBaseDamage(s, damage, 0)
call UnitApplyTimedLife(s, 'BTLF', 15.)
call SetUnitPropWindow(s, 0.)

call IssueImmediateOrderById(s, 852520)

set x2=x2 + 150. * Cos(( face + 90 ) * bj_DEGTORAD)
set y2=y2 + 150. * Sin(( face + 90 ) * bj_DEGTORAD)
set i=i + 1
endloop


set p=null
set u=null
set s=null
endfunction


//===========================================================================
function MalVladisPantheon__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(MalVladisPantheon__SPELL_ID , function MalVladisPantheon__Actions)
endfunction
// scope MalVladisPantheon ends

//===========================================================================
// Trigger: MalVladis Revelry
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope MalVladisRevelry begins

         function s__MalVladisRevelry__FB_destroy takes integer this returns nothing
            set s__MalVladisRevelry__FB_caster[this]=null


            call s__MalVladisRevelry__FB_deallocate(this)
        endfunction

function MalVladisRevelry__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local effect fx
local real life
local real maxhp
local integer lvl

if s__MalVladisRevelry__FB_i[data] >= 5 then

set Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])]=Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])] - 1

call ReleaseTimer(t)
call s__MalVladisRevelry__FB_destroy(data)

else

set life=GetWidgetLife(s__MalVladisRevelry__FB_caster[data])
set maxhp=BlzGetUnitMaxHP(s__MalVladisRevelry__FB_caster[data]) * 1.


if life < maxhp and UnitAlive(s__MalVladisRevelry__FB_caster[data]) then

set lvl=GetUnitAbilityLevel(s__MalVladisRevelry__FB_caster[data], MalVladisRevelry__SPELL_ID)

set fx=AddSpecialEffectTarget("war3mapImported\\Heal Orange2.mdx", s__MalVladisRevelry__FB_caster[data], "origin")

//call BlzSetSpecialEffectScale(fx,.9)

call DestroyEffect(fx)

call SetWidgetLife(s__MalVladisRevelry__FB_caster[data], life + ( maxhp - life ) * ( .05 + .01 * lvl ))

endif
set s__MalVladisRevelry__FB_i[data]=s__MalVladisRevelry__FB_i[data] + 1

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1., false, function MalVladisRevelry__Handler)

endif

set fx=null
set t=null
endfunction

    function MalVladisRevelry__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local timer t
 local integer data
        
        if GetUnitAbilityLevel(u, MalVladisRevelry__SPELL_ID) >= 1 and GetEventDamage() > 0 and a != u then
if J5V[( ROX(( GetUnitTypeId(a) )) )] then
            if ( ( BI[NI] ) == ( LN ) or ( BI[NI] ) == DAMAGE_TYPE_COLD or ( BI[NI] ) == DAMAGE_TYPE_LIGHTNING or ( BI[NI] ) == DAMAGE_TYPE_MAGIC or ( BI[NI] ) == DAMAGE_TYPE_UNIVERSAL ) then
if Revelry[GetUnitUserData(u)] < 1 then

set t=(NewTimerEx(0)) // INLINED!!
set data=s__MalVladisRevelry__FB__allocate()

set s__MalVladisRevelry__FB_caster[data]=u
set s__MalVladisRevelry__FB_i[data]=0

set Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])]=Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])] + 1

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function MalVladisRevelry__Handler)

endif
		endif
		else

           
if Revelry[GetUnitUserData(u)] < 1 then

set t=(NewTimerEx(0)) // INLINED!!
set data=s__MalVladisRevelry__FB__allocate()

set s__MalVladisRevelry__FB_caster[data]=u
set s__MalVladisRevelry__FB_i[data]=0

set Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])]=Revelry[GetUnitUserData(s__MalVladisRevelry__FB_caster[data])] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function MalVladisRevelry__Handler)

endif


            endif
        endif

        set t=null
        set u=null
        set a=null

        return false
    endfunction
    
    function MalVladisRevelry__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function MalVladisRevelry__Actions))
    endfunction
    
// scope MalVladisRevelry ends
//===========================================================================
// Trigger: Barbarism Stacks
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Barbarism begins

 
 function Barbarism__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E01Z' or GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E01L' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|c00DE0000M|r|c00D70000a|r|c00D10000l|r|c00CA0000'|r|c00C40000V|r|c00BD0000l|r|c00B70000a|r|c00B00000d|r|c00AA0000i|r|c00A30000s|r|c009D0000'|r|c00960000 |r|c00A00000B|r|c00AA0000a|r|c00B40000r|r|c00BE0000b|r|c00C80000a|r|c00BD0000r|r|c00B20000i|r|c00950000s|r|c00770000m|r|c005A0000:|r " + I2S(Barbarism[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function Barbarism__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Barbarism", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function Barbarism__Conditions))
    endfunction
// scope Barbarism ends
//===========================================================================
// Trigger: Searing Aegis Buff
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0
// scope SearingAegisActive begins


        function s__SearingAegisActive__EB_destroy takes integer this returns nothing
            set s__SearingAegisActive__EB_u[this]=null
            call s__SearingAegisActive__EB_deallocate(this)
        endfunction

    function SearingAegisActive__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
call UnitRemoveAbility(s__SearingAegisActive__EB_u[data], 'A0MM')
call AddUnitAnimationProperties(s__SearingAegisActive__EB_u[data], "defend", false)
        call ReleaseTimer(t)
        call s__SearingAegisActive__EB_destroy(data)
        
        set t=null
    endfunction
    
    function SearingAegisActive__OnSpell takes nothing returns nothing
        local integer data
        local timer t
 local effect fx
        

            
            set data=s__SearingAegisActive__EB__allocate()
            set s__SearingAegisActive__EB_u[data]=GetTriggerUnit()

call UnitAddAbility(s__SearingAegisActive__EB_u[data], 'A0MM')
call AddUnitAnimationProperties(s__SearingAegisActive__EB_u[data], "defend", true)

set fx=AddSpecialEffect("war3mapImported\\GodsRebuke.mdx", GetUnitX(s__SearingAegisActive__EB_u[data]), GetUnitY(s__SearingAegisActive__EB_u[data]))
//call BlzSetSpecialEffectScale(fx,1.1)
call BlzSetSpecialEffectYaw(fx, GetUnitFacing(s__SearingAegisActive__EB_u[data]) * ( bj_PI / 180.00 ))
call DestroyEffect(fx)
            
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 15., false, function SearingAegisActive__Handler)
        
	set fx=null
        set t=null
    endfunction
    
function SearingAegisActive__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(SearingAegisActive__ABIL_ID , function SearingAegisActive__OnSpell)
endfunction
    
// scope SearingAegisActive ends
//===========================================================================
// Trigger: Thunderous Leap
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope WSLeapy begins





        function s__WSLeapy__Leapy_destroy takes integer this returns nothing
        set s__WSLeapy__Leapy_c[this]=null
	call DestroyEffect(s__WSLeapy__Leapy_fx[this])
call DestroyEffect(s__WSLeapy__Leapy_fx2[this])
	//call BJDebugMsg("destroyed")
	set s__WSLeapy__Leapy_fx[this]=null
set s__WSLeapy__Leapy_fx2[this]=null
        call s__WSLeapy__Leapy_deallocate(this)
        endfunction


    function WSLeapy__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
 local unit u

	if s__WSLeapy__Leapy_d[data] >= .6 then

    call SetUnitFlyHeight(s__WSLeapy__Leapy_c[data], 0., 0.0)

set u=CreateUnit(GetOwningPlayer(s__WSLeapy__Leapy_c[data]), 'h007', GetUnitX(s__WSLeapy__Leapy_c[data]), GetUnitY(s__WSLeapy__Leapy_c[data]), 0.)

call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", GetUnitX(s__WSLeapy__Leapy_c[data]), GetUnitY(s__WSLeapy__Leapy_c[data])))

call UnitAddAbility(u, 'A03Y')
call SetUnitAbilityLevel(u, 'A03Y', GetUnitAbilityLevel(s__WSLeapy__Leapy_c[data], 'A0NH'))
call IssueImmediateOrderById(u, 852164)


call UnitApplyTimedLife(u, 'BTLF', 1.)

    call s__WSLeapy__Leapy_destroy(data)
    call ReleaseTimer(t)

else

if s__WSLeapy__Leapy_d[data] < .48 then

set s__WSLeapy__Leapy_h[data]=s__WSLeapy__Leapy_h[data] + 12
call SetUnitFlyHeight(s__WSLeapy__Leapy_c[data], s__WSLeapy__Leapy_h[data], 0.0)
else
set s__WSLeapy__Leapy_h[data]=s__WSLeapy__Leapy_h[data] - 48
call SetUnitFlyHeight(s__WSLeapy__Leapy_c[data], s__WSLeapy__Leapy_h[data], 0.0)
endif


set s__WSLeapy__Leapy_d[data]=s__WSLeapy__Leapy_d[data] + .01
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function WSLeapy__Handler)
    endif
    
set u=null
    set t=null
    endfunction

   
    function WSLeapy__Actions takes nothing returns nothing
    local timer t
    local integer data
 local real d= 0
local real a= 0
local real cx= 0
local real cy= 0
local real tx=0
local real ty=0
local real dx=0
local real dy= 0
local real x= 0
local real y= 0
local real a2= 0
local player p


    
	set t=(NewTimerEx(0)) // INLINED!!
	set data=s__WSLeapy__Leapy__allocate()

    set s__WSLeapy__Leapy_c[data]=GetTriggerUnit()
call SetUnitAnimation(s__WSLeapy__Leapy_c[data], "attack two")

set cx=GetUnitX(s__WSLeapy__Leapy_c[data])
set cy=GetUnitY(s__WSLeapy__Leapy_c[data])
set tx=GetSpellTargetX()
set ty=GetSpellTargetY()
        call UnitAddAbility(s__WSLeapy__Leapy_c[data], 'Amrf')
        call UnitRemoveAbility(s__WSLeapy__Leapy_c[data], 'Amrf')

set a=bj_RADTODEG * Atan2(ty - cy, tx - cx)
	
    set dx=tx - cx
    set dy=ty - cy
    set d=( SquareRoot(dx * dx + dy * dy) ) + 80.



call M6E(s__WSLeapy__Leapy_c[data] , d , .6 , a , "none.mdl" , .0 , true , false)


set s__WSLeapy__Leapy_fx[data]=AddSpecialEffectTarget("war3mapImported\\LightningArrow1.mdx", s__WSLeapy__Leapy_c[data], "weapon")
set s__WSLeapy__Leapy_fx2[data]=AddSpecialEffectTarget("war3mapImported\\OrbOfLightning.mdx", s__WSLeapy__Leapy_c[data], "chest")

set s__WSLeapy__Leapy_d[data]=.01
set s__WSLeapy__Leapy_h[data]=6
call SetUnitFlyHeight(s__WSLeapy__Leapy_c[data], s__WSLeapy__Leapy_h[data], 0.0)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function WSLeapy__Handler)
set p=null
    set t=null
    endfunction
    

    function WSLeapy__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent('A0NH' , function WSLeapy__Actions)
    endfunction
// scope WSLeapy ends
//===========================================================================
// Trigger: Eldritch Touch
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope EldritchCurse begins




    function EldritchCurse__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()


if GetUnitAbilityLevel(a, EldritchCurse__SPELL_ID) == 1 and a != u and GetEventDamage() >= 1. and not IsUnitType(u, UNIT_TYPE_HERO) and ( ( BI[NI] == DAMAGE_TYPE_UNIVERSAL ) or ( BI[NI] == DAMAGE_TYPE_LIGHTNING ) ) then

if GetUnitAbilityLevel(u, EldritchCurse__SPELL_ID2) != 1 then
call UnitAddAbility(u, EldritchCurse__SPELL_ID2)
endif

call AddUnitBonus(u , BONUS_ARMOR , - 1.)
call AddUnitBonus(u , BONUS_MAGIC_RESISTANCE , - .01)

endif
set a=null
set u=null
        return false
    endfunction
    
    function EldritchCurse__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function EldritchCurse__Actions))
    endfunction
    
// scope EldritchCurse ends
//===========================================================================
// Trigger: Demonic Lightning
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope DemonicLightning begins




    function DemonicLightning__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local real angle
 local group g
 local unit FoG
 local real x1
 local real y1
 local real x2
 local real y2
 local integer i= 0
 local player p= GetOwningPlayer(a)
 local real dmg
 local effect fx
 local real x3
 local real y3
 local real dist
 local group g2

if GetUnitTypeId(a) == DemonicLightning__UNIT_ID and (CI[NI]) and a != u and IsUnitEnemy(u, p) and GetEventDamage() >= 1. and ( BI[NI] != DAMAGE_TYPE_UNIVERSAL ) then // INLINED!!
set dmg=GetEventDamage()

set DI[NI]=DI[NI] + dmg

set x1=GetUnitX(a)
set y1=GetUnitY(a)
set angle=bj_RADTODEG * Atan2(GetUnitY(u) - y1, GetUnitX(u) - x1) - 16.

if GetUnitAbilityLevel(a, 'A0N9') == 1 then
set dist=1200.
else
set dist=675.
endif

set g2=CreateGroup()

loop
exitwhen i > 4

set x3=x1 + 40. * Cos(angle * bj_DEGTORAD)
set y3=y1 + 40. * Sin(angle * bj_DEGTORAD)

set x2=x1 + dist * Cos(angle * bj_DEGTORAD)
set y2=y1 + dist * Sin(angle * bj_DEGTORAD)

call MoveLocation(DemonicLightning__LOC, x1, y1)

call s__TimedL_P2P(AddLightningEx("RENL", true, x3, y3, GetLocationZ(DemonicLightning__LOC) + 40., x2, y2, 30.) , .75 , 1. , 1.)
set fx=AddSpecialEffect("Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl", x2, y2)
call BlzSetSpecialEffectScale(fx, .65)
call BlzSetSpecialEffectZ(fx, 30.)
call DestroyEffect(fx)
set g=CreateGroup()
call s__LineSegment_EnumUnitsEx((g ) , (( x1 )*1.0) , (( y1 )*1.0) , (( x2 )*1.0) , (( y2 )*1.0) , (( 45.)*1.0) , false) // INLINED!!

loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)
                if IsUnitEnemy(FoG, p) and UnitAlive(FoG) then
		

		if not IsUnitInGroup(FoG, g2) then
		call UnitDamageTargetEx(a , FoG , dmg + ( GetHeroAgi(a, true) * 1.8 ) + ( GetHeroInt(a, true) * 0.8 ) , true , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
		else
		call UnitDamageTargetEx(a , FoG , ( dmg + ( GetHeroAgi(a, true) * 1.8 ) + ( GetHeroInt(a, true) * 0.8 ) ) * .45 , true , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
		endif
		if not IsUnitInGroup(FoG, g2) then
		call GroupAddUnit(g2, FoG)
		endif
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Leak.mdx", FoG, "chest"))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Blood Leak.mdx", FoG, "head"))
		//call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EraserFire.mdl",FoG,"chest"))
		//call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl",FoG,"chest"))
		endif

            endloop
            call DestroyGroup(g)
	set FoG=null

set angle=angle + 8.
set i=i + 1
endloop

call GroupClear(g2)
call DestroyGroup(g2)

endif

set g2=null
set FoG=null
set g=null
set p=null
set a=null
set u=null
        return false
    endfunction
    
    function DemonicLightning__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function DemonicLightning__Actions))
    endfunction
    
// scope DemonicLightning ends
//===========================================================================
// Trigger: Felreaving
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope Felreaving begins





function s__Felreaving__FT_destroy takes integer this returns nothing
call DestroyEffect(s__Felreaving__FT_fx[this])
set s__Felreaving__FT_fx[this]=null
set s__Felreaving__FT_c[this]=null
call s__Felreaving__FT_deallocate(this)
endfunction





function s__Felreaving__FT2_destroy takes integer this returns nothing
set s__Felreaving__FT2_c[this]=null
call s__Felreaving__FT2_deallocate(this)
endfunction

function Felreaving__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local real a= bj_RADTODEG * Atan2(GetUnitY(u) - Felreaving__CASTY, GetUnitX(u) - Felreaving__CASTX)


if IsUnitEnemy(u, GetOwningPlayer(Felreaving__CASTER)) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and UnitAlive(u) and a >= Felreaving__ANGLE - 95 and a <= Felreaving__ANGLE + 95 then


if GetUnitAbilityLevel(u, Felreaving__SPELL_ID2) != 1 then
call UnitAddAbility(u, Felreaving__SPELL_ID2)
endif

call AddUnitBonus(u , BONUS_ARMOR , - 5.)
call AddUnitBonus(u , BONUS_MAGIC_RESISTANCE , - .06)

call UnitDamageTargetEx(Felreaving__CASTER , u , ( Felreaving__LEVEL * GetHeroInt(Felreaving__CASTER, true) * 2.5 ) + ( Felreaving__LEVEL * GetHeroAgi(Felreaving__CASTER, true) * .5 ) , false , false , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)

if GetRandomInt(0, 2) == 1 then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebrand Shot Orange.mdx", u, "chest"))
else
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebrand Shot Green.mdx", u, "chest"))
endif

endif

set u=null
return false
endfunction

function Felreaving__Handler2 takes nothing returns nothing

local timer t= GetExpiredTimer()

local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

set Felreaving__CASTER=s__Felreaving__FT2_c[data]
set Felreaving__ANGLE=s__Felreaving__FT2_a[data]
set Felreaving__LEVEL=GetUnitAbilityLevel(s__Felreaving__FT2_c[data], Felreaving__SPELL_ID)
set Felreaving__CASTX=s__Felreaving__FT2_x[data]
set Felreaving__CASTY=s__Felreaving__FT2_y[data]

call GroupEnumUnitsInRange(Felreaving__GROUP, s__Felreaving__FT2_x[data], s__Felreaving__FT2_y[data], 325., Filter(function Felreaving__FilterActions))

call ReleaseTimer(t)
call s__Felreaving__FT2_destroy(data)

set t=null
endfunction


function Felreaving__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local timer t2
local integer data2


if s__Felreaving__FT_i[data] <= 0 or not UnitAlive(s__Felreaving__FT_c[data]) or s__Felreaving__FT_c[data] == null then

call SetUnitTimeScale(s__Felreaving__FT_c[data], 1.)
call s__Felreaving__FT_destroy(data)
call ReleaseTimer(t)

else

if s__Felreaving__FT_swing[data] then
set s__Felreaving__FT_swing[data]=false
else
set s__Felreaving__FT_swing[data]=true
endif


if s__Felreaving__FT_swing[data] then
call SetUnitAnimation(s__Felreaving__FT_c[data], "spell")
else
call SetUnitAnimation(s__Felreaving__FT_c[data], "spell throw")
endif

set t2=(NewTimerEx(0)) // INLINED!!
set data2=s__Felreaving__FT2__allocate()

set s__Felreaving__FT2_c[data2]=s__Felreaving__FT_c[data]
set s__Felreaving__FT2_x[data2]=GetUnitX(s__Felreaving__FT_c[data])
set s__Felreaving__FT2_y[data2]=GetUnitY(s__Felreaving__FT_c[data])
set s__Felreaving__FT2_a[data2]=s__Felreaving__FT_a[data]


set s__Felreaving__FT_i[data]=s__Felreaving__FT_i[data] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
if s__Felreaving__FT_swing[data] then
call TimerStart(t, 0.3864, false, function Felreaving__Handler)
else
call TimerStart(t, .44, false, function Felreaving__Handler)
endif


call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
call TimerStart(t2, .2, false, function Felreaving__Handler2)

endif

set t2=null
set t=null
endfunction


function Felreaving__Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__Felreaving__FT__allocate()
local timer t2= (NewTimerEx(0)) // INLINED!!
local integer data2= s__Felreaving__FT2__allocate()
local integer i= GetRandomInt(0, 1)


set s__Felreaving__FT_c[data]=GetTriggerUnit()
set s__Felreaving__FT_i[data]=11
set s__Felreaving__FT_a[data]=bj_RADTODEG * Atan2(GetSpellTargetY() - GetUnitY(s__Felreaving__FT_c[data]), GetSpellTargetX() - GetUnitX(s__Felreaving__FT_c[data]))

call SetUnitFacing(s__Felreaving__FT_c[data], s__Felreaving__FT_a[data])

set s__Felreaving__FT_fx[data]=AddSpecialEffectTarget("war3mapImported\\Ember Sword FX 55.mdx", s__Felreaving__FT_c[data], "weapon")
call BlzSetSpecialEffectScale(s__Felreaving__FT_fx[data], 1.25)
if i == 1 then
set s__Felreaving__FT_swing[data]=true
else
set s__Felreaving__FT_swing[data]=false
endif

set s__Felreaving__FT2_c[data2]=s__Felreaving__FT_c[data]
set s__Felreaving__FT2_x[data2]=GetUnitX(s__Felreaving__FT_c[data])
set s__Felreaving__FT2_y[data2]=GetUnitY(s__Felreaving__FT_c[data])
set s__Felreaving__FT2_a[data2]=s__Felreaving__FT_a[data]


call s__NewBonusUtils__NewBonusUtils_linkTimed((s__Felreaving__FT_c[data] ) , ( BONUS_ARMOR ) , (( 666666 )*1.0) , (( 6.6)*1.0) , true) // INLINED!!

call SetUnitTimeScale(s__Felreaving__FT_c[data], 2.5)

if s__Felreaving__FT_swing[data] then
call SetUnitAnimation(s__Felreaving__FT_c[data], "spell")
else
call SetUnitAnimation(s__Felreaving__FT_c[data], "spell throw")
endif

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
if s__Felreaving__FT_swing[data] then
call TimerStart(t, 0.3864, false, function Felreaving__Handler)
else
call TimerStart(t, 0.44, false, function Felreaving__Handler)
endif

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
call TimerStart(t2, .2, false, function Felreaving__Handler2)

set t2=null
set t=null
endfunction

//===========================================================================
function Felreaving__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Felreaving__SPELL_ID , function Felreaving__Actions)
endfunction
// scope Felreaving ends
//===========================================================================
// Trigger: Eldritch Curse
//===========================================================================
//TESH.scrollpos=99
//TESH.alwaysfold=0
// scope EldCurse begins
 

         function s__EldCurse__BB_destroy takes integer this returns nothing
            set s__EldCurse__BB_caster[this]=null
		set s__EldCurse__BB_t[this]=null
            call s__EldCurse__BB_deallocate(this)
        endfunction


 
    function EldCurse__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local real x= GetUnitX(s__EldCurse__BB_t[data])
    local real y= GetUnitY(s__EldCurse__BB_t[data])
    local real m= GetUnitState(s__EldCurse__BB_t[data], UNIT_STATE_MANA)
 local unit d
 local integer i= 0
 local real x2
 local real y2
 local real x3
 local real y3

    
    if s__EldCurse__BB_i[data] == 0 or not UnitAlive(s__EldCurse__BB_t[data]) or s__EldCurse__BB_t[data] == null or GetUnitAbilityLevel(s__EldCurse__BB_t[data], EldCurse__BUFF_ID) != 1 then
    
    call ReleaseTimer(GetExpiredTimer())
    call s__EldCurse__BB_destroy(data)

    else

	if SquareRoot(( x - s__EldCurse__BB_x[data] ) * ( x - s__EldCurse__BB_x[data] ) + ( y - s__EldCurse__BB_y[data] ) * ( y - s__EldCurse__BB_y[data] )) > 0. then

	call SetUnitState(s__EldCurse__BB_t[data], UNIT_STATE_MANA, m - ( BlzGetUnitMaxMana(s__EldCurse__BB_t[data]) * .01 ))
	call SetUnitState(s__EldCurse__BB_caster[data], UNIT_STATE_MANA, GetUnitState(s__EldCurse__BB_caster[data], UNIT_STATE_MANA) + ( BlzGetUnitMaxMana(s__EldCurse__BB_t[data]) * .01 ))
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebrand Shot Red.mdx", s__EldCurse__BB_t[data], "chest"))
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebrand Shot Orange.mdx", s__EldCurse__BB_caster[data], "chest"))

	set m=GetUnitState(s__EldCurse__BB_t[data], UNIT_STATE_MANA)

	if m <= 0 then

set d=CreateUnit(GetOwningPlayer(s__EldCurse__BB_caster[data]), 'h007', x, y, 0.)

call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl", s__EldCurse__BB_t[data], "chest"))

call UnitAddAbility(d, 'A0N7')
call IssueTargetOrderById(d, 852095, s__EldCurse__BB_t[data])
call UnitApplyTimedLife(d, 'BTLF', 1.)



if GetUnitAbilityLevel(s__EldCurse__BB_caster[data], 'A0N8') != 1 then

if GetHeroStr(s__EldCurse__BB_caster[data], false) <= 10 then
call SetHeroStr(s__EldCurse__BB_caster[data], 1, true)
else
call SetHeroStr(s__EldCurse__BB_caster[data], GetHeroStr(s__EldCurse__BB_caster[data], false) - 10, true)
endif

call SetHeroAgi(s__EldCurse__BB_caster[data], GetHeroAgi(s__EldCurse__BB_caster[data], false) + 10, true)
call SetHeroInt(s__EldCurse__BB_caster[data], GetHeroInt(s__EldCurse__BB_caster[data], false) + 10, true)

else

call SetHeroAgi(s__EldCurse__BB_caster[data], GetHeroAgi(s__EldCurse__BB_caster[data], false) + 20, true)
call SetHeroInt(s__EldCurse__BB_caster[data], GetHeroInt(s__EldCurse__BB_caster[data], false) + 20, true)

endif

call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", s__EldCurse__BB_caster[data], "origin"))

set Diablerie[GetUnitUserData(s__EldCurse__BB_caster[data])]=Diablerie[GetUnitUserData(s__EldCurse__BB_caster[data])] + 10
if Diablerie[GetUnitUserData(s__EldCurse__BB_caster[data])] >= 222 and GetUnitAbilityLevel(s__EldCurse__BB_caster[data], 'A0N8') != 1 then
call UnitAddAbility(s__EldCurse__BB_caster[data], 'A0N8')
call BlzSetUnitAttackCooldown(s__EldCurse__BB_caster[data], 1.8, 0)

set x2=GetUnitX(s__EldCurse__BB_caster[data])
set y2=GetUnitY(s__EldCurse__BB_caster[data])
loop
exitwhen i >= 18

set x3=x2 + GetRandomReal(- 350., 350.)
set y3=y2 + GetRandomReal(- 350., 350.)
if GetRandomInt(0, 1) == 1 then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire.mdx", x3, y3))
else
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire Fel.mdx", x3, y3))
endif
set i=i + 1
endloop
endif

    call ReleaseTimer(GetExpiredTimer())
    call s__EldCurse__BB_destroy(data)
	else
set s__EldCurse__BB_x[data]=x
set s__EldCurse__BB_y[data]=y
set s__EldCurse__BB_i[data]=s__EldCurse__BB_i[data] - 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function EldCurse__Handler)

	endif
else

set s__EldCurse__BB_x[data]=x
set s__EldCurse__BB_y[data]=y
set s__EldCurse__BB_i[data]=s__EldCurse__BB_i[data] - 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function EldCurse__Handler)
    endif
endif

	set d=null
    set t=null
    endfunction
    
  
 
    function EldCurse__Actions takes nothing returns nothing
 local timer t= (NewTimerEx(0)) // INLINED!!
 local integer data= s__EldCurse__BB__allocate()

    
    set s__EldCurse__BB_caster[data]=GetTriggerUnit()
    set s__EldCurse__BB_i[data]=160 + ( GetUnitAbilityLevel(s__EldCurse__BB_caster[data], EldCurse__SPELL_ID) * 16 )
    set s__EldCurse__BB_t[data]=GetSpellTargetUnit()
    set s__EldCurse__BB_x[data]=GetUnitX(s__EldCurse__BB_t[data])
    set s__EldCurse__BB_y[data]=GetUnitY(s__EldCurse__BB_t[data])
    

    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, .03125, false, function EldCurse__Handler)

    set t=null
    endfunction
    

        function EldCurse__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EldCurse__SPELL_ID , function EldCurse__Actions)
    endfunction
// scope EldCurse ends

//===========================================================================
// Trigger: Chaos Overwhelming
//===========================================================================
//TESH.scrollpos=99
//TESH.alwaysfold=0
// scope ChaosOverwhelming begins
 


         function s__ChaosOverwhelming__BB_destroy takes integer this returns nothing
            set s__ChaosOverwhelming__BB_caster[this]=null
            call s__ChaosOverwhelming__BB_deallocate(this)
        endfunction

 
    function ChaosOverwhelming__Handler2 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

	call UnitRemoveAbility(s__ChaosOverwhelming__BB_caster[data], ChaosOverwhelming__BUFF_ID)

call SelectUnitAddForPlayer(s__ChaosOverwhelming__BB_caster[data], Player(OriginalPlayerOwner[GetUnitUserData(s__ChaosOverwhelming__BB_caster[data])]))

if GetUnitAbilityLevel(s__ChaosOverwhelming__BB_caster[data], 'A0N8') == 1 then
call BlzSetUnitAttackCooldown(s__ChaosOverwhelming__BB_caster[data], 1.8, 0)
else
call BlzSetUnitAttackCooldown(s__ChaosOverwhelming__BB_caster[data], 2.7, 0)
endif

call SetUnitOwner(s__ChaosOverwhelming__BB_caster[data], Player(OriginalPlayerOwner[GetUnitUserData(s__ChaosOverwhelming__BB_caster[data])]), false)

call SetUnitAcquireRange(s__ChaosOverwhelming__BB_caster[data], 800.)

    call ReleaseTimer(GetExpiredTimer())
    call s__ChaosOverwhelming__BB_destroy(data)

    set t=null
    endfunction
    
  
 
    function ChaosOverwhelming__Handler takes nothing returns nothing
 local timer t= (NewTimerEx(0)) // INLINED!!
 local timer t2= GetExpiredTimer()
 local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t2)))) // INLINED!!
    local integer i= 0
 local real x2
local real y2
local real x3
local real y3

call ReleaseTimer(t2)

	call BlzSetUnitAttackCooldown(s__ChaosOverwhelming__BB_caster[data], .5, 0)

call DestroyEffect(AddSpecialEffect("", GetUnitX(s__ChaosOverwhelming__BB_caster[data]), GetUnitY(s__ChaosOverwhelming__BB_caster[data])))

call SetUnitAcquireRange(s__ChaosOverwhelming__BB_caster[data], 2000.)

set OriginalPlayerOwner[GetUnitUserData(s__ChaosOverwhelming__BB_caster[data])]=GetPlayerId(GetOwningPlayer(s__ChaosOverwhelming__BB_caster[data]))

call SetUnitOwner(s__ChaosOverwhelming__BB_caster[data], Player(PLAYER_NEUTRAL_AGGRESSIVE), false)


set x2=GetUnitX(s__ChaosOverwhelming__BB_caster[data])
set y2=GetUnitY(s__ChaosOverwhelming__BB_caster[data])
loop
exitwhen i >= 18

set x3=x2 + GetRandomReal(- 350., 350.)
set y3=y2 + GetRandomReal(- 350., 350.)
if GetRandomInt(0, 1) == 1 then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire.mdx", x3, y3))
else
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire Fel.mdx", x3, y3))
endif
set i=i + 1
endloop

//call AddUnitBonusTimed(data.caster, BONUS_ARMOR, 666666, 16.)

    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, 10., false, function ChaosOverwhelming__Handler2)

set t2=null
    set t=null
    endfunction

    function ChaosOverwhelming__Actions takes nothing returns nothing
 local timer t= (NewTimerEx(0)) // INLINED!!
 local integer data= s__ChaosOverwhelming__BB__allocate()

    set s__ChaosOverwhelming__BB_caster[data]=GetTriggerUnit()

	call UnitAddAbility(s__ChaosOverwhelming__BB_caster[data], ChaosOverwhelming__BUFF_ID)

    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, .03125, false, function ChaosOverwhelming__Handler)

    set t=null
    endfunction
    
    

        function ChaosOverwhelming__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(ChaosOverwhelming__SPELL_ID , function ChaosOverwhelming__Actions)
call SetPlayerAbilityAvailable(Player(PLAYER_NEUTRAL_AGGRESSIVE), 'A0N1', false)
    endfunction
// scope ChaosOverwhelming ends

//===========================================================================
// Trigger: Chaos Overhelming Bounty
//===========================================================================
// scope ChaosBounty begins


function ChaosBounty__OnSpell takes nothing returns boolean
local unit u= GetKillingUnit()
local unit t= GetTriggerUnit()
local integer i
local texttag tt
local string s= null
local integer i2= 0
local real x2
local real y2
local real x3
local real y3
        if GetUnitAbilityLevel(u, 'A0N9') == 1 then

	if GetOwningPlayer(t) == Player(10) or GetOwningPlayer(t) == Player(11) then
	set i=BlzGetUnitIntegerField(t, UNIT_IF_GOLD_BOUNTY_AWARDED_BASE)
	set tt=CreateTextTag()
	if GetLocalPlayer() == Player(OriginalPlayerOwner[GetUnitUserData(u)]) then
	set s="|cffffcc00 +" + I2S(i) + "|r"
	endif
	call SetTextTagText(tt, s, 0.023)
                    call SetTextTagPos(tt, GetUnitX(t), GetUnitY(t), 10.)
                    call SetTextTagColor(tt, 255, 255, 255, 255)
                    call SetTextTagVelocity(tt, 0.0355 * Cos(90. * bj_DEGTORAD), 0.0355 * Sin(90. * bj_DEGTORAD))
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 1.5)
                    call SetTextTagLifespan(tt, 2.)
                    call SetTextTagPermanent(tt, false)

	call SetPlayerState(Player(OriginalPlayerOwner[GetUnitUserData(u)]), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(Player(OriginalPlayerOwner[GetUnitUserData(u)]), PLAYER_STATE_RESOURCE_GOLD) ) + i)
	call SetPlayerState(Player(PLAYER_NEUTRAL_AGGRESSIVE), PLAYER_STATE_RESOURCE_GOLD, 0)
	endif

if GetUnitAbilityLevel(u, 'A0N8') != 1 then

if GetHeroStr(u, false) <= 1 then
call SetHeroStr(u, 1, true)
else
call SetHeroStr(u, GetHeroStr(u, false) - 1, true)
endif

call SetHeroAgi(u, GetHeroAgi(u, false) + 1, true)
call SetHeroInt(u, GetHeroInt(u, false) + 1, true)

else

call SetHeroAgi(u, GetHeroAgi(u, false) + 2, true)
call SetHeroInt(u, GetHeroInt(u, false) + 2, true)

endif

call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", u, "origin"))

set Diablerie[GetUnitUserData(u)]=Diablerie[GetUnitUserData(u)] + 1
if Diablerie[GetUnitUserData(u)] >= 222 and GetUnitAbilityLevel(u, 'A0N8') != 1 then
call UnitAddAbility(u, 'A0N8')
call BlzSetUnitAttackCooldown(u, 1.8, 0)

set x2=GetUnitX(u)
set y2=GetUnitY(u)
loop
exitwhen i2 >= 18

set x3=x2 + GetRandomReal(- 350., 350.)
set y3=y2 + GetRandomReal(- 350., 350.)
if GetRandomInt(0, 1) == 1 then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire.mdx", x3, y3))
else
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire Fel.mdx", x3, y3))
endif
set i2=i2 + 1
endloop

endif

if IsUnitType(t, UNIT_TYPE_HERO) and not IsUnitIllusion(t) then

if GetUnitAbilityLevel(u, 'A0N8') != 1 then

if GetHeroStr(u, false) <= 9 then
call SetHeroStr(u, 1, true)
else
call SetHeroStr(u, GetHeroStr(u, false) - 9, true)
endif

call SetHeroAgi(u, GetHeroAgi(u, false) + 9, true)
call SetHeroInt(u, GetHeroInt(u, false) + 9, true)

else

call SetHeroAgi(u, GetHeroAgi(u, false) + 18, true)
call SetHeroInt(u, GetHeroInt(u, false) + 18, true)

endif

call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", u, "origin"))

set Diablerie[GetUnitUserData(u)]=Diablerie[GetUnitUserData(u)] + 10
if Diablerie[GetUnitUserData(u)] >= 222 and GetUnitAbilityLevel(u, 'A0N8') != 1 then
call UnitAddAbility(u, 'A0N8')
call BlzSetUnitAttackCooldown(u, 1.8, 0)

set x2=GetUnitX(u)
set y2=GetUnitY(u)
loop
exitwhen i2 >= 18

set x3=x2 + GetRandomReal(- 350., 350.)
set y3=y2 + GetRandomReal(- 350., 350.)
if GetRandomInt(0, 1) == 1 then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire.mdx", x3, y3))
else
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire Fel.mdx", x3, y3))
endif
set i2=i2 + 1
endloop

endif
endif
	endif
	set tt=null
	set s=null
	set u=null
	set t=null
        return false
endfunction
//===========================================================================
function ChaosBounty__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function ChaosBounty__OnSpell))
endfunction
// scope ChaosBounty ends
//===========================================================================
// Trigger: Diablerie Stacks
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Diablerie begins


 
 function Diablerie__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E020' or GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E01L' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|c0021C000M|r|c0032AB00o|r|c00439500l|r|c00548000o|r|c00656B00c|r|c00765500h|r|c00874000'|r|c00982B00s|r|c00A91500 |r|c00BA0000D|r|c00B40000i|r|c00AE0000a|r|c00A90000b|r|c00A30000l|r|c009D0000e|r|c00970000r|r|c00910000i|r|c008C0000e|r|c00860000:|r|c00800000 |r " + I2S(Diablerie[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function Diablerie__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-Diablerie", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function Diablerie__Conditions))
    endfunction
// scope Diablerie ends
//===========================================================================
// Trigger: Vacuum Burst
//===========================================================================

// scope VacuumBurst begins
    
            
        function s__VacuumBurst__data_destroy takes integer this returns nothing
        set s__VacuumBurst__data_caster[this]=null
        set s__VacuumBurst__data_dummy[this]=null
	set s__VacuumBurst__data_owner[this]=null
	call GroupClear(s__VacuumBurst__data_g[this])
	call DestroyGroup(s__VacuumBurst__data_g[this])
	set s__VacuumBurst__data_g[this]=null
        call s__VacuumBurst__data_deallocate(this)
        endfunction
            

        function s__VacuumBurst__vacuumdata_destroy takes integer this returns nothing
        set s__VacuumBurst__vacuumdata_u[this]=null
        call s__VacuumBurst__vacuumdata_deallocate(this)
        endfunction

            
           function VacuumBurst__onVacuumLoop takes nothing returns nothing
  
               local integer i=1
               local real x
  local real y
               local integer this
		loop
                exitwhen ( i > VacuumBurst__vix )
                
                   set this=VacuumBurst__vic[i]
                   set s__VacuumBurst__vacuumdata_r[this]=s__VacuumBurst__vacuumdata_r[this] + VacuumBurst__VACUUM_SPEED
                   set x=GetUnitX(s__VacuumBurst__vacuumdata_u[this]) + VacuumBurst__VACUUM_SPEED * Cos(s__VacuumBurst__vacuumdata_a[this] * bj_DEGTORAD)
                   set y=GetUnitY(s__VacuumBurst__vacuumdata_u[this]) + VacuumBurst__VACUUM_SPEED * Sin(s__VacuumBurst__vacuumdata_a[this] * bj_DEGTORAD)
                   call SetUnitX(s__VacuumBurst__vacuumdata_u[this], x)
                   call SetUnitY(s__VacuumBurst__vacuumdata_u[this], y)
                   call SetUnitFlyHeight(s__VacuumBurst__vacuumdata_u[this], s__VacuumBurst__vacuumdata_bz[this] + ( Sin(( ( 180.0 / s__VacuumBurst__vacuumdata_d[this] ) * s__VacuumBurst__vacuumdata_r[this] ) * bj_DEGTORAD) * s__VacuumBurst__vacuumdata_z[this] ), 0.0)
                    if ( s__VacuumBurst__vacuumdata_r[this] >= s__VacuumBurst__vacuumdata_d[this] ) then
              
                       call SetUnitPathing(s__VacuumBurst__vacuumdata_u[this], true)
              	       call SetUnitFlyHeight(s__VacuumBurst__vacuumdata_u[this], GetUnitDefaultFlyHeight(s__VacuumBurst__vacuumdata_u[this]), 0)
                       set s__VacuumBurst__vacuumdata_u[this]=null
                       call s__VacuumBurst__vacuumdata_destroy(this)
                       set VacuumBurst__vic[i]=VacuumBurst__vic[VacuumBurst__vix]
                       set VacuumBurst__vix=VacuumBurst__vix - 1
                       set i=i - 1
                        if ( VacuumBurst__vix == 0 ) then
			call PauseTimer(VacuumBurst__vtmr)
			endif
                    endif
                   set i=i + 1
               endloop
            endfunction
            
           function VacuumBurst__onVacuum takes unit t,real x,real y returns nothing
  
                local real dx
local real dy
local real xt=GetUnitX(t)
local real yt=GetUnitY(t)
               local integer this=s__VacuumBurst__vacuumdata__allocate()
               set VacuumBurst__vix=VacuumBurst__vix + 1
		set VacuumBurst__vic[VacuumBurst__vix]=this
               set dx=x - xt
		set dy=y - yt
               set s__VacuumBurst__vacuumdata_u[this]=t
               set s__VacuumBurst__vacuumdata_r[this]=0.0
               set s__VacuumBurst__vacuumdata_bz[this]=GetUnitFlyHeight(t)
               set s__VacuumBurst__vacuumdata_d[this]=SquareRoot(dx * dx + dy * dy) * 0.75
               set s__VacuumBurst__vacuumdata_z[this]=( VacuumBurst__VACUUM_Z / ( VacuumBurst__DISTANCE * 0.75 ) ) * s__VacuumBurst__vacuumdata_d[this]
               set s__VacuumBurst__vacuumdata_a[this]=bj_RADTODEG * Atan2(y - yt, x - xt)
                call UnitAddAbility(t, 'Amrf')
		call UnitRemoveAbility(t, 'Amrf')
                call SetUnitPathing(t, false)
                call DestroyEffect(AddSpecialEffect(VacuumBurst__TARGETFX, xt, yt))
                if ( VacuumBurst__vix == 1 ) then
		call TimerStart(VacuumBurst__vtmr, VacuumBurst__periodic, true, function VacuumBurst__onVacuumLoop)
		endif
            endfunction
            
            function VacuumBurst__FilterActions takes nothing returns boolean
  local real x
  local real y
  local unit t=GetFilterUnit()
                if UnitAlive(t) and not IsUnitType(t, UNIT_TYPE_MAGIC_IMMUNE) and not IsUnitType(t, UNIT_TYPE_STRUCTURE) and not IsUnitAlly(t, s__VacuumBurst__data_owner[VacuumBurst__link]) then
			set x=GetUnitX(s__VacuumBurst__data_dummy[VacuumBurst__link])
			set y=GetUnitY(s__VacuumBurst__data_dummy[VacuumBurst__link])
				if not IsUnitInGroup(t, s__VacuumBurst__data_g[VacuumBurst__link]) then
                               call UnitDamageTargetEx(s__VacuumBurst__data_caster[VacuumBurst__link] , t , s__VacuumBurst__data_dmg[VacuumBurst__link] , false , false , VacuumBurst__A_TYPE , VacuumBurst__D_TYPE , null)
				call GroupAddUnit(s__VacuumBurst__data_g[VacuumBurst__link], t)
			
                                if not s__VacuumBurst__data_b[VacuumBurst__link] then

                                  call VacuumBurst__onVacuum(t , s__VacuumBurst__data_dx[VacuumBurst__link] , s__VacuumBurst__data_dy[VacuumBurst__link])
				else
			call SetUnitX(t, x)
						call SetUnitY(t, y)
							if GetRandomInt(0, 100) <= 25 then
							call DestroyEffect(AddSpecialEffect(VacuumBurst__TARGETFX, x, y))
							endif
				endif
                        
                            	endif

					if IsUnitInGroup(t, s__VacuumBurst__data_g[VacuumBurst__link]) and s__VacuumBurst__data_b[VacuumBurst__link] then
						call SetUnitX(t, x)
						call SetUnitY(t, y)
							if GetRandomInt(0, 100) <= 25 then
							call DestroyEffect(AddSpecialEffect(VacuumBurst__TARGETFX, x, y))
							endif
					endif
		endif
set t=null
return false
endfunction
                            
                        
            
            function onLoop takes nothing returns nothing
    
               local integer this
               local integer i=1
               local real x
  local real y
               local unit t
		loop
                exitwhen i > VacuumBurst__ix
                
                   set this=VacuumBurst__ic[i]
                   set x=s__VacuumBurst__data_dx[this]
                   set y=s__VacuumBurst__data_dy[this]
                    if ( s__VacuumBurst__data_rate[this] < 100.0 ) then
                    
                       set s__VacuumBurst__data_rate[this]=s__VacuumBurst__data_rate[this] + s__VacuumBurst__data_speed[this]
                       set x=x + ( Sin(( ( 180.0 / 100 ) * s__VacuumBurst__data_rate[this] ) * bj_DEGTORAD) * VacuumBurst__DISTANCE ) * Cos(s__VacuumBurst__data_angle[this] * bj_DEGTORAD)
                       set y=y + ( Sin(( ( 180.0 / 100 ) * s__VacuumBurst__data_rate[this] ) * bj_DEGTORAD) * VacuumBurst__DISTANCE ) * Sin(s__VacuumBurst__data_angle[this] * bj_DEGTORAD)
                       call SetUnitX(s__VacuumBurst__data_dummy[this], x)
                       call SetUnitY(s__VacuumBurst__data_dummy[this], y)
                        set VacuumBurst__link=this
                       call GroupEnumUnitsInRange(VacuumBurst__grp, x, y, VacuumBurst__DAMAGE_AOE, Filter(function VacuumBurst__FilterActions))
                       call GroupClear(VacuumBurst__grp)
                        if ( s__VacuumBurst__data_rate[this] >= 50.0 and s__VacuumBurst__data_b[this] ) then
                        
                           set s__VacuumBurst__data_b[this]=false
                           set s__VacuumBurst__data_speed[this]=( 100.0 / VacuumBurst__DISTANCE ) * VacuumBurst__SPEED_BACK
                           call GroupClear(s__VacuumBurst__data_g[this])
                        endif
                    
                    else
                    
                       call GroupClear(s__VacuumBurst__data_g[this])
                       call DestroyEffect(s__VacuumBurst__data_fx[this])
                       call KillUnit(s__VacuumBurst__data_dummy[this])
                       set s__VacuumBurst__data_caster[this]=null
                       set s__VacuumBurst__data_dummy[this]=null
                       set s__VacuumBurst__data_owner[this]=null
                       call s__VacuumBurst__data_destroy(this)
                       set VacuumBurst__ic[i]=VacuumBurst__ic[VacuumBurst__ix]
                       set VacuumBurst__ix=VacuumBurst__ix - 1
                       set i=i - 1
                        if ( VacuumBurst__ix == 0 ) then
			call PauseTimer(VacuumBurst__tmr)
                    endif
			endif
                    set i=i + 1
                endloop
endfunction
            
            function VacuumBurst__onCast takes nothing returns boolean

               local unit u
               local player p
               local real x1
  local real y1
local real x2
local real y2
local real a
local real d
               local integer i
local integer lvl
               local integer this

                  set u=GetTriggerUnit()
                  set p=GetOwningPlayer(u)
                  set lvl=GetUnitAbilityLevel(u, VacuumBurst__SPELL_ID)
                  set i=VacuumBurst__LINES + ( VacuumBurst__LINES_LVL * lvl )
                  set d=( 60. * lvl * lvl ) + ( GetHeroInt(u, true) * lvl * 3. )
                  set x1=GetUnitX(u)
                  set y1=GetUnitY(u)
                  set a=360.0 / i

		loop
		exitwhen i <= 0
                      set x2=x1 + VacuumBurst__SUMMON_DIST * Cos(( a * i ) * bj_DEGTORAD)
                      set y2=y1 + VacuumBurst__SUMMON_DIST * Sin(( a * i ) * bj_DEGTORAD)
                      set this=s__VacuumBurst__data__allocate()
                      set VacuumBurst__ix=VacuumBurst__ix + 1
			set VacuumBurst__ic[VacuumBurst__ix]=this
                        set s__VacuumBurst__data_b[this]=true
                        set s__VacuumBurst__data_dx[this]=x2
                        set s__VacuumBurst__data_dy[this]=y2
                        set s__VacuumBurst__data_dmg[this]=d
                        set s__VacuumBurst__data_rate[this]=0.0
                        set s__VacuumBurst__data_speed[this]=( 100.0 / VacuumBurst__DISTANCE ) * VacuumBurst__SPEED_FORTH
                        set s__VacuumBurst__data_angle[this]=a * i
                        set s__VacuumBurst__data_caster[this]=u
                        set s__VacuumBurst__data_owner[this]=p
                        set s__VacuumBurst__data_dummy[this]=CreateUnit(VacuumBurst__DUM_OWNER, VacuumBurst__DUM_ID, x2, y2, a * i)
                        set s__VacuumBurst__data_fx[this]=AddSpecialEffectTarget(VacuumBurst__MODEL, s__VacuumBurst__data_dummy[this], VacuumBurst__ATTACH)
			if ( s__VacuumBurst__data_g[this] == null ) then
			set s__VacuumBurst__data_g[this]=CreateGroup()
                        endif
			if ( VacuumBurst__ix == 1 ) then
			call TimerStart(VacuumBurst__tmr, VacuumBurst__periodic, true, function onLoop)
			endif
                        set i=i - 1
			endloop
                    
                    set u=null
                	set p=null
                return false
      endfunction
            function VacuumBurst__OnInit takes nothing returns nothing
   call RegisterSpellEffectEvent(VacuumBurst__SPELL_ID , function VacuumBurst__onCast)
	endfunction
// scope VacuumBurst ends
//===========================================================================
// Trigger: Deaths Favor
//===========================================================================
// scope DeathsFavor begins



function DeathsFavor__OnSpell takes nothing returns boolean

local unit k= GetKillingUnit()
local unit h= LC[1 + ( GetPlayerId(GetOwningPlayer(k)) )]
local integer i
        if GetUnitAbilityLevel(h, 'A0AM') != 0 and GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(h) and k != null and GetUnitTypeId(GetTriggerUnit()) != 'n013' then
	if DeathStacks[GetUnitUserData(h)] < 4444 then


	if not TRUEENFOS then
            set DeathStacks[GetUnitUserData(h)]=DeathStacks[GetUnitUserData(h)] + 4
		if DeathStacks[GetUnitUserData(h)] >= 4444 then
		call UnitAddAbility(h, 'A0MD')
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Ghost Strike.mdx", h, "origin"))
		endif

	else
	if TRUEENFOS and GetRandomInt(0, 99) <= 74 then
            set DeathStacks[GetUnitUserData(h)]=DeathStacks[GetUnitUserData(h)] + 4
		if DeathStacks[GetUnitUserData(h)] >= 4444 then
		call UnitAddAbility(h, 'A0MD')
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Ghost Strike.mdx", h, "origin"))
		endif
	endif
	endif

		else
		set i=GetRandomInt(0, 2)
		if i == 0 then
		call SetHeroInt(h, GetHeroInt(h, false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl", h, "origin"))
		endif
				if i == 1 then
		call SetHeroStr(h, GetHeroStr(h, false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", h, "origin"))
		endif
		if i == 2 then
		call SetHeroAgi(h, GetHeroAgi(h, false) + 1, true)
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIam\\AIamTarget.mdl", h, "origin"))
		endif

		endif

        endif

set k=null
set h=null
        return false
endfunction
//===========================================================================
function DeathsFavor__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function DeathsFavor__OnSpell))
endfunction
// scope DeathsFavor ends
//===========================================================================
// Trigger: Death Bolt
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope DeathBolt begins

    
        
            function s__DeathBolt__LB_destroy takes integer this returns nothing
            set s__DeathBolt__LB_u[this]=null
            call DestroyEffect(s__DeathBolt__LB_hl[this])
            call DestroyEffect(s__DeathBolt__LB_hr[this])
            set s__DeathBolt__LB_hl[this]=null
            set s__DeathBolt__LB_hr[this]=null
            set s__DeathBolt__LB_t[this]=null
            call s__DeathBolt__LB_deallocate(this)
        endfunction
    

    
    function DeathBolt__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local real dmg
 local integer lvl
     local real dx= GetUnitX(s__DeathBolt__LB_t[data]) - GetUnitX(s__DeathBolt__LB_u[data])
     local real dy= GetUnitY(s__DeathBolt__LB_t[data]) - GetUnitY(s__DeathBolt__LB_u[data])
        //call BJDebugMsg("Hander begins handling")
        
        //if GetUnitCurrentOrder(data.u) != 852600 then
        if GetUnitCurrentOrder(s__DeathBolt__LB_u[data]) != 852230 or SquareRoot(dx * dx + dy * dy) >= 700. then
        //call BJDebugMsg("Is order Id correct?")
        
        if s__DeathBolt__LB_time[data] >= 1.92 then
        //Actions
        //static method U2U takes lightning l, unit s, unit t, real time, real z1, real z2, real startAlpha, real endAlpha returns nothing
        call s__TimedL_U2U(AddLightningEx("RENL", true, GetUnitX(s__DeathBolt__LB_u[data]), GetUnitY(s__DeathBolt__LB_u[data]), 40., GetUnitX(s__DeathBolt__LB_t[data]), GetUnitY(s__DeathBolt__LB_t[data]), 30.) , s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        
	set lvl=GetUnitAbilityLevel(s__DeathBolt__LB_u[data], DeathBolt__ABIL_ID)
	set dmg=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( GetHeroAgi(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( GetHeroStr(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( BlzGetUnitBaseDamage(s__DeathBolt__LB_u[data], 0) * .2 * lvl )
        if s__DeathBolt__LB_mob[data] then
call UnitDamageTargetEx(s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , ( 500. ) + ( BlzGetUnitMaxHP(s__DeathBolt__LB_t[data]) * .15 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
        call UnitDamageTargetEx(s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , dmg , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
        endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl", s__DeathBolt__LB_t[data], "chest"))
        call IssueImmediateOrder(s__DeathBolt__LB_u[data], "stop")

        
        endif
        
        call ReleaseTimer(t)
        call s__DeathBolt__LB_destroy(data)
        call s__ProgressBar_destroy(s__DeathBolt__LB_cast[data])
        
        else
        
        set s__DeathBolt__LB_time[data]=s__DeathBolt__LB_time[data] + .02
        call s__ProgressBar_setPercentage(s__DeathBolt__LB_cast[data],R2I(s__DeathBolt__LB_time[data] * 50.) , 1)
        
        if s__DeathBolt__LB_time[data] == 1.06 then
        call SetUnitAnimation(s__DeathBolt__LB_u[data], "attack")
        endif
        
        if s__DeathBolt__LB_time[data] >= 2. then
        //Actions

	set lvl=GetUnitAbilityLevel(s__DeathBolt__LB_u[data], DeathBolt__ABIL_ID)
	set dmg=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( GetHeroAgi(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( GetHeroStr(LC[( 1 + GetPlayerId(GetOwningPlayer(s__DeathBolt__LB_u[data])) )], true) * 2. * lvl ) + ( BlzGetUnitBaseDamage(s__DeathBolt__LB_u[data], 0) * .2 * lvl )
        
        call s__TimedL_U2U(AddLightningEx("RENL", true, GetUnitX(s__DeathBolt__LB_u[data]), GetUnitY(s__DeathBolt__LB_u[data]), 40., GetUnitX(s__DeathBolt__LB_t[data]), GetUnitY(s__DeathBolt__LB_t[data]), 30.) , s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        
if s__DeathBolt__LB_mob[data] then
call UnitDamageTargetEx(s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , ( 500. ) + ( BlzGetUnitMaxHP(s__DeathBolt__LB_t[data]) * .15 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
else
call UnitDamageTargetEx(s__DeathBolt__LB_u[data] , s__DeathBolt__LB_t[data] , dmg , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
endif
        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DemonBoltImpact\\DemonBoltImpact.mdl", s__DeathBolt__LB_t[data], "chest"))
        call IssueImmediateOrder(s__DeathBolt__LB_u[data], "stop")
        
        
        call ReleaseTimer(t)
        call s__DeathBolt__LB_destroy(data)
        call s__ProgressBar_destroy(s__DeathBolt__LB_cast[data])
        else
        
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, .02, false, function DeathBolt__Handler)
        
        endif
        
        endif
        
        
        set t=null
    endfunction
    

    
    function DeathBolt__OnSpell takes nothing returns boolean
        local timer t
        local integer data
        
        //call BJDebugMsg("Is event firing?")
        
        
        if GetSpellAbilityId() == DeathBolt__ABIL_ID then
            //call BJDebugMsg("Spell begins casting")
            


            set t=(NewTimerEx(0)) // INLINED!!
            set data=s__DeathBolt__LB__allocate()
            set s__DeathBolt__LB_u[data]=GetTriggerUnit()

if GetUnitTypeId(s__DeathBolt__LB_u[data]) == 'n03B' then

set s__DeathBolt__LB_mob[data]=true
else
set s__DeathBolt__LB_mob[data]=false

endif
            set s__DeathBolt__LB_t[data]=GetSpellTargetUnit()
            set s__DeathBolt__LB_hl[data]=AddSpecialEffectTarget("war3mapImported\\ChaosHands.mdx", s__DeathBolt__LB_u[data], "hand, left")
            set s__DeathBolt__LB_hr[data]=AddSpecialEffectTarget("war3mapImported\\ChaosHands.mdx", s__DeathBolt__LB_u[data], "hand, right")
            set s__DeathBolt__LB_time[data]=0
            
            
            set s__DeathBolt__LB_cast[data]=s__ProgressBar_create()
            set s__ProgressBar_xOffset[s__DeathBolt__LB_cast[data]]=- 15
if s__DeathBolt__LB_mob[data] then
            call SetUnitFlyHeight(s__ProgressBar_bar[(s__DeathBolt__LB_cast[data])], ((400)*1.0), 0) // INLINED!!
else
            call SetUnitFlyHeight(s__ProgressBar_bar[(s__DeathBolt__LB_cast[data])], ((175)*1.0), 0) // INLINED!!
endif
		if s__DeathBolt__LB_mob[data] then
call s__ProgressBar__set_size(s__DeathBolt__LB_cast[data],1.75)
else
            call s__ProgressBar__set_size(s__DeathBolt__LB_cast[data],.8)

endif
            call SetUnitColor(s__ProgressBar_bar[(s__DeathBolt__LB_cast[data])], (GetPlayerColor(GetOwningPlayer(s__DeathBolt__LB_u[data])))) // INLINED!!
            call s__ProgressBar__set_targetUnit(s__DeathBolt__LB_cast[data],s__DeathBolt__LB_u[data])
            
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .02, false, function DeathBolt__Handler)
        endif
        
        set t=null
        return false
    endfunction
    
    function DeathBolt__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SPELL_CAST)
        call TriggerAddCondition(trig, Condition(function DeathBolt__OnSpell))
        set trig=null
    endfunction
    
// scope DeathBolt ends
//===========================================================================
// Trigger: Combat MasteryEvasionSkeles
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope CombatMasteryEvasionSkeles begins


    function CombatMasteryEvasionSkeles__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0A5') >= 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= GetUnitAbilityLevel(u, 'A0A5') * 5 and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                	endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function CombatMasteryEvasionSkeles__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function CombatMasteryEvasionSkeles__Actions))
    endfunction
    
// scope CombatMasteryEvasionSkeles ends
//===========================================================================
// Trigger: Evasion Mastery Skeles
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope EvasionMasterySkeleton begins


    function EvasionMasterySkeleton__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
        local texttag tt
        local string Q7E
        
        if GetUnitAbilityLevel(u, 'A0A1') >= 1 and GetEventDamage() > 0 and a != u and GetRandomInt(0, 100) <= EvasionMasterySkeleton__values[GetUnitAbilityLevel(u, 'A0A1')] and GetUnitTypeId(a) != 'h007' and GetUnitTypeId(a) != 'h00L' and GetUnitAbilityLevel(a, 'A04K') != 1 and GetUnitAbilityLevel(a, 'A0L1') != 1 and GetUnitAbilityLevel(a, 'BEar') != 1 then
            if ( BI[NI] == LN ) and J5V[( ROX(( GetUnitTypeId(a) )) )] then
                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
		else
			if not J5V[( ROX(( GetUnitTypeId(a) )) )] and (CI[NI]) then // INLINED!!

                    set DI[NI]=DI[NI] + GetEventDamage()
                    set tt=CreateTextTag()
                    set Q7E="miss"
                    call SetTextTagText(tt, Q7E, .024)
                    call SetTextTagPos(tt, GetUnitX(a), GetUnitY(a), .0)
                    call SetTextTagColor(tt, 255, 0, 0, 255)
                    call SetTextTagVelocity(tt, .0, .04)
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 2.)
                    call SetTextTagLifespan(tt, 5.)
                    call SetTextTagPermanent(tt, false)
                endif
            endif
        endif

        
        set u=null
        set a=null
        set Q7E=null
        set tt=null
        return false
    endfunction
    
    function EvasionMasterySkeleton__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function EvasionMasterySkeleton__Actions))

	set EvasionMasterySkeleton__values[1]=13
	set EvasionMasterySkeleton__values[2]=16
	set EvasionMasterySkeleton__values[3]=19
	set EvasionMasterySkeleton__values[4]=22
	set EvasionMasterySkeleton__values[5]=25
	set EvasionMasterySkeleton__values[6]=28
	set EvasionMasterySkeleton__values[7]=31
	set EvasionMasterySkeleton__values[8]=34
	set EvasionMasterySkeleton__values[9]=37
	set EvasionMasterySkeleton__values[10]=40
    endfunction
    
// scope EvasionMasterySkeleton ends
//===========================================================================
// Trigger: Display Death Stacks
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope DeathStacks begins
 
 function DeathStacks__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'U00O' or GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E01L' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|c00000000D|r|c00070007e|r|c000F000Fa|r|c00160016t|r|c001E001Eh|r|c00250025'|r|c002D002Ds|r|c00340034 |r|c002B002BF|r|c00230023a|r|c001A001Av|r|c00110011o|r|c00090009r|r|c00000000:|r " + "|c00730074" + I2S(DeathStacks[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function DeathStacks__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-favour", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function DeathStacks__Conditions))
    endfunction
// scope DeathStacks ends
//===========================================================================
// Trigger: Nexus Damage Bonus
//===========================================================================
// scope NexusDamageBonus begins
 
 

 
    function NexusDamageBonus__Actions takes nothing returns nothing
 local unit u= GetTriggerUnit()

call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) + ( 10 + ( GetHeroLevel(u) * ( 5 / 2 ) ) + ( GetHeroInt(u, true) * ( 3 / 2 ) ) ), 0)

set u=null
    endfunction
    


        function NexusDamageBonus__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(NexusDamageBonus__SPELL_ID , function NexusDamageBonus__Actions)
    endfunction
// scope NexusDamageBonus ends

//===========================================================================
// Trigger: Bard Self Grace
//===========================================================================
// scope BardSelfGrace begins
 
 

 
    function BardSelfGrace__Actions takes nothing returns nothing
 local unit u= GetTriggerUnit()
local unit d= CreateUnit(GetOwningPlayer(u), 'h007', GetUnitX(u), GetUnitY(u), 0.)

call UnitAddAbility(d, 'A03F')
call SetUnitAbilityLevel(d, 'A03F', GetUnitAbilityLevel(u, 'A03F'))

call IssueTargetOrderById(d, 852149, u)

call UnitApplyTimedLife(d, 'BTLF', 1.)


set d=null
set u=null
    endfunction
    


        function BardSelfGrace__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(BardSelfGrace__SPELL_ID , function BardSelfGrace__Actions)
    endfunction
// scope BardSelfGrace ends

//===========================================================================
// Trigger: Unnerviing Symphony
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope UnnervingSymphony begins





function s__UnnervingSymphony__US_destroy takes integer this returns nothing

set UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[this])]=UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[this])] - 1

if UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[this])] == 0 then
call SetUnitVertexColor(s__UnnervingSymphony__US_c[this], s__UnnervingSymphony__US_r[this], s__UnnervingSymphony__US_g[this], s__UnnervingSymphony__US_b[this], s__UnnervingSymphony__US_a[this])
call UnitRemoveAbility(s__UnnervingSymphony__US_c[this], 'A0GG')
endif

set s__UnnervingSymphony__US_c[this]=null
call s__UnnervingSymphony__US_deallocate(this)
endfunction


function UnnervingSymphony__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call ReleaseTimer(t)
call s__UnnervingSymphony__US_destroy(data)

set t=null
endfunction

function UnnervingSymphony__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local integer data
local timer t

if IsUnitEnemy(u, GetOwningPlayer(UnnervingSymphony__CASTER)) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) and UnitAlive(u) then



set data=s__UnnervingSymphony__US__allocate()

set s__UnnervingSymphony__US_c[data]=u

set s__UnnervingSymphony__US_r[data]=BlzGetUnitIntegerField(s__UnnervingSymphony__US_c[data], UNIT_IF_TINTING_COLOR_RED)
set s__UnnervingSymphony__US_g[data]=BlzGetUnitIntegerField(s__UnnervingSymphony__US_c[data], UNIT_IF_TINTING_COLOR_GREEN)
set s__UnnervingSymphony__US_b[data]=BlzGetUnitIntegerField(s__UnnervingSymphony__US_c[data], UNIT_IF_TINTING_COLOR_BLUE)
set s__UnnervingSymphony__US_a[data]=BlzGetUnitIntegerField(s__UnnervingSymphony__US_c[data], UNIT_IF_TINTING_COLOR_ALPHA)

set UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[data])]=UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[data])] + 1

if UnnervingSymphony__EffectCount[GetUnitUserData(s__UnnervingSymphony__US_c[data])] == 1 then

call SetUnitVertexColor(s__UnnervingSymphony__US_c[data], 65, 130, 65, 160)

call UnitAddAbility(s__UnnervingSymphony__US_c[data], 'A0GG')

endif

call s__NewBonusUtils__NewBonusUtils_linkTimed((s__UnnervingSymphony__US_c[data] ) , ( BONUS_MAGIC_RESISTANCE ) , (( - .66 )*1.0) , (( UnnervingSymphony__DURATION)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__UnnervingSymphony__US_c[data] ) , ( BONUS_ATTACK_SPEED ) , (( - 100. )*1.0) , (( UnnervingSymphony__DURATION)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__UnnervingSymphony__US_c[data] ) , ( BONUS_DAMAGE ) , (( - 999999999. )*1.0) , (( UnnervingSymphony__DURATION)*1.0) , true) // INLINED!!

call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", s__UnnervingSymphony__US_c[data], "origin"))

set t=(NewTimerEx(0)) // INLINED!!

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, UnnervingSymphony__DURATION, false, function UnnervingSymphony__Handler)


endif

set t=null
set u=null
return false
endfunction

function UnnervingSymphony__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local integer lvl= GetUnitAbilityLevel(u, UnnervingSymphony__SPELL_ID)

set UnnervingSymphony__CASTER=u
set UnnervingSymphony__DURATION=lvl + 20.
call GroupEnumUnitsInRange(UnnervingSymphony__GROUP, GetSpellTargetX(), GetSpellTargetY(), 145. + ( 55. * lvl ), Filter(function UnnervingSymphony__FilterActions))

set u=null
endfunction


//===========================================================================
function UnnervingSymphony__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(UnnervingSymphony__SPELL_ID , function UnnervingSymphony__Actions)
endfunction
// scope UnnervingSymphony ends
//===========================================================================
// Trigger: Flame Turbine
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope FlameTurbine begins


function s__FlameTurbine__FT_destroy takes integer this returns nothing

set s__FlameTurbine__FT_c[this]=null
call s__FlameTurbine__FT_deallocate(this)
endfunction


function s__FlameTurbine__FT2_destroy takes integer this returns nothing
call DestroyEffect(s__FlameTurbine__FT2_fx[this])
set s__FlameTurbine__FT2_fx[this]=null
call s__FlameTurbine__FT2_deallocate(this)
endfunction

function s__FlameTurbine__FT3_destroy takes integer this returns nothing

set s__FlameTurbine__FT3_u[this]=null
call s__FlameTurbine__FT3_deallocate(this)
endfunction

function FlameTurbine__Handler2 takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

    call ReleaseTimer(t)
    call s__FlameTurbine__FT2_destroy(data)

set t=null
endfunction

function FlameTurbine__Handler3 takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

set HasRecentlyBeenHit[GetUnitUserData(s__FlameTurbine__FT3_u[data])]=false

    call ReleaseTimer(t)
    call s__FlameTurbine__FT3_destroy(data)

set t=null
endfunction

 function FlameTurbine__FilterActions takes nothing returns boolean
local unit t= GetFilterUnit()
local real d= GetUnitAbilityLevel(FlameTurbine__CASTER, FlameTurbine__SPELL_ID) * GetHeroInt(FlameTurbine__CASTER, true) * 3.75
local timer t2
local integer data
    if ( UnitAlive(t) and IsUnitEnemy(t, GetOwningPlayer(FlameTurbine__CASTER)) and t != FlameTurbine__CASTER ) and not IsUnitType(t, UNIT_TYPE_MAGIC_IMMUNE) and HasRecentlyBeenHit[GetUnitUserData(t)] == false then
    call UnitDamageTargetEx(FlameTurbine__CASTER , t , d , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Airstrike Rocket.mdx", t, "chest"))
set HasRecentlyBeenHit[GetUnitUserData(t)]=true

set t2=(NewTimerEx(0)) // INLINED!!
set data=s__FlameTurbine__FT3__allocate()
set s__FlameTurbine__FT3_u[data]=t
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data)) // INLINED!!
call TimerStart(t2, .021, false, function FlameTurbine__Handler3)

endif
set t2=null
    set t=null
    return false
    endfunction



function FlameTurbine__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local timer t2
local integer data2

if s__FlameTurbine__FT_i[data] == 0 then
call s__FlameTurbine__FT_destroy(data)
call ReleaseTimer(t)

else

set s__FlameTurbine__FT_i[data]=s__FlameTurbine__FT_i[data] - 1

set data2=s__FlameTurbine__FT2__allocate()

    set s__FlameTurbine__FT_x[data]=GetUnitX(s__FlameTurbine__FT_c[data]) + s__FlameTurbine__FT_d[data] * Cos(s__FlameTurbine__FT_a[data] * bj_DEGTORAD)
   set s__FlameTurbine__FT_y[data]=GetUnitY(s__FlameTurbine__FT_c[data]) + s__FlameTurbine__FT_d[data] * Sin(s__FlameTurbine__FT_a[data] * bj_DEGTORAD)

set s__FlameTurbine__FT2_fx[data2]=AddSpecialEffect("war3mapImported\\Fireball Medium.mdx", s__FlameTurbine__FT_x[data], s__FlameTurbine__FT_y[data])
call MoveLocation(FlameTurbine__LOC, GetUnitX(s__FlameTurbine__FT_c[data]), GetUnitY(s__FlameTurbine__FT_c[data]))
call BlzSetSpecialEffectHeight(s__FlameTurbine__FT2_fx[data2], GetLocationZ(FlameTurbine__LOC) + 90.)
set FlameTurbine__CASTER=s__FlameTurbine__FT_c[data]
call GroupEnumUnitsInRange(FlameTurbine__GROUP, s__FlameTurbine__FT_x[data], s__FlameTurbine__FT_y[data], 120., Filter(function FlameTurbine__FilterActions))
set t2=(NewTimerEx(0)) // INLINED!!

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
call TimerStart(t2, .3, false, function FlameTurbine__Handler2)

set s__FlameTurbine__FT_a[data]=s__FlameTurbine__FT_a[data] + 24.
set s__FlameTurbine__FT_d[data]=s__FlameTurbine__FT_d[data] + 12.

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .015, false, function FlameTurbine__Handler)

endif

set t2=null
set t=null
endfunction


function FlameTurbine__Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__FlameTurbine__FT__allocate()


set s__FlameTurbine__FT_c[data]=GetTriggerUnit()
set s__FlameTurbine__FT_i[data]=60
set s__FlameTurbine__FT_a[data]=270.
set s__FlameTurbine__FT_x[data]=GetUnitX(s__FlameTurbine__FT_c[data])
set s__FlameTurbine__FT_y[data]=GetUnitY(s__FlameTurbine__FT_c[data])
set s__FlameTurbine__FT_d[data]=60.


call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function FlameTurbine__Handler)

set t=null
endfunction

//===========================================================================
function FlameTurbine__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(FlameTurbine__SPELL_ID , function FlameTurbine__Actions)
endfunction
// scope FlameTurbine ends
//===========================================================================
// Trigger: Everlasting Flame
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope EverlastingFlame begins





function s__EverlastingFlame__FT_destroy takes integer this returns nothing
call DestroyEffect(s__EverlastingFlame__FT_fx1[this])
set s__EverlastingFlame__FT_fx1[this]=null
call DestroyEffect(s__EverlastingFlame__FT_fx2[this])
set s__EverlastingFlame__FT_fx2[this]=null
call DestroyEffect(s__EverlastingFlame__FT_fx3[this])
set s__EverlastingFlame__FT_fx3[this]=null
call DestroyEffect(s__EverlastingFlame__FT_fx4[this])
set s__EverlastingFlame__FT_fx4[this]=null
call DestroyEffect(s__EverlastingFlame__FT_fx5[this])
set s__EverlastingFlame__FT_fx5[this]=null
call DestroyEffect(s__EverlastingFlame__FT_fx6[this])
set s__EverlastingFlame__FT_fx6[this]=null
set IsChannelingEverlasting[GetUnitUserData(s__EverlastingFlame__FT_u[this])]=false
set s__EverlastingFlame__FT_u[this]=null
if s__EverlastingFlame__FT_u2[this] != null then
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", GetUnitX(s__EverlastingFlame__FT_u2[this]), GetUnitY(s__EverlastingFlame__FT_u2[this])))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike I.mdx", GetUnitX(s__EverlastingFlame__FT_u2[this]), GetUnitY(s__EverlastingFlame__FT_u2[this])))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", GetUnitX(s__EverlastingFlame__FT_u2[this]), GetUnitY(s__EverlastingFlame__FT_u2[this])))
call ShowUnit(s__EverlastingFlame__FT_u2[this], false)
call PauseUnit(s__EverlastingFlame__FT_u2[this], true)
call UnitApplyTimedLife(s__EverlastingFlame__FT_u2[this], 'BTLF', 2.)
endif
set s__EverlastingFlame__FT_attach2[this]=null
set s__EverlastingFlame__FT_u2[this]=null
call s__EverlastingFlame__FT_deallocate(this)
endfunction


 function EverlastingFlame__FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
    if ( UnitAlive(u) and IsUnitEnemy(u, GetOwningPlayer(EverlastingFlame__CASTER)) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) ) then
    call UnitDamageTargetEx(EverlastingFlame__CASTER , u , GetUnitAbilityLevel(EverlastingFlame__CASTER, EverlastingFlame__SPELL_ID) * GetHeroInt(EverlastingFlame__CASTER, true) * 44.44 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_FORCE , WEAPON_TYPE_WHOKNOWS)


endif
    set u=null
    return false
    endfunction

function EverlastingFlame__Handler2 takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real rand
local real sx
local real sy
local real ax
local real ay
local real cx
local real cy
local real a
local boolean new= false

if s__EverlastingFlame__FT_i2[data] <= 0 then

call SetUnitX(s__EverlastingFlame__FT_u[data], s__EverlastingFlame__FT_tx[data])
call SetUnitY(s__EverlastingFlame__FT_u[data], s__EverlastingFlame__FT_ty[data])
call ShowUnit(s__EverlastingFlame__FT_u[data], true)
call SetUnitAnimationByIndex(s__EverlastingFlame__FT_u[data], 6)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", s__EverlastingFlame__FT_tx[data], s__EverlastingFlame__FT_ty[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike I.mdx", s__EverlastingFlame__FT_tx[data], s__EverlastingFlame__FT_ty[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", s__EverlastingFlame__FT_tx[data], s__EverlastingFlame__FT_ty[data]))
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__EverlastingFlame__FT_u[data] ) , ( BONUS_HEALTH ) , (( 1000000. + ( GetUnitAbilityLevel(s__EverlastingFlame__FT_u[data], EverlastingFlame__SPELL_ID) * 1000. * GetHeroInt(s__EverlastingFlame__FT_u[data], true) ) )*1.0) , (( 2.5)*1.0) , true) // INLINED!!

call SelectUnitAddForPlayer(s__EverlastingFlame__FT_u[data], GetOwningPlayer(s__EverlastingFlame__FT_u[data]))

call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x1[data], s__EverlastingFlame__FT_y1[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x2[data], s__EverlastingFlame__FT_y2[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x3[data], s__EverlastingFlame__FT_y3[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x4[data], s__EverlastingFlame__FT_y4[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x5[data], s__EverlastingFlame__FT_y5[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x6[data], s__EverlastingFlame__FT_y6[data]))

set EverlastingFlame__CASTER=s__EverlastingFlame__FT_u[data]
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x1[data], s__EverlastingFlame__FT_y1[data], 270., Filter(function EverlastingFlame__FilterActions))
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x2[data], s__EverlastingFlame__FT_y2[data], 270., Filter(function EverlastingFlame__FilterActions))
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x3[data], s__EverlastingFlame__FT_y3[data], 270., Filter(function EverlastingFlame__FilterActions))
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x4[data], s__EverlastingFlame__FT_y4[data], 270., Filter(function EverlastingFlame__FilterActions))
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x5[data], s__EverlastingFlame__FT_y5[data], 270., Filter(function EverlastingFlame__FilterActions))
call GroupEnumUnitsInRange(EverlastingFlame__GROUP, s__EverlastingFlame__FT_x6[data], s__EverlastingFlame__FT_y6[data], 270., Filter(function EverlastingFlame__FilterActions))

call DestroyEffect(s__EverlastingFlame__FT_attach2[data])

call s__EverlastingFlame__FT_destroy(data)
call ReleaseTimer(t)

else

set s__EverlastingFlame__FT_i2[data]=s__EverlastingFlame__FT_i2[data] - 1

set cx=GetUnitX(s__EverlastingFlame__FT_u2[data])
set cy=GetUnitY(s__EverlastingFlame__FT_u2[data])

loop
exitwhen new == true
set rand=GetRandomInt(1, 6)


if rand == 1 then
set sx=s__EverlastingFlame__FT_x1[data]
set sy=s__EverlastingFlame__FT_y1[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif

if rand == 2 then
set sx=s__EverlastingFlame__FT_x2[data]
set sy=s__EverlastingFlame__FT_y2[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif

if rand == 3 then
set sx=s__EverlastingFlame__FT_x3[data]
set sy=s__EverlastingFlame__FT_y3[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif

if rand == 4 then
set sx=s__EverlastingFlame__FT_x4[data]
set sy=s__EverlastingFlame__FT_y4[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif

if rand == 5 then
set sx=s__EverlastingFlame__FT_x5[data]
set sy=s__EverlastingFlame__FT_y5[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif

if rand == 6 then
set sx=s__EverlastingFlame__FT_x6[data]
set sy=s__EverlastingFlame__FT_y6[data]
if cx == sx and cy == sy then
set new=false
else
set new=true
endif
endif
endloop



call IssueImmediateOrderById(s__EverlastingFlame__FT_u2[data], 851972)
call SetUnitAnimationByIndex(s__EverlastingFlame__FT_u2[data], 6)
call SetUnitX(s__EverlastingFlame__FT_u2[data], sx)
call SetUnitY(s__EverlastingFlame__FT_u2[data], sy)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", sx, sy))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike I.mdx", sx, sy))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", sx, sy))

set a=GetRandomReal(0., 360.)

set ax=s__EverlastingFlame__FT_tx[data] + ( GetRandomReal(- 380., 380.) * Cos(a * bj_DEGTORAD) )
set ay=s__EverlastingFlame__FT_ty[data] + ( GetRandomReal(- 380., 380.) * Sin(a * bj_DEGTORAD) )

call IssuePointOrderById(s__EverlastingFlame__FT_u2[data], 851984, ax, ay)
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .5, false, function EverlastingFlame__Handler2)

endif

set t=null
endfunction

function EverlastingFlame__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local integer rand
local real x
local real y
local real sx
local real sy
local real ax
local real ay
local real a


if s__EverlastingFlame__FT_i[data] <= 0 or GetUnitCurrentOrder(s__EverlastingFlame__FT_u[data]) != 852591 then

call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x1[data], s__EverlastingFlame__FT_y1[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x2[data], s__EverlastingFlame__FT_y2[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x3[data], s__EverlastingFlame__FT_y3[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x4[data], s__EverlastingFlame__FT_y4[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x5[data], s__EverlastingFlame__FT_y5[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\ExplosionBIG.mdx", s__EverlastingFlame__FT_x6[data], s__EverlastingFlame__FT_y6[data]))
call DestroyEffect(s__EverlastingFlame__FT_attach[data])
set s__EverlastingFlame__FT_attach[data]=null

call s__EverlastingFlame__FT_destroy(data)
call ReleaseTimer(t)

else

if s__EverlastingFlame__FT_i[data] == 1 then

set x=GetUnitX(s__EverlastingFlame__FT_u[data])
set y=GetUnitY(s__EverlastingFlame__FT_u[data])
call ShowUnit(s__EverlastingFlame__FT_u[data], false)


call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike I.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", x, y))

set rand=GetRandomInt(1, 6)

call DestroyEffect(s__EverlastingFlame__FT_attach[data])
set s__EverlastingFlame__FT_attach[data]=null

if rand == 1 then
set sx=s__EverlastingFlame__FT_x1[data]
set sy=s__EverlastingFlame__FT_y1[data]
endif

if rand == 2 then
set sx=s__EverlastingFlame__FT_x2[data]
set sy=s__EverlastingFlame__FT_y2[data]
endif

if rand == 3 then
set sx=s__EverlastingFlame__FT_x3[data]
set sy=s__EverlastingFlame__FT_y3[data]
endif

if rand == 4 then
set sx=s__EverlastingFlame__FT_x4[data]
set sy=s__EverlastingFlame__FT_y4[data]
endif

if rand == 5 then
set sx=s__EverlastingFlame__FT_x5[data]
set sy=s__EverlastingFlame__FT_y5[data]
endif

if rand == 6 then
set sx=s__EverlastingFlame__FT_x6[data]
set sy=s__EverlastingFlame__FT_y6[data]
endif

set s__EverlastingFlame__FT_i2[data]=19

call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx1[data], ANIM_TYPE_SPELL)
call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx2[data], ANIM_TYPE_SPELL)
call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx3[data], ANIM_TYPE_SPELL)
call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx4[data], ANIM_TYPE_SPELL)
call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx5[data], ANIM_TYPE_SPELL)
call BlzPlaySpecialEffect(s__EverlastingFlame__FT_fx6[data], ANIM_TYPE_SPELL)

call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x1[data], s__EverlastingFlame__FT_y1[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x2[data], s__EverlastingFlame__FT_y2[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x3[data], s__EverlastingFlame__FT_y3[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x4[data], s__EverlastingFlame__FT_y4[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x5[data], s__EverlastingFlame__FT_y5[data]))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", s__EverlastingFlame__FT_x6[data], s__EverlastingFlame__FT_y6[data]))

set s__EverlastingFlame__FT_u2[data]=CreateUnit(GetOwningPlayer(s__EverlastingFlame__FT_u[data]), EverlastingFlame__UNIT_ID, sx, sy, bj_RADTODEG * Atan2(s__EverlastingFlame__FT_ty[data] - sy, s__EverlastingFlame__FT_tx[data] - sx))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", sx, sy))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike I.mdx", sx, sy))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", sx, sy))

set s__EverlastingFlame__FT_attach2[data]=AddSpecialEffectTarget("war3mapImported\\Custom SFX3.mdx", s__EverlastingFlame__FT_u2[data], "origin")

call s__NewBonusUtils__NewBonusUtils_linkTimed((s__EverlastingFlame__FT_u2[data] ) , ( BONUS_ATTACK_SPEED ) , (( 400. )*1.0) , (( 11.)*1.0) , true) // INLINED!!

set a=GetRandomReal(0., 360.)

set ax=s__EverlastingFlame__FT_tx[data] + ( GetRandomReal(- 380., 380.) * Cos(a) * bj_DEGTORAD )
set ay=s__EverlastingFlame__FT_ty[data] + ( GetRandomReal(- 380., 380.) * Sin(a) * bj_DEGTORAD )

call IssuePointOrderById(s__EverlastingFlame__FT_u2[data], 851984, ax, ay)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .5, false, function EverlastingFlame__Handler2)

else

set s__EverlastingFlame__FT_i[data]=s__EverlastingFlame__FT_i[data] - 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .02, false, function EverlastingFlame__Handler)
endif


endif

set t=null
endfunction


function EverlastingFlame__Actions takes nothing returns nothing
local timer t
local integer data
local real a= 0.

if IsChannelingEverlasting[GetUnitUserData(GetTriggerUnit())] == false then

set data=s__EverlastingFlame__FT__allocate()
set t=(NewTimerEx(0)) // INLINED!!

set s__EverlastingFlame__FT_u[data]=GetTriggerUnit()
set s__EverlastingFlame__FT_attach[data]=AddSpecialEffectTarget("war3mapImported\\Custom SFX3.mdx", s__EverlastingFlame__FT_u[data], "origin")
set s__EverlastingFlame__FT_i[data]=250

set s__EverlastingFlame__FT_tx[data]=GetSpellTargetX()
set s__EverlastingFlame__FT_ty[data]=GetSpellTargetY()

set s__EverlastingFlame__FT_x1[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y1[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)
set a=a + 60.
set s__EverlastingFlame__FT_x2[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y2[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)
set a=a + 60.
set s__EverlastingFlame__FT_x3[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y3[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)
set a=a + 60.
set s__EverlastingFlame__FT_x4[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y4[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)
set a=a + 60.
set s__EverlastingFlame__FT_x5[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y5[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)
set a=a + 60.
set s__EverlastingFlame__FT_x6[data]=s__EverlastingFlame__FT_tx[data] + 400. * Cos(a * bj_DEGTORAD)
set s__EverlastingFlame__FT_y6[data]=s__EverlastingFlame__FT_ty[data] + 400. * Sin(a * bj_DEGTORAD)


set s__EverlastingFlame__FT_fx1[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x1[data], s__EverlastingFlame__FT_y1[data])
set s__EverlastingFlame__FT_fx2[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x2[data], s__EverlastingFlame__FT_y2[data])
set s__EverlastingFlame__FT_fx3[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x3[data], s__EverlastingFlame__FT_y3[data])
set s__EverlastingFlame__FT_fx4[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x4[data], s__EverlastingFlame__FT_y4[data])
set s__EverlastingFlame__FT_fx5[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x5[data], s__EverlastingFlame__FT_y5[data])
set s__EverlastingFlame__FT_fx6[data]=AddSpecialEffect("war3mapImported\\Ember Forge_opt2edit.mdx", s__EverlastingFlame__FT_x6[data], s__EverlastingFlame__FT_y6[data])

call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx1[data], ANIM_TYPE_BIRTH, 4.)
call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx2[data], ANIM_TYPE_BIRTH, 4.)
call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx3[data], ANIM_TYPE_BIRTH, 4.)
call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx4[data], ANIM_TYPE_BIRTH, 4.)
call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx5[data], ANIM_TYPE_BIRTH, 4.)
call BlzPlaySpecialEffectWithTimeScale(s__EverlastingFlame__FT_fx6[data], ANIM_TYPE_BIRTH, 4.)

set IsChannelingEverlasting[GetUnitUserData(s__EverlastingFlame__FT_u[data])]=true
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .02, false, function EverlastingFlame__Handler)

endif

set t=null
endfunction

//===========================================================================
function EverlastingFlame__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EverlastingFlame__SPELL_ID , function EverlastingFlame__Actions)
endfunction
// scope EverlastingFlame ends
//===========================================================================
// Trigger: Mark of Baal
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope MarkofBaal begins





function MarkofBaal__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local integer i= GetUnitUserData(u)
local player p= GetOwningPlayer(u)
local effect fx

if runecount[i] <= 0 then

set firerune[i + runecount[i]]=CreateUnit(p, 'n01P', GetSpellTargetX(), GetSpellTargetY(), 0.)
call MoveLocation(MarkofBaal__LOC, GetSpellTargetX(), GetSpellTargetY())

set fx=AddSpecialEffect("war3mapImported\\Firaga.mdx", GetSpellTargetX(), GetSpellTargetY())
call BlzSetSpecialEffectHeight(fx, GetLocationZ(MarkofBaal__LOC) + 80.)
call BlzSetSpecialEffectScale(fx, 2.8)
call DestroyEffect(fx)
set runecount[i]=runecount[i] + 1

else

if runecount[i] > 9 then


//call IssueImmediateOrderById(u,851972)
call Q_E(p , "Maximum runes spawned.")

endif

set firerune[i + runecount[i]]=CreateUnit(p, 'n01P', GetSpellTargetX(), GetSpellTargetY(), 0.)
set runecount[i]=runecount[i] + 1

endif

set fx=null
set p=null
set u=null
endfunction

//===========================================================================
function MarkofBaal__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(MarkofBaal__SPELL_ID , function MarkofBaal__Actions)
endfunction
// scope MarkofBaal ends
//===========================================================================
// Trigger: Mark of Baal Manual
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope FlameRuneManual begins


 function FlameRuneManual__FilterActions takes nothing returns boolean


    if ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(FlameRuneManual__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) then
    call UnitDamageTargetEx(FlameRuneManual__CASTER , GetFilterUnit() , GetUnitAbilityLevel(FlameRuneManual__CASTER, FlameRuneManual__SPELL_ID2) * GetHeroInt(FlameRuneManual__CASTER, true) * 5. , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
	
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebolt Minor.mdx", GetFilterUnit(), "chest"))

endif
    
    return false
    endfunction



function FlameRuneManual__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local real x= GetUnitX(u)
local real y= GetUnitY(u)
local unit c= LC[1 + GetPlayerId(GetOwningPlayer(u))]
local effect fx
local effect fx2
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firaga.mdx", c, "origin"))

call SetUnitX(c, x)
call SetUnitY(c, y)

call SetUnitAnimationByIndex(c, 6)
call SelectUnitAddForPlayer(c, GetOwningPlayer(c))

set fx=AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", x, y)
set fx2=AddSpecialEffect("war3mapImported\\Firaga.mdx", x, y)

call BlzSetSpecialEffectScale(fx, 1.4)
call BlzSetSpecialEffectScale(fx2, 2.3)

call DestroyEffect(fx)
call DestroyEffect(fx2)
set FlameRuneManual__CASTER=c

call GroupEnumUnitsInRange(FlameRuneManual__GROUP, x, y, 375., Filter(function FlameRuneManual__FilterActions))

call s__NewBonusUtils__NewBonusUtils_linkTimed((c ) , ( BONUS_ATTACK_SPEED ) , (( .25 + ( GetUnitAbilityLevel(c, FlameRuneManual__SPELL_ID2) * .1 ) )*1.0) , (( 10.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((c ) , ( BONUS_HEALTH ) , (( 10000. + ( GetUnitAbilityLevel(c, FlameRuneManual__SPELL_ID2) * 50. * GetHeroInt(c, true) ) )*1.0) , (( 2.5)*1.0) , true) // INLINED!!

set runecount[GetUnitUserData(c)]=runecount[GetUnitUserData(c)] - 1

call KillUnit(u)

set firerune[GetUnitUserData(u)]=null

set fx2=null
set fx=null
set c=null
set u=null
endfunction

//===========================================================================
function FlameRuneManual__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(FlameRuneManual__SPELL_ID , function FlameRuneManual__Actions)
endfunction
// scope FlameRuneManual ends
//===========================================================================
// Trigger: Mark of Baal Auto
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope FlameRuneAuto begins
 

 function FlameRuneAuto__FilterActions takes nothing returns boolean
    if ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(FlameRuneAuto__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) then
    call UnitDamageTargetEx(FlameRuneAuto__CASTER , GetFilterUnit() , GetUnitAbilityLevel(FlameRuneAuto__CASTER, FlameRuneAuto__SPELL_ID2) * GetHeroInt(FlameRuneAuto__CASTER, true) * 5. , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebolt Minor.mdx", GetFilterUnit(), "chest"))

endif
    
    return false
    endfunction

function FlameRuneAuto__Conditions takes nothing returns boolean
return ( GetUnitTypeId(GetFilterUnit()) == 'n01P' and GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(FlameRuneAuto__CASTER) )
endfunction

function FlameRuneAuto__Actions takes nothing returns nothing
local unit c= LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
local real x
local real y
local unit u
local effect fx
local effect fx2

set FlameRuneAuto__CASTER=c

set u=( ZEE(null , ( GetUnitX(c) ) , ( GetUnitY(c) ) , ( ( 7000. ) * 1. ) , ( Condition(function FlameRuneAuto__Conditions) )) )

if u == null then
call Q_E(GetOwningPlayer(c) , "No runes found.")

else

set x=GetUnitX(u)
set y=GetUnitY(u)

set fx=AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", x, y)
set fx2=AddSpecialEffect("war3mapImported\\Firaga.mdx", x, y)

call BlzSetSpecialEffectScale(fx, 1.4)
call BlzSetSpecialEffectScale(fx2, 2.3)

call DestroyEffect(fx)
call DestroyEffect(fx2)


call SetUnitX(c, x)
call SetUnitY(c, y)


call SetUnitAnimation(c, "spell")

call GroupEnumUnitsInRange(FlameRuneAuto__GROUP, x, y, 375., Filter(function FlameRuneAuto__FilterActions))

call s__NewBonusUtils__NewBonusUtils_linkTimed((c ) , ( BONUS_ATTACK_SPEED ) , (( .25 + ( GetUnitAbilityLevel(c, FlameRuneAuto__SPELL_ID2) * .1 ) )*1.0) , (( 10.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((c ) , ( BONUS_HEALTH ) , (( 10000. + ( GetUnitAbilityLevel(c, FlameRuneAuto__SPELL_ID2) * 50. * GetHeroInt(c, true) ) )*1.0) , (( 2.5)*1.0) , true) // INLINED!!

set runecount[GetUnitUserData(c)]=runecount[GetUnitUserData(c)] - 1
call KillUnit(u)

set firerune[GetUnitUserData(u)]=null
endif

set fx=null
set fx2=null
set c=null
set u=null
endfunction

//===========================================================================
function FlameRuneAuto__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(FlameRuneAuto__SPELL_ID , function FlameRuneAuto__Actions)
endfunction
// scope FlameRuneAuto ends
//===========================================================================
// Trigger: Mark of Ball Learn
//===========================================================================
// scope MarkofBaalLearn begins





function MarkofBaalLearn__Conditions takes nothing returns boolean

if GetLearnedSkill() == MarkofBaalLearn__SPELL_ID then
if GetUnitAbilityLevel(GetTriggerUnit(), MarkofBaalLearn__SPELL_ID2) != 1 then
call UnitAddAbility(GetTriggerUnit(), MarkofBaalLearn__SPELL_ID2)
endif

endif

return false
endfunction

//===========================================================================
function MarkofBaalLearn__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(t, Condition(function MarkofBaalLearn__Conditions))

endfunction
// scope MarkofBaalLearn ends
//===========================================================================
// Trigger: Molten Wave Init
//===========================================================================
//TESH.scrollpos=14
//TESH.alwaysfold=0
// scope MoltenWaveCast begins



function MoltenWaveCast__Actions takes nothing returns nothing
local unit c= GetTriggerUnit()
local unit u= CreateUnit(GetOwningPlayer(c), 'h01S', GetUnitX(c), GetUnitY(c), GetUnitFacing(c))

call UnitAddAbility(u, MoltenWaveCast__SPELL_ID2)
call SetUnitAbilityLevel(u, MoltenWaveCast__SPELL_ID2, GetUnitAbilityLevel(c, MoltenWaveCast__SPELL_ID))

call IssuePointOrderById(u, 852580, GetSpellTargetX(), GetSpellTargetY())

set c=null
set u=null
endfunction

//===========================================================================
function MoltenWaveCast__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(MoltenWaveCast__SPELL_ID , function MoltenWaveCast__Actions)
endfunction
// scope MoltenWaveCast ends
//===========================================================================
// Trigger: Molten Wave Actions
//===========================================================================
// scope MoltenWaveActions begins




    function MoltenWaveActions__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()
local unit c
local unit t= GetTriggerUnit()
local integer lvl
    if IsUnitEnemy(u, GetOwningPlayer(t)) and ( GetUnitTypeId(u) ) == 'h01S' then
        set c=LC[1 + GetPlayerId(GetOwningPlayer(u))]
set lvl=GetUnitAbilityLevel(c, MoltenWaveActions__SPELL_ID)
call DisableTrigger(MOLTENWAVE)
call UnitDamageTargetEx(c , t , lvl * GetHeroInt(c, true) * 3.75 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(MOLTENWAVE)


call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Lava_Burn.mdl", t, "chest"))
call SetWidgetLife(c, GetWidgetLife(c) + ( BlzGetUnitMaxHP(c) * .0888 ))

call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firaga.mdx", c, "origin"))
call s__NewBonusUtils__NewBonusUtils_linkTimed((c ) , ( BONUS_ATTACK_SPEED ) , (( .05 + ( lvl * .02 ) )*1.0) , (( 5.)*1.0) , true) // INLINED!!

endif

set t=null
set c=null
set u=null
    return false
    endfunction
    
    function MoltenWaveActions__OnInit takes nothing returns nothing
        set MOLTENWAVE=CreateTrigger()
        call TriggerAddCondition(MOLTENWAVE, Condition(function MoltenWaveActions__Conditions))
        call MOE(II , ( MOLTENWAVE ))
    endfunction
// scope MoltenWaveActions ends
//===========================================================================
// Trigger: All Shall Burn
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ALLSHALLBURN begins



         function s__ALLSHALLBURN__FB_destroy takes integer this returns nothing
            set s__ALLSHALLBURN__FB_caster[this]=null
		set s__ALLSHALLBURN__FB_u[this]=null
            call s__ALLSHALLBURN__FB_deallocate(this)
        endfunction

         function s__ALLSHALLBURN__FB2_destroy takes integer this returns nothing
	call DestroyEffect(s__ALLSHALLBURN__FB2_fx[this])
set s__ALLSHALLBURN__FB2_fx[this]=null
	call DestroyEffect(s__ALLSHALLBURN__FB2_fx2[this])
set s__ALLSHALLBURN__FB2_fx2[this]=null
	call DestroyEffect(s__ALLSHALLBURN__FB2_fx3[this])
set s__ALLSHALLBURN__FB2_fx3[this]=null
		set s__ALLSHALLBURN__FB2_u[this]=null
            call s__ALLSHALLBURN__FB2_deallocate(this)
        endfunction

function ALLSHALLBURN__Handler2 takes nothing returns nothing

local timer t= GetExpiredTimer()

local integer data2= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

set HasExploded[GetUnitUserData(s__ALLSHALLBURN__FB2_u[data2])]=false


    call ReleaseTimer(GetExpiredTimer())
    call s__ALLSHALLBURN__FB2_destroy(data2)


set t=null
endfunction
    
function ALLSHALLBURN__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])] == 0 then
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JP')
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JO')
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JT')
    call ReleaseTimer(GetExpiredTimer())
    call s__ALLSHALLBURN__FB_destroy(data)
else

if s__ALLSHALLBURN__FB_i[data] == 0 or not UnitAlive(s__ALLSHALLBURN__FB_u[data]) or s__ALLSHALLBURN__FB_u[data] == null then


set FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])]=FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])] - 1

if FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])] == 0 then
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JP')
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JO')
call UnitRemoveAbility(s__ALLSHALLBURN__FB_u[data], 'A0JT')
endif

    call ReleaseTimer(GetExpiredTimer())
    call s__ALLSHALLBURN__FB_destroy(data)
else
set s__ALLSHALLBURN__FB_i[data]=s__ALLSHALLBURN__FB_i[data] - 1

call DisableTrigger(FIRELORDBURN)
call UnitDamageTargetEx(s__ALLSHALLBURN__FB_caster[data] , s__ALLSHALLBURN__FB_u[data] , s__ALLSHALLBURN__FB_dmg[data] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , null)
call EnableTrigger(FIRELORDBURN)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1.0, false, function ALLSHALLBURN__Handler)

endif
endif

set t=null
endfunction

 function ALLSHALLBURN__FilterActions takes nothing returns boolean
    if ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(ALLSHALLBURN__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) then
    call UnitDamageTargetEx(ALLSHALLBURN__CASTER , GetFilterUnit() , ALLSHALLBURN__DAMAGE , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)


endif
    
    return false
    endfunction

    function ALLSHALLBURN__Actions takes nothing returns nothing
 local timer t
local integer data
local integer data2
local unit u= GetTriggerUnit()
local real x= GetUnitX(u)
local real y= GetUnitY(u)
local real x2
local real y2
local real x3
local real y3
local integer i= 0
if FirelordBurnStacks[GetUnitUserData(u)] == 9 then
    set t=(NewTimerEx(0)) // INLINED!!
	set data2=s__ALLSHALLBURN__FB2__allocate()
	set s__ALLSHALLBURN__FB2_u[data2]=GetTriggerUnit()
	set s__ALLSHALLBURN__FB2_fx[data2]=AddSpecialEffectTarget("war3mapImported\\Burning Rage Orange.mdx", s__ALLSHALLBURN__FB2_u[data2], "overhead")
set s__ALLSHALLBURN__FB2_fx2[data2]=AddSpecialEffectTarget("war3mapImported\\fireball.mdx", s__ALLSHALLBURN__FB2_u[data2], "overhead")
set s__ALLSHALLBURN__FB2_fx3[data2]=AddSpecialEffectTarget("war3mapImported\\fireball.mdx", s__ALLSHALLBURN__FB2_u[data2], "chest")
	set HasExploded[GetUnitUserData(s__ALLSHALLBURN__FB2_u[data2])]=true
	set FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB2_u[data2])]=0
	call UnitRemoveAbility(s__ALLSHALLBURN__FB2_u[data2], 'A0JP')
	call UnitRemoveAbility(s__ALLSHALLBURN__FB2_u[data2], 'A0JO')
	call UnitRemoveAbility(s__ALLSHALLBURN__FB2_u[data2], 'A0JT')



    set ALLSHALLBURN__CASTER=LC[( 1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource())) )]


set Fervor[GetUnitUserData(ALLSHALLBURN__CASTER)]=Fervor[GetUnitUserData(ALLSHALLBURN__CASTER)] + 1

if Fervor[GetUnitUserData(ALLSHALLBURN__CASTER)] == 155 then



call BlzSetUnitAttackCooldown(ALLSHALLBURN__CASTER, .9, 0)
call UnitAddAbility(ALLSHALLBURN__CASTER, 'A0ME')
set x2=GetUnitX(ALLSHALLBURN__CASTER)
set y2=GetUnitY(ALLSHALLBURN__CASTER)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Flamestrike II.mdx", x2, y2))


loop
exitwhen i >= 12

set x3=x2 + GetRandomReal(- 250., 250.)
set y3=y2 + GetRandomReal(- 250., 250.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Rain of Fire Vol. II.mdx", x3, y3))
set i=i + 1
endloop

endif

	call DestroyEffect(AddSpecialEffect("war3mapImported\\OrbOfFire.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Fireball Major.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firebolt Medium.mdx", x, y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\NewAirEX.mdx", x, y))
//call DestroyEffect(AddSpecialEffect("war3mapImported\\CorpseExplodeFire.mdx",x,y))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Firaga.mdx", x, y))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl", x, y))
if GetUnitAbilityLevel(ALLSHALLBURN__CASTER, 'A0ME') == 1 then
call SetHeroInt(ALLSHALLBURN__CASTER, GetHeroInt(ALLSHALLBURN__CASTER, false) + 2, true)
else
call SetHeroInt(ALLSHALLBURN__CASTER, GetHeroInt(ALLSHALLBURN__CASTER, false) + 1, true)
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", ALLSHALLBURN__CASTER, "origin"))
set ALLSHALLBURN__DAMAGE=BlzGetUnitMaxHP(s__ALLSHALLBURN__FB2_u[data2]) * .15
    call GroupEnumUnitsInRange(ALLSHALLBURN__GROUP, x, y, 300., Filter(function ALLSHALLBURN__FilterActions))
	call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data2)) // INLINED!!

	if GetUnitAbilityLevel(ALLSHALLBURN__CASTER, 'A0ME') == 1 then
	call TimerStart(t, 2., false, function ALLSHALLBURN__Handler2)
	else
	call TimerStart(t, 3., false, function ALLSHALLBURN__Handler2)
	endif

else

set t=(NewTimerEx(0)) // INLINED!!

set data=s__ALLSHALLBURN__FB__allocate()

set s__ALLSHALLBURN__FB_u[data]=GetTriggerUnit()

if FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])] == 0 then
call UnitAddAbility(s__ALLSHALLBURN__FB_u[data], 'A0JP')
call UnitAddAbility(s__ALLSHALLBURN__FB_u[data], 'A0JO')
call UnitAddAbility(s__ALLSHALLBURN__FB_u[data], 'A0JT')
endif

set FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])]=FirelordBurnStacks[GetUnitUserData(s__ALLSHALLBURN__FB_u[data])] + 1
set s__ALLSHALLBURN__FB_caster[data]=LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]
set s__ALLSHALLBURN__FB_dmg[data]=GetHeroInt(s__ALLSHALLBURN__FB_caster[data], true) * .3
set s__ALLSHALLBURN__FB_i[data]=10
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function ALLSHALLBURN__Handler)

endif

set t=null
set u=null
    endfunction
    
    function ALLSHALLBURN__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()
    if ( GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(u))], 'A0JL') != 0 and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > 1. and GetUnitAbilityLevel(u, 'BIil') != 1 and HasExploded[GetUnitUserData(GetTriggerUnit())] == false and ( ( BI[NI] ) == ( LN ) or ( BI[NI] ) == ( DAMAGE_TYPE_UNIVERSAL ) or ( BI[NI] ) == ( DAMAGE_TYPE_LIGHTNING ) or ( GetUnitTypeId(u) == 'h01Q' and BI[NI] == DAMAGE_TYPE_COLD ) or ( GetUnitTypeId(u) == 'h01T' and BI[NI] == DAMAGE_TYPE_COLD and GetRandomInt(0, 100) <= 20 ) ) ) then
	call ALLSHALLBURN__Actions()
    endif

set u=null
    return false
    endfunction
    
    function ALLSHALLBURN__OnInit takes nothing returns nothing
        set FIRELORDBURN=CreateTrigger()
        call TriggerAddCondition(FIRELORDBURN, Condition(function ALLSHALLBURN__Conditions))
        call MOE(II , ( FIRELORDBURN ))
    endfunction
// scope ALLSHALLBURN ends
//===========================================================================
// Trigger: Burning Puddles
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope PuddleBurn begins




function PuddleBurn__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()

call DisableTrigger(PUDDLEBURNING)
if GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))], 'A0ME') == 1 then
call UnitDamageTargetEx(GetEventDamageSource() , u , GetWidgetLife(u) * .1 , false , true , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_COLD , null)
else
call UnitDamageTargetEx(GetEventDamageSource() , u , GetWidgetLife(u) * .05 , false , true , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_COLD , null)
endif
call EnableTrigger(PUDDLEBURNING)

set u=null
endfunction
    
    function PuddleBurn__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()

    if GetUnitTypeId(u) == 'h01Q' and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > .01 then
        call PuddleBurn__Actions()
    endif

set u=null
    return false
    endfunction
    
    function PuddleBurn__OnInit takes nothing returns nothing
        set PUDDLEBURNING=CreateTrigger()
        call TriggerAddCondition(PUDDLEBURNING, Condition(function PuddleBurn__Conditions))
        call MOE(II , ( PUDDLEBURNING ))
    endfunction
// scope PuddleBurn ends
//===========================================================================
// Trigger: FLAMELASER
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope FlamingLaser begins




function FlamingLaser__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local unit c= GetEventDamageSource()

call DisableTrigger(FLAMELASER)
call UnitDamageTargetEx(c , u , GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(c)) )], 'A0K3') * GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(c)) )], true) * .1 , false , true , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_COLD , null)
call EnableTrigger(FLAMELASER)

set u=null
set c=null
endfunction
    
    function FlamingLaser__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()

    if GetUnitTypeId(u) == 'h01T' and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > .01 then
        call FlamingLaser__Actions()
    endif

set u=null
    return false
    endfunction
    
    function FlamingLaser__OnInit takes nothing returns nothing
        set FLAMELASER=CreateTrigger()
        call TriggerAddCondition(FLAMELASER, Condition(function FlamingLaser__Conditions))
        call MOE(II , ( FLAMELASER ))
    endfunction
// scope FlamingLaser ends
//===========================================================================
// Trigger: Display Fervor Stacks
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope FervorStacks begins
 
 function FervorStacks__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'N01O' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|c00E25300F|r|c00DC4D00e|r|c00D64700r|r|c00D04100v|r|c00C93B00e|r|c00C33500n|r|c00BD2F00t|r|c00B72900 |r|c00B12400F|r|c00AB1E00l|r|c00A51800a|r|c009E1200m|r|c00980C00e|r|c00920600s|r|c008C0000:|r " + I2S(Fervor[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function FervorStacks__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-fervor", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function FervorStacks__Conditions))
    endfunction
// scope FervorStacks ends
//===========================================================================
// Trigger: Poison
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ToxiaPoison begins



 //integer i
         function s__ToxiaPoison__TP_destroy takes integer this returns nothing
            set s__ToxiaPoison__TP_caster[this]=null
		set s__ToxiaPoison__TP_u[this]=null
            call s__ToxiaPoison__TP_deallocate(this)
        endfunction
    
function ToxiaPoison__Handler takes nothing returns nothing

local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!


if s__ToxiaPoison__TP_i[data] == 0 or not UnitAlive(s__ToxiaPoison__TP_u[data]) or s__ToxiaPoison__TP_u[data] == null then


set ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])]=ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])] - 1

if ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])] == 0 then
call UnitRemoveAbility(s__ToxiaPoison__TP_u[data], 'A0J5')
call UnitRemoveAbility(s__ToxiaPoison__TP_u[data], 'A0J4')
endif

    call ReleaseTimer(GetExpiredTimer())
    call s__ToxiaPoison__TP_destroy(data)
else
set s__ToxiaPoison__TP_i[data]=s__ToxiaPoison__TP_i[data] - 1

call DisableTrigger(TOXIAPOISON)
call UnitDamageTargetEx(s__ToxiaPoison__TP_caster[data] , s__ToxiaPoison__TP_u[data] , s__ToxiaPoison__TP_dmg[data] , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , null)
call EnableTrigger(TOXIAPOISON)

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 1.0, false, function ToxiaPoison__Handler)

endif

set t=null
endfunction
 		
    function ToxiaPoison__Actions takes nothing returns nothing
 local timer t
local integer data

if ToxiaPoisonStacks[GetUnitUserData(GetTriggerUnit())] > 40 then
else
set t=(NewTimerEx(0)) // INLINED!!

set data=s__ToxiaPoison__TP__allocate()

set s__ToxiaPoison__TP_u[data]=GetTriggerUnit()

if ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])] == 0 then
call UnitAddAbility(s__ToxiaPoison__TP_u[data], 'A0J5')
call UnitAddAbility(s__ToxiaPoison__TP_u[data], 'A0J4')
endif

set ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])]=ToxiaPoisonStacks[GetUnitUserData(s__ToxiaPoison__TP_u[data])] + 1
set s__ToxiaPoison__TP_caster[data]=LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))]
set s__ToxiaPoison__TP_dmg[data]=GetHeroLevel(s__ToxiaPoison__TP_caster[data]) + GetHeroAgi(s__ToxiaPoison__TP_caster[data], true) * 1.75
set s__ToxiaPoison__TP_i[data]=3
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function ToxiaPoison__Handler)

endif

set t=null

    endfunction
    
    function ToxiaPoison__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()
    if GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(u))], 'A0FB') != 0 and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > 1. and GetUnitAbilityLevel(u, 'BIil') != 1 and GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_COMPUTER then
        call ToxiaPoison__Actions()
    endif

set u=null
    return false
    endfunction
    
    function ToxiaPoison__OnInit takes nothing returns nothing
        set TOXIAPOISON=CreateTrigger()
        call TriggerAddCondition(TOXIAPOISON, Condition(function ToxiaPoison__Conditions))
        call MOE(II , ( TOXIAPOISON ))
    endfunction
// scope ToxiaPoison ends
//===========================================================================
// Trigger: Enchant Weapons
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope EnchantWeapons begins
 



         function s__EnchantWeapons__EW_destroy takes integer this returns nothing
	    call DestroyLightning(s__EnchantWeapons__EW_ll[this])
	    set s__EnchantWeapons__EW_ll[this]=null
            set s__EnchantWeapons__EW_caster[this]=null
	    set s__EnchantWeapons__EW_target[this]=null
            call s__EnchantWeapons__EW_deallocate(this)
        endfunction


function EnchantWeapons__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local effect fx


if s__EnchantWeapons__EW_caster[data] == null or s__EnchantWeapons__EW_target[data] == null or IsUnitHidden(s__EnchantWeapons__EW_target[data]) or IsUnitHidden(s__EnchantWeapons__EW_caster[data]) then
call ReleaseTimer(t)
call s__EnchantWeapons__EW_destroy(data)

else

if ( s__EnchantWeapons__EW_lightningx2[data] <= s__EnchantWeapons__EW_targetx[data] + 25 and s__EnchantWeapons__EW_lightningx2[data] >= s__EnchantWeapons__EW_targetx[data] - 25 ) and ( s__EnchantWeapons__EW_lightningy2[data] <= s__EnchantWeapons__EW_targety[data] + 25 and s__EnchantWeapons__EW_lightningy2[data] >= s__EnchantWeapons__EW_targety[data] - 25 ) then

call BlzSetUnitBaseDamage(s__EnchantWeapons__EW_target[data], BlzGetUnitBaseDamage(s__EnchantWeapons__EW_target[data], 0) + s__EnchantWeapons__EW_damageincrease[data], 0)
call BlzSetUnitBaseDamage(s__EnchantWeapons__EW_caster[data], BlzGetUnitBaseDamage(s__EnchantWeapons__EW_caster[data], 0) + s__EnchantWeapons__EW_damageincrease[data], 0)


set fx=AddSpecialEffectTarget("war3mapImported\\Culling Slash II Silver.mdx", s__EnchantWeapons__EW_caster[data], "chest")

call BlzSetSpecialEffectScale(fx, .8)

call DestroyEffect(fx)

set fx=AddSpecialEffectTarget("war3mapImported\\Culling Slash II Silver.mdx", s__EnchantWeapons__EW_target[data], "chest")

call BlzSetSpecialEffectScale(fx, .8)

call DestroyEffect(fx)



call ReleaseTimer(t)
call s__EnchantWeapons__EW_destroy(data)


else

set s__EnchantWeapons__EW_casterx[data]=GetUnitX(s__EnchantWeapons__EW_caster[data])
set s__EnchantWeapons__EW_castery[data]=GetUnitY(s__EnchantWeapons__EW_caster[data])
set s__EnchantWeapons__EW_targetx[data]=GetUnitX(s__EnchantWeapons__EW_target[data])
set s__EnchantWeapons__EW_targety[data]=GetUnitY(s__EnchantWeapons__EW_target[data])
set s__EnchantWeapons__EW_lightningx1[data]=s__EnchantWeapons__EW_casterx[data]
set s__EnchantWeapons__EW_lightningy1[data]=s__EnchantWeapons__EW_castery[data]

call MoveLocation(EnchantWeapons__LOC, s__EnchantWeapons__EW_casterx[data], s__EnchantWeapons__EW_castery[data])
set s__EnchantWeapons__EW_casterz[data]=GetLocationZ(EnchantWeapons__LOC) + GetUnitFlyHeight(s__EnchantWeapons__EW_caster[data]) + 25.

call MoveLocation(EnchantWeapons__LOC, s__EnchantWeapons__EW_targetx[data], s__EnchantWeapons__EW_targety[data])
set s__EnchantWeapons__EW_targetz[data]=GetLocationZ(EnchantWeapons__LOC) + GetUnitFlyHeight(s__EnchantWeapons__EW_target[data]) + 25.

set s__EnchantWeapons__EW_lightningz1[data]=s__EnchantWeapons__EW_casterz[data]
set s__EnchantWeapons__EW_lightningz2[data]=s__EnchantWeapons__EW_targetz[data]

set s__EnchantWeapons__EW_a[data]=bj_RADTODEG * Atan2(s__EnchantWeapons__EW_targety[data] - s__EnchantWeapons__EW_lightningy2[data], s__EnchantWeapons__EW_targetx[data] - s__EnchantWeapons__EW_lightningx2[data])

set s__EnchantWeapons__EW_lightningx2[data]=s__EnchantWeapons__EW_lightningx2[data] + 48. * Cos(s__EnchantWeapons__EW_a[data] * bj_DEGTORAD)
set s__EnchantWeapons__EW_lightningy2[data]=s__EnchantWeapons__EW_lightningy2[data] + 48. * Sin(s__EnchantWeapons__EW_a[data] * bj_DEGTORAD)

call MoveLightningEx(s__EnchantWeapons__EW_ll[data], true, s__EnchantWeapons__EW_lightningx1[data], s__EnchantWeapons__EW_lightningy1[data], s__EnchantWeapons__EW_lightningz1[data], s__EnchantWeapons__EW_lightningx2[data], s__EnchantWeapons__EW_lightningy2[data], s__EnchantWeapons__EW_lightningz2[data])

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function EnchantWeapons__Handler)

endif
endif


set t=null
set fx=null
endfunction


function EnchantWeapons__Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__EnchantWeapons__EW__allocate()
set s__EnchantWeapons__EW_caster[data]=GetTriggerUnit()
set s__EnchantWeapons__EW_target[data]=GetSpellTargetUnit()
set s__EnchantWeapons__EW_level[data]=GetUnitAbilityLevel(s__EnchantWeapons__EW_caster[data], EnchantWeapons__SPELL_ID)
set s__EnchantWeapons__EW_damageincrease[data]=( 10 * s__EnchantWeapons__EW_level[data] ) + ( BlzGetUnitBaseDamage(s__EnchantWeapons__EW_target[data], 0) / 20 )

if GetUnitAbilityLevel(s__EnchantWeapons__EW_target[data], 'A0CJ') != 0 then
	set s__EnchantWeapons__EW_damageincrease[data]=( 10 * s__EnchantWeapons__EW_level[data] ) + ( BlzGetUnitBaseDamage(s__EnchantWeapons__EW_caster[data], 0) / 20 )
endif


set s__EnchantWeapons__EW_casterx[data]=GetUnitX(s__EnchantWeapons__EW_caster[data])
set s__EnchantWeapons__EW_castery[data]=GetUnitY(s__EnchantWeapons__EW_caster[data])
set s__EnchantWeapons__EW_targetx[data]=GetUnitX(s__EnchantWeapons__EW_target[data])
set s__EnchantWeapons__EW_targety[data]=GetUnitY(s__EnchantWeapons__EW_target[data])
set s__EnchantWeapons__EW_lightningx1[data]=s__EnchantWeapons__EW_casterx[data]
set s__EnchantWeapons__EW_lightningy1[data]=s__EnchantWeapons__EW_castery[data]
set s__EnchantWeapons__EW_lightningx2[data]=s__EnchantWeapons__EW_lightningx1[data]
set s__EnchantWeapons__EW_lightningy2[data]=s__EnchantWeapons__EW_lightningy1[data]

call MoveLocation(EnchantWeapons__LOC, s__EnchantWeapons__EW_casterx[data], s__EnchantWeapons__EW_castery[data])
set s__EnchantWeapons__EW_casterz[data]=GetLocationZ(EnchantWeapons__LOC) + GetUnitFlyHeight(s__EnchantWeapons__EW_caster[data]) + 25.

call MoveLocation(EnchantWeapons__LOC, s__EnchantWeapons__EW_targetx[data], s__EnchantWeapons__EW_targety[data])
set s__EnchantWeapons__EW_targetz[data]=GetLocationZ(EnchantWeapons__LOC) + GetUnitFlyHeight(s__EnchantWeapons__EW_target[data]) + 25.

set s__EnchantWeapons__EW_lightningz1[data]=s__EnchantWeapons__EW_casterz[data]
set s__EnchantWeapons__EW_lightningz2[data]=s__EnchantWeapons__EW_targetz[data]

set s__EnchantWeapons__EW_ll[data]=AddLightningEx("WHCH", true, s__EnchantWeapons__EW_lightningx1[data], s__EnchantWeapons__EW_lightningy1[data], s__EnchantWeapons__EW_lightningz1[data], s__EnchantWeapons__EW_lightningx2[data], s__EnchantWeapons__EW_lightningy2[data], s__EnchantWeapons__EW_lightningz2[data])

set s__EnchantWeapons__EW_a[data]=bj_RADTODEG * Atan2(s__EnchantWeapons__EW_targety[data] - s__EnchantWeapons__EW_castery[data], s__EnchantWeapons__EW_targetx[data] - s__EnchantWeapons__EW_casterx[data])

set s__EnchantWeapons__EW_lightningx2[data]=s__EnchantWeapons__EW_lightningx2[data] + 8. * Cos(s__EnchantWeapons__EW_a[data] * bj_DEGTORAD)
set s__EnchantWeapons__EW_lightningy2[data]=s__EnchantWeapons__EW_lightningy2[data] + 8. * Sin(s__EnchantWeapons__EW_a[data] * bj_DEGTORAD)

call MoveLightningEx(s__EnchantWeapons__EW_ll[data], true, s__EnchantWeapons__EW_lightningx1[data], s__EnchantWeapons__EW_lightningy1[data], s__EnchantWeapons__EW_lightningz1[data], s__EnchantWeapons__EW_lightningx2[data], s__EnchantWeapons__EW_lightningy2[data], s__EnchantWeapons__EW_lightningz2[data])

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function EnchantWeapons__Handler)

set t=null
endfunction
    


function EnchantWeapons__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EnchantWeapons__SPELL_ID , function EnchantWeapons__Actions)
    endfunction
// scope EnchantWeapons ends

//===========================================================================
// Trigger: CalltoArmsTaunt
//===========================================================================


// scope CalltoArmsTaunt begins


function CalltoArmsTaunt__Conditions takes nothing returns boolean
local unit u= GetAttacker()

if GetUnitTypeId(u) == 'h01J' or GetUnitTypeId(u) == 'h01K' or GetUnitTypeId(u) == 'h01L' or GetUnitTypeId(u) == 'h01M' or GetUnitTypeId(u) == 'h01N' or GetUnitTypeId(u) == 'h01O' or GetUnitTypeId(u) == 'h01X' or GetUnitTypeId(u) == 'h01Z' or GetUnitTypeId(u) == 'h01Y' then
	if UnitAlive(LC[( 1 + GetPlayerId(GetOwningPlayer(u)) )]) then
		 call IssueTargetOrder(GetTriggerUnit(), "attack", LC[( 1 + GetPlayerId(GetOwningPlayer(u)) )])
	endif
endif

set u=null
return false
endfunction

function CalltoArmsTaunt__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_ATTACKED)
        call TriggerAddCondition(t, Condition(function CalltoArmsTaunt__Conditions))
endfunction
// scope CalltoArmsTaunt ends



//===========================================================================
// Trigger: CalltoArms
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope CalltoArms begins
 



 
    function CalltoArms__Actions takes nothing returns nothing
 local integer unitid
 local integer i
  local unit c= GetTriggerUnit()
 local unit u
 local real x
 local real y
 local real a= GetRandomReal(0., 360.)
 local real d= GetRandomReal(200., 300.)
 local integer id= GetPlayerId(GetOwningPlayer(c))

	set x=GetUnitX(c) + d * Cos(a * bj_DEGTORAD)
	set y=GetUnitY(c) + d * Sin(a * bj_DEGTORAD)


	set i=GetRandomInt(0, 2)


	if i == 0 then
	if IsFallenOne[GetUnitUserData(LC[1 + id])] or IsGrakeTank[GetUnitUserData(LC[1 + id])] then
if IsFallenOne[GetUnitUserData(LC[1 + id])] then
set unitid='h01M'
endif
if IsGrakeTank[GetUnitUserData(LC[1 + id])] then
set unitid='h01X'
endif
	else
	set unitid='h01K'
	endif
	endif

	if i == 1 then
	if IsFallenOne[GetUnitUserData(LC[1 + id])] or IsGrakeTank[GetUnitUserData(LC[1 + id])] then
if IsFallenOne[GetUnitUserData(LC[1 + id])] then
set unitid='h01O'
endif
if IsGrakeTank[GetUnitUserData(LC[1 + id])] then
set unitid='h01Z'
endif
	else
	set unitid='h01J'
	endif
endif

	if i == 2 then
	if IsFallenOne[GetUnitUserData(LC[1 + id])] or IsGrakeTank[GetUnitUserData(LC[1 + id])] then
if IsFallenOne[GetUnitUserData(LC[1 + id])] then
set unitid='h01N'
endif
if IsGrakeTank[GetUnitUserData(LC[1 + id])] then
set unitid='h01Y'
endif
	else
	set unitid='h01L'
	endif
endif

	set u=CreateUnit(Player(id), unitid, x, y, GetUnitFacing(c))


	
		call BlzSetUnitBaseDamage(u, R2I(( BlzGetUnitMaxHP(c) * .04 )) + R2I(( BlzGetUnitMaxHP(c) * .0008 * GetHeroLevel(c) )) + ( GetHeroStr(c, true) ) * 2 + R2I(BlzGetUnitArmor(c) * .75 * GetHeroLevel(c)) - 30, 0)
	

		call UnitApplyTimedLife(u, 'BTLF', 25. + ( GetHeroLevel(c) * .4 ))
		if IsFallenOne[GetUnitUserData(LC[1 + id])] then
		call DestroyEffect(AddSpecialEffect("war3mapImported\\Doomsday.mdx", x, y))
		else
		call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", x, y))
		endif
		//call IssueTargetOrderById(u,851971,c)
		call SetUnitVertexColor(u, 255, 255, 255, 130)
		call SetUnitPathing(u, true)
	
	set c=null
	set u=null
    endfunction
    


        function CalltoArms__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(CalltoArms__SPELL_ID , function CalltoArms__Actions)
    endfunction
// scope CalltoArms ends

//===========================================================================
// Trigger: Enforce Taxes
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope EnforceTaxes begins
    

    
    function EnforceTaxes__Actions takes nothing returns nothing
    local unit u= GetEventDamageSource()
 local unit t= GetTriggerUnit()
    local player p= GetOwningPlayer(u)
    call UnitRemoveAbility(t, 'B05A')
    
	call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + ( GetHeroLevel(u) * 10 ))
 
	
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\GoldBottleMissile.mdl", t, "origin"))

    set p=null
    set t=null
    set u=null
    endfunction
    
    function EnforceTaxes__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), EnforceTaxes__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) and GetUnitAbilityLevel(GetTriggerUnit(), 'B05A') == 1 then // INLINED!!
        call EnforceTaxes__Actions()
    endif
    return false
    endfunction
    
    function EnforceTaxes__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function EnforceTaxes__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope EnforceTaxes ends
//===========================================================================
// Trigger: Combat Tactics
//===========================================================================
// scope EnforcerStrengthBuff begins


        function s__EnforcerStrengthBuff__EB_destroy takes integer this returns nothing
            set s__EnforcerStrengthBuff__EB_u[this]=null
            call s__EnforcerStrengthBuff__EB_deallocate(this)
        endfunction


function EnforcerStrengthBuff__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

call s__NewBonusUtils__NewBonusUtils_linkBuff((s__EnforcerStrengthBuff__EB_u[data] ) , ( BONUS_STRENGTH ) , (( GetUnitAbilityLevel(s__EnforcerStrengthBuff__EB_u[data], 'A0C5') * 20 )*1.0) , ( 'B028') , false) // INLINED!!


    call s__EnforcerStrengthBuff__EB_destroy(data)
    call ReleaseTimer(t)

set t=null
endfunction
 
    function EnforcerStrengthBuff__DP1 takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__EnforcerStrengthBuff__EB__allocate()

set s__EnforcerStrengthBuff__EB_u[data]=GetTriggerUnit()

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .01, false, function EnforcerStrengthBuff__Handler)


set t=null
    endfunction

        function EnforcerStrengthBuff__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EnforcerStrengthBuff__SPELL_ID , function EnforcerStrengthBuff__DP1)
    endfunction
// scope EnforcerStrengthBuff ends
//===========================================================================
// Trigger: Pierce The Veil
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0

// scope PiercetheVeil begins

function s__PiercetheVeil__PV_destroy takes integer this returns nothing
            set s__PiercetheVeil__PV_u[this]=null
            call s__PiercetheVeil__PV_deallocate(this)
        endfunction

    function PiercetheVeil__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
    call UnitRemoveAbility(s__PiercetheVeil__PV_u[data], PiercetheVeil__DEBUFF_ID)
    call s__PiercetheVeil__PV_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction

    function PiercetheVeil__FilterActions takes nothing returns boolean
    local timer t
    local integer data
    local unit u
    
    if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(PiercetheVeil__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) and IsUnitVisible(GetFilterUnit(), GetOwningPlayer(PiercetheVeil__CASTER)) and GetUnitTypeId(GetFilterUnit()) != 'h00S' then
    set data=s__PiercetheVeil__PV__allocate()
    set s__PiercetheVeil__PV_u[data]=GetFilterUnit()
    
    set u=CreateUnit(GetOwningPlayer(PiercetheVeil__CASTER), 'h018', 0., 0., 0.)
    call SetUnitAbilityLevel(u, 'A0FF', GetUnitAbilityLevel(PiercetheVeil__CASTER, PiercetheVeil__SPELL_ID))
    call UnitApplyTimedLife(u, 'BTLF', 1.)
    call IssueTargetOrderById(u, 852274, s__PiercetheVeil__PV_u[data])
    
    set ShatteredVeil[GetUnitUserData(u)]=s__PiercetheVeil__PV_u[data]
    call UnitAddAbility(s__PiercetheVeil__PV_u[data], PiercetheVeil__DEBUFF_ID)
    call SetUnitAbilityLevel(s__PiercetheVeil__PV_u[data], PiercetheVeil__DEBUFF_ID, GetUnitAbilityLevel(PiercetheVeil__CASTER, PiercetheVeil__SPELL_ID))
    
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\WarpDarkTargetPurple.mdx", s__PiercetheVeil__PV_u[data], "origin"))
    
    
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 10., false, function PiercetheVeil__Handler)
    endif
    
    set u=null
    set t=null
    return false
    endfunction
    
    function PiercetheVeil__Actions takes nothing returns nothing
    set PiercetheVeil__CASTER=GetTriggerUnit()
    call GroupEnumUnitsInRange(PiercetheVeil__GROUP, GetSpellTargetX(), GetSpellTargetY(), 400., Filter(function PiercetheVeil__FilterActions))
    call DestroyEffect(AddSpecialEffect(PiercetheVeil__SFX_AOE, GetSpellTargetX(), GetSpellTargetY()))
    call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkForce.mdx", GetSpellTargetX(), GetSpellTargetY()))
    endfunction


    
    function PiercetheVeil__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(PiercetheVeil__SPELL_ID , function PiercetheVeil__Actions)
    endfunction
// scope PiercetheVeil ends
//===========================================================================
// Trigger: Shattered Veil On Kill
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ShatteredVeil2 begins
   
    function ShatteredVeil2__Actions takes nothing returns nothing
        call ModifyHeroStat(1, LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], 0, 2)
        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PeterifyVer.2.mdx", LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], "chest"))
        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PeterifyVer.2.mdx", GetTriggerUnit(), "chest"))
        call UnitRemoveAbility(GetTriggerUnit(), 'A0FP')
    endfunction
    
    function ShatteredVeil2__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetTriggerUnit(), 'A0FP') != 0 and GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], 'A0FI') != 0 then
        call ShatteredVeil2__Actions()
    endif
    return false
    endfunction
    
    function ShatteredVeil2__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
        call TriggerAddCondition(t, Condition(function ShatteredVeil2__Conditions))
    endfunction
// scope ShatteredVeil2 ends
//===========================================================================
// Trigger: Shattered Veil On Summon
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ShatteredVeil3 begins
   
    function ShatteredVeil3__Actions takes nothing returns nothing
    local unit u= GetSummonedUnit()
    call UnitAddAbility(u, 'Aloc')
    call UnitAddAbility(u, 'A05X')
    call SetUnitAcquireRange(u, 3000.)
    //call IssueTargetOrder(u,"attack",ShatteredVeil[GetUnitUserData(GetSummoningUnit())])
    call IssueTargetOrderById(u, 851983, ShatteredVeil[GetUnitUserData(GetSummoningUnit())])
    
    set u=null
    endfunction
    
    function ShatteredVeil3__Conditions takes nothing returns boolean
    if GetUnitTypeId(GetSummoningUnit()) == 'h018' then
        call ShatteredVeil3__Actions()
    endif
    return false
    endfunction
    
    function ShatteredVeil3__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SUMMON)
        call TriggerAddCondition(t, Condition(function ShatteredVeil3__Conditions))
    endfunction
// scope ShatteredVeil3 ends
//===========================================================================
// Trigger: Display Aether Stacks
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AetherStacks begins
 
 function AetherStacks__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'U000' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|cFF09F3F7A|r|cFF0AEBF5e|r|cFF0CE3F4t|r|cFF0DDAF2h|r|cFF0FD2F1e|r|cFF10CAEFr|r|cFF12C2ED |r|cFF13B9ECS|r|cFF15B1EAt|r|cFF16A9E8a|r|cFF18A1E7c|r|cFF1998E5k|r|cFF1B90E4s|r|cFF1C88E2:|r " + I2S(CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function AetherStacks__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-as", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function AetherStacks__Conditions))
    endfunction
// scope AetherStacks ends
//===========================================================================
// Trigger: Aether Core On Hit
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope AetherShot begins


    function AetherShot__Actions takes nothing returns boolean
    local unit u= GetEventDamageSource()
 local unit d= GetTriggerUnit()
 local effect fx
 local real m
 local real hp
 local real mhp
 local real cm
    if ( GetUnitAbilityLevel(u, AetherShot__ABIL_ID) > 0 or GetUnitAbilityLevel(u, AetherShot__ABIL_ID2) > 0 ) and d != u and BI[NI] != DAMAGE_TYPE_LIGHTNING then
    set u=GetEventDamageSource()
    if ( BI[NI] ) == ( LN ) then

set hp=GetWidgetLife(u)
set mhp=GetUnitState(u, UNIT_STATE_MAX_LIFE) * 1.


	set m=GetUnitState(u, UNIT_STATE_MAX_MANA)
set cm=GetUnitState(u, UNIT_STATE_MANA)



//if cm <= (m*.5) then
//set m = m *.02
//else
//set m = m *.01
//endif

set m=( ( m - cm ) * .035 )

    set fx=AddSpecialEffectTarget("war3mapImported\\Heal Blue.mdx", u, "origin")
	call BlzSetSpecialEffectScale(fx, .9)
call DestroyEffect(fx)


   
call SetUnitState(u, UNIT_STATE_MANA, cm - ( cm * .03 ))

set cm=GetUnitState(u, UNIT_STATE_MANA)

call SetUnitState(u, UNIT_STATE_MANA, cm + m)


set m=cm * .05
set m=( ( 1. + ( .5 * GetHeroLevel(u) ) ) * m * ( 1. - ( hp / mhp ) ) ) + ( ( 1. + ( .5 * GetHeroLevel(u) ) ) * m )
call UnitDamageTargetEx(u , d , m , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)

    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "head"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "hand,left"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "hand,right"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "foot,light"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl", d, "foot,right"))
    endif
    endif
    
	set fx=null
    set u=null
    return false
    endfunction
    
    function AetherShot__OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function AetherShot__Actions))
    endfunction
    
// scope AetherShot ends
//===========================================================================
// Trigger: Aether Bolt
//===========================================================================
//TESH.scrollpos=8
//TESH.alwaysfold=0
// scope ManaBolt begins
function ManaBolt__Actions takes nothing returns nothing
local unit OIX=LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
local unit EXX
local real OAX=GetUnitX(OIX)
local real ONX=GetUnitY(OIX)
local real OJX=.0
local real OKX=.0
local real OLX=.0
local integer OMX=0


set EXX=GetSpellTargetUnit()
call MoveLocation(EB, OAX, ONX)
set OMX=XAX(OAX , ONX , 64. , Deg2Rad(GetUnitFacing(OIX)))
set GZV[OMX]=OIX
set G_V[OMX]=GetOwningPlayer(OIX)
call V9X(OMX , "war3mapImported\\BluefireBolt.mdx")
call V8X(OMX , 1.)
set G4V[OMX]=20.
set G9V[OMX]=true
set G2V[OMX]=60.
set G3V[OMX]=( ( GetUnitAbilityLevel(OIX, ManaBolt__SPELL_ID) * GetUnitState(OIX, UNIT_STATE_MANA) * .2 ) + ( ( 1. - ( GetWidgetLife(OIX) / GetUnitState(OIX, UNIT_STATE_MAX_LIFE) ) ) * ( GetUnitAbilityLevel(OIX, ManaBolt__SPELL_ID) * GetUnitState(OIX, UNIT_STATE_MANA) * .2 ) ) ) + ( ( 1. + ( .02 * GetHeroLevel(OIX) ) ) * GetUnitAbilityLevel(OIX, ManaBolt__SPELL_ID) * GetUnitState(OIX, UNIT_STATE_MANA) * .2 )
set G8V[OMX]=true
set HVV[OMX]=true
set HOV[OMX]=true
set HXV[OMX]=false
set G1V[OMX]=64.
set G0V[OMX]=64.
set HCV[OMX]=( 6 )
call EMX(OMX , G1V[OMX])
call MoveLocation(EB, OJX, OKX)
call EEX(OMX , EXX)
set HEV[OMX]=true
call XRX(OMX , OJX , OKX , GetUnitFlyHeight(EXX) + 65. , 1000.)

set OIX=null
set EXX=null
endfunction

function ManaBolt__OnSpell takes nothing returns boolean
        if GetSpellAbilityId() == ManaBolt__SPELL_ID or GetSpellAbilityId() == 'A0F9' then
            call ManaBolt__Actions()
        endif
        return false
endfunction

function ManaBolt__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(trig, Condition(function ManaBolt__OnSpell))
endfunction

// scope ManaBolt ends
//===========================================================================
// Trigger: Aether Infusion
//===========================================================================
//TESH.scrollpos=32
//TESH.alwaysfold=0

// scope AetherInfusion begins


        function s__AetherInfusion__AT_destroy takes integer this returns nothing
            set s__AetherInfusion__AT_u[this]=null
            call s__AetherInfusion__AT_deallocate(this)
        endfunction
    
    function AetherInfusion__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
    set AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])]=AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])] - s__AetherInfusion__AT_lvl[data]
    
    call s__AetherInfusion__AT_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction

    function AetherInfusion__Actions takes nothing returns nothing
    local timer t
    local integer data= s__AetherInfusion__AT__allocate()
    local unit cast= LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    local integer i
    local unit d= CreateUnit(GetOwningPlayer(cast), 'h007', GetUnitX(cast), GetUnitY(cast), 0.)
    
    set s__AetherInfusion__AT_u[data]=GetSpellTargetUnit()
    set s__AetherInfusion__AT_lvl[data]=GetUnitAbilityLevel(cast, AetherInfusion__SPELL_ID)
    
    if AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])] == null then
    set AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])]=0
    endif
    
    set i=AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])]
    
    call UnitAddAbility(d, AetherInfusion__SPELL_ID2)
    call UnitApplyTimedLife(d, 'BTLF', 1.)
    
    if i + s__AetherInfusion__AT_lvl[data] >= 40 then
    call SetUnitAbilityLevel(d, AetherInfusion__SPELL_ID2, i + s__AetherInfusion__AT_lvl[data])
    else
    call SetUnitAbilityLevel(d, AetherInfusion__SPELL_ID2, i + s__AetherInfusion__AT_lvl[data])
    endif
    
    call IssueTargetOrder(d, "bloodlust", s__AetherInfusion__AT_u[data])
    
    set AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])]=AETHER_BUFF_LVL[GetUnitUserData(s__AetherInfusion__AT_u[data])] + s__AetherInfusion__AT_lvl[data]
    
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\CharmTarget1.mdx", s__AetherInfusion__AT_u[data], "overhead"))
    
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 10., false, function AetherInfusion__Handler)
    
    set cast=null
    set d=null
    set t=null
    endfunction
    
    
    function AetherInfusion__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(AetherInfusion__SPELL_ID , function AetherInfusion__Actions)
    endfunction
// scope AetherInfusion ends


//===========================================================================
// Trigger: Aether Flare
//===========================================================================
//TESH.scrollpos=12
//TESH.alwaysfold=0
// scope AetherFlare begins

function s__AetherFlare__AF_destroy takes integer this returns nothing
            set s__AetherFlare__AF_u[this]=null
            call s__AetherFlare__AF_deallocate(this)
        endfunction

   function AetherFlare__FilterActions takes nothing returns boolean
    
    if ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(AetherFlare__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) or GetFilterUnit() == AetherFlare__CASTER then
    if GetRandomInt(1, 5) == 1 then
    call DestroyEffect(AddSpecialEffect(AetherFlare__SFX_LASER, GetUnitX(GetFilterUnit()), GetUnitY(GetFilterUnit())))
    endif
    if GetFilterUnit() == AetherFlare__CASTER then
    if GetWidgetLife(AetherFlare__CASTER) - AetherFlare__DAMAGE <= 1 then
    call SetWidgetLife(AetherFlare__CASTER, 1)
    else
    call SetWidgetLife(AetherFlare__CASTER, GetWidgetLife(AetherFlare__CASTER) - AetherFlare__DAMAGE)
    endif
    else
    call UnitDamageTargetEx(AetherFlare__CASTER , GetFilterUnit() , AetherFlare__DAMAGE , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
    endif
    endif
    
    return false
    endfunction
    
    function AetherFlare__FilterGroup takes nothing returns boolean
    
    return ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(AetherFlare__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) ) or GetFilterUnit() == AetherFlare__CASTER
    
    endfunction
    
    function AetherFlare__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local real distance= GetRandomReal(0., 260.)
    local real angle= GetRandomReal(0., 360.)
    local integer count
   // call BJDebugMsg("Time: " +R2S(data.time))
    
    if s__AetherFlare__AF_time[data] == 0. then
    call s__AetherFlare__AF_destroy(data)
    call ReleaseTimer(t)
   // call BJDebugMsg("Destroyed")
    else
    //if GetRandomReal(0.,1.) <= .7 then
    call DestroyEffect(AddSpecialEffect(AetherFlare__SFX_AOE, s__AetherFlare__AF_x[data], s__AetherFlare__AF_y[data]))
    //endif
    if GetRandomReal(0., 1.) <= .7 then
    call DestroyEffect(AddSpecialEffect(AetherFlare__SFX_LASER, s__AetherFlare__AF_x[data] + distance * Cos(angle * bj_DEGTORAD), s__AetherFlare__AF_y[data] + distance * Sin(angle * bj_DEGTORAD)))
    endif
    set AetherFlare__CASTER=s__AetherFlare__AF_u[data]
    call GroupEnumUnitsInRange(AetherFlare__GROUP, s__AetherFlare__AF_x[data], s__AetherFlare__AF_y[data], 275., Filter(function AetherFlare__FilterGroup))
    set count=CountUnitsInGroup(AetherFlare__GROUP)
    //call BJDebugMsg(I2S(count))
    if count != 0 then
    set AetherFlare__DAMAGE=s__AetherFlare__AF_dmg[data] / count
    else
    set AetherFlare__DAMAGE=s__AetherFlare__AF_dmg[data]
    endif
    
    
    //call BJDebugMsg(R2S(DAMAGE))
    call GroupEnumUnitsInRange(AetherFlare__GROUP, s__AetherFlare__AF_x[data], s__AetherFlare__AF_y[data], 275., Filter(function AetherFlare__FilterActions))
    
    set s__AetherFlare__AF_time[data]=s__AetherFlare__AF_time[data] - .2
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .2, false, function AetherFlare__Handler)
    endif
    
    set t=null
    endfunction

    function AetherFlare__Actions takes nothing returns nothing
    local integer data= s__AetherFlare__AF__allocate()
    local timer t= (NewTimerEx(0)) // INLINED!!
    
    set s__AetherFlare__AF_u[data]=LC[1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit()))]
    set s__AetherFlare__AF_x[data]=GetSpellTargetX()
    set s__AetherFlare__AF_y[data]=GetSpellTargetY()
    
    
    call DestroyEffect(AddSpecialEffect(AetherFlare__SFX_AOE, s__AetherFlare__AF_x[data], s__AetherFlare__AF_y[data]))
    
    set s__AetherFlare__AF_time[data]=5.
    set s__AetherFlare__AF_dmg[data]=( ( GetUnitAbilityLevel(s__AetherFlare__AF_u[data], AetherFlare__SPELL_ID) * GetUnitState(s__AetherFlare__AF_u[data], UNIT_STATE_MANA) * 1.5 ) + ( ( GetUnitAbilityLevel(s__AetherFlare__AF_u[data], AetherFlare__SPELL_ID) * GetUnitState(s__AetherFlare__AF_u[data], UNIT_STATE_MANA) * 1.5 ) * ( 1. - ( GetWidgetLife(s__AetherFlare__AF_u[data]) / GetUnitState(s__AetherFlare__AF_u[data], UNIT_STATE_MAX_LIFE) ) ) ) ) / 25.
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .1, false, function AetherFlare__Handler)
    
    set t=null
    endfunction


    
    function AetherFlare__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(AetherFlare__SPELL_ID , function AetherFlare__Actions)
    endfunction
// scope AetherFlare ends
//===========================================================================
// Trigger: Aethereal Mastery Active
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
// scope AetherealActive begins

function AetherealActive__OnSpell takes nothing returns nothing
local unit u= GetTriggerUnit()
local integer i= 0

        call DestroyEffect(AddSpecialEffect(AetherealActive__SFX_PATH, GetUnitX(u), GetUnitY(u)))
        call SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MAX_MANA))
        
        if CORE_LVL[GetUnitUserData(u)] == null then
        set CORE_LVL[GetUnitUserData(u)]=0
        endif
        
        if CORE_LVL[GetUnitUserData(u)] < 100 and GetWidgetLife(u) <= ( GetUnitState(u, UNIT_STATE_MAX_LIFE) * .3 ) then
            if CORE_LVL[GetUnitUserData(u)] + ( ( GetUnitAbilityLevel(u, AetherealActive__CAST_ID) * 9 ) + 9 ) >= 100 then
            set i=100 - CORE_LVL[GetUnitUserData(u)]
            loop
            exitwhen i == 0
call AddUnitBonus(u , BONUS_MANA , 20 * ( 1 + .02 * GetHeroLevel(u) ))
            set i=i - 1
            endloop
            set CORE_LVL[GetUnitUserData(u)]=100
            call UnitRemoveAbility(u, AetherealActive__SPELL_ID2)
            call UnitAddAbility(u, AetherealActive__SPELL_ID3)
            call UnitAddAbility(u, AetherealActive__SPELL_ID4)
            else
            set i=( ( GetUnitAbilityLevel(u, AetherealActive__CAST_ID) * 9 ) + 9 )
            loop
            exitwhen i == 0
call AddUnitBonus(u , BONUS_MANA , 20 * ( 1 + .02 * GetHeroLevel(u) ))
            set i=i - 1
            endloop
            set CORE_LVL[GetUnitUserData(u)]=CORE_LVL[GetUnitUserData(u)] + ( ( GetUnitAbilityLevel(u, AetherealActive__CAST_ID) * 9 ) + 9 )
            endif
        endif

        set u=null
endfunction
//===========================================================================
function AetherealActive__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(AetherealActive__CAST_ID , function AetherealActive__OnSpell)
endfunction
// scope AetherealActive ends
//===========================================================================
// Trigger: Discharge Aether
//===========================================================================
//TESH.scrollpos=842
//TESH.alwaysfold=0
// scope DischargeAether begins

////////////////////////////////////////////////////////////////////
//                    DEVASTATION ENVOY V1.00                     //
//                                                                //
//  Author: Tank-Commander                                        //
//  Requires: Dummy.mdl                                           //
//  Purpose: Spam-cast spell                                      //
//                                                                //
//  Notes:                                                        //
//    -  Read the readme before you try modifying the config      //
//    -  Use the "Helpful files" to help you import the spell     //
//                                                                //
//  Credits:                                                      //
//    -  (Dummy.mdl) Vexorian                                     //
//                                                                //
//                                                                //
//  If you have used this spell in your map, you are required     //
//  to give credits to Tank-Commander for the creation of it      //
//  If you take a snippet from this code for physics reasons      //
//  or whatever else, if possible, also give credit for its       //
//  source origin                                                 //
//                                                                //
//  Importing: Remember to import Dummy.mdl and possibly the      //
//  object data when importing this spell (just the ability and   //
//  dummy unit) note that importing the dummy unit object should  //
//  be done AFTER importing Dummy.mdl, if not, then you will      //
//  need to set the model of the dummy to Dummy.mdl yourself, if  //
//  you would like to change what your dummy unit is you can,     //
//  but it will still need Dummy.mdl for this spell to work       //
//  If you have problems, make sure you read the readme first     //
//  and follow it to the best of your abilities before posting    //
//  comments                                                      //
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//  README:                                                       //
//    Before modifying this spell a few things need to be         //
//    understood and read, this is one of those things, while     //
//    most modification can be considered intuitive, it still     //
//    helps to read through these intstructions, as they will     //
//    inform you about how to configure this spell to your        //
//    desire.                                                     //
//----------------------------------------------------------------//
//  Initial importing: The variable creator trigger can be        //
//  imported first and if you have the correct settings (file,    //
//  preferences, General, automatically create unknown variables  //
//  checked, then when you pasta in the variable creator it       //
//  will automatically give you all the variables you need for    //
//  this spell                                                    //
//----------------------------------------------------------------//
//  This configuration is ordered by category of use, and not     //
//  alphabetically, the ones you're most likely to want to        //
//  change, are earlier in the readme, the most essential being   //
//  first. These categories are:                                  //
//                                                                //
//  - Data Values: The most essential to change, otherwise the    //
//                 spell will simply not function                 //
//                                                                //
//  - ChronoKinetic: Fancy word for affecting the flow of time    //
//                 Contains things like the duration of the       //
//                 spell, the Timer speed and Shard Spawn rate    //
//                                                                //
//  - Power: Controls the aspects of the speed of the shards      //
//                 based on the Mass, and Radius of the Portal    //
//                                                                //
//  - Damage: Controls the AOE and damage (health and mana)       //
//                 values each individual Shard has               //
//                                                                //
//  - Aesthetics: Controls the Appearences of the ability - the   //
//                 models used, the scales of those models and    //
//                 so on                                          //
//                                                                //
//  - Damage Information: Contains things like weapontypes and    //
//                 damage types, etc.                             //
//                                                                //
//  - Other Attributes: Contains the world gravity, death timer   //
//                 Height let and the celestial Gravitational     //
//                 constant.                                      //
//----------------------------------------------------------------//
//                        DATA VALUES                             //
//----------------------------------------------------------------//
//  Dummy ID: This is the raw data of the dummy unit, to see      //
//  raw data in the object editor, press Ctrl + D, doing this     //
//  again will switch it back, if you want to change this dummy   //
//  unit, follow as displayed (use the first 4 characters in      //
//  the raw data and put them in ' markers)                       //
constant function DE_DummyID takes nothing returns integer
    return 'u005'
endfunction
//----------------------------------------------------------------//
//  Spell ID: This is done in the same manner as the Dummy ID     //
//  except that this time, you're doing it with ability raw       //
//  data, see the dummy unit if you do not know already how to    //
//  view raw data                                                 //
constant function DE_SpellID takes nothing returns integer
    return 'A0EO'
endfunction
//----------------------------------------------------------------//
//                        CHRONOKINETIC                           //
//----------------------------------------------------------------//
//  Timer Speed: The default for this is 0.03, it determines how  //
//  many times per second these triggers are ran, normally you    //
//  want to leave this at 0.03, but 0.04 and prehaps 0.05         //
//  would be good options if you computer lags a bit.             //
constant function DE_TimerSpeed takes nothing returns real
    return 0.03
endfunction
//----------------------------------------------------------------//
//  Duration Base: Determines how long each cast will last as a   //
//  base value - this is to help give better control when         //
//  scaling abilities while not having to change values for each  //
//  level, cutting out a lot of configuration time, the value is  //
//  in seconds (1.00 = 1second)                                   //
constant function DE_DurationBase takes nothing returns real
    return 3.
endfunction
//----------------------------------------------------------------//
//  Duration Per Level: Deter,omes jpw ;pmg eacj casy wo;; as a   //
//  per level value - at level one this will be applied once,     //
//  twice at level two and so forth, it is added on to the base   //
//  value to come to the actual duration of the spell instance    //
constant function DE_DurationPerLevel takes nothing returns real
    return 0.0
endfunction
//----------------------------------------------------------------//
//  Spawn Rate Base: A base value, this controls how many         //
//  seconds there are between each Shard being created, if this   //
//  is the same or lower (the sum total of the Base and Per       //
//  Level) is lower or equal to the timer speed, then one Shard   //
//  will be made every Timer Speed seconds (Time is a decimal     //
//  value, 0.5 is half a second)                                  //
constant function DE_SpawnRateBase takes nothing returns real
    return 0.03
endfunction
//----------------------------------------------------------------//
//  Spawn Rate Per Level: The other part to the spawn rate        //
//  remember that it's a decimal value and the lower it is, the   //
//  faster Shards are created, so for this per level you'll       //
//  normally either want a negative value, or 0.00, though you    //
//  are not limited to such values                                //
constant function DE_SpawnRatePerLevel takes nothing returns real
    return 0.0
endfunction
//----------------------------------------------------------------//
//                            POWER                               //
//----------------------------------------------------------------//
//  Radius Base: This Base value determines how far out from the  //
//  center the shards are created, it also affects the gravity    //
//  strength of the Portal - the smaller the radius in relation   //
//  to it's Mass, the higher the gravitational effect and the     //
//  more volatile the Shards will be                              //
constant function DE_RadiusBase takes nothing returns real
    return 100.00
endfunction
//----------------------------------------------------------------//
//  Radius Per Level: The per level component to the Radius,      //
//  works the same all the other per level factors, giving this   //
//  a negative value will make your Portal smaller but more       //
//  volatile each level, and a positive value will make it large  //
//  and more stable                                               //
constant function DE_RadiusPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Mass Base: the Mass within the Portal, the main strength of   //
//  the gravitational pull, larger numbers will decrease          //
//  stability and increase the speed the Shards move, lowering    //
//  it makes it more stable, but unlike the Radius, it does not   //
//  affect the size of your Portal, works well for a baseline     //
//  when testing different levels of instability or stability     //
//  when getting your preferences for the spell                   //
constant function DE_MassBase takes nothing returns real
    return 2000.00
endfunction
//----------------------------------------------------------------//
//  Mass Per Level: the Per level component of the Mass can make  //
//  the spell more stable or volatile as it levels up without     //
//  changing it's size, remember that it is applied once at level //
//  one, so the values 800 and 400 (the defaults) yeild 1200      //
//  Mass at level one                                             //
constant function DE_MassPerLevel takes nothing returns real
    return 800.00
endfunction
//----------------------------------------------------------------//
//                            DAMAGE                              //
//----------------------------------------------------------------//
//  Shard AOE Base: Determines the area of effect of the shards   //
//  90 is melee range, 40 is directly on top, 20 is probably too  //
//  small an area to work and 400 to large, try different values  //
//  and see what you like                                         //
constant function DE_ShardAOEBase takes nothing returns real
    return 110.00
endfunction
//----------------------------------------------------------------//
//  Shard AEO Per Level: Normally not used, but here for your     //
//  preferences, allows you to adjust the area of effect of your  //
//  shards as they level up, normally only making the area larger //
//  makes logical sense, or not changing it at all                //
constant function DE_ShardAOEPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Health Damage Base: This is the damage the spell deals to     //
//  all the units within the AOE on impact with a shard, you'll   //
//  want to make this fairly relative to the number of shards     //
//  you have, 75 shards with 100 damage each is 7500 damage in    //
//  one cast of the spell - that's a lot of potential damage in   //
//  a spell which has no cooldown by default, note that this      //
//  damage is not true damage - enemies will have their armour    //
//  applied and reduce this damage based on their armour type     //
//  vs your damage type                                           //
function DE_HealthDamageBase takes unit u returns real
    return ( ( GetUnitState(u, UNIT_STATE_MAX_MANA) + 1500. ) * 10. ) + ( ( ( GetUnitState(u, UNIT_STATE_MAX_MANA) + 1500. ) * 10. ) * ( 1. - ( GetWidgetLife(u) / GetUnitState(u, UNIT_STATE_MAX_LIFE) ) ) )
endfunction
//----------------------------------------------------------------//
//  Health Damage Per Level: For changing the amount of damage    //
//  you want to deal with each shard as you level up, normally    //
//  this is your main source of increased damage as the spell     //
//  levels up rather than the other factors, it makes little      //
//  sense to not have this as a positive value of some number     //
//  (25% of your total level 1 damage seems like a good number,   //
//  i.e. if your combined level one damage is 100, roughly 25 of  //
//  that damage should probably be coming from this per level     //
//  value                                                         //
constant function DE_HealthDamagePerLevel takes nothing returns real
    return 0.
endfunction
//----------------------------------------------------------------//
//  Mana Damage Base: Unlike Health damage the mana damage is     //
//  true damage - no matter how much armour they have, exactly    //
//  these values will be subtracted from their mana, normally     //
//  this is 0 as mana damage is mostly useless except vs certain  //
//  enemies, but it's still good to have the option to be able    //
//  to have it if you want                                        //
constant function DE_ManaDamageBase takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Mana Damage Per Level: Per level component of the normally    //
//  disused mana damage, not any real sense in having a below 0   //
//  amount here, since it'll only make it weaker, like the        //
//  health damage I suggest this to be 25% of your total mana     //
//  damage of your level 1 version                                //
constant function DE_ManaDamagePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//                        AESTHETICS                              //
//----------------------------------------------------------------//
//  Portal Model:  This determines the model used for your        //
//  main portal, you want to use the model path and paste it      //
//  into the double quotes or " markers, if the path has only     //
//  single slashes (\) you'll need to changeb it to double slash  //
//  (\\) before you save, the spell will not work if you do not   //
//  do this (if you acidentally save with the single slash (\)    //
//  it will still save but you may find yourself having a         //
//  lingering Progress bar at full percentage, you can ignore it  //
//  for the most part, but if you have it, you probably haven't   //
//  entered this field correctly. Get the model paths from the    //
//  Object editor - find the model you want (the model, not the   //
//  unit, in the models list, select it and hit enter twice,      //
//  then select the path (will look similar to this default       //
//  value, and paste in it here) I suggest doing this with a      //
//  unit of no value (changing the model to get the model path)   //
//  and then reset the field afterwards to get the unit back to   //
//  normal                                                        //
constant function DE_PortalModel takes nothing returns string
    return "war3mapImported\\EMPBomb.mdx"
endfunction
//----------------------------------------------------------------//
//  Shard Model: The model used for your individual shards,       //
//  follow the steps in the "Portal Model" section if you need    //
//  information on how to change these values successfully        //
constant function DE_ShardModel takes nothing returns string
    return "war3mapImported\\Soulfire Missile Blue.mdx"
endfunction
//----------------------------------------------------------------//
//  Impact Model: The model used for your individual shards,      //
//  follow the steps in the "Portal Model" section if you need    //
//  information on how to change these values successfully        //
constant function DE_ImpactModel takes nothing returns string
    return "war3mapImported\\PlasmaGrenade.mdx"
endfunction
//----------------------------------------------------------------//
//  Attachment Point: This determines where on the unit the       //
//  model is placed, "origin", "chest", "head", "overhead" are    //
//  all good places to put the model, switch them around to see   //
//  which you prefer the most, "foot" and "hand" are less so as   //
//  they're offsetted from the center                             //
constant function DE_AttachmentPoint takes nothing returns string
    return "origin"
endfunction
//----------------------------------------------------------------//
//  Portal Height Base: This is how height the portal is off the  //
//  floor (it is added onto the terrain Z) you'll want it a good  //
//  distance off the ground (unles you want Shards to smack into  //
//  the ground while the spell is still going off, which is a     //
//  viable thing to do for this spell) but not so high as to      //
//  send the Shards halfway across the map, 400 is default        //
constant function DE_PortalHeightBase takes nothing returns real
    return 200.00
endfunction
//----------------------------------------------------------------//
//  Portal Height Per Level: The per level for the height of the  //
//  portal, generally this'll be set at 0 as the spell changes    //
//  more on functionality, than on effectiveness depending on     //
//  height - so changing this value as it levels up will not      //
//  necessarily make it any stronger or weaker                    //
constant function DE_PortalHeightPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Portal Scale Base: this is the scale of the portal model      //
//  it's a decimal percentage (1.00 = 100%) as the largest part   //
//  of the spell you'll normally want this at, at least 100%      //
//  depending on the model, generally a good idea to try to line  //
//  it up with your portal radius as to get the best effect out   //
//  of it                                                         //
constant function DE_PortalScaleBase takes nothing returns real
    return 5.00
endfunction
//----------------------------------------------------------------//
//  Portal Scale Per Level: Used for changing the portal scale    //
//  as it levels up - good in combination with radius change per  //
//  level as to stay correct relatively                           //
constant function DE_PortalScalePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Shard Scale Base: Scales the Shards that are created by the   //
//  portal, normally you'll want them significantly smaller that  //
//  the portal 10% (0.10) is a good size, but for some models a   //
//  bit bigger might be good, be sure to play around with this    //
//  to get the size you want and looks best in your opinion       //
constant function DE_ShardScaleBase takes nothing returns real
    return .01
endfunction
//----------------------------------------------------------------//
//  Shard Scale Per Level: Also for use with making the portal    //
//  seem relatively the same size as it levels up - or simply     //
//  to make them bigger to show increased AOE, Damage, more or    //
//  less to show anything about the spell being stronger as it    //
//  levels up and becomes more powerful                           //
constant function DE_ShardScalePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//                    DAMAGE INFORMATION                          //
//----------------------------------------------------------------//
//  Damage Type: These determine the damagetypes, changing this   //
//  will modify the damage multiplyers vs certain enemies         //
//  the standard is DAMAGE_TYPE_MAGIC, note that this spell       //
//  automatically discludes magic immunes, so changing this       //
//  damage type will not make them start taking damage            //
constant function DE_AttackType takes nothing returns attacktype
    return ATTACK_TYPE_NORMAL
endfunction
//----------------------------------------------------------------//
//  Attack Type: This is very much so basically the same as       //
//  Damage Type, generally you'll want this to match with it      //
//  as such the default is ATTACK_TYPE_MAGIC, though Damagetype   //
//  is a key factor for determining bonuses rather than this      //
//  but unlike weapontype, you cannot have null as a setting      //
constant function DE_DamageType takes nothing returns damagetype
    return DAMAGE_TYPE_FORCE
endfunction
//----------------------------------------------------------------//
//  Weapon Type: This alters what kind of weapon type is used by  //
//  the spell, those without knowledge of weapontypes don't       //
//  worry, you're not missing much, this spell doesn't really     //
//  use it, hence the default of null, but if you want to use     //
//  them, no reason to not.                                       //
constant function DE_WeaponType takes nothing returns weapontype
    return null
endfunction
//----------------------------------------------------------------//
//                     OTHER ATTRIBUTES                           //
//----------------------------------------------------------------//
//  Gravity: Determines the worldly gravity strength used to      //
//  pull the shards back to the ground after they have been       //
//  freed from the portal, having a lower gravity increases the   //
//  spread range, higher lowers it, the default is 1/8 of the     //
//  earthly gravity of 9.81, beng 1.22625                         //
constant function DE_Gravity takes nothing returns real
    return 1.22625
endfunction
//----------------------------------------------------------------//
//  Gravitational Constant: This is the constant reprisented by   //
//  G in Celestial Physics and Mechanics. Normally it's           //
//  6.67384 x 10^-11 N (m/kg)^2 but for Warcraft purposes I       //
//  cranked it up a bit, (x 10^11 to be exact) changing it may    //
//  yeild interesting results, but I take no responcibility if    //
//  you do something silly and crash the game by making it        //
//  really high                                                   //
constant function DE_GravitationalConstant takes nothing returns real
    return 6.67384
endfunction
//----------------------------------------------------------------//
//  Height Let: This is a small let so that projectiles nearly    //
//  touching the floor, will be treated as actually touching it   //
//  This is to prevent graphical errors because models cannot     //
//  sink into the floor by reducing their fly height              //
//  5 is default 10 is probably the max you can reasonably give   //
//  this                                                          //
constant function DE_HeightLet takes nothing returns real
    return 5.00
endfunction
//----------------------------------------------------------------//
//  Death Timer: Determines how long after the death of a dummy   //
//  will it be removed from the game completely, this is so       //
//  death effects, if any can finish playing before the unit is   //
//  removed, 1.8 is default, 2 is probably excessive and in some  //
//  cases it's possible that 1 could be too little                //
constant function DE_DeathTimer takes nothing returns real
    return 1.80
endfunction
//----------------------------------------------------------------//
//  You have now reached the end of the configuration, below are  //
//  the functions used to run the spell, beyond this point if     //
//  you find any constant values (indicated in Blue like the      //
//  other constants here if you have standard syntax highlighting //
//  they're there for a reason and don't fiddle with them, to     //
//  actually make any modifications I hope you're an experienced  //
//  programmer, though do not hassle for help because I don't     //
//  take responcibility for other people's programming skills     //
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//  Function used for finding the Z height of a location, since   //
//  it cannot be done with co-ordinates, a recycled location is   //
//  used constantly.                                              //
////////////////////////////////////////////////////////////////////
function DE_GetZ takes real x,real y returns real

    //Gets the location Z of the selected location
    call MoveLocation(DE_ZLoc, x, y)
    return GetLocationZ(DE_ZLoc)
    
endfunction

////////////////////////////////////////////////////////////////////
//  Target filter function - passed units and players and checks  //
//  if the unit is allowed to be targetted by this spell          //
////////////////////////////////////////////////////////////////////
function DE_TargetFilter takes unit u,player pl returns boolean

    //Checks if the unit can be used as a target
    if ( IsUnitType(u, UNIT_TYPE_GROUND) ) and ( not IsUnitType(u, UNIT_TYPE_STRUCTURE) ) and ( not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) ) and ( IsUnitEnemy(u, pl) ) and ( GetUnitTypeId(u) != ('u005') ) and ( not IsUnitType(u, UNIT_TYPE_DEAD) ) then // INLINED!!
        return true
    endif
    
    return false

endfunction

////////////////////////////////////////////////////////////////////
//  Function for running the main parts of the spell, creates     //
//  new shards and destroys old portals, and does all the         //
//  recycling and damaging of targets, as well as shard movement  //
////////////////////////////////////////////////////////////////////
function DE_Loop takes nothing returns nothing

    //Sets up all the locals needed for this section
    local integer TempInt= 0
    local integer TempInt2= 0
    local integer TempNode= 0
    local integer Node= 0
    local real Angle
    local real Angle2
    local real Distance
    local real x
    local real x2
    local real dx
    local real y
    local real y2
    local real dy
    local real z
    local unit u
    local player pl
    
    loop
        //Moves to the next node
        set TempInt=TempInt + 1
        exitwhen TempInt > DE_SpellCounter
        set Node=DE_NextNode[Node]
        
        if ( DE_StageID[Node] == 2 ) then
            
            //Initialises data required for movement
            set x=GetUnitX(DE_Unit[Node])
            set y=GetUnitY(DE_Unit[Node])
            set DE_CurrentZ[Node]=DE_CurrentZ[Node] + DE_ZVelocity[Node]
            set z=DE_GetZ(x , y)
            set dy=DE_PortalY[Node] - y
            set dx=DE_PortalX[Node] - x
            set Angle=Atan2(dy, dx)
            set Angle2=Atan2(DE_PortalZ[Node] - DE_CurrentZ[Node], SquareRoot(dx * dx + dy * dy))
            
            //Checks if the projectile has crashed
            if ( DE_CurrentZ[Node] - z < (5.00) ) then // INLINED!!
                //Yes it crashed, deassociating the unit
                set DE_StageID[Node]=3
                set pl=GetOwningPlayer(DE_OriginalCaster[Node])
               
                call DestroyEffect(DE_CurrentEffect[Node])
                call DestroyEffect(AddSpecialEffect(("war3mapImported\\PlasmaGrenade.mdx"), x, y)) // INLINED!!
                //Select Units to damage
                call GroupEnumUnitsInRange(DE_TempGroup, x, y, DE_ShardAOE[Node], null)
                       
                loop
                    //Scanning through
                    set u=FirstOfGroup(DE_TempGroup)
                    exitwhen u == null
                           
                    //Select all the units which are to be damaged
                    if DE_TargetFilter(u , pl) then
                        //Dealing health and mana damage
                        call UnitDamageTargetEx(DE_OriginalCaster[Node] , u , DE_HealthDamage[Node] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_FORCE , (null)) // INLINED!!
                        call SetUnitState(u, UNIT_STATE_MANA, ( GetUnitState(u, UNIT_STATE_MANA) - DE_ManaDamage[Node] ))
                    endif
                    
                    //Remove the unit from the unit group
                    call GroupRemoveUnit(DE_TempGroup, u)
                           
                endloop
                           
                //Removes the projectile
                call KillUnit(DE_Unit[Node])
               
                //Nulls variables
                set u=null
                set pl=null
            else
                //Setting the new locations X and Y for this instance
                set x2=x + DE_XVelocity[Node]
                set y2=y + DE_YVelocity[Node]
                
                if ( IsUnitInGroup(DE_Unit[Node], DE_GravitatedShard) ) then
                    //Calculating the new velocities (will be used next time this runs)
                    set DE_ZVelocity[Node]=DE_ZVelocity[Node] + DE_BaseVelocity[Node] * Sin(Angle2)
                    set DE_XVelocity[Node]=DE_XVelocity[Node] + DE_BaseVelocity[Node] * Cos(Angle) * Cos(Angle2)
                    set DE_YVelocity[Node]=DE_YVelocity[Node] + DE_BaseVelocity[Node] * Sin(Angle) * Cos(Angle2)
                else
                    set DE_ZVelocity[Node]=DE_ZVelocity[Node] - (1.22625) // INLINED!!
                endif
                
                //Makes sure the new location is within the map bounds
                if ( ( DE_MapMinX <= x2 ) and ( x2 <= DE_MapMaxX ) and ( DE_MapMinY <= y2 ) and ( y2 <= DE_MapMaxY ) ) then
                    call SetUnitX(DE_Unit[Node], x2)
                    call SetUnitY(DE_Unit[Node], y2)
                endif
                
                //Sets the correct fly height
                call SetUnitFlyHeight(DE_Unit[Node], DE_CurrentZ[Node] - z, 0.00)
            endif
      
        elseif ( DE_StageID[Node] == 1 ) then
            //Increases the duration of both artificial wait timers
            set DE_CurrentShardDelay[Node]=DE_CurrentShardDelay[Node] + (0.03) // INLINED!!
            set DE_CurrentDuration[Node]=DE_CurrentDuration[Node] + (0.03) // INLINED!!
            
            //Checks if the spell has ran out of duration
            if ( DE_CurrentDuration[Node] >= DE_Duration[Node] ) then
                set DE_StageID[Node]=3
                call DestroyEffect(DE_CurrentEffect[Node])
                
                //Finds all the affected Shards and releases them
                loop
                    set TempInt2=TempInt2 + 1
                    exitwhen TempInt2 > DE_SpellCounter
                    set TempNode=DE_NextNode[TempNode]

                    if ( DE_Portal[TempNode] == DE_Unit[Node] ) then
                        call GroupRemoveUnit(DE_GravitatedShard, DE_Unit[TempNode])
                    endif

                endloop

            //Checks if it's time to make a new shard
            elseif ( DE_CurrentShardDelay[Node] >= DE_SpawnRate[Node] ) then
                //Resets the timer
                set DE_CurrentShardDelay[Node]=0.00
                
                //Sets up a random place to put the new Shard
                set Angle=GetRandomReal(0, 360)
                set Angle2=GetRandomReal(0, 180)
                set Distance=Cos(Angle2) * DE_Radius[Node]
                
                if ( Distance < 0 ) then
                    set Distance=Distance * - 1
                endif
            
                set DE_SpellCounter=DE_SpellCounter + 1
                set x=DE_PortalX[Node] + Distance * Cos(Angle * bj_DEGTORAD)
                set y=DE_PortalY[Node] + Distance * Sin(Angle * bj_DEGTORAD)
                set z=Sin(Angle2) * DE_Radius[Node] + DE_PortalZ[Node]
                
                //Checking for recycleable Nodes
                if ( DE_RecycleableNodes == 0 ) then
                    set DE_NodeNumber=DE_NodeNumber + 1
                    set TempNode=DE_NodeNumber
                else
                    set DE_RecycleableNodes=DE_RecycleableNodes - 1
                    set TempNode=DE_RecycleNodes[DE_RecycleableNodes]
                endif

                //Sets up this Node
                set DE_NextNode[TempNode]=0
                set DE_NextNode[DE_LastNode]=TempNode
                set DE_PrevNode[TempNode]=DE_LastNode
                set DE_LastNode=TempNode
        
                //Sets up the data for the Shard
                set DE_HealthDamage[TempNode]=DE_HealthDamage[Node]
                set DE_ManaDamage[TempNode]=DE_ManaDamage[Node]
                set DE_Portal[TempNode]=DE_Unit[Node]
                set DE_PortalX[TempNode]=DE_PortalX[Node]
                set DE_PortalY[TempNode]=DE_PortalY[Node]
                set DE_PortalZ[TempNode]=DE_PortalZ[Node]
                set DE_ShardAOE[TempNode]=DE_ShardAOE[Node]
                set DE_OriginalCaster[TempNode]=DE_OriginalCaster[Node]
                set DE_BaseVelocity[TempNode]=DE_BaseVelocity[Node]
                set DE_CurrentZ[TempNode]=z
                set DE_StageID[TempNode]=2
                
                //Sets up initialisation Velocities (this is to give the shards a bit of a kick of instability in their orbit)
                set DE_ZVelocity[TempNode]=DE_BaseVelocity[TempNode] * Sin(Angle2)
                set DE_XVelocity[TempNode]=DE_BaseVelocity[TempNode] * Cos(Angle) * Cos(Angle2)
                set DE_YVelocity[TempNode]=DE_BaseVelocity[TempNode] * Sin(Angle) * Cos(Angle2)
                
                //Creates the unit and applies Aesthetics
                set DE_Unit[TempNode]=CreateUnit(Player(14), ('u005'), x, y, 0.00) // INLINED!!
                if UnitAddAbility(DE_Unit[TempNode], 'Amrf') and UnitRemoveAbility(DE_Unit[TempNode], 'Amrf') then
                endif
                set DE_CurrentEffect[TempNode]=AddSpecialEffectTarget(("war3mapImported\\Soulfire Missile Blue.mdx"), DE_Unit[TempNode], ("origin")) // INLINED!!
                call SetUnitScale(DE_Unit[TempNode], DE_ShardScale[Node], 0.00, 0.00)
                call SetUnitFlyHeight(DE_Unit[TempNode], z, 0.00)
                
                //Adds them to the group of Gravitated Shards
                call GroupAddUnit(DE_GravitatedShard, DE_Unit[TempNode])
                
            endif
                
        elseif ( DE_CurrentDeathTimer[Node] < (1.80) ) then // INLINED!!
            set DE_CurrentDeathTimer[Node]=0.00
            
            //Removes the projectile
            call RemoveUnit(DE_Unit[Node])
            
            if ( DE_LastNode == Node ) then
                set DE_LastNode=DE_PrevNode[Node]
            endif
               
            //Recycles the node
            set DE_RecycleNodes[DE_RecycleableNodes]=Node
            set DE_RecycleableNodes=DE_RecycleableNodes + 1
            set DE_NextNode[DE_PrevNode[Node]]=DE_NextNode[Node]
            set DE_PrevNode[DE_NextNode[Node]]=DE_PrevNode[Node]
            set DE_SpellCounter=DE_SpellCounter - 1
            set TempInt=TempInt - 1

            //Destroys the timer when not in use
            if ( DE_SpellCounter == 0 ) then
                call DestroyTimer(GetExpiredTimer())
            endif
            
        else
            set DE_CurrentDeathTimer[Node]=DE_CurrentDeathTimer[Node] + (0.03) // INLINED!!
        endif
        
    endloop
    
endfunction

////////////////////////////////////////////////////////////////////
//  Function runs when a new instance is to be created - runs     //
//  as a condition but always returns false, creates a new        //
//  portal if the correct spell was cast                          //
////////////////////////////////////////////////////////////////////
function DE_NewInstance takes nothing returns boolean

    //Sets up locals
    local integer i= 0
    local real fxa
    local real fxd
    local unit u
    local integer Node
    local real rLevel
    local real x
    local real y
    //Checks if the spell cast is the correct spell
    if ( GetSpellAbilityId() == ('A0EO') ) then // INLINED!!
        set u=GetTriggerUnit()
        set x=GetUnitX(u)
        set y=GetUnitY(u)
        
        call DestroyEffect(AddSpecialEffect("war3mapImported\\AncientExplodeBlue.mdx", x, y))
        set i=10
        loop
        exitwhen i == 0
        set fxd=GetRandomReal(20., 350.)
        set fxa=GetRandomReal(0., 360.)
        call DestroyEffect(AddSpecialEffect("war3mapImported\\AncientExplodeBlue.mdx", x + fxd * Cos(fxa * bj_DEGTORAD), y + fxd * Sin(fxa * bj_DEGTORAD)))
        set i=i - 1
        endloop
        call UnitRemoveAbility(u, 'A0EP')
        call UnitRemoveAbility(u, 'A0EO')
        call UnitAddAbility(u, 'A0EN')
        set CORE_LVL[GetUnitUserData(u)]=0
        //call UnitAddAbility(u,'A0EZ')
        //call SetUnitAbilityLevel(u,'A0EZ',2)
        //call UnitRemoveAbility(u,'A0EZ')
		call RemoveUnitBonus(u , BONUS_MANA)
		
        call SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MAX_MANA))
        set rLevel=I2R(GetUnitAbilityLevel(u, ('A0EO'))) // INLINED!!
        //Checking for recycleable Nodes
        if ( DE_RecycleableNodes == 0 ) then
            set DE_NodeNumber=DE_NodeNumber + 1
            set Node=DE_NodeNumber
        else
            set DE_RecycleableNodes=DE_RecycleableNodes - 1
            set Node=DE_RecycleNodes[DE_RecycleableNodes]
        endif

        //Sets up this Node
        set DE_NextNode[Node]=0
        set DE_NextNode[DE_LastNode]=Node
        set DE_PrevNode[Node]=DE_LastNode
        set DE_LastNode=Node

        //Sets up the portal data
        set DE_PortalHeight[Node]=(200.00) + ( (0.00) * rLevel ) // INLINED!!
        set DE_Mass[Node]=(2000.00) + ( (800.00) * rLevel ) // INLINED!!
        set DE_Radius[Node]=(100.00) + ( (0.00) * rLevel ) // INLINED!!
        set DE_BaseVelocity[Node]=( ( (6.67384) * DE_Mass[Node] ) / DE_Radius[Node] ) * (0.03) // INLINED!!
        set DE_HealthDamage[Node]=DE_HealthDamageBase(u) + ( (0.) * rLevel ) // INLINED!!
        set DE_ManaDamage[Node]=(0.00) + ( (0.00) * rLevel ) // INLINED!!
        set DE_SpawnRate[Node]=(0.03) + ( (0.0) * rLevel ) // INLINED!!
        set DE_Duration[Node]=(3.) + ( (0.0) * rLevel ) // INLINED!!
        set DE_ShardScale[Node]=(.01) + ( (0.00) * rLevel ) // INLINED!!
        set DE_ShardAOE[Node]=(110.00) + ( (0.00) * rLevel ) // INLINED!!
        set DE_PortalX[Node]=x
        set DE_PortalY[Node]=y
        set DE_PortalZ[Node]=DE_PortalHeight[Node] + DE_GetZ(x , y)
        set DE_CurrentShardDelay[Node]=0.00
        set DE_CurrentDuration[Node]=0.00
        set DE_OriginalCaster[Node]=u
        set DE_StageID[Node]=1
        set DE_SpellCounter=DE_SpellCounter + 1
        
        //Creates the unit and applies Aesthetics
        set DE_Unit[Node]=CreateUnit(Player(14), ('u005'), x, y, 0.00) // INLINED!!
        if UnitAddAbility(DE_Unit[Node], 'Amrf') and UnitRemoveAbility(DE_Unit[Node], 'Amrf') then
        endif
        set DE_CurrentEffect[Node]=AddSpecialEffectTarget(("war3mapImported\\EMPBomb.mdx"), DE_Unit[Node], ("origin")) // INLINED!!
        call SetUnitScale(DE_Unit[Node], (5.00) + ( (0.00) * rLevel ), 0.00, 0.00) // INLINED!!
        call SetUnitFlyHeight(DE_Unit[Node], DE_PortalHeight[Node], 0.00)
        
        //Checks if it's the only portal on the map
        if ( DE_SpellCounter == 1 ) then
            call TimerStart(CreateTimer(), (0.03), true, function DE_Loop) // INLINED!!
        endif
        
        //Nulls variables
        set u=null
        
    endif
    
    return false

endfunction
////////////////////////////////////////////////////////////////////
//  Function for setting up the other functions and initialising  //
//  the map bounds variables and Z finder for locations           //
////////////////////////////////////////////////////////////////////
function InitTrig_Discharge_Aether takes nothing returns nothing

    //Sets up locals
    local trigger l__DE= CreateTrigger()
    local integer index= 0
    
    set DE_AOE[0]=0.00
    set DE_BaseVelocity[0]=0.00
    set DE_CurrentDeathTimer[0]=0.00
    set DE_CurrentDuration[0]=0.00
    set DE_CurrentEffect[0]=DE_CurrentEffect[0]
    set DE_CurrentShardDelay[0]=0.00
   set DE_CurrentZ[0]=0.00
    set DE_Duration[0]=0.00
    //set DE_GravitatedShard = null
   set DE_HealthDamage[0]=0.00
      set DE_LastNode=0
   set DE_ManaDamage[0]=0.00
   set DE_MapMaxX=0.00
  set DE_MapMaxY=0.00
    set DE_MapMinX=0.00
    set DE_MapMinY=0.00
    set DE_Mass[0]=0.00
    set DE_NextNode[0]=0
      set DE_NodeNumber=0
    //set DE_OriginalCaster[0] = DE_OriginalCaster[0]
    set DE_Portal[0]=DE_Portal[0]
    set DE_PortalHeight[0]=0.00
    set DE_PortalX[0]=0.00
    set DE_PortalY[0]=0.00
    set DE_PortalZ[0]=0.00
      set DE_PrevNode[0]=0
    set DE_Radius[0]=0.00
      set DE_RecycleNodes[0]=0
      set DE_RecycleableNodes=0
    set DE_ShardAOE[0]=0.00
    set DE_ShardScale[0]=0.00
    set DE_SpawnRate[0]=0.00
    set DE_SpellCounter=0
    set DE_StageID[0]=0
    //set DE_TempGroup = null
    set DE_Unit[0]=null
    set DE_XVelocity[0]=0.00
    set DE_YVelocity[0]=0.00
    //set DE_ZLoc = DE_ZLoc
    set DE_ZVelocity[0]=0.00

    //Initialise the event for every player
    loop
        call TriggerRegisterPlayerUnitEvent(l__DE, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
        set index=index + 1
        exitwhen index == bj_MAX_PLAYER_SLOTS
    endloop
   
    call TriggerAddCondition(l__DE, Condition(function DE_NewInstance))
   
    //Sets up the map bounds the spell with use
    set DE_MapMaxX=GetRectMaxX(bj_mapInitialPlayableArea)
    set DE_MapMinX=GetRectMinX(bj_mapInitialPlayableArea)
    set DE_MapMaxY=GetRectMaxY(bj_mapInitialPlayableArea)
    set DE_MapMinY=GetRectMinY(bj_mapInitialPlayableArea)

    //Sets up the Z location finder
    set DE_ZLoc=Location(0, 0)
    //Nulls variables
    set l__DE=null
   
endfunction
// scope DischargeAether ends
////////////////////////////////////////////////////////////////////
//  End of the spell                                              //
////////////////////////////////////////////////////////////////////
//===========================================================================
// Trigger: Aether Core
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0


// scope Ascension begins


function Ascension__OnSpell takes nothing returns boolean
local unit c= GetKillingUnit()
local integer lvl= GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], Ascension__SPELL_ID2)
        if CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])] < 100 and lvl > 0 and GetOwningPlayer(GetTriggerUnit()) != Player(15) and GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(LC[1 + ( GetPlayerId(GetOwningPlayer(GetKillingUnit())) )]) and GetKillingUnit() != null then
            
            if CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])] == null then
            set CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])]=0
            endif
            
            //call UnitAddAbility(LC[1+GetPlayerId(GetOwningPlayer(GetKillingUnit()))],SPELL_ID)
            //call SetUnitAbilityLevel(LC[1+GetPlayerId(GetOwningPlayer(GetKillingUnit()))],SPELL_ID,2)
            //call UnitRemoveAbility(LC[1+GetPlayerId(GetOwningPlayer(GetKillingUnit()))],SPELL_ID)
            


		call AddUnitBonus(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))] , BONUS_MANA , 20 * ( 1 + .02 * GetHeroLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))]) ))

            set CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])]=CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])] + 1
           // call BJDebugMsg("Aether Core Level: " +I2S(GetUnitAbilityLevel(LC[1+GetPlayerId(GetOwningPlayer(GetKillingUnit()))],SPELL_ID)))
            if CORE_LVL[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))])] == 100 then
            call UnitRemoveAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], Ascension__SPELL_ID2)
            call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], Ascension__SPELL_ID3)
            call UnitAddAbility(LC[1 + GetPlayerId(GetOwningPlayer(GetKillingUnit()))], Ascension__SPELL_ID4)
            endif
        endif
        return false
endfunction
//===========================================================================
function Ascension__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(trig, Condition(function Ascension__OnSpell))
endfunction
// scope Ascension ends
//===========================================================================
// Trigger: Aethereal Mastery
//===========================================================================
//TESH.scrollpos=140
//TESH.alwaysfold=0
// scope AetherealMastery begins

function s__AetherealMastery__MC_destroy takes integer this returns nothing
            set s__AetherealMastery__MC_u[this]=null
            set s__AetherealMastery__MC_target[this]=null
            call s__AetherealMastery__MC_deallocate(this)
        endfunction

    function AetherealMastery__FilterGroup takes nothing returns boolean
    
    if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(AetherealMastery__CASTER)) and IsUnitVisible(GetFilterUnit(), GetOwningPlayer(AetherealMastery__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) then
    set AetherealMastery__RANDOMI=AetherealMastery__RANDOMI + 1
    set AetherealMastery__RANDOMU[AetherealMastery__RANDOMI]=GetFilterUnit()
    endif
    
    return false
    endfunction
    
    function AetherealMastery__FilterGroup2 takes nothing returns boolean
    
    if UnitAlive(GetFilterUnit()) and IsUnitAlly(GetFilterUnit(), GetOwningPlayer(AetherealMastery__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) then
    set AetherealMastery__RANDOMI=AetherealMastery__RANDOMI + 1
    set AetherealMastery__RANDOMU[AetherealMastery__RANDOMI]=GetFilterUnit()
    endif
    
    return false
    endfunction

    function AetherealMastery__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local unit d
    local unit targ
    
    if s__AetherealMastery__MC_cast[data] <= 0 then
    call s__AetherealMastery__MC_destroy(data)
    call ReleaseTimer(t)
    else
    set s__AetherealMastery__MC_cast[data]=s__AetherealMastery__MC_cast[data] - 1
    if s__AetherealMastery__MC_spell_id[data] != AetherealMastery__SPELL_ID3 then
    set d=CreateUnit(GetOwningPlayer(s__AetherealMastery__MC_u[data]), 'h007', GetUnitX(s__AetherealMastery__MC_u[data]), GetUnitY(s__AetherealMastery__MC_u[data]), 0.)
    else
    set d=CreateUnit(GetOwningPlayer(s__AetherealMastery__MC_u[data]), 'h007', s__AetherealMastery__MC_x[data], s__AetherealMastery__MC_y[data], 0.)
    endif
    call UnitApplyTimedLife(d, 'BTLF', 1.)
    
    if s__AetherealMastery__MC_spell_id[data] != AetherealMastery__SPELL_ID1 then
    call UnitAddAbility(d, s__AetherealMastery__MC_spell_id[data])
    call SetUnitAbilityLevel(d, s__AetherealMastery__MC_spell_id[data], s__AetherealMastery__MC_lvl[data])
    else
    call UnitAddAbility(d, 'A0F9')
    call SetUnitAbilityLevel(d, 'A0F9', s__AetherealMastery__MC_lvl[data])
    endif
    
    call SetUnitState(s__AetherealMastery__MC_u[data], UNIT_STATE_MANA, GetUnitState(s__AetherealMastery__MC_u[data], UNIT_STATE_MANA) - ( GetUnitState(s__AetherealMastery__MC_u[data], UNIT_STATE_MANA) * .1 ))
    
    if s__AetherealMastery__MC_spell_id[data] == AetherealMastery__SPELL_ID1 then
    if not UnitAlive(s__AetherealMastery__MC_target[data]) or s__AetherealMastery__MC_target[data] == null then
    set AetherealMastery__CASTER=s__AetherealMastery__MC_u[data]
    set AetherealMastery__RANDOMI=0
    call GroupEnumUnitsInRange(AetherealMastery__GROUP, GetUnitX(s__AetherealMastery__MC_u[data]), GetUnitY(s__AetherealMastery__MC_u[data]), 1400., Filter(function AetherealMastery__FilterGroup))
    if AetherealMastery__RANDOMI > 0 then
    set targ=AetherealMastery__RANDOMU[GetRandomInt(1, AetherealMastery__RANDOMI)]
    call IssueTargetOrder(d, "thunderbolt", targ)
    set AetherealMastery__RANDOMI=0
    endif
    else
    call IssueTargetOrder(d, "thunderbolt", s__AetherealMastery__MC_target[data])
    endif
    elseif s__AetherealMastery__MC_spell_id[data] == AetherealMastery__SPELL_ID2 then
    if AETHER_BUFF_LVL[GetUnitUserData(s__AetherealMastery__MC_target[data])] >= 20 or not UnitAlive(s__AetherealMastery__MC_target[data]) or s__AetherealMastery__MC_target[data] == null then
    set AetherealMastery__CASTER=s__AetherealMastery__MC_u[data]
    set AetherealMastery__RANDOMI=0
    call GroupEnumUnitsInRange(AetherealMastery__GROUP, GetUnitX(s__AetherealMastery__MC_u[data]), GetUnitY(s__AetherealMastery__MC_u[data]), 1200., Filter(function AetherealMastery__FilterGroup2))
    if AetherealMastery__RANDOMI > 0 then
    set targ=AetherealMastery__RANDOMU[GetRandomInt(1, AetherealMastery__RANDOMI)]
    call IssueTargetOrder(d, "cripple", targ)
    set AetherealMastery__RANDOMI=0
    endif
    else
    call IssueTargetOrder(d, "cripple", s__AetherealMastery__MC_target[data])
    endif
    elseif s__AetherealMastery__MC_spell_id[data] == AetherealMastery__SPELL_ID3 then
    call IssuePointOrder(d, "impale", s__AetherealMastery__MC_x[data], s__AetherealMastery__MC_y[data])
    endif
    
    call DestroyEffect(AddSpecialEffect("war3mapImported\\Stomp.mdx", GetUnitX(s__AetherealMastery__MC_u[data]), GetUnitY(s__AetherealMastery__MC_u[data])))
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .3, false, function AetherealMastery__Handler)
    endif
    
    set targ=null
    set d=null
    set t=null
    endfunction

    function AetherealMastery__Actions takes nothing returns nothing
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__AetherealMastery__MC__allocate()
    local texttag tt= CreateTextTag()
    local string text= "|cFF1C88E2M|r|cFF1A91E4u|r|cFF199AE6l|r|cFF17A3E7t|r|cFF16ACE9i|r|cFF14B5EBc|r|cFF12BEECa|r|cFF11C6EEs|r|cFF0FCFF0t|r|cFF0ED8F2 |r|cFF0CE1F4x|r|cFF0BEAF5" + I2S(AetherealMastery__CASTS + 1) + "|r|cFF09F3F7!|r"
    //call BJDebugMsg("Start Actions")
    set s__AetherealMastery__MC_u[data]=GetTriggerUnit()
    set s__AetherealMastery__MC_cast[data]=AetherealMastery__CASTS
    set s__AetherealMastery__MC_spell_id[data]=GetSpellAbilityId()
    set s__AetherealMastery__MC_lvl[data]=GetUnitAbilityLevel(s__AetherealMastery__MC_u[data], s__AetherealMastery__MC_spell_id[data])
    call SetTextTagText(tt, text, .024)
    call SetTextTagPos(tt, GetUnitX(s__AetherealMastery__MC_u[data]), GetUnitY(s__AetherealMastery__MC_u[data]), 0.0)
    call SetTextTagVelocity(tt, 0.0, 0.04)
    call SetTextTagPermanent(tt, false)
    call SetTextTagFadepoint(tt, 2.0)
    call SetTextTagLifespan(tt, 2.0)
    call SetTextTagVisibility(tt, true)
    
    //call BJDebugMsg("Handle ID: "+I2S(GetHandleId(tt)))
    
    if s__AetherealMastery__MC_spell_id[data] == AetherealMastery__SPELL_ID1 or s__AetherealMastery__MC_spell_id[data] == AetherealMastery__SPELL_ID2 then
    set s__AetherealMastery__MC_target[data]=GetSpellTargetUnit()
    else
    set s__AetherealMastery__MC_x[data]=GetSpellTargetX()
    set s__AetherealMastery__MC_y[data]=GetSpellTargetY()
    endif
    
    //call DestroyEffect(AddSpecialEffect("war3mapImported\\Stomp.mdx",GetUnitX(data.u),GetUnitY(data.u)))
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .3, false, function AetherealMastery__Handler)
    //call BJDebugMsg("End Actions")
    set tt=null
    set t=null
    set text=null
    endfunction

    function AetherealMastery__Conditions takes nothing returns boolean
    local integer chance
    local integer lvl= GetUnitAbilityLevel(GetTriggerUnit(), AetherealMastery__SPELL_ID)
    if ( GetSpellAbilityId() == AetherealMastery__SPELL_ID1 or GetSpellAbilityId() == AetherealMastery__SPELL_ID2 or GetSpellAbilityId() == AetherealMastery__SPELL_ID3 ) and lvl >= 1 then
        set chance=GetRandomInt(1, 100)
        if chance <= lvl then
        set AetherealMastery__CASTS=4
        call AetherealMastery__Actions()
        return false
        elseif chance <= lvl * 2 then
        set AetherealMastery__CASTS=3
        call AetherealMastery__Actions()
        return false
        elseif chance <= lvl * 3 then
        set AetherealMastery__CASTS=2
        call AetherealMastery__Actions()
        return false
        elseif chance <= lvl * 4 then
        set AetherealMastery__CASTS=1
        call AetherealMastery__Actions()
        return false
        endif
    endif
    return false
    endfunction
    
    function AetherealMastery__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        call TriggerAddCondition(t, Condition(function AetherealMastery__Conditions))
    endfunction

// scope AetherealMastery ends
//===========================================================================
// Trigger: SplashingPuddles
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope PuddleSplash begins




function PuddleSplash__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()

call DisableTrigger(PUDDLESPLASHING)

call UnitDamageTargetEx(GetEventDamageSource() , u , GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))], 'A07V') * .75 * GetHeroInt(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))], true) , false , true , ATTACK_TYPE_MAGIC , DAMAGE_TYPE_MAGIC , null)

call EnableTrigger(PUDDLESPLASHING)

call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BlueBasiliskMissile.mdx", u, "chest"))

//call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BlueBasiliskMissile.mdx",u,"head"))
set u=null
endfunction
    
    function PuddleSplash__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()

    if GetUnitTypeId(u) == 'n01A' and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > .01 then
        call PuddleSplash__Actions()
    endif

set u=null
    return false
    endfunction
    
    function PuddleSplash__OnInit takes nothing returns nothing
        set PUDDLESPLASHING=CreateTrigger()
        call TriggerAddCondition(PUDDLESPLASHING, Condition(function PuddleSplash__Conditions))
        call MOE(II , ( PUDDLESPLASHING ))
    endfunction
// scope PuddleSplash ends
//===========================================================================
// Trigger: Drown
//===========================================================================
//TESH.scrollpos=842
//TESH.alwaysfold=0
// scope Drown begins

////////////////////////////////////////////////////////////////////
//                    DEVASTATION ENVOY V1.00                     //
//                                                                //
//  Author: Tank-Commander                                        //
//  Requires: Dummy.mdl                                           //
//  Purpose: Spam-cast spell                                      //
//                                                                //
//  Notes:                                                        //
//    -  Read the readme before you try modifying the config      //
//    -  Use the "Helpful files" to help you import the spell     //
//                                                                //
//  Credits:                                                      //
//    -  (Dummy.mdl) Vexorian                                     //
//                                                                //
//                                                                //
//  If you have used this spell in your map, you are required     //
//  to give credits to Tank-Commander for the creation of it      //
//  If you take a snippet from this code for physics reasons      //
//  or whatever else, if possible, also give credit for its       //
//  source origin                                                 //
//                                                                //
//  Importing: Remember to import Dummy.mdl and possibly the      //
//  object data when importing this spell (just the ability and   //
//  dummy unit) note that importing the dummy unit object should  //
//  be done AFTER importing Dummy.mdl, if not, then you will      //
//  need to set the model of the dummy to Dummy.mdl yourself, if  //
//  you would like to change what your dummy unit is you can,     //
//  but it will still need Dummy.mdl for this spell to work       //
//  If you have problems, make sure you read the readme first     //
//  and follow it to the best of your abilities before posting    //
//  comments                                                      //
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//  README:                                                       //
//    Before modifying this spell a few things need to be         //
//    understood and read, this is one of those things, while     //
//    most modification can be considered intuitive, it still     //
//    helps to read through these intstructions, as they will     //
//    inform you about how to configure this spell to your        //
//    desire.                                                     //
//----------------------------------------------------------------//
//  Initial importing: The variable creator trigger can be        //
//  imported first and if you have the correct settings (file,    //
//  preferences, General, automatically create unknown variables  //
//  checked, then when you pasta in the variable creator it       //
//  will automatically give you all the variables you need for    //
//  this spell                                                    //
//----------------------------------------------------------------//
//  This configuration is ordered by category of use, and not     //
//  alphabetically, the ones you're most likely to want to        //
//  change, are earlier in the readme, the most essential being   //
//  first. These categories are:                                  //
//                                                                //
//  - Data Values: The most essential to change, otherwise the    //
//                 spell will simply not function                 //
//                                                                //
//  - ChronoKinetic: Fancy word for affecting the flow of time    //
//                 Contains things like the duration of the       //
//                 spell, the Timer speed and Shard Spawn rate    //
//                                                                //
//  - Power: Controls the aspects of the speed of the shards      //
//                 based on the Mass, and Radius of the Portal    //
//                                                                //
//  - Damage: Controls the AOE and damage (health and mana)       //
//                 values each individual Shard has               //
//                                                                //
//  - Aesthetics: Controls the Appearences of the ability - the   //
//                 models used, the scales of those models and    //
//                 so on                                          //
//                                                                //
//  - Damage Information: Contains things like weapontypes and    //
//                 damage types, etc.                             //
//                                                                //
//  - Other Attributes: Contains the world gravity, death timer   //
//                 Height let and the celestial Gravitational     //
//                 constant.                                      //
//----------------------------------------------------------------//
//                        DATA VALUES                             //
//----------------------------------------------------------------//
//  Dummy ID: This is the raw data of the dummy unit, to see      //
//  raw data in the object editor, press Ctrl + D, doing this     //
//  again will switch it back, if you want to change this dummy   //
//  unit, follow as displayed (use the first 4 characters in      //
//  the raw data and put them in ' markers)                       //
constant function Drown__DE_DummyID takes nothing returns integer
    return 'u005'
endfunction
//----------------------------------------------------------------//
//  Spell ID: This is done in the same manner as the Dummy ID     //
//  except that this time, you're doing it with ability raw       //
//  data, see the dummy unit if you do not know already how to    //
//  view raw data                                                 //
constant function Drown__DE_SpellID takes nothing returns integer
    return 'A0J3'
endfunction
//----------------------------------------------------------------//
//                        CHRONOKINETIC                           //
//----------------------------------------------------------------//
//  Timer Speed: The default for this is 0.03, it determines how  //
//  many times per second these triggers are ran, normally you    //
//  want to leave this at 0.03, but 0.04 and prehaps 0.05         //
//  would be good options if you computer lags a bit.             //
constant function Drown__DE_TimerSpeed takes nothing returns real
    return 0.03
endfunction
//----------------------------------------------------------------//
//  Duration Base: Determines how long each cast will last as a   //
//  base value - this is to help give better control when         //
//  scaling abilities while not having to change values for each  //
//  level, cutting out a lot of configuration time, the value is  //
//  in seconds (1.00 = 1second)                                   //
constant function Drown__DE_DurationBase takes nothing returns real
    return .75
endfunction
//----------------------------------------------------------------//
//  Duration Per Level: Deter,omes jpw ;pmg eacj casy wo;; as a   //
//  per level value - at level one this will be applied once,     //
//  twice at level two and so forth, it is added on to the base   //
//  value to come to the actual duration of the spell instance    //
constant function Drown__DE_DurationPerLevel takes nothing returns real
    return .25
endfunction
//----------------------------------------------------------------//
//  Spawn Rate Base: A base value, this controls how many         //
//  seconds there are between each Shard being created, if this   //
//  is the same or lower (the sum total of the Base and Per       //
//  Level) is lower or equal to the timer speed, then one Shard   //
//  will be made every Timer Speed seconds (Time is a decimal     //
//  value, 0.5 is half a second)                                  //
constant function Drown__DE_SpawnRateBase takes nothing returns real
    return 0.03
endfunction
//----------------------------------------------------------------//
//  Spawn Rate Per Level: The other part to the spawn rate        //
//  remember that it's a decimal value and the lower it is, the   //
//  faster Shards are created, so for this per level you'll       //
//  normally either want a negative value, or 0.00, though you    //
//  are not limited to such values                                //
constant function Drown__DE_SpawnRatePerLevel takes nothing returns real
    return 0.0
endfunction
//----------------------------------------------------------------//
//                            POWER                               //
//----------------------------------------------------------------//
//  Radius Base: This Base value determines how far out from the  //
//  center the shards are created, it also affects the gravity    //
//  strength of the Portal - the smaller the radius in relation   //
//  to it's Mass, the higher the gravitational effect and the     //
//  more volatile the Shards will be                              //
constant function Drown__DE_RadiusBase takes nothing returns real
    return 200.
endfunction
//----------------------------------------------------------------//
//  Radius Per Level: The per level component to the Radius,      //
//  works the same all the other per level factors, giving this   //
//  a negative value will make your Portal smaller but more       //
//  volatile each level, and a positive value will make it large  //
//  and more stable                                               //
constant function Drown__DE_RadiusPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Mass Base: the Mass within the Portal, the main strength of   //
//  the gravitational pull, larger numbers will decrease          //
//  stability and increase the speed the Shards move, lowering    //
//  it makes it more stable, but unlike the Radius, it does not   //
//  affect the size of your Portal, works well for a baseline     //
//  when testing different levels of instability or stability     //
//  when getting your preferences for the spell                   //
constant function Drown__DE_MassBase takes nothing returns real
    return 800.
endfunction
//----------------------------------------------------------------//
//  Mass Per Level: the Per level component of the Mass can make  //
//  the spell more stable or volatile as it levels up without     //
//  changing it's size, remember that it is applied once at level //
//  one, so the values 800 and 400 (the defaults) yeild 1200      //
//  Mass at level one                                             //
constant function Drown__DE_MassPerLevel takes nothing returns real
    return 100.
endfunction
//----------------------------------------------------------------//
//                            DAMAGE                              //
//----------------------------------------------------------------//
//  Shard AOE Base: Determines the area of effect of the shards   //
//  90 is melee range, 40 is directly on top, 20 is probably too  //
//  small an area to work and 400 to large, try different values  //
//  and see what you like                                         //
constant function Drown__DE_ShardAOEBase takes nothing returns real
    return 120.
endfunction
//----------------------------------------------------------------//
//  Shard AEO Per Level: Normally not used, but here for your     //
//  preferences, allows you to adjust the area of effect of your  //
//  shards as they level up, normally only making the area larger //
//  makes logical sense, or not changing it at all                //
constant function Drown__DE_ShardAOEPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Health Damage Base: This is the damage the spell deals to     //
//  all the units within the AOE on impact with a shard, you'll   //
//  want to make this fairly relative to the number of shards     //
//  you have, 75 shards with 100 damage each is 7500 damage in    //
//  one cast of the spell - that's a lot of potential damage in   //
//  a spell which has no cooldown by default, note that this      //
//  damage is not true damage - enemies will have their armour    //
//  applied and reduce this damage based on their armour type     //
//  vs your damage type                                           //
function Drown__DE_HealthDamageBase takes unit u returns real
    return GetHeroInt(u, true) * 4.
endfunction
//----------------------------------------------------------------//
//  Health Damage Per Level: For changing the amount of damage    //
//  you want to deal with each shard as you level up, normally    //
//  this is your main source of increased damage as the spell     //
//  levels up rather than the other factors, it makes little      //
//  sense to not have this as a positive value of some number     //
//  (25% of your total level 1 damage seems like a good number,   //
//  i.e. if your combined level one damage is 100, roughly 25 of  //
//  that damage should probably be coming from this per level     //
//  value                                                         //
function Drown__DE_HealthDamagePerLevel takes unit u returns real
    return GetHeroInt(u, true) * 2.
endfunction
//----------------------------------------------------------------//
//  Mana Damage Base: Unlike Health damage the mana damage is     //
//  true damage - no matter how much armour they have, exactly    //
//  these values will be subtracted from their mana, normally     //
//  this is 0 as mana damage is mostly useless except vs certain  //
//  enemies, but it's still good to have the option to be able    //
//  to have it if you want                                        //
constant function Drown__DE_ManaDamageBase takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Mana Damage Per Level: Per level component of the normally    //
//  disused mana damage, not any real sense in having a below 0   //
//  amount here, since it'll only make it weaker, like the        //
//  health damage I suggest this to be 25% of your total mana     //
//  damage of your level 1 version                                //
constant function Drown__DE_ManaDamagePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//                        AESTHETICS                              //
//----------------------------------------------------------------//
//  Portal Model:  This determines the model used for your        //
//  main portal, you want to use the model path and paste it      //
//  into the double quotes or " markers, if the path has only     //
//  single slashes (\) you'll need to changeb it to double slash  //
//  (\\) before you save, the spell will not work if you do not   //
//  do this (if you acidentally save with the single slash (\)    //
//  it will still save but you may find yourself having a         //
//  lingering Progress bar at full percentage, you can ignore it  //
//  for the most part, but if you have it, you probably haven't   //
//  entered this field correctly. Get the model paths from the    //
//  Object editor - find the model you want (the model, not the   //
//  unit, in the models list, select it and hit enter twice,      //
//  then select the path (will look similar to this default       //
//  value, and paste in it here) I suggest doing this with a      //
//  unit of no value (changing the model to get the model path)   //
//  and then reset the field afterwards to get the unit back to   //
//  normal                                                        //
constant function Drown__DE_PortalModel takes nothing returns string
    return "war3mapImported\\ForceField.mdx"
endfunction
//----------------------------------------------------------------//
//  Shard Model: The model used for your individual shards,       //
//  follow the steps in the "Portal Model" section if you need    //
//  information on how to change these values successfully        //
constant function Drown__DE_ShardModel takes nothing returns string
    return "war3mapImported\\BlueBasiliskMissile.mdx"
endfunction
//----------------------------------------------------------------//
//  Impact Model: The model used for your individual shards,      //
//  follow the steps in the "Portal Model" section if you need    //
//  information on how to change these values successfully        //
constant function Drown__DE_ImpactModel takes nothing returns string
    return "war3mapImported\\WaterBlast.mdx"
endfunction
//----------------------------------------------------------------//
//  Attachment Point: This determines where on the unit the       //
//  model is placed, "origin", "chest", "head", "overhead" are    //
//  all good places to put the model, switch them around to see   //
//  which you prefer the most, "foot" and "hand" are less so as   //
//  they're offsetted from the center                             //
constant function Drown__DE_AttachmentPoint takes nothing returns string
    return "origin"
endfunction
//----------------------------------------------------------------//
//  Portal Height Base: This is how height the portal is off the  //
//  floor (it is added onto the terrain Z) you'll want it a good  //
//  distance off the ground (unles you want Shards to smack into  //
//  the ground while the spell is still going off, which is a     //
//  viable thing to do for this spell) but not so high as to      //
//  send the Shards halfway across the map, 400 is default        //
constant function Drown__DE_PortalHeightBase takes nothing returns real
    return 400.00
endfunction
//----------------------------------------------------------------//
//  Portal Height Per Level: The per level for the height of the  //
//  portal, generally this'll be set at 0 as the spell changes    //
//  more on functionality, than on effectiveness depending on     //
//  height - so changing this value as it levels up will not      //
//  necessarily make it any stronger or weaker                    //
constant function Drown__DE_PortalHeightPerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Portal Scale Base: this is the scale of the portal model      //
//  it's a decimal percentage (1.00 = 100%) as the largest part   //
//  of the spell you'll normally want this at, at least 100%      //
//  depending on the model, generally a good idea to try to line  //
//  it up with your portal radius as to get the best effect out   //
//  of it                                                         //
constant function Drown__DE_PortalScaleBase takes nothing returns real
    return .4
endfunction
//----------------------------------------------------------------//
//  Portal Scale Per Level: Used for changing the portal scale    //
//  as it levels up - good in combination with radius change per  //
//  level as to stay correct relatively                           //
constant function Drown__DE_PortalScalePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//  Shard Scale Base: Scales the Shards that are created by the   //
//  portal, normally you'll want them significantly smaller that  //
//  the portal 10% (0.10) is a good size, but for some models a   //
//  bit bigger might be good, be sure to play around with this    //
//  to get the size you want and looks best in your opinion       //
constant function Drown__DE_ShardScaleBase takes nothing returns real
    return .01
endfunction
//----------------------------------------------------------------//
//  Shard Scale Per Level: Also for use with making the portal    //
//  seem relatively the same size as it levels up - or simply     //
//  to make them bigger to show increased AOE, Damage, more or    //
//  less to show anything about the spell being stronger as it    //
//  levels up and becomes more powerful                           //
constant function Drown__DE_ShardScalePerLevel takes nothing returns real
    return 0.00
endfunction
//----------------------------------------------------------------//
//                    DAMAGE INFORMATION                          //
//----------------------------------------------------------------//
//  Damage Type: These determine the damagetypes, changing this   //
//  will modify the damage multiplyers vs certain enemies         //
//  the standard is DAMAGE_TYPE_MAGIC, note that this spell       //
//  automatically discludes magic immunes, so changing this       //
//  damage type will not make them start taking damage            //
constant function Drown__DE_AttackType takes nothing returns attacktype
    return ATTACK_TYPE_NORMAL
endfunction
//----------------------------------------------------------------//
//  Attack Type: This is very much so basically the same as       //
//  Damage Type, generally you'll want this to match with it      //
//  as such the default is ATTACK_TYPE_MAGIC, though Damagetype   //
//  is a key factor for determining bonuses rather than this      //
//  but unlike weapontype, you cannot have null as a setting      //
constant function Drown__DE_DamageType takes nothing returns damagetype
    return DAMAGE_TYPE_MAGIC
endfunction
//----------------------------------------------------------------//
//  Weapon Type: This alters what kind of weapon type is used by  //
//  the spell, those without knowledge of weapontypes don't       //
//  worry, you're not missing much, this spell doesn't really     //
//  use it, hence the default of null, but if you want to use     //
//  them, no reason to not.                                       //
constant function Drown__DE_WeaponType takes nothing returns weapontype
    return null
endfunction
//----------------------------------------------------------------//
//                     OTHER ATTRIBUTES                           //
//----------------------------------------------------------------//
//  Gravity: Determines the worldly gravity strength used to      //
//  pull the shards back to the ground after they have been       //
//  freed from the portal, having a lower gravity increases the   //
//  spread range, higher lowers it, the default is 1/8 of the     //
//  earthly gravity of 9.81, beng 1.22625                         //
constant function Drown__DE_Gravity takes nothing returns real
    return 1.22625
endfunction
//----------------------------------------------------------------//
//  Gravitational Constant: This is the constant reprisented by   //
//  G in Celestial Physics and Mechanics. Normally it's           //
//  6.67384 x 10^-11 N (m/kg)^2 but for Warcraft purposes I       //
//  cranked it up a bit, (x 10^11 to be exact) changing it may    //
//  yeild interesting results, but I take no responcibility if    //
//  you do something silly and crash the game by making it        //
//  really high                                                   //
constant function Drown__DE_GravitationalConstant takes nothing returns real
    return 6.67384
endfunction
//----------------------------------------------------------------//
//  Height Let: This is a small let so that projectiles nearly    //
//  touching the floor, will be treated as actually touching it   //
//  This is to prevent graphical errors because models cannot     //
//  sink into the floor by reducing their fly height              //
//  5 is default 10 is probably the max you can reasonably give   //
//  this                                                          //
constant function Drown__DE_HeightLet takes nothing returns real
    return 5.00
endfunction
//----------------------------------------------------------------//
//  Death Timer: Determines how long after the death of a dummy   //
//  will it be removed from the game completely, this is so       //
//  death effects, if any can finish playing before the unit is   //
//  removed, 1.8 is default, 2 is probably excessive and in some  //
//  cases it's possible that 1 could be too little                //
constant function Drown__DE_DeathTimer takes nothing returns real
    return 1.80
endfunction
//----------------------------------------------------------------//
//  You have now reached the end of the configuration, below are  //
//  the functions used to run the spell, beyond this point if     //
//  you find any constant values (indicated in Blue like the      //
//  other constants here if you have standard syntax highlighting //
//  they're there for a reason and don't fiddle with them, to     //
//  actually make any modifications I hope you're an experienced  //
//  programmer, though do not hassle for help because I don't     //
//  take responcibility for other people's programming skills     //
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//  Function used for finding the Z height of a location, since   //
//  it cannot be done with co-ordinates, a recycled location is   //
//  used constantly.                                              //
////////////////////////////////////////////////////////////////////
function Drown__DE_GetZ takes real x,real y returns real

    //Gets the location Z of the selected location
    call MoveLocation(Drown__DE_ZLoc, x, y)
    return GetLocationZ(Drown__DE_ZLoc)
    
endfunction

////////////////////////////////////////////////////////////////////
//  Target filter function - passed units and players and checks  //
//  if the unit is allowed to be targetted by this spell          //
////////////////////////////////////////////////////////////////////
function Drown__DE_TargetFilter takes unit u,player pl returns boolean

    //Checks if the unit can be used as a target
    if ( IsUnitType(u, UNIT_TYPE_GROUND) ) and ( not IsUnitType(u, UNIT_TYPE_STRUCTURE) ) and ( not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) ) and ( IsUnitEnemy(u, pl) ) and ( GetUnitTypeId(u) != ('u005') ) and ( not IsUnitType(u, UNIT_TYPE_DEAD) ) then // INLINED!!
        return true
    endif
    
    return false

endfunction

////////////////////////////////////////////////////////////////////
//  Function for running the main parts of the spell, creates     //
//  new shards and destroys old portals, and does all the         //
//  recycling and damaging of targets, as well as shard movement  //
////////////////////////////////////////////////////////////////////
function Drown__DE_Loop takes nothing returns nothing

    //Sets up all the locals needed for this section
    local integer TempInt= 0
    local integer TempInt2= 0
    local integer TempNode= 0
    local integer Node= 0
    local real Angle
    local real Angle2
    local real Distance
    local real x
    local real x2
    local real dx
    local real y
    local real y2
    local real dy
    local real z
    local unit u
    local player pl
    
    loop
        //Moves to the next node
        set TempInt=TempInt + 1
        exitwhen TempInt > Drown__DE_SpellCounter
        set Node=Drown__DE_NextNode[Node]
        
        if ( Drown__DE_StageID[Node] == 2 ) then
            
            //Initialises data required for movement
            set x=GetUnitX(Drown__DE_Unit[Node])
            set y=GetUnitY(Drown__DE_Unit[Node])
            set Drown__DE_CurrentZ[Node]=Drown__DE_CurrentZ[Node] + Drown__DE_ZVelocity[Node]
            set z=Drown__DE_GetZ(x , y)
            set dy=Drown__DE_PortalY[Node] - y
            set dx=Drown__DE_PortalX[Node] - x
            set Angle=Atan2(dy, dx)
            set Angle2=Atan2(Drown__DE_PortalZ[Node] - Drown__DE_CurrentZ[Node], SquareRoot(dx * dx + dy * dy))
            
            //Checks if the projectile has crashed
            if ( Drown__DE_CurrentZ[Node] - z < (5.00) ) then // INLINED!!
                //Yes it crashed, deassociating the unit
                set Drown__DE_StageID[Node]=3
                set pl=GetOwningPlayer(Drown__DE_OriginalCaster[Node])
               
                call DestroyEffect(Drown__DE_CurrentEffect[Node])
                call DestroyEffect(AddSpecialEffect(("war3mapImported\\WaterBlast.mdx"), x, y)) // INLINED!!
                //Select Units to damage
                call GroupEnumUnitsInRange(Drown__DE_TempGroup, x, y, Drown__DE_ShardAOE[Node], null)
                       
                loop
                    //Scanning through
                    set u=FirstOfGroup(Drown__DE_TempGroup)
                    exitwhen u == null
                           
                    //Select all the units which are to be damaged
                    if Drown__DE_TargetFilter(u , pl) then
                        //Dealing health and mana damage
                        call UnitDamageTargetEx(Drown__DE_OriginalCaster[Node] , u , Drown__DE_HealthDamage[Node] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_FORCE , (null)) // INLINED!!
                        call SetUnitState(u, UNIT_STATE_MANA, ( GetUnitState(u, UNIT_STATE_MANA) - Drown__DE_ManaDamage[Node] ))
                    endif
                    
                    //Remove the unit from the unit group
                    call GroupRemoveUnit(Drown__DE_TempGroup, u)
                           
                endloop
                           
                //Removes the projectile
                call KillUnit(Drown__DE_Unit[Node])
               
                //Nulls variables
                set u=null
                set pl=null
            else
                //Setting the new locations X and Y for this instance
                set x2=x + Drown__DE_XVelocity[Node]
                set y2=y + Drown__DE_YVelocity[Node]
                
                if ( IsUnitInGroup(Drown__DE_Unit[Node], Drown__DE_GravitatedShard) ) then
                    //Calculating the new velocities (will be used next time this runs)
                    set Drown__DE_ZVelocity[Node]=Drown__DE_ZVelocity[Node] + Drown__DE_BaseVelocity[Node] * Sin(Angle2)
                    set Drown__DE_XVelocity[Node]=Drown__DE_XVelocity[Node] + Drown__DE_BaseVelocity[Node] * Cos(Angle) * Cos(Angle2)
                    set Drown__DE_YVelocity[Node]=Drown__DE_YVelocity[Node] + Drown__DE_BaseVelocity[Node] * Sin(Angle) * Cos(Angle2)
                else
                    set Drown__DE_ZVelocity[Node]=Drown__DE_ZVelocity[Node] - (1.22625) // INLINED!!
                endif
                
                //Makes sure the new location is within the map bounds
                if ( ( Drown__DE_MapMinX <= x2 ) and ( x2 <= Drown__DE_MapMaxX ) and ( Drown__DE_MapMinY <= y2 ) and ( y2 <= Drown__DE_MapMaxY ) ) then
                    call SetUnitX(Drown__DE_Unit[Node], x2)
                    call SetUnitY(Drown__DE_Unit[Node], y2)
                endif
                
                //Sets the correct fly height
                call SetUnitFlyHeight(Drown__DE_Unit[Node], Drown__DE_CurrentZ[Node] - z, 0.00)
            endif
      
        elseif ( Drown__DE_StageID[Node] == 1 ) then
            //Increases the duration of both artificial wait timers
            set Drown__DE_CurrentShardDelay[Node]=Drown__DE_CurrentShardDelay[Node] + (0.03) // INLINED!!
            set Drown__DE_CurrentDuration[Node]=Drown__DE_CurrentDuration[Node] + (0.03) // INLINED!!
            
            //Checks if the spell has ran out of duration
            if ( Drown__DE_CurrentDuration[Node] >= Drown__DE_Duration[Node] ) then
                set Drown__DE_StageID[Node]=3
                call DestroyEffect(Drown__DE_CurrentEffect[Node])
                
                //Finds all the affected Shards and releases them
                loop
                    set TempInt2=TempInt2 + 1
                    exitwhen TempInt2 > Drown__DE_SpellCounter
                    set TempNode=Drown__DE_NextNode[TempNode]

                    if ( Drown__DE_Portal[TempNode] == Drown__DE_Unit[Node] ) then
                        call GroupRemoveUnit(Drown__DE_GravitatedShard, Drown__DE_Unit[TempNode])
                    endif

                endloop

            //Checks if it's time to make a new shard
            elseif ( Drown__DE_CurrentShardDelay[Node] >= Drown__DE_SpawnRate[Node] ) then
                //Resets the timer
                set Drown__DE_CurrentShardDelay[Node]=0.00
                
                //Sets up a random place to put the new Shard
                set Angle=GetRandomReal(0, 360)
                set Angle2=GetRandomReal(0, 180)
                set Distance=Cos(Angle2) * Drown__DE_Radius[Node]
                
                if ( Distance < 0 ) then
                    set Distance=Distance * - 1
                endif
            
                set Drown__DE_SpellCounter=Drown__DE_SpellCounter + 1
                set x=Drown__DE_PortalX[Node] + Distance * Cos(Angle * bj_DEGTORAD)
                set y=Drown__DE_PortalY[Node] + Distance * Sin(Angle * bj_DEGTORAD)
                set z=Sin(Angle2) * Drown__DE_Radius[Node] + Drown__DE_PortalZ[Node]
                
                //Checking for recycleable Nodes
                if ( Drown__DE_RecycleableNodes == 0 ) then
                    set Drown__DE_NodeNumber=Drown__DE_NodeNumber + 1
                    set TempNode=Drown__DE_NodeNumber
                else
                    set Drown__DE_RecycleableNodes=Drown__DE_RecycleableNodes - 1
                    set TempNode=Drown__DE_RecycleNodes[Drown__DE_RecycleableNodes]
                endif

                //Sets up this Node
                set Drown__DE_NextNode[TempNode]=0
                set Drown__DE_NextNode[Drown__DE_LastNode]=TempNode
                set Drown__DE_PrevNode[TempNode]=Drown__DE_LastNode
                set Drown__DE_LastNode=TempNode
        
                //Sets up the data for the Shard
                set Drown__DE_HealthDamage[TempNode]=Drown__DE_HealthDamage[Node]
                set Drown__DE_ManaDamage[TempNode]=Drown__DE_ManaDamage[Node]
                set Drown__DE_Portal[TempNode]=Drown__DE_Unit[Node]
                set Drown__DE_PortalX[TempNode]=Drown__DE_PortalX[Node]
                set Drown__DE_PortalY[TempNode]=Drown__DE_PortalY[Node]
                set Drown__DE_PortalZ[TempNode]=Drown__DE_PortalZ[Node]
                set Drown__DE_ShardAOE[TempNode]=Drown__DE_ShardAOE[Node]
                set Drown__DE_OriginalCaster[TempNode]=Drown__DE_OriginalCaster[Node]
                set Drown__DE_BaseVelocity[TempNode]=Drown__DE_BaseVelocity[Node]
                set Drown__DE_CurrentZ[TempNode]=z
                set Drown__DE_StageID[TempNode]=2
                
                //Sets up initialisation Velocities (this is to give the shards a bit of a kick of instability in their orbit)
                set Drown__DE_ZVelocity[TempNode]=Drown__DE_BaseVelocity[TempNode] * Sin(Angle2)
                set Drown__DE_XVelocity[TempNode]=Drown__DE_BaseVelocity[TempNode] * Cos(Angle) * Cos(Angle2)
                set Drown__DE_YVelocity[TempNode]=Drown__DE_BaseVelocity[TempNode] * Sin(Angle) * Cos(Angle2)
                
                //Creates the unit and applies Aesthetics
                set Drown__DE_Unit[TempNode]=CreateUnit(Player(14), ('u005'), x, y, 0.00) // INLINED!!
                if UnitAddAbility(Drown__DE_Unit[TempNode], 'Amrf') and UnitRemoveAbility(Drown__DE_Unit[TempNode], 'Amrf') then
                endif
                set Drown__DE_CurrentEffect[TempNode]=AddSpecialEffectTarget(("war3mapImported\\BlueBasiliskMissile.mdx"), Drown__DE_Unit[TempNode], ("origin")) // INLINED!!
                call SetUnitScale(Drown__DE_Unit[TempNode], Drown__DE_ShardScale[Node], 0.00, 0.00)
                call SetUnitFlyHeight(Drown__DE_Unit[TempNode], z, 0.00)
                
                //Adds them to the group of Gravitated Shards
                call GroupAddUnit(Drown__DE_GravitatedShard, Drown__DE_Unit[TempNode])
                
            endif
                
        elseif ( Drown__DE_CurrentDeathTimer[Node] < (1.80) ) then // INLINED!!
            set Drown__DE_CurrentDeathTimer[Node]=0.00
            
            //Removes the projectile
            call RemoveUnit(Drown__DE_Unit[Node])
            
            if ( Drown__DE_LastNode == Node ) then
                set Drown__DE_LastNode=Drown__DE_PrevNode[Node]
            endif
               
            //Recycles the node
            set Drown__DE_RecycleNodes[Drown__DE_RecycleableNodes]=Node
            set Drown__DE_RecycleableNodes=Drown__DE_RecycleableNodes + 1
            set Drown__DE_NextNode[Drown__DE_PrevNode[Node]]=Drown__DE_NextNode[Node]
            set Drown__DE_PrevNode[Drown__DE_NextNode[Node]]=Drown__DE_PrevNode[Node]
            set Drown__DE_SpellCounter=Drown__DE_SpellCounter - 1
            set TempInt=TempInt - 1

            //Destroys the timer when not in use
            if ( Drown__DE_SpellCounter == 0 ) then
                call DestroyTimer(GetExpiredTimer())
            endif
            
        else
            set Drown__DE_CurrentDeathTimer[Node]=Drown__DE_CurrentDeathTimer[Node] + (0.03) // INLINED!!
        endif
        
    endloop
    
endfunction

////////////////////////////////////////////////////////////////////
//  Function runs when a new instance is to be created - runs     //
//  as a condition but always returns false, creates a new        //
//  portal if the correct spell was cast                          //
////////////////////////////////////////////////////////////////////
function Drown__DE_NewInstance takes nothing returns boolean

    //Sets up locals
    local integer i= 0
    local real fxa
    local real fxd
    local unit u
    local integer Node
    local real rLevel
    local real x
    local real y
    //Checks if the spell cast is the correct spell
    if ( GetSpellAbilityId() == ('A0J3') ) then // INLINED!!
        set u=GetTriggerUnit()
        set x=GetUnitX(u)
        set y=GetUnitY(u)
        
        //call DestroyEffect(AddSpecialEffect("war3mapImported\\WaterBlast.mdx",x,y))
        //set i = 10
        //loop
        //exitwhen i == 0
        //set fxd = GetRandomReal(20.,350.)
        //set fxa = GetRandomReal(0.,360.)
        //call DestroyEffect(AddSpecialEffect("war3mapImported\\WaterBlast.mdx",x+fxd*Cos(fxa*bj_DEGTORAD),y+fxd*Sin(fxa*bj_DEGTORAD)))
        //set i = i -1
        //endloop
        
        set rLevel=I2R(GetUnitAbilityLevel(u, ('A0J3'))) // INLINED!!
        //Checking for recycleable Nodes
        if ( Drown__DE_RecycleableNodes == 0 ) then
            set Drown__DE_NodeNumber=Drown__DE_NodeNumber + 1
            set Node=Drown__DE_NodeNumber
        else
            set Drown__DE_RecycleableNodes=Drown__DE_RecycleableNodes - 1
            set Node=Drown__DE_RecycleNodes[Drown__DE_RecycleableNodes]
        endif

        //Sets up this Node
        set Drown__DE_NextNode[Node]=0
        set Drown__DE_NextNode[Drown__DE_LastNode]=Node
        set Drown__DE_PrevNode[Node]=Drown__DE_LastNode
        set Drown__DE_LastNode=Node

        //Sets up the portal data
        set Drown__DE_PortalHeight[Node]=(400.00) + ( (0.00) * rLevel ) // INLINED!!
        set Drown__DE_Mass[Node]=(800.) + ( (100.) * rLevel ) // INLINED!!
        set Drown__DE_Radius[Node]=(200.) + ( (0.00) * rLevel ) // INLINED!!
        set Drown__DE_BaseVelocity[Node]=( ( (6.67384) * Drown__DE_Mass[Node] ) / Drown__DE_Radius[Node] ) * (0.03) // INLINED!!
        set Drown__DE_HealthDamage[Node]=(GetHeroInt((u), true) * 4.) + ( (GetHeroInt((u), true) * 2.) * rLevel ) // INLINED!!
        set Drown__DE_ManaDamage[Node]=(0.00) + ( (0.00) * rLevel ) // INLINED!!
        set Drown__DE_SpawnRate[Node]=(0.03) + ( (0.0) * rLevel ) // INLINED!!
        set Drown__DE_Duration[Node]=(.75) + ( (.25) * rLevel ) // INLINED!!
        set Drown__DE_ShardScale[Node]=(.01) + ( (0.00) * rLevel ) // INLINED!!
        set Drown__DE_ShardAOE[Node]=(120.) + ( (0.00) * rLevel ) // INLINED!!
        set Drown__DE_PortalX[Node]=x
        set Drown__DE_PortalY[Node]=y
        set Drown__DE_PortalZ[Node]=Drown__DE_PortalHeight[Node] + Drown__DE_GetZ(x , y)
        set Drown__DE_CurrentShardDelay[Node]=0.00
        set Drown__DE_CurrentDuration[Node]=0.00
        set Drown__DE_OriginalCaster[Node]=u
        set Drown__DE_StageID[Node]=1
        set Drown__DE_SpellCounter=Drown__DE_SpellCounter + 1
        
        //Creates the unit and applies Aesthetics
        set Drown__DE_Unit[Node]=CreateUnit(Player(14), ('u005'), x, y, 0.00) // INLINED!!
        if UnitAddAbility(Drown__DE_Unit[Node], 'Amrf') and UnitRemoveAbility(Drown__DE_Unit[Node], 'Amrf') then
        endif
        set Drown__DE_CurrentEffect[Node]=AddSpecialEffectTarget(("war3mapImported\\ForceField.mdx"), Drown__DE_Unit[Node], ("origin")) // INLINED!!
        call SetUnitScale(Drown__DE_Unit[Node], (.4) + ( (0.00) * rLevel ), 0.00, 0.00) // INLINED!!
        call SetUnitFlyHeight(Drown__DE_Unit[Node], Drown__DE_PortalHeight[Node], 0.00)
        
        //Checks if it's the only portal on the map
        if ( Drown__DE_SpellCounter == 1 ) then
            call TimerStart(CreateTimer(), (0.03), true, function Drown__DE_Loop) // INLINED!!
        endif
        
        //Nulls variables
        set u=null
        
    endif
    
    return false

endfunction
////////////////////////////////////////////////////////////////////
//  Function for setting up the other functions and initialising  //
//  the map bounds variables and Z finder for locations           //
////////////////////////////////////////////////////////////////////
function Drown__OnInit takes nothing returns nothing

    //Sets up locals
    local trigger l__DE= CreateTrigger()
    local integer index= 0
    
    set Drown__DE_AOE[0]=0.00
    set Drown__DE_BaseVelocity[0]=0.00
    set Drown__DE_CurrentDeathTimer[0]=0.00
    set Drown__DE_CurrentDuration[0]=0.00
    set Drown__DE_CurrentEffect[0]=Drown__DE_CurrentEffect[0]
    set Drown__DE_CurrentShardDelay[0]=0.00
   set Drown__DE_CurrentZ[0]=0.00
    set Drown__DE_Duration[0]=0.00
    //set DE_GravitatedShard = null
   set Drown__DE_HealthDamage[0]=0.00
      set Drown__DE_LastNode=0
   set Drown__DE_ManaDamage[0]=0.00
   set Drown__DE_MapMaxX=0.00
  set Drown__DE_MapMaxY=0.00
    set Drown__DE_MapMinX=0.00
    set Drown__DE_MapMinY=0.00
    set Drown__DE_Mass[0]=0.00
    set Drown__DE_NextNode[0]=0
      set Drown__DE_NodeNumber=0
    //set DE_OriginalCaster[0] = DE_OriginalCaster[0]
    set Drown__DE_Portal[0]=Drown__DE_Portal[0]
    set Drown__DE_PortalHeight[0]=0.00
    set Drown__DE_PortalX[0]=0.00
    set Drown__DE_PortalY[0]=0.00
    set Drown__DE_PortalZ[0]=0.00
      set Drown__DE_PrevNode[0]=0
    set Drown__DE_Radius[0]=0.00
      set Drown__DE_RecycleNodes[0]=0
      set Drown__DE_RecycleableNodes=0
    set Drown__DE_ShardAOE[0]=0.00
    set Drown__DE_ShardScale[0]=0.00
    set Drown__DE_SpawnRate[0]=0.00
    set Drown__DE_SpellCounter=0
    set Drown__DE_StageID[0]=0
    //set DE_TempGroup = null
    set Drown__DE_Unit[0]=null
    set Drown__DE_XVelocity[0]=0.00
    set Drown__DE_YVelocity[0]=0.00
    //set DE_ZLoc = DE_ZLoc
    set Drown__DE_ZVelocity[0]=0.00

    //Initialise the event for every player
    loop
        call TriggerRegisterPlayerUnitEvent(l__DE, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
        set index=index + 1
        exitwhen index == bj_MAX_PLAYER_SLOTS
    endloop
   
    call TriggerAddCondition(l__DE, Condition(function Drown__DE_NewInstance))
   
    //Sets up the map bounds the spell with use
    set Drown__DE_MapMaxX=GetRectMaxX(bj_mapInitialPlayableArea)
    set Drown__DE_MapMinX=GetRectMinX(bj_mapInitialPlayableArea)
    set Drown__DE_MapMaxY=GetRectMaxY(bj_mapInitialPlayableArea)
    set Drown__DE_MapMinY=GetRectMinY(bj_mapInitialPlayableArea)

    //Sets up the Z location finder
    set Drown__DE_ZLoc=Location(0, 0)
    //Nulls variables
    set l__DE=null
   
endfunction
// scope Drown ends
////////////////////////////////////////////////////////////////////
//  End of the spell                                              //
////////////////////////////////////////////////////////////////////
//===========================================================================
// Trigger: GluttonyPAS
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
// scope GluttonyPas begins
    

    
    function GluttonyPas__Actions takes nothing returns nothing
    local unit u= GetEventDamageSource()
    local unit t= GetTriggerUnit()
    local integer lvl= GetUnitAbilityLevel(u, GluttonyPas__SPELL_ID)
    local real dmg= ( lvl * GetHeroStr(u, true) * 1 ) + ( ( GetUnitState(u, UNIT_STATE_MAX_LIFE) - GetWidgetLife(u) ) * .015 )
    local integer chance
    
    if GetWidgetLife(u) <= GetUnitState(u, UNIT_STATE_MAX_LIFE) * .5 then
    set chance=lvl * 4
    else
    set chance=lvl * 2
    endif
    
    if GetRandomInt(0, 100) <= chance then
    if GetWidgetLife(u) + dmg >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
    call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
    else
    call SetWidgetLife(u, GetWidgetLife(u) + dmg)
    endif
    call UnitDamageTargetEx(u , t , dmg , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "head"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "hand left"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "hand right"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "foot left"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "foot right"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SmallBloodEX-NoSplat.mdx", t, "foot right"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\VampiricAuraTarget.mdx", u, "origin"))
    endif
    
    set t=null
    set u=null
    endfunction
    
    function GluttonyPas__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), GluttonyPas__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) then // INLINED!!
        call GluttonyPas__Actions()
    endif
    return false
    endfunction
    
    function GluttonyPas__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function GluttonyPas__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope GluttonyPas ends
//===========================================================================
// Trigger: TemperancePAS
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope TemperancePas begins
    

    
    function TemperancePas__Actions takes nothing returns nothing
    local unit u= GetEventDamageSource()
    local unit t= GetTriggerUnit()
    local integer lvl= GetUnitAbilityLevel(u, TemperancePas__SPELL_ID)
    local real dmg= GetWidgetLife(u) * .07
    local integer chance
    
    call UnitRemoveAbility(t, 'B03S')
    

    if GetWidgetLife(u) <= ( GetUnitState(u, UNIT_STATE_MAX_LIFE) * .5 ) then
    call SetWidgetLife(u, GetWidgetLife(u) - ( dmg * .1 ))
    call UnitDamageTargetEx(u , t , ( ( dmg * .35 * lvl ) * ( 1. + ( lvl * .1 ) ) + GetHeroAgi(u, true) * lvl * .2 ) , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodbathTarget.mdx", t, "chest"))
    else
    call SetWidgetLife(u, GetWidgetLife(u) - dmg)
    call UnitDamageTargetEx(u , t , ( ( dmg * .35 * lvl ) * ( 1. + ( lvl * .1 ) ) + GetHeroAgi(u, true) * lvl * .2 ) , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodbathTarget.mdx", t, "chest"))
    endif

    if GetWidgetLife(u) <= GetUnitState(u, UNIT_STATE_MAX_LIFE) * .5 then
    set chance=lvl * 2
    else
    set chance=lvl * 2
    endif
    if GetRandomInt(0, 100) <= chance then
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "head"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "hand left"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "hand right"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "foot left"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\FatalWoundV2.mdx", t, "foot right"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SmallBloodEX-NoSplat.mdx", t, "foot right"))
    call UnitDamageTargetEx(u , t , GetHeroAgi(u, true) * lvl * 4 , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
    endif
    
    set t=null
    set u=null
    endfunction
    
    function TemperancePas__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), TemperancePas__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) and GetUnitAbilityLevel(GetTriggerUnit(), 'B03S') == 1 then // INLINED!!
        call TemperancePas__Actions()
    endif
    return false
    endfunction
    
    function TemperancePas__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function TemperancePas__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope TemperancePas ends
//===========================================================================
// Trigger: TemperanceACT
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope TemperanceA begins


        function s__TempA_create takes nothing returns integer
            local integer data= s__TempA__allocate()
            if s__TempA_g[data] == null then
                set s__TempA_g[data]=CreateGroup()
            endif
            return data
        endfunction

        function s__TempA_destroy takes integer this returns nothing
            call GroupClear(s__TempA_g[this])
            set s__TempA_c[this]=null
            set s__TempA_fx1[this]=null
            set s__TempA_fx2[this]=null
	    set s__TempA_fx3[this]=null
            call s__TempA_deallocate(this)
        endfunction

    function TemperanceA__FilterActions takes nothing returns boolean
        local unit u= GetFilterUnit()
        
        if UnitAlive(u) then
            if IsUnitEnemy(u, GetOwningPlayer(TemperanceA__CASTER)) and not IsUnitInGroup(u, TemperanceA__GROUP2) then
                call UnitDamageTargetEx(TemperanceA__CASTER , u , TemperanceA__DAMAGE , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
                call GroupAddUnit(TemperanceA__GROUP2, u)
                call DestroyEffect(AddSpecialEffectTarget(TemperanceA__EFFECT, u, TemperanceA__ATTACH_POINT))
            endif
        endif
        set u=null
        return false
    endfunction

function TemperanceA__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__TempA_current[data] == 32 then
call DestroyEffect(s__TempA_fx1[data])
call DestroyEffect(s__TempA_fx2[data])
call DestroyEffect(s__TempA_fx3[data])
call ReleaseTimer(t)
call s__TempA_destroy(data)
else
set s__TempA_x[data]=s__TempA_x[data] + 15.625 * Cos(s__TempA_a[data] * bj_DEGTORAD)
set s__TempA_y[data]=s__TempA_y[data] + 15.625 * Sin(s__TempA_a[data] * bj_DEGTORAD)
call SetUnitX(s__TempA_c[data], s__TempA_x[data])
call SetUnitY(s__TempA_c[data], s__TempA_y[data])
set TemperanceA__GROUP2=s__TempA_g[data]
set TemperanceA__CASTER=s__TempA_c[data]
set TemperanceA__DAMAGE=s__TempA_dmg[data]
call GroupEnumUnitsInRange(TemperanceA__GROUP, s__TempA_x[data], s__TempA_y[data], 170., Filter(function TemperanceA__FilterActions))
set s__TempA_current[data]=s__TempA_current[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function TemperanceA__Handler)
endif

set t=null
endfunction

function TemperanceA__Actions takes nothing returns nothing
local timer t
local integer data= s__TempA_create()
local integer lvl
local integer lvlr
local integer lvlo
set s__TempA_c[data]=GetTriggerUnit()
set s__TempA_x[data]=GetUnitX(s__TempA_c[data])
set s__TempA_y[data]=GetUnitY(s__TempA_c[data])
set s__TempA_a[data]=GetUnitFacing(s__TempA_c[data])
set s__TempA_current[data]=0
if IsQoBTyrael[GetUnitUserData(s__TempA_c[data])] then
set s__TempA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__TempA_c[data], "hand left")
set s__TempA_fx2[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__TempA_c[data], "weapon")
set s__TempA_fx3[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__TempA_c[data], "chest")
else
set s__TempA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__TempA_c[data], "weapon left")
set s__TempA_fx2[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__TempA_c[data], "weapon right")
set s__TempA_fx3[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__TempA_c[data], "chest")
endif
set lvl=GetUnitAbilityLevel(s__TempA_c[data], TemperanceA__SPELL_ID)
set lvlr=GetUnitAbilityLevel(s__TempA_c[data], TemperanceA__RESET_ID)

set VoracityInt[GetPlayerId(GetOwningPlayer(s__TempA_c[data]))]=VoracityInt[GetPlayerId(GetOwningPlayer(s__TempA_c[data]))] + ( lvlr - 1 )

if lvlr >= 6 and GetUnitAbilityLevel(s__TempA_c[data], TemperanceA__OTHER_ID) != 0 then
set lvlo=GetUnitAbilityLevel(s__TempA_c[data], TemperanceA__OTHER_ID)
call UnitRemoveAbility(s__TempA_c[data], TemperanceA__OTHER_ID)
call UnitAddAbility(s__TempA_c[data], TemperanceA__OTHER_ID)
call SetUnitAbilityLevel(s__TempA_c[data], TemperanceA__OTHER_ID, lvlo)
call UnitRemoveAbility(s__TempA_c[data], 'A0BW')
endif

if lvlr > 1 then
set lvlr=lvlr - 1
endif

if lvlr > 10 then
set lvlr=10
endif

set s__TempA_dmg[data]=( GetHeroAgi(s__TempA_c[data], true) * 5. * lvl ) * ( lvlr * .3 )

call SetUnitAbilityLevel(s__TempA_c[data], TemperanceA__RESET_ID, 1)
call SetUnitAbilityLevel(s__TempA_c[data], 'A0D4', 1)

set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function TemperanceA__Handler)

set t=null
endfunction


//===========================================================================
function TemperanceA__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(TemperanceA__SPELL_ID , function TemperanceA__Actions)
endfunction
// scope TemperanceA ends

//===========================================================================
// Trigger: GluttyACT
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope GluttonyA begins


        function s__GlutA_create takes nothing returns integer
            local integer data= s__GlutA__allocate()
            if s__GlutA_g[data] == null then
                set s__GlutA_g[data]=CreateGroup()
            endif
            return data
        endfunction

        function s__GlutA_destroy takes integer this returns nothing
            call GroupClear(s__GlutA_g[this])
            set s__GlutA_c[this]=null
            set s__GlutA_fx1[this]=null
            set s__GlutA_fx2[this]=null
	    set s__GlutA_fx3[this]=null
            call s__GlutA_deallocate(this)
        endfunction

    function GluttonyA__FilterActions takes nothing returns boolean
        local unit u= GetFilterUnit()
        
        if UnitAlive(u) then
            if IsUnitEnemy(u, GetOwningPlayer(GluttonyA__CASTER)) and not IsUnitInGroup(u, GluttonyA__GROUP2) then
                call UnitDamageTargetEx(GluttonyA__CASTER , u , GluttonyA__DAMAGE , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
                call GroupAddUnit(GluttonyA__GROUP2, u)
                call DestroyEffect(AddSpecialEffectTarget(GluttonyA__EFFECT, u, GluttonyA__ATTACH_POINT))
            endif
        endif
        set u=null
        return false
    endfunction

function GluttonyA__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

if s__GlutA_current[data] == 32 then
call DestroyEffect(s__GlutA_fx1[data])
call DestroyEffect(s__GlutA_fx2[data])
call DestroyEffect(s__GlutA_fx3[data])
call ReleaseTimer(t)
call s__GlutA_destroy(data)
else
set s__GlutA_x[data]=s__GlutA_x[data] + 15.625 * Cos(s__GlutA_a[data] * bj_DEGTORAD)
set s__GlutA_y[data]=s__GlutA_y[data] + 15.625 * Sin(s__GlutA_a[data] * bj_DEGTORAD)
call SetUnitX(s__GlutA_c[data], s__GlutA_x[data])
call SetUnitY(s__GlutA_c[data], s__GlutA_y[data])
set GluttonyA__GROUP2=s__GlutA_g[data]
set GluttonyA__CASTER=s__GlutA_c[data]
set GluttonyA__DAMAGE=s__GlutA_dmg[data]
call GroupEnumUnitsInRange(GluttonyA__GROUP, s__GlutA_x[data], s__GlutA_y[data], 170., Filter(function GluttonyA__FilterActions))
set s__GlutA_current[data]=s__GlutA_current[data] + 1
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function GluttonyA__Handler)
endif

set t=null
endfunction

function GluttonyA__Actions takes nothing returns nothing
local timer t
local integer data= s__GlutA_create()
local integer lvl
local integer lvlr
local integer lvlo
set s__GlutA_c[data]=GetTriggerUnit()
set s__GlutA_x[data]=GetUnitX(s__GlutA_c[data])
set s__GlutA_y[data]=GetUnitY(s__GlutA_c[data])
set s__GlutA_a[data]=GetUnitFacing(s__GlutA_c[data])
set s__GlutA_current[data]=0
if IsQoBTyrael[GetUnitUserData(s__GlutA_c[data])] then
set s__GlutA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__GlutA_c[data], "hand left")
set s__GlutA_fx2[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__GlutA_c[data], "weapon")
set s__GlutA_fx3[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blue Soul.mdx", s__GlutA_c[data], "chest")
else
set s__GlutA_fx1[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__GlutA_c[data], "weapon left")
set s__GlutA_fx2[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__GlutA_c[data], "weapon right")
set s__GlutA_fx3[data]=AddSpecialEffectTarget("war3mapImported\\Windwalk Blood.mdx", s__GlutA_c[data], "chest")
endif
set lvl=GetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__SPELL_ID)
set lvlr=GetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__RESET_ID)

set VoracityInt[GetPlayerId(GetOwningPlayer(s__GlutA_c[data]))]=VoracityInt[GetPlayerId(GetOwningPlayer(s__GlutA_c[data]))] + ( lvlr - 1 )

if lvlr >= 6 and GetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__OTHER_ID) != 0 then
set lvlo=GetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__OTHER_ID)
call UnitRemoveAbility(s__GlutA_c[data], GluttonyA__OTHER_ID)
call UnitAddAbility(s__GlutA_c[data], GluttonyA__OTHER_ID)
call SetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__OTHER_ID, lvlo)
call UnitRemoveAbility(s__GlutA_c[data], 'A0BW')
endif

if lvlr > 1 then
set lvlr=lvlr - 1
endif

if lvlr > 10 then
set lvlr=10
endif

set s__GlutA_dmg[data]=( GetHeroStr(s__GlutA_c[data], true) * 4. * lvl ) * ( lvlr * .3 )

call SetUnitAbilityLevel(s__GlutA_c[data], GluttonyA__RESET_ID, 1)
call SetUnitAbilityLevel(s__GlutA_c[data], 'A0D4', 1)

set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function GluttonyA__Handler)

set t=null
endfunction


//===========================================================================
function GluttonyA__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(GluttonyA__SPELL_ID , function GluttonyA__Actions)
endfunction
// scope GluttonyA ends

//===========================================================================
// Trigger: Execute Old Copy
//===========================================================================
                                              //TESH.scrollpos=128
//TESH.alwaysfold=0
// scope Execute begins
    
    constant function Execute__Damage takes integer level,real mhp,integer str returns real
        return ( 500. + ( 50 * level * level ) ) + ( level * str * 5 ) + ( mhp * .03 * level )
    endfunction

    constant function Execute__AoE takes integer level returns real
        return 900. + ( 30. * level )
    endfunction

        
        function s__Execute__Exec_destroy takes integer this returns nothing
            set s__Execute__Exec_cast[this]=null
            set s__Execute__Exec_t[this]=null
            set s__Execute__Exec_fx[this]=null
	    set s__Execute__Exec_fx2[this]=null
            set s__Execute__Exec_attach[this]=null
            call s__Execute__Exec_deallocate(this)
        endfunction
        

    
    function Execute__Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
        if s__Execute__Exec_dur[data] == 90 then
	
            call DestroyEffect(s__Execute__Exec_attach[data])
	    call BlzSetSpecialEffectAlpha(s__Execute__Exec_fx[data], 0)
	    call BlzSetSpecialEffectHeight(s__Execute__Exec_fx[data], - 2000.)
	    call BlzSetSpecialEffectScale(s__Execute__Exec_fx[data], .000001)
            call DestroyEffect(s__Execute__Exec_fx[data])
	    call DestroyEffect(s__Execute__Exec_fx2[data])
            call UnitDamageTargetEx(s__Execute__Exec_cast[data] , s__Execute__Exec_t[data] , Execute__Damage(s__Execute__Exec_lvl[data] , GetUnitState(s__Execute__Exec_t[data], UNIT_STATE_MAX_LIFE) , GetHeroStr(s__Execute__Exec_cast[data], true)) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
            if GetWidgetLife(s__Execute__Exec_t[data]) <= ( GetUnitState(s__Execute__Exec_t[data], UNIT_STATE_MAX_LIFE) * ( .1 + ( .02 * s__Execute__Exec_lvl[data] ) ) ) then
                call UnitRemoveAbility(s__Execute__Exec_t[data], 'A04P')
                call UnitRemoveAbility(s__Execute__Exec_t[data], 'A08E')
                call UnitRemoveAbility(s__Execute__Exec_t[data], 'A08B')
                call UnitDamageTargetEx(s__Execute__Exec_cast[data] , s__Execute__Exec_t[data] , 66666666. , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
            endif
	if IsQoBTyrael[GetUnitUserData(s__Execute__Exec_cast[data])] then
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shining Flare.mdx", s__Execute__Exec_t[data], "origin"))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Heaven's Gate.mdx", s__Execute__Exec_t[data], "origin"))
else
            call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodEX-Special-2.mdx", s__Execute__Exec_t[data], "chest"))
endif
            call SetUnitPathing(s__Execute__Exec_t[data], true)
            call SetUnitFlyHeight(s__Execute__Exec_t[data], s__Execute__Exec_oh[data], 1.)
            call ReleaseTimer(t)
            call s__Execute__Exec_destroy(data)
        else
                if s__Execute__Exec_dur[data] == 48 then
                    call SetUnitAnimation(s__Execute__Exec_cast[data], "stand victory")
                endif
            if s__Execute__Exec_dur[data] >= 85 then
                    set s__Execute__Exec_h[data]=s__Execute__Exec_h[data] - s__Execute__Exec_hp[data]
                    set s__Execute__Exec_dh[data]=s__Execute__Exec_h[data] + 350.
                    call SetUnitFlyHeight(s__Execute__Exec_t[data], s__Execute__Exec_h[data], 0.)
                    call BlzSetSpecialEffectHeight(s__Execute__Exec_fx[data], s__Execute__Exec_dh[data])
            else
                if s__Execute__Exec_dur[data] >= 65 then
                if s__Execute__Exec_dh[data] <= s__Execute__Exec_h[data] + 350. then
                set s__Execute__Exec_dh[data]=s__Execute__Exec_h[data] + 350.
                else
                set s__Execute__Exec_dh[data]=s__Execute__Exec_dh[data] - 60
                endif
                call BlzSetSpecialEffectHeight(s__Execute__Exec_fx[data], s__Execute__Exec_dh[data])
                endif
                if s__Execute__Exec_dur[data] >= 20 then
                    set s__Execute__Exec_h[data]=s__Execute__Exec_h[data] + s__Execute__Exec_float[data]
                    set s__Execute__Exec_hp[data]=s__Execute__Exec_h[data] / 5.
                    call SetUnitFlyHeight(s__Execute__Exec_t[data], s__Execute__Exec_h[data], .0)
                    if s__Execute__Exec_positive[data] then
                        set s__Execute__Exec_float[data]=s__Execute__Exec_float[data] + 1.
                        if s__Execute__Exec_float[data] >= 12. then
                            set s__Execute__Exec_positive[data]=false
                        endif
                    else
                        set s__Execute__Exec_float[data]=s__Execute__Exec_float[data] - 1.
                        if s__Execute__Exec_float[data] <= - 12. then
                            set s__Execute__Exec_positive[data]=true
                        endif
                    endif
                else
                    set s__Execute__Exec_h[data]=s__Execute__Exec_h[data] + 15.
                    set s__Execute__Exec_hp[data]=s__Execute__Exec_h[data] / 5.
                    call SetUnitFlyHeight(s__Execute__Exec_t[data], s__Execute__Exec_h[data], .0)
                endif
            endif
            set s__Execute__Exec_tx[data]=GetUnitX(s__Execute__Exec_t[data])
            set s__Execute__Exec_ty[data]=GetUnitY(s__Execute__Exec_t[data])
            set s__Execute__Exec_sx[data]=BlzGetLocalSpecialEffectX(s__Execute__Exec_fx[data])
            set s__Execute__Exec_sy[data]=BlzGetLocalSpecialEffectY(s__Execute__Exec_fx[data])
            if s__Execute__Exec_tx[data] != s__Execute__Exec_sx[data] then
            call BlzSetSpecialEffectX(s__Execute__Exec_fx[data], s__Execute__Exec_tx[data])
            endif
            if s__Execute__Exec_ty[data] != s__Execute__Exec_sy[data] then
            call BlzSetSpecialEffectY(s__Execute__Exec_fx[data], s__Execute__Exec_ty[data])
            endif
		//if IsQoBTyrael[GetUnitUserData(data.cast)] and GetRandomInt(0,100)<=20 then 
//call DestroyEffect(AddSpecialEffect("war3mapImported\\Smite.mdx",data.tx,data.ty))
		//endif
            call XQX(KA , GetUnitX(s__Execute__Exec_t[data]) , GetUnitY(s__Execute__Exec_t[data]) , .0 , 300. , 0 , ( 2 ))
            set s__Execute__Exec_dur[data]=s__Execute__Exec_dur[data] + 1
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .03125, false, function Execute__Handler)
        endif
    
        set t=null
    endfunction

    function Execute__FilterActions takes nothing returns boolean
        local integer data
        local timer t
        local unit u= GetFilterUnit()
        local unit u2
        local integer lvl= GetUnitAbilityLevel(Execute__CASTER, Execute__SPELL_ID)
        
        if UnitAlive(u) and IsUnitEnemy(u, GetOwningPlayer(Execute__CASTER)) then
            call UnitAddAbility(u, 'Amrf')
            call UnitRemoveAbility(u, 'Amrf')
            set u2=CreateUnit(GetOwningPlayer(Execute__CASTER), 'h007', 0., 0., 0.)
            call UnitAddAbility(u2, Execute__STUN_ID)
            call IssueTargetOrder(u2, "thunderbolt", u)
            call UnitApplyTimedLife(u2, 'BTLF', 1.)
            set data=s__Execute__Exec__allocate()
            set s__Execute__Exec_cast[data]=Execute__CASTER
            set s__Execute__Exec_t[data]=u
		//if IsQoBTyrael[GetUnitUserData(data.cast)] then 
            set s__Execute__Exec_attach[data]=AddSpecialEffectTarget("war3mapImported\\Bondage Gold HD.mdx", u, "origin")
		//else
           // set data.attach = AddSpecialEffectTarget("war3mapImported\\Bondage Red HD.mdx", u, "origin")
		//endif
            set s__Execute__Exec_lvl[data]=lvl
            set s__Execute__Exec_dur[data]=0
            set s__Execute__Exec_float[data]=3.
            set s__Execute__Exec_positive[data]=true

		if IsQoBTyrael[GetUnitUserData(s__Execute__Exec_cast[data])] then
 set s__Execute__Exec_fx2[data]=AddSpecialEffect("war3mapImported\\Heaven's Gate Channel.mdx", GetUnitX(u), GetUnitY(u))
else
	    set s__Execute__Exec_fx2[data]=AddSpecialEffect("war3mapImported\\Fountain of Souls_opt.mdx", GetUnitX(u), GetUnitY(u))

	endif
	    call BlzSetSpecialEffectScale(s__Execute__Exec_fx2[data], .85)
            set s__Execute__Exec_fx[data]=AddSpecialEffect("war3mapImported\\ExtremeSword.mdl", GetUnitX(u), GetUnitY(u))
	    

	    call BlzSetSpecialEffectZ(s__Execute__Exec_fx[data], - 2000.)
	    call BlzSetSpecialEffectPitch(s__Execute__Exec_fx[data], 90. * bj_DEGTORAD)
	    call BlzSetSpecialEffectHeight(s__Execute__Exec_fx[data], - 2000.)
	    call BlzSetSpecialEffectScale(s__Execute__Exec_fx[data], .000001)
	    call BlzSetSpecialEffectAlpha(s__Execute__Exec_fx[data], 0)
            call BlzSetSpecialEffectHeight(s__Execute__Exec_fx[data], 2000.)
	    call BlzSetSpecialEffectPitch(s__Execute__Exec_fx[data], - 270. * bj_DEGTORAD)
	    call BlzSetSpecialEffectRoll(s__Execute__Exec_fx[data], 10. * bj_DEGTORAD)
	    call BlzSetSpecialEffectYaw(s__Execute__Exec_fx[data], 0.)
	    call BlzSetSpecialEffectScale(s__Execute__Exec_fx[data], 3.)
	    call BlzSetSpecialEffectAlpha(s__Execute__Exec_fx[data], 255)
            

            set s__Execute__Exec_oh[data]=GetUnitDefaultFlyHeight(s__Execute__Exec_t[data])
            //call UnitAddAbility(data.fx, 'Amrf')
            //call UnitRemoveAbility(data.fx, 'Amrf')
            call SetUnitPathing(s__Execute__Exec_t[data], false)
            set s__Execute__Exec_dh[data]=2000.
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .03125, false, function Execute__Handler)
        endif
        
        set u2=null
        set u=null
        set t=null
        return false
    endfunction

    function Execute__OnSpell takes nothing returns nothing
        local real x= GetUnitX(GetTriggerUnit())
        local real y= GetUnitY(GetTriggerUnit())
        
            set Execute__CASTER=GetTriggerUnit()
            call GroupEnumUnitsInRange(Execute__GROUP, x, y, (900. + ( 30. * (GetUnitAbilityLevel(Execute__CASTER, Execute__SPELL_ID)) )), Filter(function Execute__FilterActions)) // INLINED!!
    endfunction

    function Execute__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Execute__SPELL_ID , function Execute__OnSpell)
    endfunction

// scope Execute ends


//===========================================================================
// Trigger: Voracity
//===========================================================================
//TESH.scrollpos=36
//TESH.alwaysfold=0
// scope Voracity begins

         function s__Voracity__VA_destroy takes integer this returns nothing
            set s__Voracity__VA_u[this]=null
            call s__Voracity__VA_deallocate(this)
        endfunction
    


    function Voracity__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
    if GetUnitTypeId(LC[( 1 + GetPlayerId(GetOwningPlayer(s__Voracity__VA_u[data])) )]) != 'E006' or LC[( 1 + GetPlayerId(GetOwningPlayer(s__Voracity__VA_u[data])) )] != s__Voracity__VA_u[data] then
    call s__Voracity__VA_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    else
    if UnitAlive(s__Voracity__VA_u[data]) then
    if VoracityInt[GetPlayerId(GetOwningPlayer(s__Voracity__VA_u[data]))] > 0 then
    set VoracityInt[GetPlayerId(GetOwningPlayer(s__Voracity__VA_u[data]))]=VoracityInt[GetPlayerId(GetOwningPlayer(s__Voracity__VA_u[data]))] - 1
    else
    if GetUnitAbilityLevel(s__Voracity__VA_u[data], Voracity__ARM_ID) == 6 then
    call UnitRemoveAbility(s__Voracity__VA_u[data], 'A0BW')
    endif
    call SetUnitAbilityLevel(s__Voracity__VA_u[data], Voracity__ARM_ID, GetUnitAbilityLevel(s__Voracity__VA_u[data], Voracity__ARM_ID) - 1)
    call SetUnitAbilityLevel(s__Voracity__VA_u[data], Voracity__SPELL_ID2, GetUnitAbilityLevel(s__Voracity__VA_u[data], Voracity__SPELL_ID2) - 1)
    endif
    
    call s__Voracity__VA_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    else
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .5, false, function Voracity__Handler)
    endif
    endif
    
    set t=null
    endfunction
    
    function Voracity__Actions takes nothing returns nothing
    local timer t
    local integer data
    local unit u= GetEventDamageSource()
    
    if GetUnitAbilityLevel(u, Voracity__ARM_ID) < 21 then
        if GetUnitAbilityLevel(u, Voracity__ARM_ID) == 5 then
            call UnitAddAbility(u, 'A0BW')
        endif
        call SetUnitAbilityLevel(u, Voracity__ARM_ID, GetUnitAbilityLevel(u, Voracity__ARM_ID) + 1)
        call SetUnitAbilityLevel(u, Voracity__SPELL_ID2, GetUnitAbilityLevel(u, Voracity__SPELL_ID2) + 1)
        set t=(NewTimerEx(0)) // INLINED!!
        set data=s__Voracity__VA__allocate()
        set s__Voracity__VA_u[data]=u
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, 5., false, function Voracity__Handler)
    endif
    
    set t=null
    set u=null
    endfunction
    
    function Voracity__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), Voracity__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) and UnitAlive(GetEventDamageSource()) and GetUnitAbilityLevel(GetEventDamageSource(), 'A0B5') < 21 then // INLINED!!
        call Voracity__Actions()
    endif
    return false
    endfunction
    
    function Voracity__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function Voracity__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope Voracity ends
//===========================================================================
// Trigger: Happy Hour
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope HappyHour begins
 

 
    function HappyHour__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
    local real r

    if IsUnitAlly(u, GetOwningPlayer(HappyHour__CASTER)) and UnitAlive(u) and GetOwningPlayer(u) != Player(15) then
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\StrongDrink\\BrewmasterMissile.mdl", u, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\RollingKegMissleNoSound.mdx", u, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl", u, "origin"))

    set r=GetWidgetLife(u)
    
    if HappyHour__HEAL + r >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
    
    call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
    
    else
    call SetWidgetLife(u, r + HappyHour__HEAL)
    endif
    
    endif
    
    set u=null
    return false
    endfunction
 

 
    function HappyHour__Actions takes nothing returns nothing
 
    set HappyHour__CASTER=GetTriggerUnit()
    
    set HappyHour__HEAL=( GetUnitState(HappyHour__CASTER, UNIT_STATE_MAX_LIFE) * .07 ) + GetHeroStr(HappyHour__CASTER, TRUE)
    

    call GroupEnumUnitsInRange(HappyHour__GROUP, GetUnitX(HappyHour__CASTER), GetUnitY(HappyHour__CASTER), 624., Filter(function HappyHour__FilterActions))

    

    endfunction
    


        function HappyHour__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(HappyHour__SPELL_ID , function HappyHour__Actions)
    endfunction
// scope HappyHour ends

//===========================================================================
// Trigger: Hallucinations
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope Hallucinations begins



    function Hallucinations__Actions takes nothing returns boolean
        local unit a= GetEventDamageSource()
        local unit u= GetTriggerUnit()
 local real d= GetEventDamage()
 local player p= GetOwningPlayer(a)

        
        if ( GetPlayerController(p) == MAP_CONTROL_USER ) and IsUnitIllusion(u) and not IsUnitType(u, UNIT_TYPE_HERO) and d >= 1. and GetUnitTypeId(LC[GetPlayerId(p) + 1]) == 'E01D' and IsUnitEnemy(u, GetOwningPlayer(a)) and ( GetEventDamage() >= 1. ) and ( ( BI[NI] == LN or BI[NI] == DAMAGE_TYPE_LIGHTNING or BI[NI] == DAMAGE_TYPE_COLD or BI[NI] == DAMAGE_TYPE_MAGIC or BI[NI] == DAMAGE_TYPE_PLANT or BI[NI] == DAMAGE_TYPE_UNIVERSAL or ( CI[NI] == false and ( BI[NI] ) == DAMAGE_TYPE_NORMAL ) ) and ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) ) then

call DisableTrigger(HALLUCINATIONDAMAGE)
		    call UnitDamageTargetEx(a , u , d * .5 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(HALLUCINATIONDAMAGE)
	else

	if ( GetPlayerController(p) == MAP_CONTROL_USER ) and IsUnitIllusion(u) and not IsUnitType(u, UNIT_TYPE_HERO) and d >= 1. and GetUnitTypeId(LC[GetPlayerId(p) + 1]) == 'E01D' and ( not ( J5V[( ROX(( GetUnitTypeId(a) )) )] ) ) and IsUnitEnemy(u, GetOwningPlayer(a)) then
	call DisableTrigger(HALLUCINATIONDAMAGE)
		    call UnitDamageTargetEx(a , u , d * .5 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
call EnableTrigger(HALLUCINATIONDAMAGE)
	endif
	endif




        set u=null
        set a=null
	set p=null
        return false
    endfunction
    
    function Hallucinations__OnInit takes nothing returns nothing
        set HALLUCINATIONDAMAGE=CreateTrigger()
        call MOE(II , ( HALLUCINATIONDAMAGE ))
        call TriggerAddCondition(HALLUCINATIONDAMAGE, Condition(function Hallucinations__Actions))
    endfunction
    
// scope Hallucinations ends
//===========================================================================
// Trigger: Spell Steal Prep
//===========================================================================
// scope SpellStealPrep begins




function s__SpellStealPrep__ss_destroy takes integer this returns nothing
set s__SpellStealPrep__ss_u[this]=null
call s__SpellStealPrep__ss_deallocate(this)
endfunction


function SpellStealPrep__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!


set SpellStealCounter[GetUnitUserData(s__SpellStealPrep__ss_u[data])]=SpellStealCounter[GetUnitUserData(s__SpellStealPrep__ss_u[data])] - 1

if SpellStealCounter[GetUnitUserData(s__SpellStealPrep__ss_u[data])] == 0 then
set SpellStealID[GetUnitUserData(s__SpellStealPrep__ss_u[data])]='4444'
endif

call ReleaseTimer(t)
call s__SpellStealPrep__ss_destroy(data)

set t=null
endfunction

function SpellStealPrep__Conditions takes nothing returns boolean
local unit u= GetTriggerUnit()
local timer t
local integer data

if IsUnitType(u, UNIT_TYPE_HERO) and not BlzGetAbilityBooleanField(BlzGetUnitAbility(u, GetSpellAbilityId()), ABILITY_BF_ITEM_ABILITY) then

set SpellStealCounter[GetUnitUserData(u)]=SpellStealCounter[GetUnitUserData(u)] + 1
set SpellStealID[GetUnitUserData(u)]=GetSpellAbilityId()

set data=s__SpellStealPrep__ss__allocate()
set t=(NewTimerEx(0)) // INLINED!!

set s__SpellStealPrep__ss_u[data]=u

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!

call TimerStart(t, 2.5, false, function SpellStealPrep__Handler)

endif

set t=null
set u=null
    return false
endfunction

function SpellStealPrep__OnInit takes nothing returns nothing
local trigger t= CreateTrigger()

    call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(t, Condition(function SpellStealPrep__Conditions))
endfunction

// scope SpellStealPrep ends
//===========================================================================
// Trigger: Spell Steal
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope SpellSteal begins
 

function s__SpellSteal__ss_destroy takes integer this returns nothing
set s__SpellSteal__ss_u[this]=null
set s__SpellSteal__ss_p[this]=null
call s__SpellSteal__ss_deallocate(this)
endfunction

	
 function SpellSteal__Handler2 takes nothing returns nothing
 local timer t= GetExpiredTimer()
 local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

	call UnitRemoveAbility(s__SpellSteal__ss_u[data], SpellSteal__SPELL_ID)
	call UnitAddAbility(s__SpellSteal__ss_u[data], SpellSteal__SPELL_ID)
	call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], true, SpellSteal__SPELL_ID)

	call ReleaseTimer(t)
	call s__SpellSteal__ss_destroy(data)

	set t=null
	endfunction

 function SpellSteal__Handler takes nothing returns nothing
 local timer t= GetExpiredTimer()
 local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
	
	call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], false, s__SpellSteal__ss_id[data])
	call UnitRemoveAbility(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id[data])
	if s__SpellSteal__ss_id2[data] != 0 then
	call UnitRemoveAbility(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id2[data])
	endif

	if GetLocalPlayer() == s__SpellSteal__ss_p[data] then
		call BlzSetAbilityPosX(s__SpellSteal__ss_id[data], s__SpellSteal__ss_x[data])
		call BlzSetAbilityPosY(s__SpellSteal__ss_id[data], s__SpellSteal__ss_y[data])
	endif

	call UnitAddAbility(s__SpellSteal__ss_u[data], SpellSteal__SPELL_ID)
	call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], true, SpellSteal__SPELL_ID)

	call ReleaseTimer(t)
	call s__SpellSteal__ss_destroy(data)

	set t=null
	endfunction

 
    function SpellSteal__Actions takes nothing returns nothing
 local unit t= GetSpellTargetUnit()
 local unit u= GetTriggerUnit()
 local timer tt
 local integer data
 local integer id= SpellStealID[GetUnitUserData(t)]
 local unit d
	
	if id == 'A00W' or id == 'A0K1' or id == 'A03K' or id == SpellSteal__SPELL_ID or id == 'A0FB' or id == 'A098' or id == 'A08V' or id == 'A0BO' or id == 'A0IA' or id == 'A0DX' then
		call Q_E(GetOwningPlayer(u) , "Invalid target for Spell Steal: " + GetObjectName(id))
		set tt=(NewTimerEx(0)) // INLINED!!
		set data=s__SpellSteal__ss__allocate()
		set s__SpellSteal__ss_u[data]=u
		call SaveInteger(TimerUtils___ht, 0, GetHandleId((tt )), ( data)) // INLINED!!
		call TimerStart(tt, 2., false, function SpellSteal__Handler2)
	else

	if id == 0 or id == '4444' then
		call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., BS[( 1 + GetPlayerId(GetOwningPlayer(u)) )] + ( GetPlayerName(GetOwningPlayer(u)) + "|r" ) + "|c00FF0101 has been caught stealing red handed! The no good dirty criminal has been detained!|r")
		set d=CreateUnit(GetOwningPlayer(u), 'h007', GetUnitX(u), GetUnitY(u), 0.)
		call UnitAddAbility(d, 'A0MU')
		call IssueTargetOrderById(d, 852668, u)
		call UnitApplyTimedLife(d, 'BTLF', 1)
	else
	set tt=(NewTimerEx(0)) // INLINED!!
	set data=s__SpellSteal__ss__allocate()
	set s__SpellSteal__ss_u[data]=u
	set s__SpellSteal__ss_id[data]=id
	set s__SpellSteal__ss_x[data]=BlzGetAbilityPosX(s__SpellSteal__ss_id[data])
	set s__SpellSteal__ss_y[data]=BlzGetAbilityPosY(s__SpellSteal__ss_id[data])
	set s__SpellSteal__ss_p[data]=GetOwningPlayer(s__SpellSteal__ss_u[data])

	
	call UnitRemoveAbility(s__SpellSteal__ss_u[data], SpellSteal__SPELL_ID)
	call UnitAddAbility(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id[data])
	call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], true, s__SpellSteal__ss_id[data])

	if s__SpellSteal__ss_id[data] == 'A0JX' then
		call UnitAddAbility(s__SpellSteal__ss_u[data], 'A0K1')
		call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], true, 'A0K1')
		set s__SpellSteal__ss_id2[data]='A0K1'
	endif

	if s__SpellSteal__ss_id[data] == 'A01G' then
		call UnitAddAbility(s__SpellSteal__ss_u[data], 'A00W')
		call UnitMakeAbilityPermanent(s__SpellSteal__ss_u[data], true, 'A00W')
		set s__SpellSteal__ss_id2[data]='A00W'
	endif

	call SetUnitAbilityLevel(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id[data], GetUnitAbilityLevel(t, s__SpellSteal__ss_id[data]))
	call BlzSetUnitAbilityManaCost(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id[data], GetUnitAbilityLevel(t, s__SpellSteal__ss_id[data]) - 1, 0)

	if GetLocalPlayer() == s__SpellSteal__ss_p[data] then
		call BlzSetAbilityPosX(s__SpellSteal__ss_id[data], 1)
		call BlzSetAbilityPosY(s__SpellSteal__ss_id[data], 2)
	endif

	call SaveInteger(TimerUtils___ht, 0, GetHandleId((tt )), ( data)) // INLINED!!
	call TimerStart(tt, 100., false, function SpellSteal__Handler)
	
	call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., BS[( 1 + GetPlayerId(s__SpellSteal__ss_p[data]) )] + ( GetPlayerName(s__SpellSteal__ss_p[data]) + "|r" ) + " has stolen " + BlzGetAbilityStringLevelField(BlzGetUnitAbility(s__SpellSteal__ss_u[data], s__SpellSteal__ss_id[data]), ABILITY_SLF_TOOLTIP_NORMAL, GetUnitAbilityLevel(t, s__SpellSteal__ss_id[data]) - 1) + " !")
	call PlaySoundBJ(HY)
	if IsThiefRat[GetUnitUserData(s__SpellSteal__ss_u[data])] then
call SGE('h01U' , GetUnitX(t) - 100. * Cos(GetUnitFacing(t) * bj_DEGTORAD) , GetUnitY(t) - 100. * Sin(GetUnitFacing(t) * bj_DEGTORAD) , GetUnitFacing(t) , .900 , "attack two" , 1.0)
else
call SGE('h00Y' , GetUnitX(t) - 100. * Cos(GetUnitFacing(t) * bj_DEGTORAD) , GetUnitY(t) - 100. * Sin(GetUnitFacing(t) * bj_DEGTORAD) , GetUnitFacing(t) , .900 , "attack one" , 1.0)
endif

	endif
	endif

	set d=null
	set tt=null
	set t=null
	set u=null
    endfunction
    


        function SpellSteal__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(SpellSteal__SPELL_ID , function SpellSteal__Actions)
    endfunction
// scope SpellSteal ends

//===========================================================================
// Trigger: Thief Collision
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ThiefCollision begins

function ThiefCollision__Conditions takes nothing returns boolean
    if GetUnitTypeId(GetTriggerUnit()) == 'E01L' and IsUnitIllusion(GetTriggerUnit()) then
        call SetUnitPathing(GetTriggerUnit(), true)
    endif
    return false
endfunction

//===========================================================================
function ThiefCollision__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(0), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(1), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(2), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(3), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(4), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(5), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(6), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(7), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(8), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(9), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(10), true)
    call TriggerRegisterPlayerSelectionEventBJ(trig, Player(11), true)
    call TriggerAddCondition(trig, Condition(function ThiefCollision__Conditions))
endfunction
// scope ThiefCollision ends

//===========================================================================
// Trigger: Venom
//===========================================================================
//TESH.scrollpos=1
//TESH.alwaysfold=0
// scope ThiefIllusVenom begins

    


function ThiefIllusVenom__FilterActions takes nothing returns boolean
return ( UnitAlive(GetFilterUnit()) and IsUnitEnemy(ThiefIllusVenom__CASTER, GetOwningPlayer(GetFilterUnit())) and GetUnitAbilityLevel(GetFilterUnit(), 'B039') == 0 and GetFilterUnit() != ThiefIllusVenom__HIT and not IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) )
endfunction
    
    function ThiefIllusVenom__Actions takes nothing returns nothing
    local unit u=CreateUnit(GetOwningPlayer(GetEventDamageSource()), 'h007', 0., 0., 0.)
    
    call UnitAddAbility(u, 'A0BR')
    call SetUnitAbilityLevel(u, 'A0BR', GetUnitAbilityLevel(GetEventDamageSource(), ThiefIllusVenom__SPELL_ID))
    call UnitApplyTimedLife(u, 'BTLF', 15.)
    
    call IssueTargetOrder(u, "soulburn", GetTriggerUnit())
    
    set ThiefIllusVenom__CASTER=GetEventDamageSource()
    set ThiefIllusVenom__HIT=GetTriggerUnit()
    if not IsUnitSelected(ThiefIllusVenom__CASTER, GetOwningPlayer(ThiefIllusVenom__CASTER)) then
    if GetRandomInt(0, 100) <= 75 then
    call SetUnitPathing(ThiefIllusVenom__CASTER, false)
    call IssueTargetOrder(ThiefIllusVenom__CASTER, "attack", ZEE(null , GetUnitX(ThiefIllusVenom__CASTER) , GetUnitY(ThiefIllusVenom__CASTER) , 99999. , Condition(function ThiefIllusVenom__FilterActions)))
    endif
    endif
    
    set u=null
    endfunction
    
    function ThiefIllusVenom__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), ThiefIllusVenom__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and IsUnitIllusion(GetEventDamageSource()) and GetUnitAbilityLevel(GetTriggerUnit(), 'B039') == 0 and GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_COMPUTER then
        call ThiefIllusVenom__Actions()
    endif
    return false
    endfunction
    
    function ThiefIllusVenom__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function ThiefIllusVenom__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope ThiefIllusVenom ends
//===========================================================================
// Trigger: Sinful Sinphony
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope SinfulPassive begins




function SinfulPassive__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local real x= GetUnitX(u) - 100. * Cos(GetUnitFacing(u)) * bj_DEGTORAD
local real y= GetUnitY(u) - 100. * Sin(GetUnitFacing(u)) * bj_DEGTORAD

call UnitDamageTargetEx(GetEventDamageSource() , u , THIEFSWAG[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))])] * .05 , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , null)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", u, "chest"))
if IsThiefRat[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(GetEventDamageSource()))])] then
call SGE('h01U' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack one" , 1.0)
else
call SGE('h00Y' , x , y , GetUnitFacing(GetSpellTargetUnit()) , .900 , "attack one" , 1.0)
endif
set u=null
endfunction
    
    function SinfulPassive__Conditions takes nothing returns boolean
local unit u= GetEventDamageSource()

    if GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(u))], 'A08V') != 0 and GetTriggerUnit() != u and IsUnitEnemy(u, GetOwningPlayer(GetTriggerUnit())) and GetEventDamage() > 1. and GetRandomInt(0, 100) <= 15 + ( 3 * GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(u))], 'A08V') ) and GetUnitAbilityLevel(u, 'BIil') != 1 and GetPlayerController(GetOwningPlayer(GetTriggerUnit())) == MAP_CONTROL_COMPUTER and BI[NI] != DAMAGE_TYPE_PLANT then
        call SinfulPassive__Actions()
    endif

set u=null
    return false
    endfunction
    
    function SinfulPassive__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function SinfulPassive__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope SinfulPassive ends
//===========================================================================
// Trigger: swag
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ThiefStacks begins
 
 function ThiefStacks__Conditions takes nothing returns boolean
 
 if GetUnitTypeId(LC[1 + GetPlayerId(GetTriggerPlayer())]) == 'E01L' then
 call DisplayTextToPlayer(GetTriggerPlayer(), 0., 0., "|cffffcc00Total Gold Stolen:|r " + R2S(THIEFSWAG[GetUnitUserData(LC[1 + GetPlayerId(GetTriggerPlayer())])]))
 endif
 
 return false
 endfunction
 
  function ThiefStacks__OnInit takes nothing returns nothing
    local trigger trig= CreateTrigger()
    local integer pid= 0
    loop
        call TriggerRegisterPlayerChatEvent(trig, Player(pid), "-swag", false)
        exitwhen pid == 11
        set pid=pid + 1
    endloop
   
    call TriggerAddCondition(trig, Condition(function ThiefStacks__Conditions))
    endfunction
// scope ThiefStacks ends
//===========================================================================
// Trigger: Undying Flame
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope UndyingFlame begins
    

    
    function UndyingFlame__Actions takes nothing returns nothing
    local unit u= GetEventDamageSource()
    local unit t= GetTriggerUnit()

    local real dmg= ( GetUnitState(u, UNIT_STATE_MAX_MANA) - GetUnitState(u, UNIT_STATE_MANA) ) * .5
    
    call UnitRemoveAbility(t, 'B057')
 
    call UnitDamageTargetEx(u , t , dmg , false , true , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
	
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Flameshock.mdx", t, "chest"))

    
    set t=null
    set u=null
    endfunction
    
    function UndyingFlame__Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), UndyingFlame__SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) and GetUnitAbilityLevel(GetTriggerUnit(), 'B057') == 1 and GetUnitState(GetEventDamageSource(), UNIT_STATE_MAX_MANA) != GetUnitState(GetEventDamageSource(), UNIT_STATE_MANA) then // INLINED!!
        call UndyingFlame__Actions()
    endif
    return false
    endfunction
    
    function UndyingFlame__OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function UndyingFlame__Conditions))
        call MOE(II , ( t ))
    endfunction
// scope UndyingFlame ends
//===========================================================================
// Trigger: Bloodbath
//===========================================================================
//TESH.scrollpos=99
//TESH.alwaysfold=0
// scope Bloodbath begins
 
 //integer i
         function s__Bloodbath__BB_destroy takes integer this returns nothing
            set s__Bloodbath__BB_caster[this]=null
            call s__Bloodbath__BB_deallocate(this)
        endfunction
 
         function s__Bloodbath__BBfx_destroy takes integer this returns nothing
            set s__Bloodbath__BBfx_caster[this]=null
            call s__Bloodbath__BBfx_deallocate(this)
        endfunction
 
    function Bloodbath__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()

    if IsUnitEnemy(u, GetOwningPlayer(Bloodbath__CASTER)) and UnitAlive(u) then
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodbathTarget.mdx", u, "chest"))

    call UnitDamageTargetEx(Bloodbath__CASTER , u , Bloodbath__DMG , false , true , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , null)
    endif
    
    set u=null
    return false
    endfunction
 
    function Bloodbath__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
    set Bloodbath__CASTER=s__Bloodbath__BB_caster[data]
    set Bloodbath__DMG=s__Bloodbath__BB_c[data]
    
    set s__Bloodbath__BB_x[data]=GetUnitX(s__Bloodbath__BB_caster[data])
    set s__Bloodbath__BB_y[data]=GetUnitY(s__Bloodbath__BB_caster[data])
    
    //call DestroyEffect(AddSpecialEffect("war3mapImported\\Blood Explosion.mdx",data.x,data.y))
    //call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodSlam.mdx",data.x,data.y))
    call GroupEnumUnitsInRange(Bloodbath__GROUP, s__Bloodbath__BB_x[data], s__Bloodbath__BB_y[data], 374., Filter(function Bloodbath__FilterActions))
    
    //set data.i = data.i - 1
    
    //if data. i == 0 then
    
    call ReleaseTimer(GetExpiredTimer())
    call s__Bloodbath__BB_destroy(data)
    
    //else
    
    //call SetTimerData(t,data)
    //call TimerStart(t,1.,false,function Handler)

    //endif

    set t=null
    endfunction
    
    function Bloodbath__Handler2 takes nothing returns nothing
    local timer t2= GetExpiredTimer()
    local integer data2= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t2)))) // INLINED!!
    local real x
    local real y
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__Bloodbath__BB__allocate()
    
    set x=GetUnitX(s__Bloodbath__BBfx_caster[data2])
    set y=GetUnitY(s__Bloodbath__BBfx_caster[data2])
    
    call DestroyEffect(AddSpecialEffect("war3mapImported\\Blood Explosion.mdx", x, y))
    call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodSlam.mdx", x, y))
    
    set s__Bloodbath__BB_caster[data]=s__Bloodbath__BBfx_caster[data2]
    set s__Bloodbath__BB_x[data]=x
    set s__Bloodbath__BB_y[data]=y
    set s__Bloodbath__BB_c[data]=s__Bloodbath__BBfx_c[data2]
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .4, false, function Bloodbath__Handler)
    
    set s__Bloodbath__BBfx_i[data2]=s__Bloodbath__BBfx_i[data2] - 1
    
    if s__Bloodbath__BBfx_i[data2] == 0 then
    
    call ReleaseTimer(GetExpiredTimer())
    call s__Bloodbath__BBfx_destroy(data2)
    
    else
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
    call TimerStart(t2, 1., false, function Bloodbath__Handler2)

    endif
    
    set t=null
    set t2=null
    endfunction
 
    function Bloodbath__Actions takes nothing returns nothing
    //local timer t = NewTimer()
    local timer t2= (NewTimerEx(0)) // INLINED!!
    //local BB data = BB.create()
    local real hp
    local integer data2= s__Bloodbath__BBfx__allocate()
    
    //set data.i = 12
    //set data.caster = GetTriggerUnit()
    //set data.x = GetUnitX(data.caster)
    //set data.y = GetUnitY(data.caster)
    
    set s__Bloodbath__BBfx_caster[data2]=GetTriggerUnit()
    
    set hp=GetWidgetLife(s__Bloodbath__BBfx_caster[data2])
    
    set s__Bloodbath__BBfx_c[data2]=hp / 2
    
    call SetWidgetLife(s__Bloodbath__BBfx_caster[data2], hp - s__Bloodbath__BBfx_c[data2])
    
    set s__Bloodbath__BBfx_c[data2]=( s__Bloodbath__BBfx_c[data2] * GetUnitAbilityLevel(s__Bloodbath__BBfx_caster[data2], Bloodbath__SPELL_ID) * .2 ) + ( GetUnitState(s__Bloodbath__BBfx_caster[data2], UNIT_STATE_MAX_LIFE) * GetUnitAbilityLevel(s__Bloodbath__BBfx_caster[data2], Bloodbath__SPELL_ID) * .02 )
    

    
    //set CASTER = data.caster
    
    //set DMG = data.c
    
    call DestroyEffect(AddSpecialEffect("war3mapImported\\ChaosExplosion.mdx", GetUnitX(s__Bloodbath__BBfx_caster[data2]), GetUnitY(s__Bloodbath__BBfx_caster[data2])))
    
    //call GroupEnumUnitsInRange(GROUP,data.x,data.y,399.,Filter(function FilterActions))

    
    //call SetTimerData(t,data)
    
    //call TimerStart(t,1.,false,function Handler)
    
    set s__Bloodbath__BBfx_i[data2]=12
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
    
    call TimerStart(t2, .6, false, function Bloodbath__Handler2)
    
    set t2=null
    //set t = null
    endfunction
    

        function Bloodbath__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Bloodbath__SPELL_ID , function Bloodbath__Actions)
    endfunction
// scope Bloodbath ends

//===========================================================================
// Trigger: Blood Hydrant
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope BloodHydrant begins
 
            function s__BloodHydrant__BH_destroy takes integer this returns nothing
set BloodHydrant__NoStack[GetUnitUserData(s__BloodHydrant__BH_c[this])]=false
            set s__BloodHydrant__BH_c[this]=null
            call s__BloodHydrant__BH_deallocate(this)
        endfunction

function BloodHydrant__FilterActions takes nothing returns boolean
return UnitAlive(GetFilterUnit()) and IsUnitEnemy(BLOODHYDRANTCASTER, GetOwningPlayer(GetFilterUnit())) and IsUnitVisible(BLOODHYDRANTCASTER, GetOwningPlayer(GetFilterUnit()))
endfunction

function BloodHydrant__Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!


if s__BloodHydrant__BH_c[data] == null or UnitAlive(s__BloodHydrant__BH_c[data]) == false or GetUnitAbilityLevel(s__BloodHydrant__BH_c[data], 'B06C') != 1 then

call ReleaseTimer(t)
call s__BloodHydrant__BH_destroy(data)

else

if GetWidgetLife(s__BloodHydrant__BH_c[data]) >= 1 then

set BLOODHYDRANTCASTER=s__BloodHydrant__BH_c[data]

set BLOODHYDRANTTARGET=ZEE(null , GetUnitX(BLOODHYDRANTCASTER) , GetUnitY(BLOODHYDRANTCASTER) , 375. , Condition(function BloodHydrant__FilterActions))

if BLOODHYDRANTTARGET != null then

call SetWidgetLife(s__BloodHydrant__BH_c[data], GetWidgetLife(s__BloodHydrant__BH_c[data]) * .75)

call RTX()

endif

endif

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .5, false, function BloodHydrant__Handler)
endif


set t=null
endfunction

 
    function BloodHydrant__Actions takes nothing returns nothing
 local timer t
 local unit c= GetTriggerUnit()
 local integer data

if BloodHydrant__NoStack[GetUnitUserData(c)] == false then

set BloodHydrant__NoStack[GetUnitUserData(c)]=true

set data=s__BloodHydrant__BH__allocate()
set s__BloodHydrant__BH_c[data]=c
set t=(NewTimerEx(0)) // INLINED!!

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .5, false, function BloodHydrant__Handler)

endif

set c=null
set t=null
    endfunction
    


        function BloodHydrant__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(BloodHydrant__SPELL_ID , function BloodHydrant__Actions)
    endfunction
// scope BloodHydrant ends

//===========================================================================
// Trigger: NissaBinding
//===========================================================================
//TESH.scrollpos=10
//TESH.alwaysfold=0
// scope NissaBinding begins



        function s__NissaBinding__NBind_destroy takes integer this returns nothing
            set s__NissaBinding__NBind_u[this]=null
            call s__NissaBinding__NBind_deallocate(this)
        endfunction


    
    function NissaBinding__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
    local unit u2
    
    if IsUnitEnemy(u, GetOwningPlayer(NissaBinding__CASTER)) and UnitAlive(u) then
        set u2=CreateUnit(GetOwningPlayer(NissaBinding__CASTER), 'h007', 0., 0., 0.)
        call UnitAddAbility(u2, NissaBinding__SPELL_ID2)
        call IssueTargetOrder(u2, "sleep", u)
        call UnitApplyTimedLife(u2, 'BTLF', 1.)
    endif
    
    set u=null
    set u2=null
    return false
    endfunction
    

    function NissaBinding__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
 
// call SetUnitState(GetTriggerUnit(),UNIT_STATE_MANA,GetUnitState(GetTriggerUnit(),UNIT_STATE_MANA)-(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_MANA)*.2))

    //call DestroyEffect(AddSpecialEffect(SFX_PATH2,x,y))
    set NissaBinding__CASTER=s__NissaBinding__NBind_u[data]
    
    call GroupEnumUnitsInRange(NissaBinding__GROUP, s__NissaBinding__NBind_x[data], s__NissaBinding__NBind_y[data], 210., Filter(function NissaBinding__FilterActions))

    call s__NissaBinding__NBind_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction
    
    function NissaBinding__Actions takes nothing returns nothing
    local unit u
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__NissaBinding__NBind__allocate()

    set s__NissaBinding__NBind_u[data]=GetTriggerUnit()
    set s__NissaBinding__NBind_x[data]=GetSpellTargetX()
    set s__NissaBinding__NBind_y[data]=GetSpellTargetY()

    set u=CreateUnit(GetOwningPlayer(s__NissaBinding__NBind_u[data]), 'h012', s__NissaBinding__NBind_x[data], s__NissaBinding__NBind_y[data], 0.)
    call UnitApplyTimedLife(u, 'BTLF', 2.0)
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 2., false, function NissaBinding__Handler)
    
    set u=null
    set t=null
    endfunction
    


        function NissaBinding__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(NissaBinding__SPELL_ID , function NissaBinding__Actions)
    endfunction
// scope NissaBinding ends


//===========================================================================
// Trigger: Mass Charm Empath
//===========================================================================
// scope MassCharm begins
 

 
    function MassCharm__FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
    local real r
 local integer i
 local texttag tt
local string s= null

    if IsUnitEnemy(u, GetOwningPlayer(MassCharm__CASTER)) and UnitAlive(u) and GetOwningPlayer(u) != Player(15) and GetUnitTypeId(u) != 'h000' and not IsUnitType(u, UNIT_TYPE_HERO) and GetPlayerId(GetOwningPlayer(u)) != PLAYER_NEUTRAL_PASSIVE and not IsUnitType(u, UNIT_TYPE_STRUCTURE) then
set i=BlzGetUnitIntegerField(u, UNIT_IF_GOLD_BOUNTY_AWARDED_BASE)
	set tt=CreateTextTag()
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Holy Light.mdx", u, "origin"))
    
if GetUnitTypeId(u) == 'u002' or GetUnitTypeId(u) == 'u006' then

call DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 4., "Despite " + ( ( BS[( 1 + GetPlayerId(GetOwningPlayer(MassCharm__CASTER)) )] + ( GetPlayerName(GetOwningPlayer(MassCharm__CASTER)) + "|r" ) ) + ( "'s earnest appeals to the heavens, the demon unfortunately could not be \"persuaded\". Negotiations have broken down, and unexpected results have occured from heaven's intervention." ) ))
call SetUnitScale(u, 6., 6., 6.)
else
    call SetUnitOwner(u, GetOwningPlayer(MassCharm__CASTER), true)

endif
if GetUnitAbilityLevel(u, 'A04P') != 0 then
call UnitRemoveAbility(u, 'A04P')
endif
	

if not IsUnitType(u, UNIT_TYPE_ANCIENT) then

call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(u) * 2)
call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) * 2, 0)
call BlzSetUnitArmor(u, BlzGetUnitArmor(u) * 2.)
call AddUnitBonus(u , BONUS_ATTACK_SPEED , 1.)
call SetWidgetLife(u, BlzGetUnitMaxHP(u) * 1.)

else

    if GetUnitTypeId(u) == 'n025' then
	set i=i / 2
    call UnitApplyTimedLife(u, 'BTLF', 90.)
	else
    call UnitApplyTimedLife(u, 'BTLF', 300.)
    endif

endif

	if GetLocalPlayer() == GetOwningPlayer(MassCharm__CASTER) then
	set s="|cffffcc00 +" + I2S(i) + "|r"
	endif
	call SetTextTagText(tt, s, 0.023)
                    call SetTextTagPos(tt, GetUnitX(u), GetUnitY(u), 10.)
                    call SetTextTagColor(tt, 255, 255, 255, 255)
                    call SetTextTagVelocity(tt, 0.0355 * Cos(90. * bj_DEGTORAD), 0.0355 * Sin(90. * bj_DEGTORAD))
                    call SetTextTagVisibility(tt, true)
                    call SetTextTagFadepoint(tt, 1.5)
                    call SetTextTagLifespan(tt, 2.)
                    call SetTextTagPermanent(tt, false)

	call SetPlayerState(GetOwningPlayer(MassCharm__CASTER), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(GetOwningPlayer(MassCharm__CASTER), PLAYER_STATE_RESOURCE_GOLD) ) + i)
    
	call UnitAddAbility(u, 'A0NM')
if GetUnitAbilityLevel(u, 'A0EV') != 0 or GetUnitAbilityLevel(u, 'Apiv') != 0 then
	call UnitRemoveAbility(u, 'A0EV')
	call UnitRemoveAbility(u, 'Apiv')
endif
	
	endif
    

set tt=null
set s=null
    set u=null
    return false
    endfunction
 

 
    function MassCharm__Actions takes nothing returns nothing
 local effect fx= AddSpecialEffect("war3mapImported\\Divine Edict.mdx", GetSpellTargetX(), GetSpellTargetY())
    set MassCharm__CASTER=GetTriggerUnit()
    
//call BlzSetSpecialEffectScale(fx,1.0)

call DestroyEffect(fx)
    

    call GroupEnumUnitsInRange(MassCharm__GROUP, GetSpellTargetX(), GetSpellTargetY(), 225., Filter(function MassCharm__FilterActions))

    set fx=null

    endfunction
    


        function MassCharm__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(MassCharm__SPELL_ID , function MassCharm__Actions)
    endfunction
// scope MassCharm ends
//===========================================================================
// Trigger: Wild Haunt
//===========================================================================
//TESH.scrollpos=49
//TESH.alwaysfold=0
//***************************************************************************
//***************************************************************************
//***************************************************************************
//      S H A D O W   I M A G E   B L I N K
//                                          By: Elphis (Nyuu)
//      Version: 1.0
//
//      Sepll Description: 
//  `                       - Use dark power, creating an illusion and a energy 
//                          ball shot to the selected point and after energy ball hit the target point, 
//                          it will explodes and stuns enemies in 2/2.5/3/3.5 seconds and cause 50/100/150/200 
//                          damage in 300 range.
//          - Installation:
//                                - Import/copy Shadow Image Blink code to your map
//                                - Import/copy the custom ability and unit to your map and change the SPELL_ID, DSPELL_ID, DUMMY_BOLT and DUMMY_CASTER if needed
//                                - You may view the raw ID of the objects by pressing CTRL+D in the object editor
//                                - You may play with the configurables below
//          - Credit:
//                      - Unleashthepower.mdx - http://www.hiveworkshop.com/forums/models-530/unleash-power-243024/?prev=search%3DPower%26d%3Dlist%26r%3D20
//                      - TerrainPathability - http://www.wc3c.net/showthread.php?t=103862
//
//
//***************************************************************************
//***************************************************************************
//***************************************************************************
// scope ShadowImageBlink begins


    //************************************DO NOT MODIFY ANYTHING BELOW************************************
    
    //*******************Damage setting***********************************
    constant function getDamage takes integer lvl,integer Agi returns real
        return Agi * lvl * lvl * .5
    endfunction                                                   
    //********************************************************************
    
    //*******************Filter Function***********************************
    function filterFunc takes player owner,unit filterUnit returns boolean
                                                             //Assure a better death check//
    return not IsUnitType(filterUnit, UNIT_TYPE_DEAD) and GetUnitTypeId(filterUnit) != 0 and IsUnitEnemy(filterUnit, owner)
    endfunction

    //********************************************************************
    //native UnitAlive takes unit u returns boolean
    
        
        
        
        
        
    
        function s__ShadowImageBlink__ShadowImageBlink_onPeriodic takes nothing returns nothing
            
            local integer i= 0
            local integer this
            local real x
            local real y
            local real o
            local real z
            local unit f= null
            local integer l__F
            local boolean b= false
            local boolean b2= false
            
            loop
                exitwhen i > ShadowImageBlink__MUI
                
                set this=ShadowImageBlink__StructData[i]
                
                if s__ShadowImageBlink__ShadowImageBlink_subtract[this] then
                
                    set x=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]) + s__ShadowImageBlink__ShadowImageBlink_cos[this]
                    set y=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]) + s__ShadowImageBlink__ShadowImageBlink_sin[this]
                    
                    set o=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]) - s__ShadowImageBlink__ShadowImageBlink_cos[this]
                    set z=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]) - s__ShadowImageBlink__ShadowImageBlink_sin[this]
                
                    if s__ShadowImageBlink__ShadowImageBlink_fade[this] > s__ShadowImageBlink__ShadowImageBlink_fade_seperation[this] then
                    
                        if not s__ShadowImageBlink__ShadowImageBlink_fade_done[this] then
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=s__ShadowImageBlink__ShadowImageBlink_fade[this] - ShadowImageBlink__FADE_SPEED
                        else
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=0
                        endif
                        
                    elseif s__ShadowImageBlink__ShadowImageBlink_fade_done[this] then
                    
                        set s__ShadowImageBlink__ShadowImageBlink_fade[this]=ShadowImageBlink__FADE_FLASH
                        
                        if s__ShadowImageBlink__ShadowImageBlink_fade_count[this] > 0 then
                            set s__ShadowImageBlink__ShadowImageBlink_fade_count[this]=s__ShadowImageBlink__ShadowImageBlink_fade_count[this] - 1
                        else
                            set s__ShadowImageBlink__ShadowImageBlink_subtract[this]=false
                            set s__ShadowImageBlink__ShadowImageBlink_fade_done[this]=false
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=0
                            
                            set s__ShadowImageBlink__ShadowImageBlink_cos[this]=Cos(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                            set s__ShadowImageBlink__ShadowImageBlink_sin[this]=Sin(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                            
                            if UnitAlive(s__ShadowImageBlink__ShadowImageBlink_target[this]) then
                            set s__ShadowImageBlink__ShadowImageBlink_targetx[this]=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_target[this]) - 100. * Cos(GetUnitFacing(s__ShadowImageBlink__ShadowImageBlink_caster[this]) * bj_DEGTORAD)
                            set s__ShadowImageBlink__ShadowImageBlink_targety[this]=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_target[this]) - 100. * Sin(GetUnitFacing(s__ShadowImageBlink__ShadowImageBlink_caster[this]) * bj_DEGTORAD)
                            endif
                            
                            set x=s__ShadowImageBlink__ShadowImageBlink_targetx[this] + s__ShadowImageBlink__ShadowImageBlink_total[this] * s__ShadowImageBlink__ShadowImageBlink_cos[this]
                            set y=s__ShadowImageBlink__ShadowImageBlink_targety[this] + s__ShadowImageBlink__ShadowImageBlink_total[this] * s__ShadowImageBlink__ShadowImageBlink_sin[this]
                            
                            //call SetUnitX(dummy_1,x)
                            //call SetUnitY(dummy_1,y)
                            
                            call RemoveUnit(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this])

                            set s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]=CreateUnit(ShadowImageBlink__DUMMY_OWNER, GetUnitTypeId(s__ShadowImageBlink__ShadowImageBlink_caster[this]), x, y, s__ShadowImageBlink__ShadowImageBlink_facing2[this])
                    
                    if UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], 'Aloc') then
                        call SetUnitPathing(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], false)
                        call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], x)
                        call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], y)
                    endif
                    
                            
                            call DestroyEffect(AddSpecialEffect(ShadowImageBlink__BLINK_CAST, x, y))
                            
                            set x=s__ShadowImageBlink__ShadowImageBlink_targetx[this] - s__ShadowImageBlink__ShadowImageBlink_total[this] * s__ShadowImageBlink__ShadowImageBlink_cos[this]
                            set y=s__ShadowImageBlink__ShadowImageBlink_targety[this] - s__ShadowImageBlink__ShadowImageBlink_total[this] * s__ShadowImageBlink__ShadowImageBlink_sin[this]
                            
                            call RemoveUnit(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this])
                            
                                        set s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]=CreateUnit(ShadowImageBlink__DUMMY_OWNER, GetUnitTypeId(s__ShadowImageBlink__ShadowImageBlink_caster[this]), x, y, s__ShadowImageBlink__ShadowImageBlink_facing2[this])
                    
                    if UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], 'Aloc') then
                        call SetUnitPathing(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], false)
                        call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], x)
                        call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], y)
                    endif
                    
                    call SetUnitColor(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], GetPlayerColor(s__ShadowImageBlink__ShadowImageBlink_owner[this]))
                    call SetUnitColor(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], GetPlayerColor(s__ShadowImageBlink__ShadowImageBlink_owner[this]))
                    //********************************************

                    call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], ShadowImageBlink__ANIMATION_SPEED)
                    call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], ShadowImageBlink__ANIMATION_SPEED)
                    //********************************************

                    call SetUnitAnimation(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], ShadowImageBlink__ANIMATION)
                    call SetUnitAnimation(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], ShadowImageBlink__ANIMATION)
                            //call SetUnitX(dummy_2,x)
                            //call SetUnitY(dummy_2,y)
                            
                            call DestroyEffect(AddSpecialEffect(ShadowImageBlink__BLINK_CAST, x, y))
                            
                            set s__ShadowImageBlink__ShadowImageBlink_cos[this]=s__ShadowImageBlink__ShadowImageBlink_speration_speed[this] * Cos(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                            set s__ShadowImageBlink__ShadowImageBlink_sin[this]=s__ShadowImageBlink__ShadowImageBlink_speration_speed[this] * Sin(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                            
                        endif
                        
                    else
                        set s__ShadowImageBlink__ShadowImageBlink_fade_done[this]=true
                    endif
                    
                    set s__ShadowImageBlink__ShadowImageBlink_total[this]=s__ShadowImageBlink__ShadowImageBlink_total[this] + s__ShadowImageBlink__ShadowImageBlink_speration_speed[this]
                    
                endif
                
                if not s__ShadowImageBlink__ShadowImageBlink_fade_done[this] and not s__ShadowImageBlink__ShadowImageBlink_subtract[this] then
                
                    set x=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]) - s__ShadowImageBlink__ShadowImageBlink_cos[this]
                    set y=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]) - s__ShadowImageBlink__ShadowImageBlink_sin[this]
                    
                    set o=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]) + s__ShadowImageBlink__ShadowImageBlink_cos[this]
                    set z=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]) + s__ShadowImageBlink__ShadowImageBlink_sin[this]
                    
                    if s__ShadowImageBlink__ShadowImageBlink_fade_count[this] < ShadowImageBlink__FADE_COUNT then
                    
                        set s__ShadowImageBlink__ShadowImageBlink_fade_count[this]=s__ShadowImageBlink__ShadowImageBlink_fade_count[this] + 1
                        
                        if s__ShadowImageBlink__ShadowImageBlink_fade[this] == 0 then
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=ShadowImageBlink__FADE_FLASH
                        else
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=0
                        endif
                        
                        if s__ShadowImageBlink__ShadowImageBlink_fade_count[this] == ShadowImageBlink__FADE_COUNT then
                            set s__ShadowImageBlink__ShadowImageBlink_fade[this]=0
                        endif
                        
                    elseif s__ShadowImageBlink__ShadowImageBlink_fade[this] < 255 then
                        set s__ShadowImageBlink__ShadowImageBlink_fade[this]=s__ShadowImageBlink__ShadowImageBlink_fade[this] + ShadowImageBlink__FADE_SPEED
                    else
                        
                        set ShadowImageBlink__StructData[i]=ShadowImageBlink__StructData[ShadowImageBlink__MUI]
                        set ShadowImageBlink__StructData[ShadowImageBlink__MUI]=- 2
                        set ShadowImageBlink__MUI=ShadowImageBlink__MUI - 1
                        
                        if ShadowImageBlink__MUI == - 1 then
                            call PauseTimer(ShadowImageBlink__TIMER)
                        endif
                        
                        call DestroyEffect(AddSpecialEffectTarget(ShadowImageBlink__BLINK_END, s__ShadowImageBlink__ShadowImageBlink_caster[this], ShadowImageBlink__ATTACHMENT))
                        
                        call GroupEnumUnitsInRange(ShadowImageBlink__G, s__ShadowImageBlink__ShadowImageBlink_targetx[this], s__ShadowImageBlink__ShadowImageBlink_targety[this], ShadowImageBlink__DAMAGE_RADIUS, null)
                        
                        call SetUnitAbilityLevel(ShadowImageBlink__Dummy, ShadowImageBlink__DSPELL_ID, s__ShadowImageBlink__ShadowImageBlink_lvl[this])
                        
                        set s__ShadowImageBlink__ShadowImageBlink_count[this]=0
                        
                            loop
                                set f=FirstOfGroup(ShadowImageBlink__G)
                                exitwhen f == null
                                if filterFunc(s__ShadowImageBlink__ShadowImageBlink_owner[this] , f) and f != s__ShadowImageBlink__ShadowImageBlink_target[this] then
                                set s__ShadowImageBlink__ShadowImageBlink_count[this]=s__ShadowImageBlink__ShadowImageBlink_count[this] + 1
                                endif
                                call GroupRemoveUnit(ShadowImageBlink__G, f)
                            endloop
                        if UnitAlive(s__ShadowImageBlink__ShadowImageBlink_target[this]) then
                            call SetUnitX(ShadowImageBlink__Dummy, GetUnitX(s__ShadowImageBlink__ShadowImageBlink_target[this]))
                            call SetUnitY(ShadowImageBlink__Dummy, GetUnitY(f))
                            call UnitDamageTargetEx(s__ShadowImageBlink__ShadowImageBlink_caster[this] , s__ShadowImageBlink__ShadowImageBlink_target[this] , s__ShadowImageBlink__ShadowImageBlink_dmg[this] , true , false , ShadowImageBlink__ATTACK_TYPE , ShadowImageBlink__DAMAGE_TYPE , ShadowImageBlink__WEAPON_TYPE)
                    if GetUnitAbilityLevel(s__ShadowImageBlink__ShadowImageBlink_target[this], ShadowImageBlink__SPOOKED_ID) == 1 then
                    set b=true
                    call UnitRemoveAbility(s__ShadowImageBlink__ShadowImageBlink_target[this], ShadowImageBlink__SPOOKED_ID)
                    call AddFreudeStack(ShadowImageBlink__SPELL_ID , s__ShadowImageBlink__ShadowImageBlink_caster[this])
                    else
                    set b2=true
                    endif

                    if b or s__ShadowImageBlink__ShadowImageBlink_count[this] == 0 then
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((s__ShadowImageBlink__ShadowImageBlink_target[this])), 0)) then // INLINED!!
                        set l__F=s__Fear_get(s__ShadowImageBlink__ShadowImageBlink_target[this])
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + ( 5. + ( s__ShadowImageBlink__ShadowImageBlink_lvl[this] / 2. ) ) * 2)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        call UnitDamageTargetEx(s__ShadowImageBlink__ShadowImageBlink_caster[this] , s__ShadowImageBlink__ShadowImageBlink_target[this] , s__ShadowImageBlink__ShadowImageBlink_lvl[this] * .02 * GetUnitState(s__ShadowImageBlink__ShadowImageBlink_target[this], UNIT_STATE_MAX_LIFE) , false , false , ATTACK_TYPE_HERO , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
                        if not IsUnitType(s__ShadowImageBlink__ShadowImageBlink_target[this], UNIT_TYPE_ANCIENT) and GetRandomInt(0, 100) <= 2 * s__ShadowImageBlink__ShadowImageBlink_lvl[this] then
                        call UnitRemoveAbility(s__ShadowImageBlink__ShadowImageBlink_target[this], 'A04P')
                        call UnitRemoveAbility(s__ShadowImageBlink__ShadowImageBlink_target[this], 'A08E')
                        call UnitRemoveAbility(s__ShadowImageBlink__ShadowImageBlink_target[this], 'A08B')
                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Skull Missile.mdx", s__ShadowImageBlink__ShadowImageBlink_target[this], "chest"))
                        call UnitDamageTargetEx(s__ShadowImageBlink__ShadowImageBlink_caster[this] , s__ShadowImageBlink__ShadowImageBlink_target[this] , GetUnitState(s__ShadowImageBlink__ShadowImageBlink_target[this], UNIT_STATE_MAX_LIFE) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
                        endif
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=s__ShadowImageBlink__ShadowImageBlink_target[this]
                        set s__Fear_path[l__F]="war3mapImported\\Poltergeist.mdx"
                        set s__Fear_attach[l__F]="head"
                        if b and s__ShadowImageBlink__ShadowImageBlink_count[this] == 0 then
                        set s__Fear_steps[(l__F)]=(R2I(((((( 5. + ( s__ShadowImageBlink__ShadowImageBlink_lvl[this] / 2. ) ) * 2)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        else
                        set s__Fear_steps[(l__F)]=(R2I(((((( 5. + ( s__ShadowImageBlink__ShadowImageBlink_lvl[this] / 2. ) ))*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        endif
                        set b=false
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
                    endif
                    if b2 then
                                       if not IsUnitType(s__ShadowImageBlink__ShadowImageBlink_target[this], UNIT_TYPE_HERO) then
                    call UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_target[this], ShadowImageBlink__SPOOKED_ID)
                    endif
                    endif
                        endif
                        
                        call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_caster[this], s__ShadowImageBlink__ShadowImageBlink_targetx[this])
                        call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_caster[this], s__ShadowImageBlink__ShadowImageBlink_targety[this])
                        
                        
                        call SetUnitFacing(s__ShadowImageBlink__ShadowImageBlink_caster[this], bj_RADTODEG * Atan2(GetUnitY(s__ShadowImageBlink__ShadowImageBlink_target[this]) - ( s__ShadowImageBlink__ShadowImageBlink_targety[this] ), GetUnitX(s__ShadowImageBlink__ShadowImageBlink_target[this]) - ( s__ShadowImageBlink__ShadowImageBlink_targetx[this] )))
                        
                        call ShowUnit(s__ShadowImageBlink__ShadowImageBlink_caster[this], true)
                        
                        if UnitAlive(s__ShadowImageBlink__ShadowImageBlink_target[this]) then
                                    call IssueTargetOrder(s__ShadowImageBlink__ShadowImageBlink_caster[this], "attack", s__ShadowImageBlink__ShadowImageBlink_target[this])
                                                    endif
                        
                        call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_caster[this], 1.)
                        
                        if GetLocalPlayer() == s__ShadowImageBlink__ShadowImageBlink_owner[this] then
                            call ClearSelection()
                            call SelectUnit(s__ShadowImageBlink__ShadowImageBlink_caster[this], true)
                        endif
                        
                        call RemoveUnit(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this])
                        call RemoveUnit(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this])
                        call RemoveUnit(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this])
                        
                        set s__ShadowImageBlink__ShadowImageBlink_owner[this]=null
                        set s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]=null
                        set s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]=null
                        set s__ShadowImageBlink__ShadowImageBlink_dummy_3[this]=null
                        set s__ShadowImageBlink__ShadowImageBlink_caster[this]=null
                        set s__ShadowImageBlink__ShadowImageBlink_target[this]=null
                        
                        call s__ShadowImageBlink__ShadowImageBlink_deallocate(this)
                    endif
                endif
                
                
                call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], x)
                call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], y)
                
                call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], o)
                call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], z)
                
                call SetUnitFlyHeight(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this], GetUnitFlyHeight(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this]) - s__ShadowImageBlink__ShadowImageBlink_height[this], 0.)
                
                call SetUnitVertexColor(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], 255, 255, 255, s__ShadowImageBlink__ShadowImageBlink_fade[this])
                call SetUnitVertexColor(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], 255, 255, 255, s__ShadowImageBlink__ShadowImageBlink_fade[this])
                
                set i=i + 1
            endloop
            
        endfunction
        
        function s__ShadowImageBlink__ShadowImageBlink_onCast takes nothing returns boolean
            
            local integer this
            local real x
            local real y
            local real a
            local playercolor owner_color
            local integer i
            
            if GetSpellAbilityId() == ShadowImageBlink__SPELL_ID then
                set x=GetUnitX(GetSpellTargetUnit()) + 100. * Cos(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
                set y=GetUnitY(GetSpellTargetUnit()) + 100. * Sin(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
            
                   // call SetUnitState(GetTriggerUnit(),UNIT_STATE_MANA,GetUnitState(GetTriggerUnit(),UNIT_STATE_MANA)-(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_MANA)*.1))
                
                    set this=s__ShadowImageBlink__ShadowImageBlink__allocate()
                    
                    set ShadowImageBlink__MUI=ShadowImageBlink__MUI + 1
                    set ShadowImageBlink__StructData[ShadowImageBlink__MUI]=this
                    
                    set s__ShadowImageBlink__ShadowImageBlink_caster[this]=GetTriggerUnit()
                    
                    set s__ShadowImageBlink__ShadowImageBlink_owner[this]=GetTriggerPlayer()
                    
                    set owner_color=GetPlayerColor(s__ShadowImageBlink__ShadowImageBlink_owner[this])
                    
                    set s__ShadowImageBlink__ShadowImageBlink_lvl[this]=GetUnitAbilityLevel(s__ShadowImageBlink__ShadowImageBlink_caster[this], ShadowImageBlink__SPELL_ID)
                    
                    set s__ShadowImageBlink__ShadowImageBlink_dmg[this]=getDamage(s__ShadowImageBlink__ShadowImageBlink_lvl[this] , GetHeroAgi(s__ShadowImageBlink__ShadowImageBlink_caster[this], true))
                         
                    call ShowUnit(s__ShadowImageBlink__ShadowImageBlink_caster[this], false)
                    
                    set s__ShadowImageBlink__ShadowImageBlink_targetx[this]=x
                    set s__ShadowImageBlink__ShadowImageBlink_targety[this]=y
                    
                    set s__ShadowImageBlink__ShadowImageBlink_target[this]=GetSpellTargetUnit()
                    
                    call SetUnitFacing(s__ShadowImageBlink__ShadowImageBlink_caster[this], bj_RADTODEG * Atan2(GetUnitY(s__ShadowImageBlink__ShadowImageBlink_target[this]) - ( s__ShadowImageBlink__ShadowImageBlink_targety[this] ), GetUnitX(s__ShadowImageBlink__ShadowImageBlink_target[this]) - ( s__ShadowImageBlink__ShadowImageBlink_targetx[this] )))
                    
                    set s__ShadowImageBlink__ShadowImageBlink_fade_seperation[this]=ShadowImageBlink__FADE_FLASH / 3
                    
                    set x=GetUnitX(s__ShadowImageBlink__ShadowImageBlink_caster[this])
                    set y=GetUnitY(s__ShadowImageBlink__ShadowImageBlink_caster[this])
                    
                    
                    set s__ShadowImageBlink__ShadowImageBlink_angle[this]=57.29583 * Atan2(s__ShadowImageBlink__ShadowImageBlink_targety[this] - y, s__ShadowImageBlink__ShadowImageBlink_targetx[this] - x) + 90.
                    set s__ShadowImageBlink__ShadowImageBlink_facing[this]=s__ShadowImageBlink__ShadowImageBlink_angle[this] - 90.
                    set s__ShadowImageBlink__ShadowImageBlink_facing2[this]=s__ShadowImageBlink__ShadowImageBlink_angle[this] - 270.
                    set s__ShadowImageBlink__ShadowImageBlink_angle[this]=s__ShadowImageBlink__ShadowImageBlink_angle[this] * .0174533
                    
                    
                    set s__ShadowImageBlink__ShadowImageBlink_speration_speed[this]=ShadowImageBlink__SPERATION_SPEED / ShadowImageBlink__FADE_SPEED
                    
                    set s__ShadowImageBlink__ShadowImageBlink_height[this]=ShadowImageBlink__MAX_HEIGHT / ( ShadowImageBlink__SPERATION_SPEED * ShadowImageBlink__FADE_SPEED / s__ShadowImageBlink__ShadowImageBlink_speration_speed[this] - 10. )
                    
                    set s__ShadowImageBlink__ShadowImageBlink_cos[this]=s__ShadowImageBlink__ShadowImageBlink_speration_speed[this] * Cos(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                    set s__ShadowImageBlink__ShadowImageBlink_sin[this]=s__ShadowImageBlink__ShadowImageBlink_speration_speed[this] * Sin(s__ShadowImageBlink__ShadowImageBlink_angle[this])
                    
                    set i=GetUnitTypeId(s__ShadowImageBlink__ShadowImageBlink_caster[this])
                    
                    set s__ShadowImageBlink__ShadowImageBlink_dummy_1[this]=CreateUnit(ShadowImageBlink__DUMMY_OWNER, i, x, y, s__ShadowImageBlink__ShadowImageBlink_facing[this])
                    
                    if UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], 'Aloc') then
                        call SetUnitPathing(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], false)
                        call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], x)
                        call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], y)
                    endif
                    
                    set s__ShadowImageBlink__ShadowImageBlink_dummy_2[this]=CreateUnit(ShadowImageBlink__DUMMY_OWNER, i, x, y, s__ShadowImageBlink__ShadowImageBlink_facing[this])
                    
                    if UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], 'Aloc') then
                        call SetUnitPathing(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], false)
                        call SetUnitX(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], x)
                        call SetUnitY(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], y)
                    endif
                    
                    set s__ShadowImageBlink__ShadowImageBlink_dummy_3[this]=CreateUnit(ShadowImageBlink__DUMMY_OWNER, ShadowImageBlink__DUMMY_BOLT, s__ShadowImageBlink__ShadowImageBlink_targetx[this], s__ShadowImageBlink__ShadowImageBlink_targety[this], s__ShadowImageBlink__ShadowImageBlink_facing[this])
                    
                    if UnitAddAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this], ShadowImageBlink__CROW_FORM) then
                        call UnitRemoveAbility(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this], ShadowImageBlink__CROW_FORM)
                        call SetUnitFlyHeight(s__ShadowImageBlink__ShadowImageBlink_dummy_3[this], ShadowImageBlink__MAX_HEIGHT, 0.)
                    endif
                    
                    //********************************************
                    call SetUnitColor(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], owner_color)
                    call SetUnitColor(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], owner_color)
                    //********************************************
                    call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_caster[this], ShadowImageBlink__ANIMATION_SPEED)
                    call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], ShadowImageBlink__ANIMATION_SPEED)
                    call SetUnitTimeScale(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], ShadowImageBlink__ANIMATION_SPEED)
                    //********************************************
                    call SetUnitAnimation(s__ShadowImageBlink__ShadowImageBlink_caster[this], ShadowImageBlink__ANIMATION)
                    call SetUnitAnimation(s__ShadowImageBlink__ShadowImageBlink_dummy_1[this], ShadowImageBlink__ANIMATION)
                    call SetUnitAnimation(s__ShadowImageBlink__ShadowImageBlink_dummy_2[this], ShadowImageBlink__ANIMATION)
                    //********************************************
                    
                    if ShadowImageBlink__MUI == 0 then
                        call TimerStart(ShadowImageBlink__TIMER, ShadowImageBlink__PERIODIC, true, function s__ShadowImageBlink__ShadowImageBlink_onPeriodic)
                    endif
                    

            endif
            
            set owner_color=null
            
            return false
        endfunction

        function s__ShadowImageBlink__ShadowImageBlink_onInit takes nothing returns nothing
        
            local integer i= 0
            local trigger t= CreateTrigger()
            
            loop
                exitwhen i > 15
                
                call TriggerRegisterPlayerUnitEvent(t, Player(i), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
                
                set i=i + 1
            endloop
            
            call TriggerAddCondition(t, Condition(function s__ShadowImageBlink__ShadowImageBlink_onCast))
            
            set ShadowImageBlink__Dummy=CreateUnit(ShadowImageBlink__DUMMY_OWNER, ShadowImageBlink__CASTER_DUMMY, 0., 0., 0.)
            
        endfunction
    
    
// scope ShadowImageBlink ends
//===========================================================================
// Trigger: AoE DoT
//===========================================================================
//TESH.scrollpos=87
//TESH.alwaysfold=0
// scope AoEFearDoT begins


    
        function s__AoEFearDoT__Dec_destroy takes integer this returns nothing
            set s__AoEFearDoT__Dec_u[this]=null
            set s__AoEFearDoT__Dec_t[this]=null
            call s__AoEFearDoT__Dec_deallocate(this)
        endfunction


    
    function AoEFearDoT__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local real dmg= GetHeroAgi(s__AoEFearDoT__Dec_u[data], true)
    local boolean b= false
    local boolean b2= false
    local integer l__F
    
    if not UnitAlive(s__AoEFearDoT__Dec_t[data]) or s__AoEFearDoT__Dec_i[data] == 0 then
    //call UnitRemoveAbility(data.t,IAS_ID)
    call UnitRemoveAbility(s__AoEFearDoT__Dec_t[data], AoEFearDoT__SFX_ID)
    call s__AoEFearDoT__Dec_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    else
    call UnitDamageTargetEx(s__AoEFearDoT__Dec_u[data] , s__AoEFearDoT__Dec_t[data] , dmg , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    if GetUnitAbilityLevel(s__AoEFearDoT__Dec_t[data], AoEFearDoT__SPOOKED_ID) == 1 then
                    set b=true
                    call UnitRemoveAbility(s__AoEFearDoT__Dec_t[data], AoEFearDoT__SPOOKED_ID)
                    call AddFreudeStack(AoEFearDoT__SPELL_ID , s__AoEFearDoT__Dec_u[data])
                    else
                    set b2=true
                    endif
                    if b then
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((s__AoEFearDoT__Dec_t[data])), 0)) then // INLINED!!
                        set l__F=s__Fear_get(s__AoEFearDoT__Dec_t[data])
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + 5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=s__AoEFearDoT__Dec_t[data]
                        set s__Fear_path[l__F]="war3mapImported\\Poltergeist.mdx"
                        set s__Fear_attach[l__F]="head"
                        set s__Fear_steps[(l__F)]=(R2I(((((5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        set b=false
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
                    endif
    if b2 then
     if not IsUnitType(s__AoEFearDoT__Dec_t[data], UNIT_TYPE_HERO) then
                    call UnitAddAbility(s__AoEFearDoT__Dec_t[data], AoEFearDoT__SPOOKED_ID)
                    endif
                    endif
    //if (dmg/4.) + GetWidgetLife(data.u) >= GetUnitState(data.u,UNIT_STATE_MAX_LIFE) then
   // call SetWidgetLife(data.u, GetUnitState(data.u,UNIT_STATE_MAX_LIFE))
   // call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",data.u,"origin"))
    //else
    //call SetWidgetLife(data.u,GetWidgetLife(data.u) + (dmg/4.) )
   // call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",data.u,"origin"))
    //endif
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Doomsday.mdx", s__AoEFearDoT__Dec_t[data], "origin"))
    set s__AoEFearDoT__Dec_i[data]=s__AoEFearDoT__Dec_i[data] - 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 3., false, function AoEFearDoT__Handler)
    endif
    
    set t=null
    endfunction
    
    function AoEFearDoT__FilterActions takes nothing returns boolean
    local timer t
    local integer data
    local unit tar= GetFilterUnit()
    if IsUnitEnemy(tar, GetOwningPlayer(AoEFearDoT__CASTER)) and UnitAlive(tar) then
    set t=(NewTimerEx(0)) // INLINED!!
    set data=s__AoEFearDoT__Dec__allocate()
    set s__AoEFearDoT__Dec_u[data]=AoEFearDoT__CASTER
    set s__AoEFearDoT__Dec_t[data]=tar
    call UnitAddAbility(s__AoEFearDoT__Dec_t[data], AoEFearDoT__SFX_ID)
    set s__AoEFearDoT__Dec_i[data]=4
    
    //call UnitAddAbility(tar,IAS_ID)
    //call SetUnitAbilityLevel(tar,IAS_ID,GetUnitAbilityLevel(CASTER,SPELL_ID))
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 1.27, false, function AoEFearDoT__Handler)
    endif
    
    set t=null
    set tar=null
    return false
    endfunction

    function AoEFearDoT__Actions takes nothing returns nothing
    local unit u= GetTriggerUnit()
    local real x= GetSpellTargetX()
    local real y= GetSpellTargetY()
 
// call SetUnitState(GetTriggerUnit(),UNIT_STATE_MANA,GetUnitState(GetTriggerUnit(),UNIT_STATE_MANA)-(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_MANA)*.2))

    call DestroyEffect(AddSpecialEffect(AoEFearDoT__SFX_PATH, x, y))
    //call DestroyEffect(AddSpecialEffect(SFX_PATH2,x,y))
    set AoEFearDoT__CASTER=u
    
    call GroupEnumUnitsInRange(AoEFearDoT__GROUP, x, y, 249., Filter(function AoEFearDoT__FilterActions))
    
    set u=null
    endfunction
    


        function AoEFearDoT__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(AoEFearDoT__SPELL_ID , function AoEFearDoT__Actions)
    endfunction
// scope AoEFearDoT ends


//===========================================================================
// Trigger: FearGuyUlti
//===========================================================================
//TESH.scrollpos=66
//TESH.alwaysfold=0
// scope FearUltimate begins

        function s__FearUltimate__DefStomp_destroy takes integer this returns nothing
            set s__FearUltimate__DefStomp_DefU[this]=null
            set s__FearUltimate__DefStomp_DefT[this]=null
            set s__FearUltimate__DefStomp_DefE[this]=null
            call s__FearUltimate__DefStomp_deallocate(this)
        endfunction

function FearUltimate__FilterActions takes nothing returns boolean

if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(FearUltimate__CASTER)) == true and IsUnitVisible(GetFilterUnit(), GetOwningPlayer(FearUltimate__CASTER)) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) and not IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) then
    set FearUltimate__RANDOMI=FearUltimate__RANDOMI + 1
    set FearUltimate__RANDOMU[FearUltimate__RANDOMI]=GetFilterUnit()
endif


return false
endfunction



function FearUltimate__DefStompH takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real ux= GetUnitX(s__FearUltimate__DefStomp_DefT[data])
local real uy= GetUnitY(s__FearUltimate__DefStomp_DefT[data])
local unit ru
local unit u
local real int= GetRandomReal(.5, 1.75 - ( I2R(GetUnitAbilityLevel(s__FearUltimate__DefStomp_DefU[data], FearUltimate__SPELL_ID)) * .1 ))
local integer l__F
local boolean b= false

if s__FearUltimate__DefStomp_DefI[data] == 0 or UnitAlive(s__FearUltimate__DefStomp_DefT[data]) == false then
    call DestroyEffect(s__FearUltimate__DefStomp_DefE[data])
    call s__FearUltimate__DefStomp_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
else
    set FearUltimate__CASTER=s__FearUltimate__DefStomp_DefU[data]
    call GroupEnumUnitsInRange(FearUltimate__GROUP, ux, uy, 600., Filter(function FearUltimate__FilterActions))
    call DestroyEffect(AddSpecialEffect(FearUltimate__PERIODIC_P, ux, uy))
    
    if FearUltimate__RANDOMI > 0 then
    set ru=FearUltimate__RANDOMU[GetRandomInt(1, FearUltimate__RANDOMI)]
    set u=CreateUnit(GetOwningPlayer(s__FearUltimate__DefStomp_DefU[data]), 'h007', ux, uy, 0.)
    call UnitAddAbility(u, 'A0AH')
    call SetUnitAbilityLevel(u, 'A0AH', GetUnitAbilityLevel(s__FearUltimate__DefStomp_DefU[data], FearUltimate__SPELL_ID))
    call IssueTargetOrder(u, "deathcoil", ru)
    call UnitApplyTimedLife(u, 'BTLF', 5.)
    endif
    
    set FearUltimate__RANDOMI=0
    
    set s__FearUltimate__DefStomp_DefI[data]=s__FearUltimate__DefStomp_DefI[data] - 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, int, false, function FearUltimate__DefStompH)
endif

set t=null
set ru=null
set u=null

endfunction

function FearUltimate__Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local unit targ= GetSpellTargetUnit()
local integer level= GetUnitAbilityLevel(u, FearUltimate__SPELL_ID)
local real interval= GetRandomReal(.5, 1.75 - ( I2R(level) * .1 ))
local timer t
local integer data= s__FearUltimate__DefStomp__allocate()
set s__FearUltimate__DefStomp_DefU[data]=u
set s__FearUltimate__DefStomp_DefT[data]=u
set s__FearUltimate__DefStomp_DefI[data]=15 + ( level * 3 )
set s__FearUltimate__DefStomp_DefE[data]=AddSpecialEffectTarget(FearUltimate__PATHM, u, FearUltimate__ATTACHM)


//call SetUnitState(GetTriggerUnit(),UNIT_STATE_MANA,GetUnitState(GetTriggerUnit(),UNIT_STATE_MANA)-(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_MANA)*.25))
call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\ShadowAssault.mdx", s__FearUltimate__DefStomp_DefU[data], "origin"))

set t=(NewTimerEx(0)) // INLINED!!
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, interval, false, function FearUltimate__DefStompH)

set u=null
set targ=null
set t=null
endfunction


//===========================================================================
function FearUltimate__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(FearUltimate__SPELL_ID , function FearUltimate__Actions)
endfunction
// scope FearUltimate ends
//===========================================================================
// Trigger: FearStacks
//===========================================================================
//TESH.scrollpos=101
//TESH.alwaysfold=0
//Remember that you must set the 3 integer arrays to 0 when units are created.
//scope ZFearStacks

//endscope
//===========================================================================
// Trigger: FearUlti4Illusion
//===========================================================================
//TESH.scrollpos=455
//TESH.alwaysfold=0
//***************************************************************************
//***************************************************************************
//***************************************************************************
//      S H A D O W   I M A G E   B L I N K
//                                          By: Elphis (Nyuu)
//      Version: 1.0
//
//      Sepll Description: 
//  `                       - Use dark power, creating an illusion and a energy 
//                          ball shot to the selected point and after energy ball hit the target point, 
//                          it will explodes and stuns enemies in 2/2.5/3/3.5 seconds and cause 50/100/150/200 
//                          damage in 300 range.
//          - Installation:
//                                - Import/copy Shadow Image Blink code to your map
//                                - Import/copy the custom ability and unit to your map and change the SPELL_ID, DSPELL_ID, DUMMY_BOLT and DUMMY_CASTER if needed
//                                - You may view the raw ID of the objects by pressing CTRL+D in the object editor
//                                - You may play with the configurables below
//          - Credit:
//                      - Unleashthepower.mdx - http://www.hiveworkshop.com/forums/models-530/unleash-power-243024/?prev=search%3DPower%26d%3Dlist%26r%3D20
//                      - TerrainPathability - http://www.wc3c.net/showthread.php?t=103862
//
//
//***************************************************************************
//***************************************************************************
//***************************************************************************
// scope FearUlti4Illusion begins


    //************************************DO NOT MODIFY ANYTHING BELOW************************************
    
    //*******************Damage setting***********************************

    //********************************************************************
    
    //*******************Filter Function***********************************
    //********************************************************************
    //native UnitAlive takes unit u returns boolean
    
        
        
        
        
        
    
        function s__FearUlti4Illusion__ShadowImageBlink_onPeriodic takes nothing returns nothing
            
            local integer i= 0
            local integer this
            local real x
            local real y
            local real o
            local real z
            local unit f= null
            local integer l__F
            local boolean b= false
            local boolean b2= false
            
            loop
                exitwhen i > FearUlti4Illusion__MUI
                
                set this=FearUlti4Illusion__StructData[i]
                
                if s__FearUlti4Illusion__ShadowImageBlink_subtract[this] then
                
                    set x=GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]) + s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                    set y=GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]) + s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                    
                    set o=GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]) - s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                    set z=GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]) - s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                
                    if s__FearUlti4Illusion__ShadowImageBlink_fade[this] > s__FearUlti4Illusion__ShadowImageBlink_fade_seperation[this] then
                    
                        if not s__FearUlti4Illusion__ShadowImageBlink_fade_done[this] then
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=s__FearUlti4Illusion__ShadowImageBlink_fade[this] - FearUlti4Illusion__FADE_SPEED
                        else
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=0
                        endif
                        
                    elseif s__FearUlti4Illusion__ShadowImageBlink_fade_done[this] then
                    
                        set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=FearUlti4Illusion__FADE_FLASH
                        
                        if s__FearUlti4Illusion__ShadowImageBlink_fade_count[this] > 0 then
                            set s__FearUlti4Illusion__ShadowImageBlink_fade_count[this]=s__FearUlti4Illusion__ShadowImageBlink_fade_count[this] - 1
                        else
                            set s__FearUlti4Illusion__ShadowImageBlink_subtract[this]=false
                            set s__FearUlti4Illusion__ShadowImageBlink_fade_done[this]=false
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=0
                            
                            set s__FearUlti4Illusion__ShadowImageBlink_cos[this]=Cos(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                            set s__FearUlti4Illusion__ShadowImageBlink_sin[this]=Sin(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                            
                            if UnitAlive(s__FearUlti4Illusion__ShadowImageBlink_target[this]) then
                            set s__FearUlti4Illusion__ShadowImageBlink_targetx[this]=GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_target[this]) - 100. * Cos(GetUnitFacing(s__FearUlti4Illusion__ShadowImageBlink_caster[this]) * bj_DEGTORAD)
                            set s__FearUlti4Illusion__ShadowImageBlink_targety[this]=GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_target[this]) - 100. * Sin(GetUnitFacing(s__FearUlti4Illusion__ShadowImageBlink_caster[this]) * bj_DEGTORAD)
                            
                            set s__FearUlti4Illusion__ShadowImageBlink_facing2[this]=bj_RADTODEG * Atan2(( GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_target[this]) ) - ( s__FearUlti4Illusion__ShadowImageBlink_targety[this] ), ( GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_target[this]) ) - ( s__FearUlti4Illusion__ShadowImageBlink_targetx[this] ))
                            
                            endif
                            
                            set x=s__FearUlti4Illusion__ShadowImageBlink_targetx[this] + s__FearUlti4Illusion__ShadowImageBlink_total[this] * s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                            set y=s__FearUlti4Illusion__ShadowImageBlink_targety[this] + s__FearUlti4Illusion__ShadowImageBlink_total[this] * s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                            
                            //call SetUnitX(dummy_1,x)
                            //call SetUnitY(dummy_1,y)
                            
                            call RemoveUnit(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this])

                            set s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]=CreateUnit(FearUlti4Illusion__DUMMY_OWNER, FearUlti4Illusion__UNIT_ID, x, y, s__FearUlti4Illusion__ShadowImageBlink_facing2[this])
                    
                    if UnitAddAbility(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], 'Aloc') then
                        call SetUnitPathing(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], false)
                        call SetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], x)
                        call SetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], y)
                    endif
                    
                            
                            call DestroyEffect(AddSpecialEffect(FearUlti4Illusion__BLINK_CAST, x, y))
                            
                            set x=s__FearUlti4Illusion__ShadowImageBlink_targetx[this] - s__FearUlti4Illusion__ShadowImageBlink_total[this] * s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                            set y=s__FearUlti4Illusion__ShadowImageBlink_targety[this] - s__FearUlti4Illusion__ShadowImageBlink_total[this] * s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                            
                            call RemoveUnit(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this])
                            
                                        set s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]=CreateUnit(FearUlti4Illusion__DUMMY_OWNER, FearUlti4Illusion__UNIT_ID, x, y, s__FearUlti4Illusion__ShadowImageBlink_facing2[this])
                    
                    if UnitAddAbility(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], 'Aloc') then
                        call SetUnitPathing(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], false)
                        call SetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], x)
                        call SetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], y)
                    endif
                    
                    call SetUnitColor(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], GetPlayerColor(s__FearUlti4Illusion__ShadowImageBlink_owner[this]))
                    call SetUnitColor(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], GetPlayerColor(s__FearUlti4Illusion__ShadowImageBlink_owner[this]))
                    //********************************************

                    call SetUnitTimeScale(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], FearUlti4Illusion__ANIMATION_SPEED)
                    call SetUnitTimeScale(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], FearUlti4Illusion__ANIMATION_SPEED)
                    //********************************************

                    call SetUnitAnimation(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], FearUlti4Illusion__ANIMATION)
                    call SetUnitAnimation(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], FearUlti4Illusion__ANIMATION)
                            //call SetUnitX(dummy_2,x)
                            //call SetUnitY(dummy_2,y)
                            
                            call DestroyEffect(AddSpecialEffect(FearUlti4Illusion__BLINK_CAST, x, y))
                            
                            set s__FearUlti4Illusion__ShadowImageBlink_cos[this]=s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this] * Cos(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                            set s__FearUlti4Illusion__ShadowImageBlink_sin[this]=s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this] * Sin(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                            
                        endif
                        
                    else
                        set s__FearUlti4Illusion__ShadowImageBlink_fade_done[this]=true
                    endif
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_total[this]=s__FearUlti4Illusion__ShadowImageBlink_total[this] + s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this]
                    
                endif
                
                if not s__FearUlti4Illusion__ShadowImageBlink_fade_done[this] and not s__FearUlti4Illusion__ShadowImageBlink_subtract[this] then
                
                    set x=GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]) - s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                    set y=GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]) - s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                    
                    set o=GetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]) + s__FearUlti4Illusion__ShadowImageBlink_cos[this]
                    set z=GetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]) + s__FearUlti4Illusion__ShadowImageBlink_sin[this]
                    
                    if s__FearUlti4Illusion__ShadowImageBlink_fade_count[this] < FearUlti4Illusion__FADE_COUNT then
                    
                        set s__FearUlti4Illusion__ShadowImageBlink_fade_count[this]=s__FearUlti4Illusion__ShadowImageBlink_fade_count[this] + 1
                        
                        if s__FearUlti4Illusion__ShadowImageBlink_fade[this] == 0 then
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=FearUlti4Illusion__FADE_FLASH
                        else
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=0
                        endif
                        
                        if s__FearUlti4Illusion__ShadowImageBlink_fade_count[this] == FearUlti4Illusion__FADE_COUNT then
                            set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=0
                        endif
                        
                    elseif s__FearUlti4Illusion__ShadowImageBlink_fade[this] < 255 then
                        set s__FearUlti4Illusion__ShadowImageBlink_fade[this]=s__FearUlti4Illusion__ShadowImageBlink_fade[this] + FearUlti4Illusion__FADE_SPEED
                    else
                        
                        set FearUlti4Illusion__StructData[i]=FearUlti4Illusion__StructData[FearUlti4Illusion__MUI]
                        set FearUlti4Illusion__StructData[FearUlti4Illusion__MUI]=- 2
                        set FearUlti4Illusion__MUI=FearUlti4Illusion__MUI - 1
                        
                        if FearUlti4Illusion__MUI == - 1 then
                            call PauseTimer(FearUlti4Illusion__TIMER)
                        endif
                        
                        call DestroyEffect(AddSpecialEffectTarget(FearUlti4Illusion__BLINK_END, s__FearUlti4Illusion__ShadowImageBlink_caster[this], FearUlti4Illusion__ATTACHMENT))
                        

                        if UnitAlive(s__FearUlti4Illusion__ShadowImageBlink_target[this]) then
                        set s__FearUlti4Illusion__ShadowImageBlink_dmg[this]=( GetHeroAgi(s__FearUlti4Illusion__ShadowImageBlink_caster[this], true) * GetUnitAbilityLevel(s__FearUlti4Illusion__ShadowImageBlink_caster[this], FearUlti4Illusion__SPELL_ID_ORIG) ) + ( 75. * GetUnitAbilityLevel(s__FearUlti4Illusion__ShadowImageBlink_caster[this], FearUlti4Illusion__SPELL_ID_ORIG) )
                        call UnitDamageTargetEx(s__FearUlti4Illusion__ShadowImageBlink_caster[this] , s__FearUlti4Illusion__ShadowImageBlink_target[this] , s__FearUlti4Illusion__ShadowImageBlink_dmg[this] , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_METAL_HEAVY_SLICE)
                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\CurseBolt.mdx", s__FearUlti4Illusion__ShadowImageBlink_target[this], "chest"))
                if GetUnitAbilityLevel(s__FearUlti4Illusion__ShadowImageBlink_target[this], FearUlti4Illusion__SPOOKED_ID) == 1 then
                    set b=true
                    call UnitRemoveAbility(s__FearUlti4Illusion__ShadowImageBlink_target[this], FearUlti4Illusion__SPOOKED_ID)
                    call AddFreudeStack(FearUlti4Illusion__SPELL_ID_ORIG , s__FearUlti4Illusion__ShadowImageBlink_caster[this])
                    else
                    set b2=true
                    endif
                    if b then
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((s__FearUlti4Illusion__ShadowImageBlink_target[this])), 0)) then // INLINED!!
                        set l__F=s__Fear_get(s__FearUlti4Illusion__ShadowImageBlink_target[this])
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + 5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=s__FearUlti4Illusion__ShadowImageBlink_target[this]
                        set s__Fear_path[l__F]="war3mapImported\\Poltergeist.mdx"
                        set s__Fear_attach[l__F]="head"
                        set s__Fear_steps[(l__F)]=(R2I(((((5.)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        set b=false
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
                    endif
                    if b2 then
                    if not IsUnitType(s__FearUlti4Illusion__ShadowImageBlink_target[this], UNIT_TYPE_HERO) then
                    call UnitAddAbility(s__FearUlti4Illusion__ShadowImageBlink_target[this], FearUlti4Illusion__SPOOKED_ID)
                    endif
                    endif

                        endif
                        
                        //call SetUnitX(caster,targetx)
                        //call SetUnitY(caster,targety)
                        
                        
                        //call SetUnitFacing(caster,bj_RADTODEG * Atan2(GetUnitY(target) - (targety) , GetUnitX(target) - (targetx)))
                        
                        //call ShowUnit(caster,true)
                        
                        //call SetUnitTimeScale(caster,1.)
                        
                       // if GetLocalPlayer() == owner then
                           // call ClearSelection()
                         //   call SelectUnit(caster,true)
                        //endif
                        
                        call RemoveUnit(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this])
                        call RemoveUnit(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this])
                        call RemoveUnit(s__FearUlti4Illusion__ShadowImageBlink_dummy_3[this])
                        
                        set s__FearUlti4Illusion__ShadowImageBlink_owner[this]=null
                        set s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this]=null
                        set s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this]=null
                        set s__FearUlti4Illusion__ShadowImageBlink_dummy_3[this]=null
                        set s__FearUlti4Illusion__ShadowImageBlink_caster[this]=null
                        set s__FearUlti4Illusion__ShadowImageBlink_target[this]=null
                        
                        call s__FearUlti4Illusion__ShadowImageBlink_deallocate(this)
                    endif
                endif
                
                
                call SetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], x)
                call SetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], y)
                
                call SetUnitX(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], o)
                call SetUnitY(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], z)
                
                call SetUnitFlyHeight(s__FearUlti4Illusion__ShadowImageBlink_dummy_3[this], GetUnitFlyHeight(s__FearUlti4Illusion__ShadowImageBlink_dummy_3[this]) - s__FearUlti4Illusion__ShadowImageBlink_height[this], 0.)
                
                call SetUnitVertexColor(s__FearUlti4Illusion__ShadowImageBlink_dummy_1[this], 255, 255, 255, s__FearUlti4Illusion__ShadowImageBlink_fade[this])
                call SetUnitVertexColor(s__FearUlti4Illusion__ShadowImageBlink_dummy_2[this], 255, 255, 255, s__FearUlti4Illusion__ShadowImageBlink_fade[this])
                
                set i=i + 1
            endloop
            
        endfunction
        
        function s__FearUlti4Illusion__ShadowImageBlink_onCast takes nothing returns boolean
            
            local integer this
            local real x
            local real y
            local real a
            local playercolor owner_color
            local integer i
            
            if GetSpellAbilityId() == FearUlti4Illusion__SPELL_ID then
                set x=GetUnitX(GetSpellTargetUnit()) + 100. * Cos(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
                set y=GetUnitY(GetSpellTargetUnit()) + 100. * Sin(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
            

                
                    set this=s__FearUlti4Illusion__ShadowImageBlink__allocate()
                    
                    set FearUlti4Illusion__MUI=FearUlti4Illusion__MUI + 1
                    set FearUlti4Illusion__StructData[FearUlti4Illusion__MUI]=this
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_caster[this]=LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )]
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_owner[this]=GetTriggerPlayer()
                    
                    set owner_color=GetPlayerColor(s__FearUlti4Illusion__ShadowImageBlink_owner[this])
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_lvl[this]=GetUnitAbilityLevel(s__FearUlti4Illusion__ShadowImageBlink_caster[this], FearUlti4Illusion__SPELL_ID)
                    
                         
                    //call ShowUnit(caster,false)
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_targetx[this]=x
                    set s__FearUlti4Illusion__ShadowImageBlink_targety[this]=y
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_target[this]=GetSpellTargetUnit()
                    
                    //call SetUnitFacing(GetTriggerUnit(),bj_RADTODEG * Atan2(GetUnitY(target) - (targety) , GetUnitX(target) - (targetx)))
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_fade_seperation[this]=FearUlti4Illusion__FADE_FLASH / 3
                    
                    set x=GetUnitX(GetSpellTargetUnit()) - 100. * Cos(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
                    set y=GetUnitY(GetSpellTargetUnit()) - 100. * Sin(GetUnitFacing(GetTriggerUnit()) * bj_DEGTORAD)
                    
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_angle[this]=57.29583 * Atan2(s__FearUlti4Illusion__ShadowImageBlink_targety[this] - y, s__FearUlti4Illusion__ShadowImageBlink_targetx[this] - x) + 90.
                    set s__FearUlti4Illusion__ShadowImageBlink_facing[this]=s__FearUlti4Illusion__ShadowImageBlink_angle[this] - 90.
                    set s__FearUlti4Illusion__ShadowImageBlink_facing2[this]=s__FearUlti4Illusion__ShadowImageBlink_angle[this] - 270.
                    set s__FearUlti4Illusion__ShadowImageBlink_angle[this]=s__FearUlti4Illusion__ShadowImageBlink_angle[this] * .0174533
                    
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this]=FearUlti4Illusion__SPERATION_SPEED / FearUlti4Illusion__FADE_SPEED
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_height[this]=FearUlti4Illusion__MAX_HEIGHT / ( FearUlti4Illusion__SPERATION_SPEED * FearUlti4Illusion__FADE_SPEED / s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this] - 10. )
                    
                    set s__FearUlti4Illusion__ShadowImageBlink_cos[this]=s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this] * Cos(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                    set s__FearUlti4Illusion__ShadowImageBlink_sin[this]=s__FearUlti4Illusion__ShadowImageBlink_speration_speed[this] * Sin(s__FearUlti4Illusion__ShadowImageBlink_angle[this])
                    
                    set i=FearUlti4Illusion__UNIT_ID
                    
                   // set dummy_1 = CreateUnit(DUMMY_OWNER,UNIT_ID,x,y,facing)
                    
                    //if UnitAddAbility(dummy_1,'Aloc') then
                      //  call SetUnitPathing(dummy_1,false)
                      //  call SetUnitX(dummy_1,x)
                     //   call SetUnitY(dummy_1,y)
                    //endif
                    
                    //set dummy_2 = CreateUnit(DUMMY_OWNER,UNIT_ID,x,y,facing)
                    
                    //if UnitAddAbility(dummy_2,'Aloc') then
                      //  call SetUnitPathing(dummy_2,false)
                       // call SetUnitX(dummy_2,x)
                      //  call SetUnitY(dummy_2,y)
                    //endif
                    
                    //set dummy_3 = CreateUnit(DUMMY_OWNER,DUMMY_BOLT,targetx,targety,facing)
                    
                    //if UnitAddAbility(dummy_3,CROW_FORM) then
                     //   call UnitRemoveAbility(dummy_3,CROW_FORM)
                      //  call SetUnitFlyHeight(dummy_3,MAX_HEIGHT,0.)
                    //endif
                    
                    //********************************************
                    //call SetUnitColor(dummy_1,owner_color)
                    //call SetUnitColor(dummy_2,owner_color)
                    //********************************************
                    //call SetUnitTimeScale(caster,ANIMATION_SPEED)
                   // call SetUnitTimeScale(dummy_1,ANIMATION_SPEED)
                   // call SetUnitTimeScale(dummy_2,ANIMATION_SPEED)
                    //********************************************
                    //call SetUnitAnimation(caster,ANIMATION)
                  //  call SetUnitAnimation(dummy_1,ANIMATION)
                  //  call SetUnitAnimation(dummy_2,ANIMATION)
                    //********************************************
    
                    
                    if FearUlti4Illusion__MUI == 0 then
                        call TimerStart(FearUlti4Illusion__TIMER, FearUlti4Illusion__PERIODIC, true, function s__FearUlti4Illusion__ShadowImageBlink_onPeriodic)
                    endif
                    
                
            endif
            
            set owner_color=null
            
            return false
        endfunction

        function s__FearUlti4Illusion__ShadowImageBlink_onInit takes nothing returns nothing
        
            local integer i= 0
            local trigger t= CreateTrigger()
            
            loop
                exitwhen i > 15
                
                call TriggerRegisterPlayerUnitEvent(t, Player(i), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
                
                set i=i + 1
            endloop
            
            call TriggerAddCondition(t, Condition(function s__FearUlti4Illusion__ShadowImageBlink_onCast))
            
            set FearUlti4Illusion__Dummy=CreateUnit(FearUlti4Illusion__DUMMY_OWNER, FearUlti4Illusion__CASTER_DUMMY, 0., 0., 0.)
            
        endfunction
    
    
// scope FearUlti4Illusion ends
//===========================================================================
// Trigger: AoEFearSpell
//===========================================================================
//TESH.scrollpos=62
//TESH.alwaysfold=0
// scope AoEFearSpell begins
//=============================================================
//=========================SETUP================================
//=============================================================
    
    function AoEFearSpell__Duration takes integer level returns integer
        return 5 + level
    endfunction
    
    function AoEFearSpell__Aoe takes integer level returns integer
        return 250 + 25 * level
    endfunction
    
    function AoEFearSpell__Cond takes nothing returns boolean
        local unit FoG
        local player p
        local real x
        local real y
        local group g
        local integer lvl
        local integer l__F
        local boolean b= false
        local boolean b2= false
        if GetSpellAbilityId() == AoEFearSpell__SPELL_ID then
       // call SetUnitState(GetTriggerUnit(),UNIT_STATE_MANA,GetUnitState(GetTriggerUnit(),UNIT_STATE_MANA)-(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_MANA)*.2))
            set g=CreateGroup()
            set p=GetOwningPlayer(GetTriggerUnit())
            set x=GetUnitX(GetTriggerUnit())
            set y=GetUnitY(GetTriggerUnit())
            set lvl=GetUnitAbilityLevel(GetTriggerUnit(), AoEFearSpell__SPELL_ID)
            call GroupEnumUnitsInRange(g, x, y, (250 + 25 * (lvl)), null) // INLINED!!
            call DestroyEffect(AddSpecialEffect(AoEFearSpell__PATH_2, x, y))
            loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)
                
                if not IsUnitAlly(FoG, p) and UnitAlive(FoG) then
                    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\DarkLightning.mdx", FoG, "origin"))
                    if GetUnitAbilityLevel(FoG, AoEFearSpell__SPOOKED_ID) == 1 then
                    call UnitRemoveAbility(FoG, AoEFearSpell__SPOOKED_ID)
                    set b=true
                    call AddFreudeStack(AoEFearSpell__SPELL_ID , GetTriggerUnit())
                    else
                    set b2=true
                    endif
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((FoG)), 0)) then // INLINED!!
                        set l__F=s__Fear_get(FoG)
                        set s__Fear_steps[(l__F)]=(R2I((((((s__Fear_steps[(l__F)] * FearSystem__FPS) + ( (5 + (lvl)) * 2 ))*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        call UnitDamageTargetEx(GetTriggerUnit() , FoG , lvl * .03 * GetUnitState(FoG, UNIT_STATE_MAX_LIFE) , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
                        if not IsUnitType(FoG, UNIT_TYPE_ANCIENT) and GetRandomInt(0, 100) <= 2 * lvl then
                        call UnitRemoveAbility(FoG, 'A04P')
                        call UnitRemoveAbility(FoG, 'A08E')
                        call UnitRemoveAbility(FoG, 'A08B')
                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Skull Missile.mdx", FoG, "chest"))
                        call UnitDamageTargetEx(GetTriggerUnit() , FoG , 99999999. , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
                        endif
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=FoG
                        set s__Fear_path[l__F]=AoEFearSpell__PATH
                        set s__Fear_attach[l__F]=AoEFearSpell__ATTACH
                        if b then
                        set s__Fear_steps[(l__F)]=(R2I((((((5 + (lvl)) * 2)*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        else
                        set s__Fear_steps[(l__F)]=(R2I((((((5 + (lvl)))*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        endif
                        set b=false
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
                    if b2 then
                    if not IsUnitType(FoG, UNIT_TYPE_HERO) then
                    call UnitAddAbility(FoG, AoEFearSpell__SPOOKED_ID)
                    endif
                    endif
                endif
            endloop
            call DestroyGroup(g)
            set g=null
            set FoG=null
            set p=null
        endif
        return false
    endfunction
    
    
        function s__AoEFearSpell__A_init takes nothing returns nothing
            local trigger t= CreateTrigger()
            call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
            call TriggerAddCondition(t, Condition(function AoEFearSpell__Cond))
            set t=null
        endfunction
//Implemented from module AoEFearSpell__Module:
        function s__AoEFearSpell__A_AoEFearSpell__Module___onInit takes nothing returns nothing
            call s__AoEFearSpell__A_init()
        endfunction
// scope AoEFearSpell ends
//===========================================================================
// Trigger: Chatadruslight
//===========================================================================
//TESH.scrollpos=10
//TESH.alwaysfold=0
// scope ChatatadrusLight begins


        function s__ChatatadrusLight__NBind_destroy takes integer this returns nothing
            set s__ChatatadrusLight__NBind_u[this]=null
            call s__ChatatadrusLight__NBind_deallocate(this)
        endfunction



    function ChatatadrusLight__Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
 

set ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])]=ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])] - 1


if ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])] == 0 then

	call UnitRemoveAbility(s__ChatatadrusLight__NBind_u[data], 'A09D')
call UnitRemoveAbility(s__ChatatadrusLight__NBind_u[data], 'A0OB')
call BlzSetUnitAttackCooldown(s__ChatatadrusLight__NBind_u[data], 1.2, 0)
endif


    call s__ChatatadrusLight__NBind_destroy(data)
    call ReleaseTimer(t)
    
    set t=null
    endfunction
    
    function ChatatadrusLight__Actions takes nothing returns nothing
    local unit u
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__ChatatadrusLight__NBind__allocate()

    set s__ChatatadrusLight__NBind_u[data]=GetTriggerUnit()


call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", s__ChatatadrusLight__NBind_u[data], "origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl", s__ChatatadrusLight__NBind_u[data], "origin"))

set ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])]=ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])] + 1

if ChatatadrusLight__StackCount[GetUnitUserData(s__ChatatadrusLight__NBind_u[data])] == 1 then

	call UnitAddAbility(s__ChatatadrusLight__NBind_u[data], 'A09D')
call UnitAddAbility(s__ChatatadrusLight__NBind_u[data], 'A0OB')
call BlzSetUnitAttackCooldown(s__ChatatadrusLight__NBind_u[data], .6, 0)
endif

    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 10., false, function ChatatadrusLight__Handler)
    
    set u=null
    set t=null
    endfunction
    


        function ChatatadrusLight__OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(ChatatadrusLight__SPELL_ID , function ChatatadrusLight__Actions)
    endfunction
// scope ChatatadrusLight ends


//===========================================================================
// Trigger: Righteous Wrath Cleave
//===========================================================================
// scope RighteousWrath begins


        function s__RighteousWrath___EB_destroy takes integer this returns nothing
            set s__RighteousWrath___EB_u[this]=null
            call s__RighteousWrath___EB_deallocate(this)
        endfunction


function RighteousWrath___Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!


set RWStacks[GetUnitUserData(s__RighteousWrath___EB_u[data])]=RWStacks[GetUnitUserData(s__RighteousWrath___EB_u[data])] - 1

if RWStacks[GetUnitUserData(s__RighteousWrath___EB_u[data])] == 0 then

call UnitRemoveAbility(s__RighteousWrath___EB_u[data], 'A0NT')
call UnitRemoveAbility(s__RighteousWrath___EB_u[data], 'A0NV')

    call s__RighteousWrath___EB_destroy(data)
    call ReleaseTimer(t)

else
    call s__RighteousWrath___EB_destroy(data)
    call ReleaseTimer(t)
endif

set t=null
endfunction
 
    function RighteousWrath___DP1 takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__RighteousWrath___EB__allocate()

set s__RighteousWrath___EB_u[data]=GetTriggerUnit()
set RWStacks[GetUnitUserData(s__RighteousWrath___EB_u[data])]=RWStacks[GetUnitUserData(s__RighteousWrath___EB_u[data])] + 1

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 1 then
set s__RighteousWrath___EB_d[data]=100
set s__RighteousWrath___EB_ls[data]=.08
endif


if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 2 then
set s__RighteousWrath___EB_d[data]=300
set s__RighteousWrath___EB_ls[data]=.1
endif

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 3 then
set s__RighteousWrath___EB_d[data]=600
set s__RighteousWrath___EB_ls[data]=.12
endif

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 4 then
set s__RighteousWrath___EB_d[data]=1000
set s__RighteousWrath___EB_ls[data]=.14
endif

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 5 then
set s__RighteousWrath___EB_d[data]=1500
set s__RighteousWrath___EB_ls[data]=.16
endif


if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 6 then
set s__RighteousWrath___EB_d[data]=2000
set s__RighteousWrath___EB_ls[data]=.18
endif
if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 7 then
set s__RighteousWrath___EB_d[data]=3000
set s__RighteousWrath___EB_ls[data]=.20
endif

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 8 then
set s__RighteousWrath___EB_d[data]=4000
set s__RighteousWrath___EB_ls[data]=.22
endif

if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 9 then
set s__RighteousWrath___EB_d[data]=5000
set s__RighteousWrath___EB_ls[data]=.24
endif


if GetUnitAbilityLevel(s__RighteousWrath___EB_u[data], RighteousWrath___SPELL_ID) == 10 then
set s__RighteousWrath___EB_d[data]=7000
set s__RighteousWrath___EB_ls[data]=.26
endif

set s__RighteousWrath___EB_d[data]=s__RighteousWrath___EB_d[data] + ( 2.5 * GetHeroStr(s__RighteousWrath___EB_u[data], true) )

call UnitAddAbility(s__RighteousWrath___EB_u[data], 'A0NT')
call UnitAddAbility(s__RighteousWrath___EB_u[data], 'A0NV')
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__RighteousWrath___EB_u[data] ) , ( BONUS_DAMAGE ) , (( s__RighteousWrath___EB_d[data] )*1.0) , (( 30.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((s__RighteousWrath___EB_u[data] ) , ( BONUS_LIFE_STEAL ) , (( s__RighteousWrath___EB_ls[data] )*1.0) , (( 30.)*1.0) , true) // INLINED!!



call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, 30., false, function RighteousWrath___Handler)


set t=null
    endfunction

        function RighteousWrath___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(RighteousWrath___SPELL_ID , function RighteousWrath___DP1)
    endfunction
// scope RighteousWrath ends
//===========================================================================
// Trigger: Skaar Ulti V2
//===========================================================================
//TESH.scrollpos=200
//TESH.alwaysfold=0
// scope Devastate begins
 
         function s__Devastate___DV_destroy takes integer this returns nothing
            set s__Devastate___DV_caster[this]=null
            call s__Devastate___DV_deallocate(this)
        endfunction
 
         function s__Devastate___DVFly_destroy takes integer this returns nothing
            set s__Devastate___DVFly_caster[this]=null
            set s__Devastate___DVFly_u[this]=null
            call s__Devastate___DVFly_deallocate(this)
        endfunction
 
         function s__Devastate___DVFX_destroy takes integer this returns nothing
	set s__Devastate___DVFX_caster[this]=null
            call s__Devastate___DVFX_deallocate(this)
        endfunction
 
    function Devastate___Handler3 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local integer i= 0
    local real a
    local real x
    local real y
    local real d= 150.
if IsMechaSkaar[GetUnitUserData(s__Devastate___DVFX_caster[data])] then
    call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdx", s__Devastate___DVFX_x[data], s__Devastate___DVFX_y[data]))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\MechaImpaleHitTarget2.mdx", s__Devastate___DVFX_x[data], s__Devastate___DVFX_y[data]))
else
    call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdx", s__Devastate___DVFX_x[data], s__Devastate___DVFX_y[data]))
endif


    loop
    exitwhen i == 25
    set a=GetRandomReal(0., 360.)
    set x=s__Devastate___DVFX_x[data] + GetRandomReal(50., 1200.) * Cos(a * bj_DEGTORAD)
    set y=s__Devastate___DVFX_y[data] + GetRandomReal(50., 1200.) * Sin(a * bj_DEGTORAD)
    
    if not IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY) then
if IsMechaSkaar[GetUnitUserData(s__Devastate___DVFX_caster[data])] then
	call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdx", x, y))
	call DestroyEffect(AddSpecialEffect("war3mapImported\\MechaImpaleHitTarget2.mdx", x, y))
else
        call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdx", x, y))
	endif
    endif
    
    set i=i + 1
    endloop
    
    set i=0
    
    loop
    exitwhen d >= 1200.
    
    loop
    exitwhen i == 16
    set a=( 360. / 16. ) * I2R(i)
    set x=s__Devastate___DVFX_x[data] + d * Cos(a * bj_DEGTORAD)
    set y=s__Devastate___DVFX_y[data] + d * Sin(a * bj_DEGTORAD)
if IsMechaSkaar[GetUnitUserData(s__Devastate___DVFX_caster[data])] then
call DestroyEffect(AddSpecialEffect("war3mapImported\\MechaImpale.mdx", x, y))
else
call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget.mdx", x, y))
endif
    set i=i + 1
    endloop
    
    set i=0
    set d=d + 150.
    endloop
    
    call ReleaseTimer(t)
    call s__Devastate___DVFX_destroy(data)
    
    set t=null
    endfunction
 
    function Devastate___Handler2 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

	
    
    if s__Devastate___DVFly_i[data] == 0 then

    call UnitDamageTargetEx(s__Devastate___DVFly_caster[data] , s__Devastate___DVFly_u[data] , ( I2R(GetUnitAbilityLevel(s__Devastate___DVFly_caster[data], 'A0FS')) * GetHeroStr(s__Devastate___DVFly_caster[data], true) * 10. ) + 250. + ( 850. * I2R(GetUnitAbilityLevel(s__Devastate___DVFly_caster[data], 'A0FS')) ) , false , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_NORMAL , null)
    call s__Devastate___DVFly_destroy(data)
    call ReleaseTimer(t)
    else
        if s__Devastate___DVFly_i[data] == 40 then
        //call DestroyEffect(AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdx",GetUnitX(data.u),GetUnitY(data.u)))
        call UnitAddAbility(s__Devastate___DVFly_u[data], 'Amrf')
        call UnitRemoveAbility(s__Devastate___DVFly_u[data], 'Amrf')

	if GetRandomInt(1, 2) == 1 then
	if IsMechaSkaar[GetUnitUserData(s__Devastate___DVFly_caster[data])] then
call M6E(s__Devastate___DVFly_u[data] , GetRandomReal(300., 1200.) , 1.25 , GetRandomReal(0., 360.) , "war3mapImported\\Big_ICM_Blue.mdx" , 0.0 , false , false)
else
	call M6E(s__Devastate___DVFly_u[data] , GetRandomReal(300., 1200.) , 1.25 , GetRandomReal(0., 360.) , "" , 0.0 , false , false)
endif
	endif

        endif
        if s__Devastate___DVFly_i[data] <= 20 then
        set s__Devastate___DVFly_h[data]=s__Devastate___DVFly_h[data] - 60
        if s__Devastate___DVFly_h[data] >= s__Devastate___DVFly_oh[data] then
        call SetUnitFlyHeight(s__Devastate___DVFly_u[data], s__Devastate___DVFly_h[data], 0.0)
        endif
        else
        set s__Devastate___DVFly_h[data]=s__Devastate___DVFly_h[data] + 60
        call SetUnitFlyHeight(s__Devastate___DVFly_u[data], s__Devastate___DVFly_h[data], 0.0)
        endif
    set s__Devastate___DVFly_i[data]=s__Devastate___DVFly_i[data] - 1
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function Devastate___Handler2)
    endif
    
    set t=null
    endfunction
 
    function Devastate___FilterActions takes nothing returns boolean
    local timer t
    local integer data
    
    local unit u= GetFilterUnit()
    
    local real dx= GetUnitX(u) - Devastate___X
    local real dy= GetUnitY(u) - Devastate___Y
    
    local real d= SquareRoot(dx * dx + dy * dy)
    
    local real a= bj_RADTODEG * Atan2(Devastate___Y - GetUnitY(u), Devastate___X - GetUnitX(u))
    
    if IsUnitEnemy(u, GetOwningPlayer(Devastate___CASTER)) and UnitAlive(u) then

    call M6E(u , d , .6 , a , "war3mapImported\\Bleeding.mdx" , 0.0 , true , false)
	//call M6E(u , d , .6 , a , "war3mapImported\\Big_ICM_Blue.mdx" , 0.0 , true , false)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SmallBloodEX-NoSplat.mdx", u, "chest"))
    if GetRandomInt(0, 100) >= 50 then
    call DestroyEffect(AddSpecialEffect("war3mapImported\\SmallBloodEX-NoSplat.mdx", GetUnitX(u), GetUnitY(u)))
    endif
    call UnitDamageTargetEx(Devastate___CASTER , u , ( I2R(GetUnitAbilityLevel(Devastate___CASTER, 'A0FS')) * GetHeroStr(Devastate___CASTER, true) * 3. ) + 200. + ( 450. * I2R(GetUnitAbilityLevel(Devastate___CASTER, 'A0FS')) ) , false , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_NORMAL , null)
    set data=s__Devastate___DVFly__allocate()
    set t=(NewTimerEx(0)) // INLINED!!
    
    set s__Devastate___DVFly_caster[data]=Devastate___CASTER
    set s__Devastate___DVFly_u[data]=u
    set s__Devastate___DVFly_oh[data]=GetUnitFlyHeight(u)
    set s__Devastate___DVFly_h[data]=s__Devastate___DVFly_oh[data]
    set s__Devastate___DVFly_i[data]=40
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .63125, false, function Devastate___Handler2)
    endif
    
    set t=null
    set u=null
    return false
    endfunction
 
    function Devastate___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    local timer t2= (NewTimerEx(0)) // INLINED!!
    local integer data2= s__Devastate___DVFX__allocate()
    
    set s__Devastate___DVFX_x[data2]=s__Devastate___DV_x[data]
    set s__Devastate___DVFX_y[data2]=s__Devastate___DV_y[data]
    set s__Devastate___DVFX_caster[data2]=s__Devastate___DV_caster[data]
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
    call TimerStart(t2, .6, false, function Devastate___Handler3)
    
    
    set Devastate___CASTER=s__Devastate___DV_caster[data]
    set Devastate___X=s__Devastate___DV_x[data]
    set Devastate___Y=s__Devastate___DV_y[data]
    call GroupEnumUnitsInRange(Devastate___GROUP, s__Devastate___DV_x[data], s__Devastate___DV_y[data], 1224., Filter(function Devastate___FilterActions))
    
    call ReleaseTimer(GetExpiredTimer())
    call s__Devastate___DV_destroy(data)
    
    set t2=null
    set t=null
    endfunction
 
    function Devastate___Actions takes nothing returns nothing
    local timer t= (NewTimerEx(0)) // INLINED!!
    local integer data= s__Devastate___DV__allocate()
    local unit u
    local real x
    local real y
    local real z
    local real Degrees
    local player owner
    local integer i= 0
    local effect fx
    
    set s__Devastate___DV_caster[data]=GetTriggerUnit()
    set s__Devastate___DV_x[data]=GetUnitX(s__Devastate___DV_caster[data])
    set s__Devastate___DV_y[data]=GetUnitY(s__Devastate___DV_caster[data])
    
    set owner=GetOwningPlayer(s__Devastate___DV_caster[data])
    
    set u=CreateUnit(owner, 'h007', s__Devastate___DV_x[data], s__Devastate___DV_y[data], 0.0)
    //call BJDebugMsg("Creating Dummy Caster")
    call UnitAddAbility(u, 'A0FT')
    call SetUnitAbilityLevel(u, 'A0FT', GetUnitAbilityLevel(s__Devastate___DV_caster[data], 'A0FS'))
    //call BJDebugMsg("Setting Dummy Ability Level")
    call IssuePointOrder(u, "dreadlordinferno", s__Devastate___DV_x[data], s__Devastate___DV_y[data])
    //call BJDebugMsg("Issuing Point order")
    call UnitApplyTimedLife(u, 'BTLF', 1.)
    
    set u=null
    
                loop
                exitwhen ( i == 8 )
                set Degrees=( ( 360. / 8 ) * I2R(i) )
                set x=s__Devastate___DV_x[data] + 10.0 * Cos(Degrees * bj_DEGTORAD)
                set y=s__Devastate___DV_y[data] + 10.0 * Sin(Degrees * bj_DEGTORAD)

                

		call MoveLocation(Devastate___loc, x, y)
		set z=GetLocationZ(Devastate___loc)
if IsMechaSkaar[GetUnitUserData(s__Devastate___DV_caster[data])] then
set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdl", x, y)
else
		set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdl", x, y)
endif
		call BlzSetSpecialEffectZ(fx, z)
		call BlzSetSpecialEffectPitch(fx, 60. * bj_DEGTORAD)
		call BlzSetSpecialEffectRoll(fx, - 85. * bj_DEGTORAD)
		call BlzSetSpecialEffectYaw(fx, Degrees)
	
		call DestroyEffect(fx)

if IsMechaSkaar[GetUnitUserData(s__Devastate___DV_caster[data])] then
set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdl", x, y)
else
		set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdl", x, y)
endif
		call BlzSetSpecialEffectZ(fx, z)
		call BlzSetSpecialEffectPitch(fx, 60. * bj_DEGTORAD)
		call BlzSetSpecialEffectRoll(fx, - 65. * bj_DEGTORAD)
		call BlzSetSpecialEffectYaw(fx, Degrees)
		
		call DestroyEffect(fx)

if IsMechaSkaar[GetUnitUserData(s__Devastate___DV_caster[data])] then
set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdl", x, y)
else
		set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdl", x, y)
endif
		call BlzSetSpecialEffectZ(fx, z)
		call BlzSetSpecialEffectPitch(fx, 60. * bj_DEGTORAD)
		call BlzSetSpecialEffectRoll(fx, - 45. * bj_DEGTORAD)
		call BlzSetSpecialEffectYaw(fx, Degrees)
		call DestroyEffect(fx)

if IsMechaSkaar[GetUnitUserData(s__Devastate___DV_caster[data])] then
set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait22.mdl", x, y)
else
		set fx=AddSpecialEffect("war3mapImported\\ImpaleMissTarget_Portrait.mdl", x, y)
endif
		call BlzSetSpecialEffectZ(fx, z)
		call BlzSetSpecialEffectPitch(fx, 60. * bj_DEGTORAD)
		call BlzSetSpecialEffectRoll(fx, - 25. * bj_DEGTORAD)
		call BlzSetSpecialEffectYaw(fx, Degrees)
		call DestroyEffect(fx)
		
		
		set fx=null
                set u=null
                set i=i + 1
            endloop
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    
    call TimerStart(t, .33, false, function Devastate___Handler)

    set owner=null
    set u=null
    set t=null
    endfunction
    

        function Devastate___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Devastate___SPELL_ID , function Devastate___Actions)
    endfunction
// scope Devastate ends
//===========================================================================
// Trigger: Decay
//===========================================================================
//TESH.scrollpos=85
//TESH.alwaysfold=0


// scope Decay begins
   
        //unit target
        //real damage
        //Static members work like globals :)
       
        function s__Decay___tempDat_destroy takes integer this returns nothing
            local unit FoG=null
            //Wash leaks
           
            
            loop
            set FoG=FirstOfGroup(s__Decay___tempDat_g[this]) //If you're new to this kind of loop, this part might look strange to you.
            exitwhen FoG == null //combined with the above line, this is effectively checking if the group is empty
                    set Decay___STACKS[GetUnitUserData(FoG)]=Decay___STACKS[GetUnitUserData(FoG)] - 1
	
                    if Decay___STACKS[GetUnitUserData(FoG)] == 0 then
					if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
							call UnitRemoveAbility(FoG, 'A0MA')
							call UnitRemoveAbility(FoG, 'A0MB')
					else
                    				call UnitRemoveAbility(FoG, 'A05W')
					endif
                    else
					if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
 					call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PlasmaGrenade.mdx", FoG, "chest"))
					else
                    			call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\NetherInferno.mdx", FoG, "chest"))
					endif
			endif
            call GroupRemoveUnit(s__Decay___tempDat_g[this], FoG) //here's how we make the loop eventually terminate. Remove first of group, and when the loop restarts we get the new "first of group".
            endloop
            
            call GroupClear(s__Decay___tempDat_g[this])
            call DestroyGroup(s__Decay___tempDat_g[this])
		set s__Decay___tempDat_caster[this]=null
            set s__Decay___tempDat_g[this]=null
            //this.target = null
            if s__Decay___tempDat_dindex == - 1 then
                call PauseTimer(s__Decay___tempDat_period)
            endif
            call s__Decay___tempDat_deallocate(this)
        endfunction

        function s__Decay___tempDat_periodic takes nothing returns nothing
            local integer i= 0
            local integer this
            local unit FoG
            loop
                exitwhen i > s__Decay___tempDat_dindex
                set this=s__Decay___tempDat_data[i]
                set s__Decay___tempDat_temp[this]=s__Decay___tempDat_temp[this] - Decay___FPS
                if s__Decay___tempDat_temp[this] <= .75 then
                            loop
                            set FoG=FirstOfGroup(s__Decay___tempDat_g[this])
                            exitwhen FoG == null
                            
                            if UnitAlive(FoG) then
                            call UnitDamageTargetEx(s__Decay___tempDat_caster[this] , FoG , GetUnitState(FoG, UNIT_STATE_MAX_LIFE) * .05 * .25 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
                            call GroupAddUnit(Decay___SWAP, FoG)
                            else
                            set Decay___STACKS[GetUnitUserData(FoG)]=Decay___STACKS[GetUnitUserData(FoG)] - 1
                            	if Decay___STACKS[GetUnitUserData(FoG)] == 0 then
								if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
								call UnitRemoveAbility(FoG, 'A0MA')
								call UnitRemoveAbility(FoG, 'A0MB')
								else
                    						call UnitRemoveAbility(FoG, 'A05W')
								endif
                            			else
                            				if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
 							call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\PlasmaGrenade.mdx", FoG, "chest"))
								else
                   		 			call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\NetherInferno.mdx", FoG, "chest"))
							endif

                            	endif
                            endif
                            call GroupRemoveUnit(s__Decay___tempDat_g[this], FoG)
                            endloop
                            set Decay___TEMP=s__Decay___tempDat_g[this]
                            set s__Decay___tempDat_g[this]=Decay___SWAP
                            set Decay___SWAP=Decay___TEMP
                    set s__Decay___tempDat_steps[this]=s__Decay___tempDat_steps[this] - 1
                    if s__Decay___tempDat_steps[this] == 0 then
                        set s__Decay___tempDat_data[i]=s__Decay___tempDat_data[s__Decay___tempDat_dindex]
                        set i=i - 1
                        set s__Decay___tempDat_dindex=s__Decay___tempDat_dindex - 1
                        call s__Decay___tempDat_destroy(this)
                    else
                        set s__Decay___tempDat_temp[this]=1
                    endif
                endif
                set i=i + 1
            endloop
        endfunction
       
        function s__Decay___tempDat_cond takes nothing returns nothing
        local unit s
        local real x= GetSpellTargetX()
        local real y= GetSpellTargetY()
        local integer i
        local unit FoG= null
            //Thistype is replaced by the name of the struct :)
            local integer this
            //if GetSpellAbilityId() == 'A000' then
                set this=s__Decay___tempDat__allocate() //Exactly the same as create
                set s__Decay___tempDat_caster[this]=GetTriggerUnit()
                set s__Decay___tempDat_g[this]=CreateGroup()
                
                set i=GetUnitAbilityLevel(s__Decay___tempDat_caster[this], Decay___SPELL_ID)
                
          
    
                
                					if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
		 					//call DestroyEffect(AddSpecialEffect("war3mapImported\\Stormfall.mdx",x,y))
                					call DestroyEffect(AddSpecialEffect("war3mapImported\\Mana Storm.mdx", x, y))
							else
                					call DestroyEffect(AddSpecialEffect("war3mapImported\\DecayGreen_Groundonly_1.mdx", x, y))
                					call DestroyEffect(AddSpecialEffect("war3mapImported\\Acid Ex.mdx", x, y))
							set s=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), 'h00Q', x, y, .0)
							call KillUnit(s)
							endif

                
                call GroupEnumUnitsInRange(Decay___GROUP, x, y, 249., null)
                
                loop
                set FoG=FirstOfGroup(Decay___GROUP) //If you're new to this kind of loop, this part might look strange to you.
                exitwhen FoG == null //combined with the above line, this is effectively checking if the group is empty
                if IsUnitEnemy(FoG, GetOwningPlayer(s__Decay___tempDat_caster[this])) and UnitAlive(FoG) then //here we have a make-shift condition statement.. followed by an action below
                call GroupAddUnit(s__Decay___tempDat_g[this], FoG)
		if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
                call DestroyEffect(AddSpecialEffect("war3mapImported\\LaserStrikeSingle.mdx", GetUnitX(FoG), GetUnitY(FoG)))
		endif

                if Decay___STACKS[GetUnitUserData(FoG)] == 0 then
							if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
							call UnitAddAbility(FoG, 'A0MA')
							call UnitRemoveAbility(FoG, 'A0MB')
							else
                					call UnitAddAbility(FoG, 'A05W')
                					endif
                
                set Decay___STACKS[GetUnitUserData(FoG)]=Decay___STACKS[GetUnitUserData(FoG)] + 1
								if IsMechaSkaar[GetUnitUserData(s__Decay___tempDat_caster[this])] then
								call SetUnitAbilityLevel(FoG, 'A0MA', i)
								else
                						call SetUnitAbilityLevel(FoG, 'A05W', i)
								endif
		endif
                endif
                call GroupRemoveUnit(Decay___GROUP, FoG) //here's how we make the loop eventually terminate. Remove first of group, and when the loop restarts we get the new "first of group".
                endloop
                
                //set this.target = GetSpellTargetUnit()
                set s__Decay___tempDat_temp[this]=1
                //set this.damage = 75*GetUnitAbilityLevel(this.caster, 'A000')
                set s__Decay___tempDat_steps[this]=( 5 + i ) * 4
                set s__Decay___tempDat_dindex=s__Decay___tempDat_dindex + 1
                set s__Decay___tempDat_data[s__Decay___tempDat_dindex]=this
                			if s__Decay___tempDat_dindex == 0 then
                    				call TimerStart(s__Decay___tempDat_period, Decay___FPS, true, function s__Decay___tempDat_periodic)
                			endif
            //endif
            //return false
        set s=null
        endfunction
       
        //This method is called at the begginning of the map.
        //The keyword onInit does it.
        function s__Decay___tempDat_onInit takes nothing returns nothing
            call RegisterSpellEffectEvent(Decay___SPELL_ID , function s__Decay___tempDat_cond)
            //call TriggerAddCondition(t, Condition(function thistype.cond))
            //I personally prefer to instanciate static members there just a point of view
            //You can do it in their declaration too it is the same.
            set s__Decay___tempDat_dindex=- 1
            set s__Decay___tempDat_period=(NewTimerEx(0)) // INLINED!!
        endfunction
// scope Decay ends
//===========================================================================
// Trigger: Soldiers of Fortune
//===========================================================================
//TESH.scrollpos=63
//TESH.alwaysfold=0
// scope SoldiersofFortune begins




    
    function SoldiersofFortune___OnSpell takes nothing returns nothing
        local unit u
        local unit s
        local integer i
        local integer g
        local player p
        local integer c
        local real x
        local real y
        local real a
        local integer dmg
        local integer hp
        local integer dmgleft
        local integer hpleft
        local integer li= 0
        local integer t
        
        

            set u=GetTriggerUnit()
            set i=GetUnitAbilityLevel(u, SoldiersofFortune___ABIL_ID)
            set p=GetOwningPlayer(u)
            
        //if GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD) >= i* 300 then
            set g=GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
            set c=R2I(( g - i * 300 ) * .15) + ( i * 300 )

            //call SetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD,g-c)
            
            set a=GetUnitFacing(u)
            set x=GetUnitX(u) + 200. * Cos(a * bj_DEGTORAD)
            set y=GetUnitY(u) + 200. * Sin(a * bj_DEGTORAD)
            
            set t=GetRandomInt(1, 4)
            
            if t == 1 then
            set s=CreateUnit(p, SoldiersofFortune___UNIT_1, x, y, a)
            elseif t == 2 then
            set s=CreateUnit(p, SoldiersofFortune___UNIT_2, x, y, a)
            elseif t == 3 then
            set s=CreateUnit(p, SoldiersofFortune___UNIT_3, x, y, a)
            elseif t == 4 then
            set s=CreateUnit(p, SoldiersofFortune___UNIT_4, x, y, a)
            endif
            
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", s, "origin"))
            
            
            if not GAMEM and not LWMON then
            
            if PC > 30 then
            
            set hp=( ( R2I(.2 * GetUnitState(u, UNIT_STATE_MAX_LIFE)) * i ) + R2I(c * .45) )
            set dmg=( ( 30 * i * i ) + R2I(c * .15) )
            
            elseif PC > 20 then
            
            set hp=( ( R2I(.2 * GetUnitState(u, UNIT_STATE_MAX_LIFE)) * i ) + R2I(c * .3) )
            set dmg=( ( 10 * i * i ) + ( c / 10 ) )
            
            else
            
            set hp=( ( R2I(.2 * GetUnitState(u, UNIT_STATE_MAX_LIFE)) * i ) + R2I(c * .15) )
            set dmg=( ( 5 * i * i ) + ( c / 20 ) )

            
            endif
            
            else
            
            set hp=( ( R2I(.2 * GetUnitState(u, UNIT_STATE_MAX_LIFE)) * i ) + R2I(c * .15) )
            set dmg=( ( 5 * i * i ) + ( c / 20 ) )
            
            endif
                    
                    if t == 4 then
                    set SoldiersofFortune_ThunderboltDmg[GetUnitUserData(s)]=c * .25
                    endif
             call BlzSetUnitBaseDamage(s, R2I(dmg), 0)
		call BlzSetUnitMaxHP(s, R2I(hp))
call SetWidgetLife(s, GetUnitState(s, UNIT_STATE_MAX_LIFE))
                    
           // endif

        
        set u=null
        set s=null
    endfunction
    
function SoldiersofFortune___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(SoldiersofFortune___ABIL_ID , function SoldiersofFortune___OnSpell)
endfunction
    
// scope SoldiersofFortune ends
//===========================================================================
// Trigger: ArcaneDrain
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope ArcaneDrain begins


    function ArcaneDrain___Actions takes nothing returns boolean
    local unit u
    if GetUnitAbilityLevel(GetEventDamageSource(), ArcaneDrain___ABIL_ID) > 0 and GetTriggerUnit() != GetEventDamageSource() then
    set u=GetEventDamageSource()
    if ( BI[NI] ) == ( LN ) then
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", u, "origin"))
    call SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MANA) + ( GetUnitState(u, UNIT_STATE_MAX_MANA) * .0175 ))
    endif
    endif
    
    set u=null
    return false
    endfunction
    
    function ArcaneDrain___OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function ArcaneDrain___Actions))
    endfunction
    
// scope ArcaneDrain ends
//===========================================================================
// Trigger: LuckyShot
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope LuckyShot begins


    function LuckyShot___Actions takes nothing returns boolean
    local unit u= GetEventDamageSource()
    local unit t= GetTriggerUnit()
    local texttag tt
    if GetUnitAbilityLevel(u, LuckyShot___ABIL_ID) > 0 and t != u and GetRandomInt(0, 100) <= 5 and not IsUnitType(t, UNIT_TYPE_ANCIENT) and not IsUnitType(t, UNIT_TYPE_HERO) then
    call UnitDamageTargetEx(u , t , 7777777. , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    set tt=CreateTextTag()
    call SetTextTagText(tt, "|cFFCC0C06H|r|cFFB40D0Be|r|cFF9C0E10a|r|cFF840F15ds|r|cFF9C0E10h|r|cFFB40D0Bo|r|cFFCC0C06t|r", .02)
    call SetTextTagPos(tt, GetUnitX(t), GetUnitY(t), 0.0)
    call SetTextTagVelocity(tt, 0.0, 0.04)
    call SetTextTagPermanent(tt, false)
    call SetTextTagFadepoint(tt, 2.0)
    call SetTextTagLifespan(tt, 2.0)
    call SetTextTagVisibility(tt, true)
    endif
    
    set u=null
    set t=null
    set tt=null
    return false
    endfunction
    
    function LuckyShot___OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function LuckyShot___Actions))
    endfunction
    
// scope LuckyShot ends
//===========================================================================
// Trigger: Lightningbolt
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
// scope LightningBolt begins

    
        
            function s__LightningBolt___LB_destroy takes integer this returns nothing
            set s__LightningBolt___LB_u[this]=null
            call DestroyEffect(s__LightningBolt___LB_hl[this])
            call DestroyEffect(s__LightningBolt___LB_hr[this])
            set s__LightningBolt___LB_hl[this]=null
            set s__LightningBolt___LB_hr[this]=null
            set s__LightningBolt___LB_t[this]=null
            call s__LightningBolt___LB_deallocate(this)
        endfunction
    

    
    function LightningBolt___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local real dmg

        //call BJDebugMsg("Hander begins handling")
        
        if GetUnitCurrentOrder(s__LightningBolt___LB_u[data]) != 852600 then
        
        //call BJDebugMsg("Is order Id correct?")
        
        if s__LightningBolt___LB_time[data] >= 1.92 then
        //Actions
        //static method U2U takes lightning l, unit s, unit t, real time, real z1, real z2, real startAlpha, real endAlpha returns nothing
        call s__TimedL_U2U(AddLightningEx("FORK", true, GetUnitX(s__LightningBolt___LB_u[data]), GetUnitY(s__LightningBolt___LB_u[data]), 40., GetUnitX(s__LightningBolt___LB_t[data]), GetUnitY(s__LightningBolt___LB_t[data]), 30.) , s__LightningBolt___LB_u[data] , s__LightningBolt___LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        
        if not GAMEM and not LWMON then
        if PC > 25 then
        set dmg=1750. + ( SoldiersofFortune_ThunderboltDmg[GetUnitUserData(s__LightningBolt___LB_u[data])] * 2. ) + ( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__LightningBolt___LB_u[data])) )], true) * 17.5 )
        else
        set dmg=17.5 + SoldiersofFortune_ThunderboltDmg[GetUnitUserData(s__LightningBolt___LB_u[data])] + ( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__LightningBolt___LB_u[data])) )], true) * 17.5 )
        endif
        else
        set dmg=17.5 + SoldiersofFortune_ThunderboltDmg[GetUnitUserData(s__LightningBolt___LB_u[data])] + ( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__LightningBolt___LB_u[data])) )], true) * 17.5 )
        endif
        
        call UnitDamageTargetEx(s__LightningBolt___LB_u[data] , s__LightningBolt___LB_t[data] , dmg , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl", s__LightningBolt___LB_t[data], "chest"))
        call IssueImmediateOrder(s__LightningBolt___LB_u[data], "stop")

        
        endif
        
        call ReleaseTimer(t)
        call s__LightningBolt___LB_destroy(data)
        call s__ProgressBar_destroy(s__LightningBolt___LB_cast[data])
        
        else
        
        set s__LightningBolt___LB_time[data]=s__LightningBolt___LB_time[data] + .02
        call s__ProgressBar_setPercentage(s__LightningBolt___LB_cast[data],R2I(s__LightningBolt___LB_time[data] * 50.) , 1)
        
        if s__LightningBolt___LB_time[data] == 1.06 then
        call SetUnitAnimationByIndex(s__LightningBolt___LB_u[data], 6)
        endif
        
        if s__LightningBolt___LB_time[data] >= 2. then
        //Actions
        
        call s__TimedL_U2U(AddLightningEx("FORK", true, GetUnitX(s__LightningBolt___LB_u[data]), GetUnitY(s__LightningBolt___LB_u[data]), 40., GetUnitX(s__LightningBolt___LB_t[data]), GetUnitY(s__LightningBolt___LB_t[data]), 30.) , s__LightningBolt___LB_u[data] , s__LightningBolt___LB_t[data] , .75 , 40. , 30. , 1. , 1.)
        call UnitDamageTargetEx(s__LightningBolt___LB_u[data] , s__LightningBolt___LB_t[data] , 17.5 + SoldiersofFortune_ThunderboltDmg[GetUnitUserData(s__LightningBolt___LB_u[data])] + ( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__LightningBolt___LB_u[data])) )], true) * 17.5 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_MAGIC , WEAPON_TYPE_WHOKNOWS)
        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl", s__LightningBolt___LB_t[data], "chest"))
        call IssueImmediateOrder(s__LightningBolt___LB_u[data], "stop")
        
        
        call ReleaseTimer(t)
        call s__LightningBolt___LB_destroy(data)
        call s__ProgressBar_destroy(s__LightningBolt___LB_cast[data])
        else
        
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, .02, false, function LightningBolt___Handler)
        
        endif
        
        endif
        
        
        set t=null
    endfunction
    

    
    function LightningBolt___OnSpell takes nothing returns boolean
        local timer t
        local integer data
        
        //call BJDebugMsg("Is event firing?")
        
        
        if GetSpellAbilityId() == LightningBolt___ABIL_ID then
            //call BJDebugMsg("Spell begins casting")
            
            set t=(NewTimerEx(0)) // INLINED!!
            set data=s__LightningBolt___LB__allocate()
            set s__LightningBolt___LB_u[data]=GetTriggerUnit()
            set s__LightningBolt___LB_t[data]=GetSpellTargetUnit()
            set s__LightningBolt___LB_hl[data]=AddSpecialEffectTarget("war3mapImported\\LightningSphere_FX.mdx", s__LightningBolt___LB_u[data], "hand, left")
            set s__LightningBolt___LB_hr[data]=AddSpecialEffectTarget("war3mapImported\\LightningSphere_FX.mdx", s__LightningBolt___LB_u[data], "hand, right")
            set s__LightningBolt___LB_time[data]=0
            
            
            set s__LightningBolt___LB_cast[data]=s__ProgressBar_create()
            set s__ProgressBar_xOffset[s__LightningBolt___LB_cast[data]]=- 15
            call SetUnitFlyHeight(s__ProgressBar_bar[(s__LightningBolt___LB_cast[data])], ((175)*1.0), 0) // INLINED!!
            call s__ProgressBar__set_size(s__LightningBolt___LB_cast[data],.8)
            call SetUnitColor(s__ProgressBar_bar[(s__LightningBolt___LB_cast[data])], (GetPlayerColor(GetOwningPlayer(s__LightningBolt___LB_u[data])))) // INLINED!!
            call s__ProgressBar__set_targetUnit(s__LightningBolt___LB_cast[data],s__LightningBolt___LB_u[data])
            
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, .02, false, function LightningBolt___Handler)
        endif
        
        set t=null
        return false
    endfunction
    
    function LightningBolt___OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SPELL_CAST)
        call TriggerAddCondition(trig, Condition(function LightningBolt___OnSpell))
        set trig=null
    endfunction
    
// scope LightningBolt ends
//===========================================================================
// Trigger: Draw A Bead
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope DrawABead begins
 

 

 

 
    function DrawABead___Actions takes nothing returns nothing
        local unit u= GetTriggerUnit()
        
        if GetUnitAbilityLevel(u, 'A0H0') == 1 then
        
        call UnitRemoveAbility(u, 'A0H0')
        call UnitAddAbility(u, 'A0GK')
        call UnitAddAbility(u, 'A0GL')
        
        call SetUnitPropWindow(u, 0.)
        call IssueImmediateOrderById(u, 851993)
        
        else
        
        call UnitAddAbility(u, 'A0H0')
        call UnitRemoveAbility(u, 'A0GK')
        call UnitRemoveAbility(u, 'A0GL')
        
        call SetUnitPropWindow(u, GetUnitDefaultPropWindow(u))
        
        endif
        
        set u=null
    endfunction
    


        function DrawABead___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(DrawABead___SPELL_ID , function DrawABead___Actions)
    endfunction
// scope DrawABead ends

//===========================================================================
// Trigger: Paladin Taunt
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope PaladinTaunt begins
 

 
    function PaladinTaunt___FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()

    if IsUnitEnemy(u, GetOwningPlayer(PaladinTaunt___CASTER)) and UnitAlive(u) then
        call IssueTargetOrder(u, "attack", PaladinTaunt___CASTER)
    endif
    
    set u=null
    return false
    endfunction
 

 
    function PaladinTaunt___Actions takes nothing returns nothing
 
    set PaladinTaunt___CASTER=GetTriggerUnit()
    
    //call SetUnitAnimationByIndex(CASTER,1)
    
    call GroupEnumUnitsInRange(PaladinTaunt___GROUP, GetUnitX(PaladinTaunt___CASTER), GetUnitY(PaladinTaunt___CASTER), 724., Filter(function PaladinTaunt___FilterActions))

    

    endfunction
    


        function PaladinTaunt___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(PaladinTaunt___SPELL_ID , function PaladinTaunt___Actions)
    endfunction
// scope PaladinTaunt ends

//===========================================================================
// Trigger: Eternal Battlethirst Active
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0
// scope EternalBattlethirstActive begins


        function s__EternalBattlethirstActive___EB_destroy takes integer this returns nothing
            set s__EternalBattlethirstActive___EB_u[this]=null
            set s__EternalBattlethirstActive___EB_fx[this]=null
            call s__EternalBattlethirstActive___EB_deallocate(this)
        endfunction

    function EternalBattlethirstActive___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

        call DestroyEffect(s__EternalBattlethirstActive___EB_fx[data])
        
        call UnitDamageTarget(s__EternalBattlethirstActive___EB_u[data], s__EternalBattlethirstActive___EB_u[data], GetUnitState(s__EternalBattlethirstActive___EB_u[data], UNIT_STATE_MAX_LIFE), false, false, ATTACK_TYPE_MAGIC, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
            
        call ReleaseTimer(t)
        call s__EternalBattlethirstActive___EB_destroy(data)
        
        set t=null
    endfunction
    
    function EternalBattlethirstActive___OnSpell takes nothing returns nothing
        local integer data
        local timer t
        

            
            set data=s__EternalBattlethirstActive___EB__allocate()
            set s__EternalBattlethirstActive___EB_u[data]=GetTriggerUnit()
            set s__EternalBattlethirstActive___EB_fx[data]=AddSpecialEffectTarget("war3mapImported\\Death Spell.mdx", s__EternalBattlethirstActive___EB_u[data], "origin")

            
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 21., false, function EternalBattlethirstActive___Handler)
        
        set t=null
    endfunction
    
function EternalBattlethirstActive___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(EternalBattlethirstActive___ABIL_ID , function EternalBattlethirstActive___OnSpell)
endfunction
    
// scope EternalBattlethirstActive ends
//===========================================================================
// Trigger: MercPaladinHeal
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope PaladinHeal begins




    
    function PaladinHeal___OnSpell takes nothing returns nothing
        local unit u
        local real r
        local real h
        
            set u=GetSpellTargetUnit()
        
            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", u, "origin"))

    set r=GetWidgetLife(u)
    
    set h=GetUnitState(u, UNIT_STATE_MAX_LIFE) * .32
    
    if h + r >= GetUnitState(u, UNIT_STATE_MAX_LIFE) then
    
    call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
    
    else
    call SetWidgetLife(u, r + h)
    endif
    
            //call SetUnitAnimationByIndex(GetTriggerUnit(),1)
        
        
        set u=null
    endfunction
    
function PaladinHeal___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(PaladinHeal___ABIL_ID , function PaladinHeal___OnSpell)
endfunction
    
// scope PaladinHeal ends
//===========================================================================
// Trigger: Apple of Eden
//===========================================================================
//TESH.scrollpos=50
//TESH.alwaysfold=0
// scope AppleofEden begins


        function s__AppleofEden___AE_destroy takes integer this returns nothing
            set s__AppleofEden___AE_u[this]=null
            call s__AppleofEden___AE_deallocate(this)
        endfunction

    function AppleofEden___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!

            if GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A039') == 1 then
            
            call SetHeroStr(s__AppleofEden___AE_u[data], GetHeroStr(s__AppleofEden___AE_u[data], false) - s__AppleofEden___AE_i[data], true)
            
            elseif GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A01J') == 1 then
            
            call SetHeroAgi(s__AppleofEden___AE_u[data], GetHeroAgi(s__AppleofEden___AE_u[data], false) - s__AppleofEden___AE_i[data], true)
            
            elseif GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A038') == 1 then
            
            call SetHeroInt(s__AppleofEden___AE_u[data], GetHeroInt(s__AppleofEden___AE_u[data], false) - s__AppleofEden___AE_i[data], true)
            
            endif
            
            if EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])] == 1 then
            
            call UnitRemoveAbility(s__AppleofEden___AE_u[data], 'A0H5')

            
            endif
            
            set EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])]=EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])] - 1
            
            call ReleaseTimer(t)
            call s__AppleofEden___AE_destroy(data)
        
        set t=null
    endfunction
    
    function AppleofEden___OnSpell takes nothing returns nothing
        local integer data
        local timer t
        local player p
        local unit u
        local integer i
        local real d
        
            set u=GetTriggerUnit()
            set p=GetOwningPlayer(u)
            set i=GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
            set d=i * .10
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, i - R2I(d))
            
            set data=s__AppleofEden___AE__allocate()
            set s__AppleofEden___AE_u[data]=GetSpellTargetUnit()
            set s__AppleofEden___AE_i[data]=40 * GetUnitAbilityLevel(u, AppleofEden___ABIL_ID)
            
            if GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A039') == 1 then
            
            call SetHeroStr(s__AppleofEden___AE_u[data], GetHeroStr(s__AppleofEden___AE_u[data], false) + s__AppleofEden___AE_i[data], true)
            
            elseif GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A01J') == 1 then
            
            call SetHeroAgi(s__AppleofEden___AE_u[data], GetHeroAgi(s__AppleofEden___AE_u[data], false) + s__AppleofEden___AE_i[data], true)
            
            elseif GetUnitAbilityLevel(s__AppleofEden___AE_u[data], 'A038') == 1 then
            
            call SetHeroInt(s__AppleofEden___AE_u[data], GetHeroInt(s__AppleofEden___AE_u[data], false) + s__AppleofEden___AE_i[data], true)
            
            endif
            
            call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl", GetUnitX(s__AppleofEden___AE_u[data]), GetUnitY(s__AppleofEden___AE_u[data])))
            
            if EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])] == 0 then
            call UnitAddAbility(s__AppleofEden___AE_u[data], 'A0H5')
            endif
            
            set EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])]=EffectCount[GetUnitUserData(s__AppleofEden___AE_u[data])] + 1
            
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 33. + ( d * .006 ), false, function AppleofEden___Handler)
        
        set u=null
        set t=null
    endfunction
    
function AppleofEden___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(AppleofEden___ABIL_ID , function AppleofEden___OnSpell)
endfunction
    
// scope AppleofEden ends
//===========================================================================
// Trigger: Faustian Bargain
//===========================================================================
//TESH.scrollpos=61
//TESH.alwaysfold=0
// scope FaustianBargain begins


        //integer i
        function s__FaustianBargain___FB_destroy takes integer this returns nothing
            set s__FaustianBargain___FB_u[this]=null
            call s__FaustianBargain___FB_deallocate(this)
        endfunction

    function FaustianBargain___Handler takes nothing returns nothing
        local timer t= GetExpiredTimer()
        local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
        local integer i= GetUnitAbilityLevel(LC[( 1 + GetPlayerId(GetOwningPlayer(s__FaustianBargain___FB_u[data])) )], FaustianBargain___ABIL_ID)
        local boolean a= UnitAlive(s__FaustianBargain___FB_u[data])
        local texttag tt
        local string text
        local real d
        local real hp

        
        if i != 0 then
            

            
            //set data.i = data.i + 1
            
            //if data.i >= 3 then
            
            if a then
            call SetPlayerState(s__FaustianBargain___FB_p[data], PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(s__FaustianBargain___FB_p[data], PLAYER_STATE_RESOURCE_GOLD) + ( 16 + ( 6 * i * i ) + ( 5 * i ) ))
            
    set tt=CreateTextTag()
    set text="|cFFFFCC00+" + I2S(( 16 + ( 6 * i * i ) + ( 5 * i ) )) + " Gold|r"
    call SetTextTagText(tt, text, .02)
    call SetTextTagPos(tt, GetUnitX(s__FaustianBargain___FB_u[data]), GetUnitY(s__FaustianBargain___FB_u[data]), 0.0)
    call SetTextTagVelocity(tt, 0.0, 0.04)
    call SetTextTagPermanent(tt, false)
    call SetTextTagFadepoint(tt, 2.0)
    call SetTextTagLifespan(tt, 2.0)
    call SetTextTagVisibility(tt, true)
            
            endif
            
            //set data.i = 0
            //endif
            

            if a then
            set d=GetUnitState(s__FaustianBargain___FB_u[data], UNIT_STATE_MAX_LIFE) * .00666 * i
            set hp=GetWidgetLife(s__FaustianBargain___FB_u[data])
            
            if hp - d <= 0 then
            call KillUnit(s__FaustianBargain___FB_u[data])
            else
            call SetWidgetLife(s__FaustianBargain___FB_u[data], hp - d)
            endif
            
            
            endif
            
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!! // INLINED!!
            call TimerStart(t, 1., false, function FaustianBargain___Handler)
        else
            call ReleaseTimer(t)
            call UnitRemoveAbility(s__FaustianBargain___FB_u[data], FaustianBargain___NOSTACK_ID)
            call s__FaustianBargain___FB_destroy(data)
        endif
        
        set t=null
        set tt=null
        set text=null
    endfunction
    
    function FaustianBargain___OnSpell takes nothing returns boolean
        local integer data
        local timer t

        if GetLearnedSkill() == FaustianBargain___ABIL_ID and GetUnitAbilityLevel(GetTriggerUnit(), FaustianBargain___NOSTACK_ID) != 1 then
            set data=s__FaustianBargain___FB__allocate()
            set s__FaustianBargain___FB_u[data]=GetTriggerUnit()
            //set data.i = 0
            set s__FaustianBargain___FB_p[data]=GetOwningPlayer(s__FaustianBargain___FB_u[data])
            set JT[( 1 + GetPlayerId(s__FaustianBargain___FB_p[data]) )]=true
            call UnitAddAbility(s__FaustianBargain___FB_u[data], FaustianBargain___NOSTACK_ID)
            set t=(NewTimerEx(0)) // INLINED!!
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
            call TimerStart(t, 1., false, function FaustianBargain___Handler)
        endif
        
        set t=null
        return false
    endfunction
    
function FaustianBargain___OnInit takes nothing returns nothing
local trigger trig= CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(trig, Condition(function FaustianBargain___OnSpell))
endfunction
    
// scope FaustianBargain ends
//===========================================================================
// Trigger: Reckless Greed
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope RecklessGreed begins




   
    function RecklessGreed___OnSpell takes nothing returns nothing
    local unit u= GetTriggerUnit()
    local unit t= GetSpellTargetUnit()
    local integer i= GetUnitAbilityLevel(u, RecklessGreed___ABIL_ID)
    local real r= ( 4.5 * i * ( GetHeroStr(u, true) + GetHeroAgi(u, true) + GetHeroInt(u, true) ) ) + ( GetUnitState(t, UNIT_STATE_MAX_LIFE) * .03 * i )
    local texttag tt
    local player p
    
    //call SetUnitAnimationByIndex(u,4)
    
    if GetRandomInt(0, 100) >= 80 then
    set tt=CreateTextTag()
    call SetTextTagText(tt, "Miss!", 0.024)
    call SetTextTagPos(tt, GetUnitX(t), GetUnitY(t), 0.0)
    call SetTextTagColor(tt, 255, 0, 0, 255)
    call SetTextTagVelocity(tt, 0.0, 0.03)
    call SetTextTagVisibility(tt, true)
    call SetTextTagFadepoint(tt, 1.0)
    call SetTextTagLifespan(tt, 3.0)
    call SetTextTagPermanent(tt, false)
    call UnitDamageTargetEx(t , u , r * .25 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", GetUnitX(t), GetUnitY(t)))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodySplat Missile.mdx", u, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Bleeding.mdx", u, "chest"))
    else
    set p=GetOwningPlayer(u)
    call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(r * ( .2 + ( .03 * i ) )))
    call UnitDamageTargetEx(u , t , r , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    call UnitDamageTargetEx(t , u , r * .125 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", GetUnitX(t), GetUnitY(t)))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodySplat Missile.mdx", u, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Bleeding.mdx", t, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\BloodbathTarget.mdx", t, "chest"))
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\GoldBottleMissile.mdl", t, "origin"))
    endif
    
    set u=null
    set t=null
    set tt=null
    endfunction
    
    
    function RecklessGreed___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(RecklessGreed___ABIL_ID , function RecklessGreed___OnSpell)
    endfunction
// scope RecklessGreed ends
//===========================================================================
// Trigger: Sinister Creed
//===========================================================================
//TESH.scrollpos=62
//TESH.alwaysfold=0
// scope SinisterCreed begins

         function s__SinisterCreed___SC_destroy takes integer this returns nothing
            set s__SinisterCreed___SC_u[this]=null
            call s__SinisterCreed___SC_deallocate(this)
        endfunction
    


    function SinisterCreed___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
    if GetUnitTypeId(LC[( 1 + GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data])) )]) != 'H01F' or LC[( 1 + GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data])) )] != s__SinisterCreed___SC_u[data] then
    call s__SinisterCreed___SC_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    else
    if UnitAlive(s__SinisterCreed___SC_u[data]) then
    if SinisterCInt[GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data]))] > 0 then
    set SinisterCInt[GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data]))]=SinisterCInt[GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data]))] - 1
    else
    if GetUnitAbilityLevel(s__SinisterCreed___SC_u[data], SinisterCreed___SPELL_ID) == 4 then
    call UnitRemoveAbility(s__SinisterCreed___SC_u[data], 'A0GE')
    set SinisterCreed_TraderResBonus[GetPlayerId(GetOwningPlayer(s__SinisterCreed___SC_u[data]))]=false
    endif
    call SetUnitAbilityLevel(s__SinisterCreed___SC_u[data], SinisterCreed___SPELL_ID, GetUnitAbilityLevel(s__SinisterCreed___SC_u[data], SinisterCreed___SPELL_ID) - 1)
    call SetUnitAbilityLevel(s__SinisterCreed___SC_u[data], SinisterCreed___SPELL_ID2, GetUnitAbilityLevel(s__SinisterCreed___SC_u[data], SinisterCreed___SPELL_ID2) - 1)
    endif
    
    call s__SinisterCreed___SC_destroy(data)
    call ReleaseTimer(GetExpiredTimer())
    else
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .5, false, function SinisterCreed___Handler)
    endif
    endif
    
    set t=null
    endfunction
    
    function SinisterCreed___Actions takes nothing returns nothing
    local timer t
    local integer data
    local unit u= GetEventDamageSource()
    local player p= GetOwningPlayer(u)
    local integer i
    local integer mis= R2I(( BlzGetUnitMaxHP(u) - GetWidgetLife(u) ) * .0350 * GetUnitAbilityLevel(u, 'A0GY'))
    
    call UnitRemoveAbility(GetTriggerUnit(), 'B04P')
    
    if GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID) == 14 then
    
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\GoldBottleMissile.mdl", GetTriggerUnit(), "origin"))
            	if BRTON then
		call UnitDamageTargetEx(u , GetTriggerUnit() , ( GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0015 ) + mis , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
		else
			if not IsUnitType(GetTriggerUnit(), UNIT_TYPE_ANCIENT) then
			call UnitDamageTargetEx(u , GetTriggerUnit() , ( ( GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0015 ) + mis ) * .75 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
			endif
		endif
	if GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) < 1000000 then
    call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + mis + R2I(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0015))
    	endif
    endif
    
    if GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID) < 14 then
        if GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID) == 3 then
            call UnitAddAbility(u, 'A0GE')
            set SinisterCreed_TraderResBonus[GetPlayerId(GetOwningPlayer(u))]=true
        endif
        call SetUnitAbilityLevel(u, SinisterCreed___SPELL_ID, GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID) + 1)
        call SetUnitAbilityLevel(u, SinisterCreed___SPELL_ID2, GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID2) + 1)
        set i=GetUnitAbilityLevel(u, SinisterCreed___SPELL_ID)
        if i > 4 then
        set i=4
        endif
        set i=i - 1
        
        
        if i != 0 then
        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\GoldBottleMissile.mdl", GetTriggerUnit(), "origin"))
        	if BRTON then
		call UnitDamageTargetEx(u , GetTriggerUnit() , ( GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0005 * i ) + mis , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
		else
			if not IsUnitType(GetTriggerUnit(), UNIT_TYPE_ANCIENT) then
			call UnitDamageTargetEx(u , GetTriggerUnit() , ( ( GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0005 * i ) + mis ) * .75 , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
			endif
		endif
		if GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) < 1000000 then
	call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + mis + R2I(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) * .0005 * i))
        endif
	endif
        
        set t=(NewTimerEx(0)) // INLINED!!
        set data=s__SinisterCreed___SC__allocate()
        set s__SinisterCreed___SC_u[data]=u
        call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
        call TimerStart(t, 3., false, function SinisterCreed___Handler)
    endif
    
    set t=null
    set u=null
    endfunction
    
    function SinisterCreed___Conditions takes nothing returns boolean
    if GetUnitAbilityLevel(GetEventDamageSource(), SinisterCreed___SPELL_ID) != 0 and GetTriggerUnit() != GetEventDamageSource() and IsUnitEnemy(GetEventDamageSource(), GetOwningPlayer(GetTriggerUnit())) and (CI[NI]) and UnitAlive(GetEventDamageSource()) and GetUnitAbilityLevel(GetEventDamageSource(), 'A0B5') < 14 and GetUnitAbilityLevel(GetTriggerUnit(), 'B04P') == 1 then // INLINED!!
        call SinisterCreed___Actions()
    endif
    return false
    endfunction
    
    function SinisterCreed___OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function SinisterCreed___Conditions))
        call MOE(II , ( t ))
    endfunction
// scope SinisterCreed ends
//===========================================================================
// Trigger: Sanctified Armor
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope SanctifiedArmor begins


    function SanctifiedArmor___Actions takes nothing returns boolean
    local unit u
    local unit p
    local real r
    if GetUnitAbilityLevel(GetTriggerUnit(), SanctifiedArmor___ABIL_ID) > 0 and GetTriggerUnit() != GetEventDamageSource() and GetRandomInt(0, 100) >= 93 then
    set u=GetEventDamageSource()
    set p=GetTriggerUnit()
    set r=GetWidgetLife(p)
    if ( J5V[( ROX(( GetUnitTypeId(u) )) )] ) then
    if ( BI[NI] ) == ( LN ) then
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl", p, "origin"))
    call SetWidgetLife(p, r + ( GetUnitState(p, UNIT_STATE_MAX_LIFE) * .16 ))
    endif
    else
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl", p, "origin"))
    call SetWidgetLife(p, r + ( GetUnitState(p, UNIT_STATE_MAX_LIFE) * .16 ))
    endif
    endif
    
    set p=null
    set u=null
    return false
    endfunction
    
    function SanctifiedArmor___OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function SanctifiedArmor___Actions))
    endfunction
    
// scope SanctifiedArmor ends
//===========================================================================
// Trigger: Eternal BattlethirstPassive
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope EternalBattlethirstPas begins


    function EternalBattlethirstPas___Actions takes nothing returns boolean
    local unit u
    if GetUnitAbilityLevel(GetTriggerUnit(), EternalBattlethirstPas___BUFF_ID) > 0 and GetTriggerUnit() != GetEventDamageSource() and GetWidgetLife(GetTriggerUnit()) - GetEventDamage() <= 21 then
    set u=GetEventDamageSource()
    if ( J5V[( ROX(( GetUnitTypeId(u) )) )] ) then
    if ( BI[NI] ) == ( LN ) then
    set DI[NI]=DI[NI] + GetEventDamage()
    endif
    else
    set DI[NI]=DI[NI] + GetEventDamage()
    endif
    call SetWidgetLife(GetTriggerUnit(), 21)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\VampiricAuraTarget.mdx", GetTriggerUnit(), "origin"))
    endif
    
    set u=null
    return false
    endfunction
    
    function EternalBattlethirstPas___OnInit takes nothing returns nothing
        local trigger trig= CreateTrigger()
        call MOE(II , ( trig ))
        call TriggerAddCondition(trig, Condition(function EternalBattlethirstPas___Actions))
    endfunction
    
// scope EternalBattlethirstPas ends
//===========================================================================
// Trigger: Recklessness Taunt
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
// scope RecklessnessTaunt begins
 

 
    function RecklessnessTaunt___FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()

    if IsUnitEnemy(u, GetOwningPlayer(RecklessnessTaunt___CASTER)) and UnitAlive(u) then
        call IssueTargetOrder(u, "attack", RecklessnessTaunt___CASTER)
    endif
    
    set u=null
    return false
    endfunction
 

 
    function RecklessnessTaunt___Actions takes nothing returns nothing
 
    set RecklessnessTaunt___CASTER=GetTriggerUnit()
    

    call GroupEnumUnitsInRange(RecklessnessTaunt___GROUP, GetUnitX(RecklessnessTaunt___CASTER), GetUnitY(RecklessnessTaunt___CASTER), 424., Filter(function RecklessnessTaunt___FilterActions))

    

    endfunction
    


        function RecklessnessTaunt___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(RecklessnessTaunt___SPELL_ID , function RecklessnessTaunt___Actions)
    endfunction
// scope RecklessnessTaunt ends

//===========================================================================
// Trigger: DesolationFear
//===========================================================================
//TESH.scrollpos=8
//TESH.alwaysfold=0


// scope TestFear begins
//=============================================================
//=========================SETUP================================
//=============================================================
    
    function TestFear___Duration takes integer level returns integer
        return 3 + level
    endfunction
    
    function TestFear___Aoe takes integer level returns integer
        return 425 + 25 * level
    endfunction
    
    function TestFear___Cond takes nothing returns boolean
        local unit FoG
        local player p
        local real x
        local real y
        local group g
        local integer lvl
        local integer l__F
        if GetSpellAbilityId() == TestFear___SPELL_ID or GetSpellAbilityId() == 'A00H' then
            set g=CreateGroup()
            set p=GetOwningPlayer(GetTriggerUnit())
            set x=GetUnitX(GetTriggerUnit())
            set y=GetUnitY(GetTriggerUnit())
		if GetSpellAbilityId() == TestFear___SPELL_ID then
            set lvl=GetUnitAbilityLevel(GetTriggerUnit(), 'A00H')
		endif
		if GetSpellAbilityId() == TestFear___SPELL_ID then
            set lvl=GetUnitAbilityLevel(GetTriggerUnit(), 'A00H')
		endif


            call GroupEnumUnitsInRange(g, x, y, (425 + 25 * (lvl)), null) // INLINED!!
            call DestroyEffect(AddSpecialEffect(TestFear___PATH_2, x, y))
            loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)

                if not IsUnitAlly(FoG, p) and UnitAlive(FoG) then
                    if (HaveSavedInteger(FearSystem__ht, GetHandleId((FoG)), 0)) then // INLINED!!
                        set l__F=s__Fear_get(FoG)
                        set s__Fear_steps[(l__F)]=(R2I((((((3 + (lvl)))*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                    else
                        set l__F=s__Fear_create()
                        set s__Fear_targ[l__F]=FoG
                        set s__Fear_path[l__F]=TestFear___PATH
                        set s__Fear_attach[l__F]=TestFear___ATTACH
                        set s__Fear_steps[(l__F)]=(R2I((((((3 + (lvl)))*1.0) / FearSystem__FPS)*1.0) + 0.5)) // INLINED!!
                        call s__Fear_start(l__F)
                        set s__Fear_b[(l__F)]=true // INLINED!!
                    endif
                endif
            endloop
            call DestroyGroup(g)
            set g=null
            set p=null
            set FoG=null
        endif
        return false
    endfunction
    
    
        function s__TestFear___A_init takes nothing returns nothing
            local trigger t= CreateTrigger()
            call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
            call TriggerAddCondition(t, Condition(function TestFear___Cond))
            set t=null
        endfunction
//Implemented from module TestFear___Module:
        function s__TestFear___A_TestFear___Module___onInit takes nothing returns nothing
            call s__TestFear___A_init()
        endfunction
// scope TestFear ends
//===========================================================================
// Trigger: TerrorCrush
//===========================================================================
// scope TerrorCrush begins



function TerrorCrush___FilterActions takes nothing returns boolean
local real x1=GetUnitX(TerrorCrush___CASTER)
local real y1=GetUnitY(TerrorCrush___CASTER)
local real x2=GetUnitX(GetFilterUnit())
local real y2=GetUnitY(GetFilterUnit())
local real SVE=I2R(BlzGetUnitBaseDamage(TerrorCrush___CASTER, 0)) * ( 1. + ( I2R(( GetUnitAbilityLevel(LC[1 + GetPlayerId(GetOwningPlayer(TerrorCrush___CASTER))], 'A01G') )) * .1 ) )
local unit s=CreateUnit(GetOwningPlayer(TerrorCrush___CASTER), 'h007', x1, y1, .0)
local real a=bj_RADTODEG * ( Atan2(y2 - y1, x2 - x1) )
local real d=375.

//call BJDebugMsg("Filter")
if UnitAlive(GetFilterUnit()) and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(TerrorCrush___CASTER)) then
call M6E(GetFilterUnit() , d , .65 , a , "war3mapImported\\Daemonic Arrow Classic.mdx" , .0 , true , false)
call Y0E(s , GetFilterUnit() , SVE , ATTACK_TYPE_CHAOS , false , false)
//call SEE(GetFilterUnit(),R2I(SVE))
call IssueTargetOrderById(GetFilterUnit(), 851983, TerrorCrush___CASTER)
endif
call UnitApplyTimedLife(s, 'BTLF', 1.)
set s=null
return false
endfunction
function TerrorCrush___Actions takes nothing returns nothing
local unit u=GetTriggerUnit()
local real x=GetUnitX(u)
local real y=GetUnitY(u)
//call BJDebugMsg("Actions")
set TerrorCrush___CASTER=u
call GroupEnumUnitsInRange(TerrorCrush___GROUP, x, y, 325., Filter(function TerrorCrush___FilterActions))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Voidbolt Rough Major.mdx", x, y))
set u=null
endfunction 


function TerrorCrush___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(TerrorCrush___SPELL_ID , function TerrorCrush___Actions)
endfunction


// scope TerrorCrush ends

//===========================================================================
// Trigger: Void Tendrils
//===========================================================================
// scope VoidShackles begins


    
        function s__VoidShackles___VShackle_destroy takes integer this returns nothing
            set s__VoidShackles___VShackle_u[this]=null
            set s__VoidShackles___VShackle_u2[this]=null
            set s__VoidShackles___VShackle_u3[this]=null
            set s__VoidShackles___VShackle_l[this]=null
            call s__VoidShackles___VShackle_deallocate(this)
        endfunction


    
function VoidShackles___Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local real a
local real d
local real dx
local real dy
local real x= GetUnitX(s__VoidShackles___VShackle_u[data])
local real y= GetUnitY(s__VoidShackles___VShackle_u[data])
local unit u
local real z1
local real z2

if not UnitAlive(s__VoidShackles___VShackle_u[data]) or s__VoidShackles___VShackle_d[data] <= 0. or s__VoidShackles___VShackle_u2[data] == null or not UnitAlive(s__VoidShackles___VShackle_u2[data]) then
call DestroyLightning(s__VoidShackles___VShackle_l[data])
call ReleaseTimer(t)
call s__VoidShackles___VShackle_destroy(data)
else

set dx=x - s__VoidShackles___VShackle_x[data]
set dy=y - s__VoidShackles___VShackle_y[data]
set d=SquareRoot(dx * dx + dy * dy)
if d >= 375. and not M5E(s__VoidShackles___VShackle_u[data]) then

set a=bj_RADTODEG * Atan2(s__VoidShackles___VShackle_y[data] - y, s__VoidShackles___VShackle_x[data] - x)

call M6E(s__VoidShackles___VShackle_u[data] , d , .3 , a , "war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx" , 0 , true , false)
set u=CreateUnit(GetOwningPlayer(VoidShackles___CASTER), 'h007', x, y, 0.)
call UnitApplyTimedLife(u, 'BTLF', 1.)
call UnitAddAbility(u, VoidShackles___SPELL_ID2)
call IssueTargetOrder(u, "thunderbolt", s__VoidShackles___VShackle_u[data])
call UnitDamageTargetEx(s__VoidShackles___VShackle_u3[data] , s__VoidShackles___VShackle_u[data] , ( GetHeroAgi(s__VoidShackles___VShackle_u3[data], true) * s__VoidShackles___VShackle_lvl[data] * 2. ) + ( GetHeroAgi(s__VoidShackles___VShackle_u3[data], true) * s__VoidShackles___VShackle_lvl[data] * s__VoidShackles___VShackle_lvl[data] * .5 ) , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
endif

call MoveLocation(VoidShackles___loc, GetUnitX(s__VoidShackles___VShackle_u[data]), GetUnitY(s__VoidShackles___VShackle_u[data]))
set z1=GetUnitFlyHeight(s__VoidShackles___VShackle_u[data]) + 40. + GetLocationZ(VoidShackles___loc)
call MoveLocation(VoidShackles___loc, s__VoidShackles___VShackle_x[data], s__VoidShackles___VShackle_y[data])
set z2=GetLocationZ(VoidShackles___loc) + 40.
call MoveLightningEx(s__VoidShackles___VShackle_l[data], true, GetUnitX(s__VoidShackles___VShackle_u[data]), GetUnitY(s__VoidShackles___VShackle_u[data]), z1, s__VoidShackles___VShackle_x[data], s__VoidShackles___VShackle_y[data], z2)
set s__VoidShackles___VShackle_d[data]=s__VoidShackles___VShackle_d[data] - .03125
call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .03125, false, function VoidShackles___Handler)
endif
set u=null
set t=null
endfunction
    
function VoidShackles___FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()
local real x1= GetUnitX(VL[( 1 + GetPlayerId(GetOwningPlayer(VoidShackles___CASTER)) )])
local real y1= GetUnitY(VL[( 1 + GetPlayerId(GetOwningPlayer(VoidShackles___CASTER)) )])
local real x2= GetUnitX(GetFilterUnit())
local real y2= GetUnitY(GetFilterUnit())
local real z= GetUnitFlyHeight(u) + 40.
local real dx
local real dy
local real d
local real dx2
local real dy2
local real d2
local real d3
local real a
local real a2
local timer t
local integer data

    if IsUnitEnemy(u, GetOwningPlayer(VoidShackles___CASTER)) and UnitAlive(u) and GetUnitAbilityLevel(u, 'Aloc') == 0 and not IsUnitType(u, UNIT_TYPE_STRUCTURE) then
    set t=CreateTimer()
    set data=s__VoidShackles___VShackle__allocate()
    set s__VoidShackles___VShackle_u[data]=u
    set s__VoidShackles___VShackle_u3[data]=VoidShackles___CASTER
    set s__VoidShackles___VShackle_u2[data]=VL[( 1 + GetPlayerId(GetOwningPlayer(VoidShackles___CASTER)) )]
    set s__VoidShackles___VShackle_lvl[data]=GetUnitAbilityLevel(VoidShackles___CASTER, VoidShackles___SPELL_ID) * 1.
    set s__VoidShackles___VShackle_d[data]=7.5 + ( s__VoidShackles___VShackle_lvl[data] * .75 )
    set s__VoidShackles___VShackle_x[data]=x1
    set s__VoidShackles___VShackle_y[data]=y1

	call MoveLocation(VoidShackles___loc, x2, y2)
	set z=z + GetLocationZ(VoidShackles___loc)

	call MoveLocation(VoidShackles___loc, x1, y1)

    set s__VoidShackles___VShackle_l[data]=AddLightningEx("PONC", true, x2, y2, z, x1, y1, 40. + GetLocationZ(VoidShackles___loc))
    call DestroyEffect(AddSpecialEffect("war3mapImported\\DarkLightning.mdx", x2, y2))
    //set dx = x1 - x2
    //set dy = y1 - y2
    //set d = SquareRoot(dx * dx + dy * dy)
    
    //if d >= 400. then
    //set a = bj_RADTODEG*Atan2(y2-y1,x2-x1)
    //set a2 = bj_RADTODEG*Atan2(y1-y2,x1-x2)
    //set dx2 = x1 + 300. * Cos(a2 * bj_DEGTORAD)
    //set dy2 = y1 + 300. * Sin(a2 * bj_DEGTORAD)
    //set d2 = SquareRoot(dx2 * dx2 + dy2 * dy2)
    //set d3 = d - d2
    //call M6E(data.u,d3,.3,a,"war3mapImported\\ShadowyMissileofEvilDOOMV2.mdx",0,false,false)
    //endif
    
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .03125, false, function VoidShackles___Handler)
    endif
    
set t=null
set u=null
return false
endfunction

function VoidShackles___Actions takes nothing returns nothing
local unit u= GetTriggerUnit()
local real r= GetUnitAbilityLevel(u, VoidShackles___SPELL_ID) * 1.

if VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )] != null then
set VoidShackles___CASTER=u
call GroupEnumUnitsInRange(VoidShackles___GROUP, GetUnitX(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )]), GetUnitY(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )]), 424. + 20. * r, Filter(function VoidShackles___FilterActions))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Call of Dread Purple.mdx", GetUnitX(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )]), GetUnitY(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )])))
call DestroyEffect(AddSpecialEffect("war3mapImported\\Void Rift II Purple.mdx", GetUnitX(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )]), GetUnitY(VL[( 1 + GetPlayerId(GetOwningPlayer(u)) )])))
else
call Q_E(GetOwningPlayer(GetTriggerUnit()) , "No Spatial Rend found")
endif

set u=null
endfunction

function VoidShackles___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(VoidShackles___SPELL_ID , function VoidShackles___Actions)
endfunction

// scope VoidShackles ends
//===========================================================================
// Trigger: Pick Up Items Terror
//===========================================================================

// scope TerrorPickUpItems begins


 function TerrorPickUpItems___EnumItem takes nothing returns boolean
	//call IssueTargetItemOrder( CASTER, "smart", GetEnumItem() )
	call UnitAddItem(TerrorPickUpItems___CASTER, GetEnumItem())
	return false
	endfunction
    function TerrorPickUpItems___Actions takes nothing returns nothing
 local real x= GetUnitX(GetTriggerUnit())
 local real y= GetUnitY(GetTriggerUnit())
	
	set TerrorPickUpItems___CASTER=GetTriggerUnit()
	call SetRect(TEMP_RECT, x - 500., y - 500., x + 500., 500.)
	call EnumItemsInRect(TEMP_RECT, null, function TerrorPickUpItems___EnumItem)
    endfunction
    
    function TerrorPickUpItems___OnInit takes nothing returns nothing
	call RegisterSpellEffectEvent(TerrorPickUpItems___SPELL_ID , function TerrorPickUpItems___Actions)
    endfunction
// scope TerrorPickUpItems ends
	
//===========================================================================
// Trigger: Bless
//===========================================================================

// scope Bless begins




	//effect fx
	//effect fx2
        function s__Bless___Bls_destroy takes integer this returns nothing
		//call DestroyEffect(this.fx)
		//set this.fx = null
		//call DestroyEffect(this.fx2)
		//set this.fx2 = null
		set s__Bless___Bls_c[this]=null
            call s__Bless___Bls_deallocate(this)
        endfunction

        function s__Bless___Bls2_destroy takes integer this returns nothing

		set s__Bless___Bls2_u[this]=null
            call s__Bless___Bls2_deallocate(this)
        endfunction

function Bless___Handler2 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data2= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!


	call SetHeroInt(s__Bless___Bls2_u[data2], GetHeroInt(s__Bless___Bls2_u[data2], false) - s__Bless___Bls2_int[data2], true)
	call SetHeroAgi(s__Bless___Bls2_u[data2], GetHeroAgi(s__Bless___Bls2_u[data2], false) - s__Bless___Bls2_agi[data2], true)
	if GetHeroStr(s__Bless___Bls2_u[data2], false) - s__Bless___Bls2_str[data2] <= 1 then
		call SetHeroStr(s__Bless___Bls2_u[data2], 1, true)
else
	call SetHeroStr(s__Bless___Bls2_u[data2], GetHeroStr(s__Bless___Bls2_u[data2], false) - s__Bless___Bls2_str[data2], true)
endif
	call BlzSetUnitArmor(s__Bless___Bls2_u[data2], BlzGetUnitArmor(s__Bless___Bls2_u[data2]) - s__Bless___Bls2_arm[data2])
	call BlzSetUnitBaseDamage(s__Bless___Bls2_u[data2], BlzGetUnitBaseDamage(s__Bless___Bls2_u[data2], 0) - s__Bless___Bls2_dmg[data2], 0)

if BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])] == 1 then
            
            call UnitRemoveAbility(s__Bless___Bls2_u[data2], 'A0IE')
            call UnitRemoveAbility(s__Bless___Bls2_u[data2], 'A0IF')
            
            endif
            
            set BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])]=BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])] - 1

call s__Bless___Bls2_destroy(data2)
call ReleaseTimer(t)

set t=null
endfunction

    function Bless___FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
 local timer t
 local integer lvl
 local integer data2
    if IsUnitAlly(u, GetOwningPlayer(Bless___CASTER)) and UnitAlive(u) and GetOwningPlayer(u) != Player(15) and IsUnitType(u, UNIT_TYPE_HERO) then

    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\JudgementTarget.mdx", u, "origin"))



	set lvl=GetUnitAbilityLevel(Bless___CASTER, Bless___SPELL_ID)
call SetWidgetLife(u, GetWidgetLife(u) + ( lvl * GetHeroStr(Bless___CASTER, true) * .25 ) + ( GetUnitState(u, UNIT_STATE_MAX_LIFE) * lvl * .000125 ))
 	
if GetUnitTypeId(LC[1 + GetPlayerId(GetOwningPlayer(u))]) == 'N01T' or GetUnitTypeId(LC[1 + GetPlayerId(GetOwningPlayer(u))]) == 'N01S' or GetUnitTypeId(LC[1 + GetPlayerId(GetOwningPlayer(u))]) == 'N01L' or GetUnitTypeId(LC[1 + GetPlayerId(GetOwningPlayer(u))]) == 'N01M' then
call s__NewBonusUtils__NewBonusUtils_linkTimed((u ) , ( BONUS_DAMAGE ) , (( lvl * 10. )*1.0) , (( 30.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((u ) , ( BONUS_ARMOR ) , (( lvl * 1.5 )*1.0) , (( 30.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((u ) , ( BONUS_INTELLIGENCE ) , (( lvl * 1.5 )*1.0) , (( 30.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((u ) , ( BONUS_AGILITY ) , (( lvl * 1.5 )*1.0) , (( 30.)*1.0) , true) // INLINED!!
call s__NewBonusUtils__NewBonusUtils_linkTimed((u ) , ( BONUS_STRENGTH ) , (( lvl * 1.5 )*1.0) , (( 30.)*1.0) , true) // INLINED!!
else
set data2=s__Bless___Bls2__allocate()
	set s__Bless___Bls2_int[data2]=lvl
	set s__Bless___Bls2_agi[data2]=lvl
	set s__Bless___Bls2_str[data2]=lvl
	set s__Bless___Bls2_arm[data2]=lvl
	set s__Bless___Bls2_dmg[data2]=lvl * 10

	call SetHeroInt(u, GetHeroInt(u, false) + s__Bless___Bls2_int[data2], true)
	call SetHeroAgi(u, GetHeroAgi(u, false) + s__Bless___Bls2_agi[data2], true)
	call SetHeroStr(u, GetHeroStr(u, false) + s__Bless___Bls2_str[data2], true)
	call BlzSetUnitArmor(u, BlzGetUnitArmor(u) + s__Bless___Bls2_arm[data2])
	call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) + s__Bless___Bls2_dmg[data2], 0)


	set s__Bless___Bls2_u[data2]=u


            if BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])] == 0 then
            call UnitAddAbility(s__Bless___Bls2_u[data2], 'A0IE')
            call UnitAddAbility(s__Bless___Bls2_u[data2], 'A0IF')
            endif
            
            set BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])]=BlessEffectCount[GetUnitUserData(s__Bless___Bls2_u[data2])] + 1

	set t=(NewTimerEx(0)) // INLINED!!
	call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data2)) // INLINED!!
	call TimerStart(t, 25., false, function Bless___Handler2)
   endif
   endif

	set t=null
    set u=null
    return false
    endfunction

function Bless___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
 local real x
local real y
//local real x2
//local real y2
//local unit u
   local integer i= 12
 
    if s__Bless___Bls_dur[data] <= 0 then
    call s__Bless___Bls_destroy(data)
    call ReleaseTimer(t)

	
	
	else
	
	set s__Bless___Bls_dur[data]=s__Bless___Bls_dur[data] - .25
	
	set x=GetUnitX(s__Bless___Bls_c[data])
	set y=GetUnitY(s__Bless___Bls_c[data])

	//call BlzSetSpecialEffectX(data.fx,x)
	//call BlzSetSpecialEffectY(data.fx,y)

	set Bless___CASTER=s__Bless___Bls_c[data]
	call GroupEnumUnitsInRange(Bless___GROUP, x, y, 299., Filter(function Bless___FilterActions))

	//call DestroyEffect(AddSpecialEffect("war3mapImported\\JudgementTarget.mdx",GetUnitX(data.c),GetUnitY(data.c)))
	
	set i=12
	loop
	exitwhen i <= 0

	//set x2 = x + GetRandomReal(1.,299.) * Cos(GetRandomReal(0.,360.)) * bj_DEGTORAD
	//set y2 = y + GetRandomReal(1.,299.) * Sin(GetRandomReal(0.,360.)) * bj_DEGTORAD
	//set u = CreateUnit(GetOwningPlayer(data.c),'h010',x2,y2,270.)
if GetRandomReal(0., 10.) <= 3.33 then
	call DestroyEffect(AddSpecialEffect("war3mapImported\\TheHolyBomb.mdx", x, y))
endif
//call UnitApplyTimedLife(u,'BTLF',2.)	

	//call BJDebugMsg(R2S(x2))
//call BJDebugMsg(R2S(y2))
	set i=i - 1
	endloop

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
	call TimerStart(t, .25, false, function Bless___Handler)

	

	endif


	//set u = null
    set t=null
    endfunction


function Bless___Actions takes nothing returns nothing

local timer t
    local integer data= s__Bless___Bls__allocate()
    local integer i= 12
local real x
local real y
//local real x2
//local real y2
    set s__Bless___Bls_c[data]=GetTriggerUnit()
	//set data.fx = AddSpecialEffect("war3mapImported\\Judgement.mdx",x + GetRandomReal(50.,* Cos(angle * bj_DEGTORAD),y)
//set data.fx2 = AddSpecialEffectTarget("war3mapImported\\Judgement.mdx",data.c,"origin")call DestroyEffect(AddSpecialEffect("war3mapImported\\JudgementTarget.mdx",GetUnitX(data.c),GetUnitY(data.c)))


	set i=12
	loop
	
	exitwhen i <= 0
set x=GetUnitX(s__Bless___Bls_c[data])
set y=GetUnitY(s__Bless___Bls_c[data])
		//set x2 = x + GetRandomReal(1.,299.) * Cos(GetRandomReal(0.,360.)) * bj_DEGTORAD
	//set y2 = y + GetRandomReal(1.,299.) * Sin(GetRandomReal(0.,360.)) * bj_DEGTORAD
	if GetRandomReal(0., 10.) <= 3.33 then
	call DestroyEffect(AddSpecialEffect("war3mapImported\\TheHolyBomb.mdx.mdx", x, y))
	endif
	set i=i - 1
	endloop
	//call BlzSetSpecialEffectScale(data.fx,.75)
    set s__Bless___Bls_dur[data]=15.
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .25, false, function Bless___Handler)
    
    set t=null

endfunction


function Bless___OnInit takes nothing returns nothing
 	call RegisterSpellEffectEvent(Bless___SPELL_ID , function Bless___Actions)
endfunction
// scope Bless ends
//===========================================================================
// Trigger: Blood Dance Damage Bonus
//===========================================================================
// scope BloodDanceDamageBonus begins
 
 

 
    function BloodDanceDamageBonus___Actions takes nothing returns nothing
 local unit u= GetTriggerUnit()

call BlzSetUnitBaseDamage(u, BlzGetUnitBaseDamage(u, 0) + ( 10 + GetHeroLevel(u) ), 0)

set u=null
    endfunction
    


        function BloodDanceDamageBonus___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(BloodDanceDamageBonus___SPELL_ID , function BloodDanceDamageBonus___Actions)
    endfunction
// scope BloodDanceDamageBonus ends

//===========================================================================
// Trigger: Earthsplitter
//===========================================================================
// scope Earthsplitter begins



function s__Earthsplitter___FT_destroy takes integer this returns nothing

call RemoveUnit(s__Earthsplitter___FT_d1[this])
call RemoveUnit(s__Earthsplitter___FT_d2[this])
call RemoveUnit(s__Earthsplitter___FT_d3[this])
call RemoveUnit(s__Earthsplitter___FT_d4[this])
call RemoveUnit(s__Earthsplitter___FT_d5[this])
call RemoveUnit(s__Earthsplitter___FT_d6[this])

call DestroyUbersplat(s__Earthsplitter___FT_u1[this])
call DestroyUbersplat(s__Earthsplitter___FT_u2[this])
call DestroyUbersplat(s__Earthsplitter___FT_u3[this])
call DestroyUbersplat(s__Earthsplitter___FT_u4[this])
call DestroyUbersplat(s__Earthsplitter___FT_u5[this])
call DestroyUbersplat(s__Earthsplitter___FT_u6[this])

set s__Earthsplitter___FT_d1[this]=null
set s__Earthsplitter___FT_d2[this]=null
set s__Earthsplitter___FT_d3[this]=null
set s__Earthsplitter___FT_d4[this]=null
set s__Earthsplitter___FT_d5[this]=null
set s__Earthsplitter___FT_d6[this]=null

set s__Earthsplitter___FT_u1[this]=null
set s__Earthsplitter___FT_u2[this]=null
set s__Earthsplitter___FT_u3[this]=null
set s__Earthsplitter___FT_u4[this]=null
set s__Earthsplitter___FT_u5[this]=null
set s__Earthsplitter___FT_u6[this]=null

set s__Earthsplitter___FT_p[this]=null
set s__Earthsplitter___FT_c[this]=null
call s__Earthsplitter___FT_deallocate(this)
endfunction

function Earthsplitter___Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit FoG
local group g
local real x
local real y
local integer i= 0
local real x2
local real y2
local unit d

set s__Earthsplitter___FT_i[data]=s__Earthsplitter___FT_i[data] + 1

if s__Earthsplitter___FT_i[data] == 8 then

call ReleaseTimer(t)
call s__Earthsplitter___FT_destroy(data)

else

if s__Earthsplitter___FT_i[data] == 7 then

set s__Earthsplitter___FT_x[data]=s__Earthsplitter___FT_x[data] + 175. * Cos(s__Earthsplitter___FT_a[data] * bj_DEGTORAD)
set s__Earthsplitter___FT_y[data]=s__Earthsplitter___FT_y[data] + 175. * Sin(s__Earthsplitter___FT_a[data] * bj_DEGTORAD)
set g=CreateGroup()
call s__LineSegment_EnumUnitsEx((g ) , (( s__Earthsplitter___FT_x1[data] )*1.0) , (( s__Earthsplitter___FT_y1[data] )*1.0) , (( s__Earthsplitter___FT_x[data] )*1.0) , (( s__Earthsplitter___FT_y[data] )*1.0) , (( 375.)*1.0) , false) //takes group whichgroup, real ax, real ay, real bx, real by, real offset returns nothing // INLINED!!


loop
                set FoG=FirstOfGroup(g)
                exitwhen FoG == null
                call GroupRemoveUnit(g, FoG)

                if IsUnitEnemy(FoG, s__Earthsplitter___FT_p[data]) and UnitAlive(FoG) then //and ((z<= data.z1+95. and z>=data.z1-95.)or(z<= data.z2+65. and z>=data.z2-65.)) then
		set d=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
		call UnitApplyTimedLife(d, 'BTLF', 1.)
		call UnitAddAbility(d, 'A0NY')
		call IssueTargetOrderById(d, 852095, FoG)
		call UnitDamageTargetEx(s__Earthsplitter___FT_c[data] , FoG , s__Earthsplitter___FT_d[data] * .5 , false , false , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_UNIVERSAL , WEAPON_TYPE_WHOKNOWS)
		call UnitDamageTargetEx(s__Earthsplitter___FT_c[data] , FoG , s__Earthsplitter___FT_d[data] * .5 , false , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_NORMAL , WEAPON_TYPE_WHOKNOWS)
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Earth NovaTarget.mdx", FoG, "origin"))
		//call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl",FoG,"origin"))
		//call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\EraserFire.mdl",FoG,"chest"))
		endif

            endloop
            call DestroyGroup(g)


set x2=GetUnitX(s__Earthsplitter___FT_d1[data])
set y2=GetUnitY(s__Earthsplitter___FT_d1[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop

set x2=GetUnitX(s__Earthsplitter___FT_d2[data])
set y2=GetUnitY(s__Earthsplitter___FT_d2[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop



set x2=GetUnitX(s__Earthsplitter___FT_d3[data])
set y2=GetUnitY(s__Earthsplitter___FT_d3[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop


set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop


set x2=GetUnitX(s__Earthsplitter___FT_d4[data])
set y2=GetUnitY(s__Earthsplitter___FT_d4[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop


set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop


set x2=GetUnitX(s__Earthsplitter___FT_d5[data])
set y2=GetUnitY(s__Earthsplitter___FT_d5[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop


set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop


set x2=GetUnitX(s__Earthsplitter___FT_d6[data])
set y2=GetUnitY(s__Earthsplitter___FT_d6[data])
loop
exitwhen i >= 8

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

set i=0
loop
exitwhen i >= 3

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
set i=i + 1
endloop


set i=0
loop
exitwhen i >= 2

set x=x2 + GetRandomReal(- 175., 175.)
set y=y2 + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", x, y))
set i=i + 1
endloop


call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .4, false, function Earthsplitter___Handler)

set d=null
set FoG=null
set g=null
set t=null
return
endif

set s__Earthsplitter___FT_x[data]=s__Earthsplitter___FT_x[data] + 325. * Cos(s__Earthsplitter___FT_a[data] * bj_DEGTORAD)
set s__Earthsplitter___FT_y[data]=s__Earthsplitter___FT_y[data] + 325. * Sin(s__Earthsplitter___FT_a[data] * bj_DEGTORAD)

loop
exitwhen i >= 8

set x=s__Earthsplitter___FT_x[data] + GetRandomReal(- 175., 175.)
set y=s__Earthsplitter___FT_y[data] + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Dust.mdx", x, y))
set i=i + 1
endloop

set i=0

loop
exitwhen i >= 10

set x=s__Earthsplitter___FT_x[data] + GetRandomReal(- 175., 175.)
set y=s__Earthsplitter___FT_y[data] + GetRandomReal(- 175., 175.)
call DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
set i=i + 1
endloop

if s__Earthsplitter___FT_i[data] == 1 then
set s__Earthsplitter___FT_d1[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d1[data], 'A0NX')
set s__Earthsplitter___FT_u1[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u1[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u1[data], true)
endif

if s__Earthsplitter___FT_i[data] == 2 then
set s__Earthsplitter___FT_d2[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d2[data], 'A0NX')
set s__Earthsplitter___FT_u2[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u2[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u2[data], true)
endif

if s__Earthsplitter___FT_i[data] == 3 then
set s__Earthsplitter___FT_d3[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d3[data], 'A0NX')
set s__Earthsplitter___FT_u3[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u3[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u3[data], true)
endif

if s__Earthsplitter___FT_i[data] == 4 then
set s__Earthsplitter___FT_d4[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d4[data], 'A0NX')
set s__Earthsplitter___FT_u4[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u4[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u4[data], true)
endif

if s__Earthsplitter___FT_i[data] == 5 then
set s__Earthsplitter___FT_d5[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d5[data], 'A0NX')
set s__Earthsplitter___FT_u5[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u5[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u5[data], true)
endif

if s__Earthsplitter___FT_i[data] == 6 then
set s__Earthsplitter___FT_d6[data]=CreateUnit(s__Earthsplitter___FT_p[data], 'h007', s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], 0.)
call UnitAddAbility(s__Earthsplitter___FT_d6[data], 'A0NX')
set s__Earthsplitter___FT_u6[data]=CreateUbersplat(s__Earthsplitter___FT_x[data], s__Earthsplitter___FT_y[data], "THND", 255, 255, 255, 255, false, false)
    call ShowUbersplat(s__Earthsplitter___FT_u6[data], true)
    call SetUbersplatRenderAlways(s__Earthsplitter___FT_u6[data], true)
endif

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .4, false, function Earthsplitter___Handler)

endif

set d=null
set FoG=null
set g=null
set t=null
endfunction

function Earthsplitter___Actions takes nothing returns nothing
local timer t= (NewTimerEx(0)) // INLINED!!
local integer data= s__Earthsplitter___FT__allocate()


set s__Earthsplitter___FT_i[data]=0
set s__Earthsplitter___FT_c[data]=GetTriggerUnit()
set s__Earthsplitter___FT_p[data]=GetOwningPlayer(s__Earthsplitter___FT_c[data])
set s__Earthsplitter___FT_x[data]=GetUnitX(s__Earthsplitter___FT_c[data])
set s__Earthsplitter___FT_y[data]=GetUnitY(s__Earthsplitter___FT_c[data])
set s__Earthsplitter___FT_a[data]=bj_RADTODEG * Atan2(GetSpellTargetY() - s__Earthsplitter___FT_y[data], GetSpellTargetX() - s__Earthsplitter___FT_x[data])
set s__Earthsplitter___FT_x[data]=s__Earthsplitter___FT_x[data] + 175. * Cos(( s__Earthsplitter___FT_a[data] - 180. ) * bj_DEGTORAD)
set s__Earthsplitter___FT_y[data]=s__Earthsplitter___FT_y[data] + 175. * Sin(( s__Earthsplitter___FT_a[data] - 180. ) * bj_DEGTORAD)
set s__Earthsplitter___FT_x1[data]=s__Earthsplitter___FT_x[data]
set s__Earthsplitter___FT_y1[data]=s__Earthsplitter___FT_y[data]
set s__Earthsplitter___FT_d[data]=( GetUnitAbilityLevel(s__Earthsplitter___FT_c[data], Earthsplitter___SPELL_ID) * 6 * GetHeroStr(s__Earthsplitter___FT_c[data], true) ) + ( BlzGetUnitMaxHP(s__Earthsplitter___FT_c[data]) * GetUnitAbilityLevel(s__Earthsplitter___FT_c[data], Earthsplitter___SPELL_ID) * .1 )

call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!

call TimerStart(t, .2, false, function Earthsplitter___Handler)


set t=null
endfunction

function Earthsplitter___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(Earthsplitter___SPELL_ID , function Earthsplitter___Actions)
endfunction
// scope Earthsplitter ends
//===========================================================================
// Trigger: PulverizeCDR
//===========================================================================
//TESH.scrollpos=36
//TESH.alwaysfold=0
// scope PulverizeCDR begins


    


 
    function PulverizeCDR___Conditions takes nothing returns boolean
local unit c= GetEventDamageSource()
local unit t= GetTriggerUnit()
local real cooldown
    if GetUnitAbilityLevel(c, PulverizeCDR___SPELL_ID) != 0 and t != c and IsUnitEnemy(c, GetOwningPlayer(t)) and (CI[NI]) and UnitAlive(c) and GetUnitAbilityLevel(t, 'B067') == 1 then // INLINED!!
        call UnitRemoveAbility(t, 'B067')


if GetUnitAbilityLevel(c, PulverizeCDR___SPELL_ID2) > 0 then
                    set cooldown=BlzGetUnitAbilityCooldownRemaining(c, PulverizeCDR___SPELL_ID2)
                    if cooldown > 0 then
                        if cooldown - .25 <= 0 then
                            call BlzEndUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID2)
                        else
                            call BlzStartUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID2, cooldown - .25)
                        endif
					endif
endif

if GetUnitAbilityLevel(c, PulverizeCDR___SPELL_ID3) > 0 then
                    set cooldown=BlzGetUnitAbilityCooldownRemaining(c, PulverizeCDR___SPELL_ID3)
                    if cooldown > 0 then
                        if cooldown - .25 <= 0 then
                            call BlzEndUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID3)
                        else
                            call BlzStartUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID3, cooldown - .25)
                        endif
					endif
endif

if GetUnitAbilityLevel(c, PulverizeCDR___SPELL_ID4) > 0 then
                    set cooldown=BlzGetUnitAbilityCooldownRemaining(c, PulverizeCDR___SPELL_ID4)
                    if cooldown > 0 then
                        if cooldown - .25 <= 0 then
                            call BlzEndUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID4)
                        else
                            call BlzStartUnitAbilityCooldown(c, PulverizeCDR___SPELL_ID4, cooldown - .25)
                        endif
					endif
endif


endif
set c=null
set t=null
    return false
    endfunction
    
    function PulverizeCDR___OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerAddCondition(t, Condition(function PulverizeCDR___Conditions))
        call MOE(II , ( t ))
    endfunction
// scope PulverizeCDR ends
//===========================================================================
// Trigger: DemonSpawners
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
// scope DemonSpawn begins
 



 
    function DemonSpawn___Actions takes nothing returns nothing
 local integer unitid
  local unit c= GetTriggerUnit()
 local unit u
 local real x
 local real y
 local real a= GetRandomReal(0., 360.)
 local real d= GetRandomReal(300., 400.)

	set x=GetUnitX(c) + d * Cos(a * bj_DEGTORAD)
	set y=GetUnitY(c) + d * Sin(a * bj_DEGTORAD)

	if GetUnitLevel(GetTriggerUnit()) < 25 then
	set unitid='o008'
	
		else
	
		if GetRandomReal(0., 100.) >= 50. then
		set unitid='n01J'
		else
		set unitid='o008'

	endif
	endif
	if GetUnitLevel(GetTriggerUnit()) >= 50 and unitid == 'o008' then
	
		set unitid='n01I'

		endif

	set u=CreateUnit(( Player(GetPlayerId(GetOwningPlayer(c))) ), unitid, x, y, a)


	if unitid == 'o008' then
		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(c) / 3)
		call BlzSetUnitBaseDamage(u, GetHeroStr(c, true), 0)

if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(u))])] then
call BlzSetUnitSkin(u, 'o00D')
endif
	endif

	if unitid == 'n01J' then

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(c) / 2)
		call BlzSetUnitBaseDamage(u, ( GetHeroInt(c, true) * 3 ) + GetHeroStr(c, true) + ( GetHeroAgi(c, true) * 2 ), 0)
if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(u))])] then
call BlzSetUnitSkin(u, 'n035')
endif
	endif

	if unitid == 'n01I' then

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(c))
		call BlzSetUnitBaseDamage(u, ( GetHeroInt(c, true) ) + ( GetHeroStr(c, true) * 2 ), 0)
if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(u))])] then
call BlzSetUnitSkin(u, 'n036')
endif
	endif

		call UnitApplyTimedLife(u, 'BTLF', 15. + ( GetHeroLevel(c) * .1 ) + ( GetHeroStr(c, true) * .05 ))
		call DestroyEffect(AddSpecialEffect("war3mapImported\\Doomsday.mdx", x, y))
		call DestroyEffect(AddSpecialEffect("war3mapImported\\Damnation Orange.mdx", x, y))

	call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
	
	set c=null
	set u=null
    endfunction
    


        function DemonSpawn___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(DemonSpawn___SPELL_ID , function DemonSpawn___Actions)
    endfunction
// scope DemonSpawn ends

//===========================================================================
// Trigger: Reign of Death
//===========================================================================

// scope ReignofDeath begins




        function s__ReignofDeath___RoD_destroy takes integer this returns nothing

		set s__ReignofDeath___RoD_c[this]=null
            call s__ReignofDeath___RoD_deallocate(this)
        endfunction

        function s__ReignofDeath___RoD2_destroy takes integer this returns nothing

		set s__ReignofDeath___RoD2_c[this]=null
            call s__ReignofDeath___RoD2_deallocate(this)
        endfunction

    function ReignofDeath___FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()

    if IsUnitEnemy(u, GetOwningPlayer(ReignofDeath___CASTER)) and UnitAlive(u) and GetOwningPlayer(u) != Player(15) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) then

    call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", GetUnitX(u), GetUnitY(u)))
call UnitDamageTargetEx(ReignofDeath___CASTER , u , ReignofDeath___DAMAGE , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
    endif
    


    set u=null
    return false
    endfunction

function ReignofDeath___Handler2 takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data2= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local unit u= CreateUnit(( Player(GetPlayerId(GetOwningPlayer(s__ReignofDeath___RoD2_c[data2]))) ), 'n01K', s__ReignofDeath___RoD2_x[data2], s__ReignofDeath___RoD2_y[data2], 270.)

set ReignofDeath___CASTER=s__ReignofDeath___RoD2_c[data2]
set ReignofDeath___DAMAGE=GetUnitAbilityLevel(s__ReignofDeath___RoD2_c[data2], ReignofDeath___SPELL_ID) * ( GetHeroStr(s__ReignofDeath___RoD2_c[data2], true) + GetHeroAgi(s__ReignofDeath___RoD2_c[data2], true) + GetHeroInt(s__ReignofDeath___RoD2_c[data2], true) ) * 10.
call GroupEnumUnitsInRange(ReignofDeath___GROUP, s__ReignofDeath___RoD2_x[data2], s__ReignofDeath___RoD2_y[data2], 399., Filter(function ReignofDeath___FilterActions))

call DestroyEffect(AddSpecialEffect("war3mapImported\\Smash.mdx", s__ReignofDeath___RoD2_x[data2], s__ReignofDeath___RoD2_y[data2]))

call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(s__ReignofDeath___RoD2_c[data2]) * 100)
call BlzSetUnitBaseDamage(u, GetHeroStr(s__ReignofDeath___RoD2_c[data2], true) * 75, 0)
call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))
call UnitApplyTimedLife(u, 'BTLF', 15.)

if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__ReignofDeath___RoD2_c[data2]))])] then
call BlzSetUnitSkin(u, 'n034')
endif

call DestroyEffect(AddSpecialEffect("war3mapImported\\Damnation Orange.mdx", s__ReignofDeath___RoD2_x[data2], s__ReignofDeath___RoD2_y[data2]))

set u=null
call s__ReignofDeath___RoD2_destroy(data2)
set t=null
endfunction

function ReignofDeath___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local timer t2
local integer data2
local effect fx

    
 
    if s__ReignofDeath___RoD_dur[data] <= 0 then
    call s__ReignofDeath___RoD_destroy(data)
    call ReleaseTimer(t)

	
	
	else
	
	set s__ReignofDeath___RoD_dur[data]=s__ReignofDeath___RoD_dur[data] - 1



	set data2=s__ReignofDeath___RoD2__allocate()
	set s__ReignofDeath___RoD2_c[data2]=s__ReignofDeath___RoD_c[data]
	set s__ReignofDeath___RoD2_x[data2]=GetUnitX(s__ReignofDeath___RoD_c[data]) + GetRandomReal(- 750., 750.)
	set s__ReignofDeath___RoD2_y[data2]=GetUnitY(s__ReignofDeath___RoD_c[data]) + GetRandomReal(- 750., 750.)
	set t2=(NewTimerEx(0)) // INLINED!!
	call SaveInteger(TimerUtils___ht, 0, GetHandleId((t2 )), ( data2)) // INLINED!!
	call TimerStart(t2, .5, false, function ReignofDeath___Handler2)
set fx=AddSpecialEffect("war3mapImported\\Kingdom Come.mdx", s__ReignofDeath___RoD2_x[data2], s__ReignofDeath___RoD2_y[data2])
call BlzSetSpecialEffectScale(fx, 1.5)
call DestroyEffect(fx)
	call TimerStart(t, .5, false, function ReignofDeath___Handler)
	endif
	set fx=null
set t2=null
    set t=null
    endfunction


function ReignofDeath___Actions takes nothing returns nothing

local timer t
    local integer data= s__ReignofDeath___RoD__allocate()
    
    set s__ReignofDeath___RoD_c[data]=GetTriggerUnit()

	
    set s__ReignofDeath___RoD_dur[data]=10
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .5, false, function ReignofDeath___Handler)
    
    set t=null

endfunction


function ReignofDeath___OnInit takes nothing returns nothing
 	call RegisterSpellEffectEvent(ReignofDeath___SPELL_ID , function ReignofDeath___Actions)
endfunction
// scope ReignofDeath ends
//===========================================================================
// Trigger: Vicious Vice
//===========================================================================
//TESH.scrollpos=32
//TESH.alwaysfold=0

// scope ViciousVice begins


        function s__ViciousVice___VV_destroy takes integer this returns nothing

		set s__ViciousVice___VV_c[this]=null
            set s__ViciousVice___VV_u[this]=null
            call s__ViciousVice___VV_deallocate(this)
        endfunction
    
    function ViciousVice___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
 
    if s__ViciousVice___VV_dur[data] <= 0. or GetUnitAbilityLevel(s__ViciousVice___VV_u[data], 'B051') != 1 then
    call s__ViciousVice___VV_destroy(data)
    call ReleaseTimer(t)

	
	
	else
	
	set s__ViciousVice___VV_dur[data]=s__ViciousVice___VV_dur[data] - .02
	call UnitDamageTargetEx(s__ViciousVice___VV_c[data] , s__ViciousVice___VV_u[data] , s__ViciousVice___VV_dmg[data] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
	call TimerStart(t, .02, false, function ViciousVice___Handler)
    
	endif
	
    set t=null
    endfunction

    function ViciousVice___Actions takes nothing returns nothing
    local timer t
    local integer data= s__ViciousVice___VV__allocate()
    
    set s__ViciousVice___VV_u[data]=GetSpellTargetUnit()
    set s__ViciousVice___VV_c[data]=GetTriggerUnit()

if IsUnitType(s__ViciousVice___VV_u[data], UNIT_TYPE_ANCIENT) then
    set s__ViciousVice___VV_dmg[data]=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__ViciousVice___VV_c[data])) )], true) + ( BlzGetUnitMaxHP(s__ViciousVice___VV_u[data]) * .03 ) ) * .02
	
else
 set s__ViciousVice___VV_dmg[data]=( GetHeroInt(LC[( 1 + GetPlayerId(GetOwningPlayer(s__ViciousVice___VV_c[data])) )], true) + ( BlzGetUnitMaxHP(s__ViciousVice___VV_u[data]) * .08 ) ) * .02
endif
	call UnitDamageTargetEx(s__ViciousVice___VV_c[data] , s__ViciousVice___VV_u[data] , s__ViciousVice___VV_dmg[data] , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)

    set s__ViciousVice___VV_dur[data]=9.98
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, .02, false, function ViciousVice___Handler)
    
    set t=null
    endfunction
    
    
    function ViciousVice___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(ViciousVice___SPELL_ID , function ViciousVice___Actions)
    endfunction
// scope ViciousVice ends


//===========================================================================
// Trigger: Infernal Martyr
//===========================================================================
// scope InfernalMartyr begins


    function InfernalMartyr___FilterActions takes nothing returns boolean
    local unit u= GetFilterUnit()
    local real r

    if IsUnitEnemy(u, GetOwningPlayer(InfernalMartyr___CASTER)) and UnitAlive(u) and GetOwningPlayer(u) != Player(15) and not IsUnitType(u, UNIT_TYPE_MAGIC_IMMUNE) then
call UnitDamageTargetEx(InfernalMartyr___CASTER , u , GetHeroStr(LC[( 1 + GetPlayerId(GetOwningPlayer(GetTriggerUnit())) )], true) * 2. , false , true , ATTACK_TYPE_CHAOS , DAMAGE_TYPE_NORMAL , null)
    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Firebolt Minor.mdx", u, "chest"))

    endif
    
    set u=null
    return false
    endfunction


function InfernalMartyr___Conditions takes nothing returns boolean
local real x
local real y

set InfernalMartyr___CASTER=GetTriggerUnit()
set x=GetUnitX(InfernalMartyr___CASTER)
set y=GetUnitY(InfernalMartyr___CASTER)
if GetUnitAbilityLevel(InfernalMartyr___CASTER, InfernalMartyr___SPELL_ID) == 1 then

call DestroyEffect(AddSpecialEffect("war3mapImported\\BloodEX-Special-2.mdx", x, y))
call GroupEnumUnitsInRange(InfernalMartyr___GROUP, x, y, 250., Filter(function InfernalMartyr___FilterActions))


endif
return false
endfunction


function InfernalMartyr___OnInit takes nothing returns nothing
        local trigger t=CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
        call TriggerAddCondition(t, Condition(function InfernalMartyr___Conditions))
endfunction
// scope InfernalMartyr ends
//===========================================================================
// Trigger: Sword of the Legion
//===========================================================================
// scope FallingSword begins
 





       function s__FallingSword___FelSword_destroy takes integer this returns nothing
            set s__FallingSword___FelSword_caster[this]=null
            call s__FallingSword___FelSword_deallocate(this)
        endfunction
 
 
 
    function FallingSword___FilterActions takes nothing returns boolean
local unit u= GetFilterUnit()

//call BJDebugMsg("is this filter working?")
	if IsUnitEnemy(u, GetOwningPlayer(FallingSword___CASTER)) and UnitAlive(u) then
		
	
call UnitDamageTargetEx(FallingSword___CASTER , u , FallingSword___DAMAGE , false , false , ATTACK_TYPE_NORMAL , DAMAGE_TYPE_LIGHTNING , WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffect("war3mapImported\\Pillar of Flame Orange.mdx", GetUnitX(u), GetUnitY(u)))
//call BJDebugMsg("FIRE")
	endif
set u=null
    return false
    endfunction

function FallingSword___Handler takes nothing returns nothing
local timer t= GetExpiredTimer()
local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
local integer i= 3 + s__FallingSword___FelSword_lvl[data]
local integer i2
local integer unitid
local unit u
local unit u2


set FallingSword___CASTER=s__FallingSword___FelSword_caster[data]
set FallingSword___DAMAGE=s__FallingSword___FelSword_lvl[data] * s__FallingSword___FelSword_lvl[data] * .1 * ( GetHeroStr(s__FallingSword___FelSword_caster[data], true) + GetHeroAgi(s__FallingSword___FelSword_caster[data], true) + GetHeroInt(s__FallingSword___FelSword_caster[data], true) ) * 2.
call GroupEnumUnitsInRange(FallingSword___GROUP, s__FallingSword___FelSword_x[data], s__FallingSword___FelSword_y[data], 299., Filter(function FallingSword___FilterActions))

call DestroyEffect(AddSpecialEffect("war3mapImported\\Smash.mdx", s__FallingSword___FelSword_x[data], s__FallingSword___FelSword_y[data]))

set u2=CreateUnit(( Player(GetPlayerId(GetOwningPlayer(s__FallingSword___FelSword_caster[data]))) ), 'H01H', s__FallingSword___FelSword_x[data], s__FallingSword___FelSword_y[data], 0.)
call UnitApplyTimedLife(u2, 'BTLF', 1.)

loop

exitwhen i <= 0

set i=i - 1
set i2=GetRandomInt(0, 2)

if i2 == 0 then
 set unitid='o008'
endif

if i2 == 1 then
 set unitid='n01J'
endif

if i2 == 2 then
 set unitid='n01I'
endif

set u=CreateUnit(( Player(GetPlayerId(GetOwningPlayer(s__FallingSword___FelSword_caster[data]))) ), unitid, s__FallingSword___FelSword_x[data], s__FallingSword___FelSword_y[data], 0.)


	if unitid == 'o008' then
		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(s__FallingSword___FelSword_caster[data]) / 3)
		call BlzSetUnitBaseDamage(u, GetHeroStr(s__FallingSword___FelSword_caster[data], true), 0)
if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__FallingSword___FelSword_caster[data]))])] then
call BlzSetUnitSkin(u, 'o00D')
endif
	endif

	if unitid == 'n01J' then

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(s__FallingSword___FelSword_caster[data]) / 2)
		call BlzSetUnitBaseDamage(u, ( GetHeroInt(s__FallingSword___FelSword_caster[data], true) * 3 ) + GetHeroStr(s__FallingSword___FelSword_caster[data], true) + ( GetHeroAgi(s__FallingSword___FelSword_caster[data], true) * 2 ), 0)
if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__FallingSword___FelSword_caster[data]))])] then
call BlzSetUnitSkin(u, 'n035')
endif
	endif

	if unitid == 'n01I' then

		call BlzSetUnitMaxHP(u, BlzGetUnitMaxHP(s__FallingSword___FelSword_caster[data]))
		call BlzSetUnitBaseDamage(u, ( GetHeroInt(s__FallingSword___FelSword_caster[data], true) ) + ( GetHeroStr(s__FallingSword___FelSword_caster[data], true) * 2 ), 0)
if IsCitGod[GetUnitUserData(LC[1 + GetPlayerId(GetOwningPlayer(s__FallingSword___FelSword_caster[data]))])] then
call BlzSetUnitSkin(u, 'n036')
endif
	endif

		

		call UnitApplyTimedLife(u, 'BTLF', ( 15. + ( GetHeroLevel(s__FallingSword___FelSword_caster[data]) * .1 ) + ( GetHeroStr(s__FallingSword___FelSword_caster[data], true) * .1 ) ) * .5)

		call SetWidgetLife(u, GetUnitState(u, UNIT_STATE_MAX_LIFE))

		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Doomsday.mdx", u, "origin"))
		call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Damnation Orange.mdx", u, "origin"))
set i=i - 1

endloop

set u2=null
set u=null
set t=null
endfunction


 
    function FallingSword___Actions takes nothing returns nothing
local integer data= s__FallingSword___FelSword__allocate()
local timer t=CreateTimer()

 
    set s__FallingSword___FelSword_caster[data]=GetTriggerUnit()
    set s__FallingSword___FelSword_x[data]=GetSpellTargetX()
    set s__FallingSword___FelSword_y[data]=GetSpellTargetY()
    set s__FallingSword___FelSword_lvl[data]=GetUnitAbilityLevel(s__FallingSword___FelSword_caster[data], FallingSword___SPELL_ID)

call DestroyEffect(AddSpecialEffect("war3mapImported\\Kingdom Come.mdx", s__FallingSword___FelSword_x[data], s__FallingSword___FelSword_y[data]))


    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
call TimerStart(t, .5, false, function FallingSword___Handler)


    
set t=null
    endfunction
    


        function FallingSword___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(FallingSword___SPELL_ID , function FallingSword___Actions)
    endfunction

// scope FallingSword ends
//===========================================================================
// Trigger: Impenetrable Fortress SFX
//===========================================================================
//TESH.scrollpos=32
//TESH.alwaysfold=0

// scope ImpenetrableFortress begins


        function s__ImpenetrableFortress___IFFX_destroy takes integer this returns nothing
call DestroyEffect(s__ImpenetrableFortress___IFFX_fx[this])
		set s__ImpenetrableFortress___IFFX_fx[this]=null
            call s__ImpenetrableFortress___IFFX_deallocate(this)
        endfunction
    
    function ImpenetrableFortress___Handler takes nothing returns nothing
    local timer t= GetExpiredTimer()
    local integer data= (LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) // INLINED!!
    
 

    call s__ImpenetrableFortress___IFFX_destroy(data)
    call ReleaseTimer(t)

	
    set t=null
    endfunction

    function ImpenetrableFortress___Actions takes nothing returns nothing
    local timer t
    local integer data= s__ImpenetrableFortress___IFFX__allocate()
    
    	set s__ImpenetrableFortress___IFFX_fx[data]=AddSpecialEffectTarget("war3mapImported\\Ubershield Autumn.mdx", GetTriggerUnit(), "origin")
call BlzSetSpecialEffectZ(s__ImpenetrableFortress___IFFX_fx[data], 175.)
call BlzSetSpecialEffectScale(s__ImpenetrableFortress___IFFX_fx[data], 3.)
    set t=(NewTimerEx(0)) // INLINED!!
    call SaveInteger(TimerUtils___ht, 0, GetHandleId((t )), ( data)) // INLINED!!
    call TimerStart(t, 15, false, function ImpenetrableFortress___Handler)
    
    set t=null
    endfunction
    
    
    function ImpenetrableFortress___OnInit takes nothing returns nothing
call RegisterSpellEffectEvent(ImpenetrableFortress___SPELL_ID , function ImpenetrableFortress___Actions)
    endfunction
// scope ImpenetrableFortress ends


//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    //Function not found: call InitTrig_II()
    //Function not found: call InitTrig_Z()
    //Function not found: call InitTrig_Roflcopter()
    //Function not found: call InitTrig_UnitInRect()
    //Function not found: call InitTrig_FearSystem()
    //Function not found: call InitTrig_ProgressBars_v2_1()
    //Function not found: call InitTrig_TimedLightning()
    //Function not found: call InitTrig_RegisterPlayerUnitEvent()
    //Function not found: call InitTrig_SpellEffectEvent()
    //Function not found: call InitTrig_Init_Some_Stuff()
    //Function not found: call InitTrig_Is_Terrain_Walkable()
    //Function not found: call InitTrig_NewBonus()
    //Function not found: call InitTrig_NewBonusUtils()
    //Function not found: call InitTrig_LSE_vJASS()
    //Function not found: call InitTrig_Item_Set()
    //Function not found: call InitTrig_Restored_Triggers()
    //Function not found: call InitTrig_TimerUtils()
    //Function not found: call InitTrig_SecretCodeLadyVashj()
    //Function not found: call InitTrig_Rat_Ranger()
    //Function not found: call InitTrig_Army_Ranger()
    //Function not found: call InitTrig_Useless_Ranger()
    //Function not found: call InitTrig_Rat_Thief()
    //Function not found: call InitTrig_Nzoth_Citadel_Copy()
    //Function not found: call InitTrig_ChomoAM()
    //Function not found: call InitTrig_QueenTyrael()
    //Function not found: call InitTrig_GrakeTank()
    //Function not found: call InitTrig_Custom_Skin_Illusions()
    //Function not found: call InitTrig_SecretCodeFallenOneDrop()
    //Function not found: call InitTrig_SecretCodeFallenOne()
    //Function not found: call InitTrig_SecretCodeLadyVashjDrop()
    //Function not found: call InitTrig_Ratty_Rage()
    //Function not found: call InitTrig_CustomFallenOne()
    //Function not found: call InitTrig_CustomBard()
    //Function not found: call InitTrig_CustomSkaar()
    //Function not found: call InitTrig_Mecha_Spikes()
    //Function not found: call InitTrig_Useless_Skaar()
    //Function not found: call InitTrig_Eye_of_the_Rat()
    //Function not found: call InitTrig_Tank_Grake_Learn()
    //Function not found: call InitTrig_Protect_Items()
    //Function not found: call InitTrig_Display_Index()
    //Function not found: call InitTrig_Fountain_Guardians()
    //Function not found: call InitTrig_Hero_Dummies()
    //Function not found: call InitTrig_Death_Zone()
    //Function not found: call InitTrig_Starting_Income()
    //Function not found: call InitTrig_Income()
    //Function not found: call InitTrig_Autopool_Waffle()
    //Function not found: call InitTrig_Pick_Aether_Construct()
    //Function not found: call InitTrig_Pick_Firelord()
    //Function not found: call InitTrig_Pick_Tritus()
    //Function not found: call InitTrig_Pick_Moloch()
    //Function not found: call InitTrig_Summon_Courier()
    //Function not found: call InitTrig_UnitCleanup()
    //Function not found: call InitTrig_Corruption()
    //Function not found: call InitTrig_Shopsystem()
    //Function not found: call InitTrig_ExampleTrigger()
    //Function not found: call InitTrig_Evasion_Mastery()
    //Function not found: call InitTrig_Combat_MasteryEvasion()
    //Function not found: call InitTrig_Glythides()
    //Function not found: call InitTrig_Charge()
    //Function not found: call InitTrig_Triple_Strike()
    //Function not found: call InitTrig_Nuclear_Option()
    //Function not found: call InitTrig_Spider_Poison()
    //Function not found: call InitTrig_Creep_Evasion_80()
    //Function not found: call InitTrig_Creep_Evasion_15()
    //Function not found: call InitTrig_Curse_Miss()
    //Function not found: call InitTrig_Always_Berserk()
    //Function not found: call InitTrig_SetPathing()
    //Function not found: call InitTrig_Leap()
    //Function not found: call InitTrig_Always_Leap()
    //Function not found: call InitTrig_Always_Leap_DD()
    //Function not found: call InitTrig_Rain_of_Fire()
    //Function not found: call InitTrig_TankUnstuck()
    //Function not found: call InitTrig_Always_Deathbolt()
    //Function not found: call InitTrig_Forest_Call()
    //Function not found: call InitTrig_Ranged_Damage_Reduction()
    //Function not found: call InitTrig_Ranged_Damage_Reduction_80()
    //Function not found: call InitTrig_Fel_Bolt()
    //Function not found: call InitTrig_Tree_AI()
    //Function not found: call InitTrig_Summon_Blood_Priestiss()
    //Function not found: call InitTrig_Blood_Berserk_Summon_Totem()
    //Function not found: call InitTrig_Corruptor_Fear()
    //Function not found: call InitTrig_FlyingEvasion()
    //Function not found: call InitTrig_Item_Evasion_25()
    //Function not found: call InitTrig_Item_Evasion_35()
    //Function not found: call InitTrig_Item_Evasion_40()
    //Function not found: call InitTrig_Item_Evasion_50()
    //Function not found: call InitTrig_Item_Evasion_75()
    //Function not found: call InitTrig_Excess_Lose_Corr()
    //Function not found: call InitTrig_Faustian_Demon_Health_Restoration()
    //Function not found: call InitTrig_DemonicHandEyeLoseCOrr()
    //Function not found: call InitTrig_DemonicMutilatorLoseCor()
    //Function not found: call InitTrig_TrueMutilator()
    //Function not found: call InitTrig_DemonicMutilatorLoseCorr()
    //Function not found: call InitTrig_DemonicEyeStickSwordBowLoseCOrr_Copy()
    //Function not found: call InitTrig_Demon_Carapace_Demonic_Offering()
    //Function not found: call InitTrig_Demon_Vessel_Demonic_Offering_Copy()
    //Function not found: call InitTrig_Item_Sets()
    //Function not found: call InitTrig_The_Witchs_Tithe()
    //Function not found: call InitTrig_Witchs_Tithe_Paid()
    //Function not found: call InitTrig_Eternitys_End()
    //Function not found: call InitTrig_Ragnaros()
    //Function not found: call InitTrig_Fear_Item()
    //Function not found: call InitTrig_AntiMagicCharges()
    //Function not found: call InitTrig_Prides_Downfall()
    //Function not found: call InitTrig_Wand_Courier_Punishment()
    //Function not found: call InitTrig_Losing_Item_Ragnas()
    //Function not found: call InitTrig_Losing_Item_Ragnarok()
    //Function not found: call InitTrig_Ragnarok()
    //Function not found: call InitTrig_CrucibleHeal()
    //Function not found: call InitTrig_SinisterJar()
    //Function not found: call InitTrig_NinjaRope()
    //Function not found: call InitTrig_Pacify()
    //Function not found: call InitTrig_Wrath()
    //Function not found: call InitTrig_Defend()
    //Function not found: call InitTrig_IndulgenceActive()
    //Function not found: call InitTrig_Indulgence_OnSummon()
    //Function not found: call InitTrig_Indulgence()
    //Function not found: call InitTrig_For_the_Cause()
    //Function not found: call InitTrig_LASEERRRRSSSSS()
    //Function not found: call InitTrig_ENDLASERCAST()
    //Function not found: call InitTrig_Soulreaver()
    //Function not found: call InitTrig_Rains_Of_Castamere()
    //Function not found: call InitTrig_Rainbow()
    //Function not found: call InitTrig_SavageStrikes()
    //Function not found: call InitTrig_Starlight_Sphere_Int_Gain()
    //Function not found: call InitTrig_Double_Strike()
    //Function not found: call InitTrig_Wargodbleed()
    //Function not found: call InitTrig_Skewer()
    //Function not found: call InitTrig_Searing_Aegis()
    //Function not found: call InitTrig_MalVladis_Pantheon()
    //Function not found: call InitTrig_MalVladis_Revelry()
    //Function not found: call InitTrig_Barbarism_Stacks()
    //Function not found: call InitTrig_Searing_Aegis_Buff()
    //Function not found: call InitTrig_Thunderous_Leap()
    //Function not found: call InitTrig_Eldritch_Touch()
    //Function not found: call InitTrig_Demonic_Lightning()
    //Function not found: call InitTrig_Felreaving()
    //Function not found: call InitTrig_Eldritch_Curse()
    //Function not found: call InitTrig_Chaos_Overwhelming()
    //Function not found: call InitTrig_Chaos_Overhelming_Bounty()
    //Function not found: call InitTrig_Diablerie_Stacks()
    //Function not found: call InitTrig_Vacuum_Burst()
    //Function not found: call InitTrig_Deaths_Favor()
    //Function not found: call InitTrig_Death_Bolt()
    //Function not found: call InitTrig_Combat_MasteryEvasionSkeles()
    //Function not found: call InitTrig_Evasion_Mastery_Skeles()
    //Function not found: call InitTrig_Display_Death_Stacks()
    //Function not found: call InitTrig_Nexus_Damage_Bonus()
    //Function not found: call InitTrig_Bard_Self_Grace()
    //Function not found: call InitTrig_Unnerviing_Symphony()
    //Function not found: call InitTrig_Flame_Turbine()
    //Function not found: call InitTrig_Everlasting_Flame()
    //Function not found: call InitTrig_Mark_of_Baal()
    //Function not found: call InitTrig_Mark_of_Baal_Manual()
    //Function not found: call InitTrig_Mark_of_Baal_Auto()
    //Function not found: call InitTrig_Mark_of_Ball_Learn()
    //Function not found: call InitTrig_Molten_Wave_Init()
    //Function not found: call InitTrig_Molten_Wave_Actions()
    //Function not found: call InitTrig_All_Shall_Burn()
    //Function not found: call InitTrig_Burning_Puddles()
    //Function not found: call InitTrig_FLAMELASER()
    //Function not found: call InitTrig_Display_Fervor_Stacks()
    //Function not found: call InitTrig_Poison()
    //Function not found: call InitTrig_Enchant_Weapons()
    //Function not found: call InitTrig_CalltoArmsTaunt()
    //Function not found: call InitTrig_CalltoArms()
    //Function not found: call InitTrig_Enforce_Taxes()
    //Function not found: call InitTrig_Combat_Tactics()
    //Function not found: call InitTrig_Pierce_The_Veil()
    //Function not found: call InitTrig_Shattered_Veil_On_Kill()
    //Function not found: call InitTrig_Shattered_Veil_On_Summon()
    //Function not found: call InitTrig_Display_Aether_Stacks()
    //Function not found: call InitTrig_Aether_Core_On_Hit()
    //Function not found: call InitTrig_Aether_Bolt()
    //Function not found: call InitTrig_Aether_Infusion()
    //Function not found: call InitTrig_Aether_Flare()
    //Function not found: call InitTrig_Aethereal_Mastery_Active()
    call InitTrig_Discharge_Aether()
    //Function not found: call InitTrig_Aether_Core()
    //Function not found: call InitTrig_Aethereal_Mastery()
    //Function not found: call InitTrig_SplashingPuddles()
    //Function not found: call InitTrig_Drown()
    //Function not found: call InitTrig_GluttonyPAS()
    //Function not found: call InitTrig_TemperancePAS()
    //Function not found: call InitTrig_TemperanceACT()
    //Function not found: call InitTrig_GluttyACT()
    //Function not found: call InitTrig_Execute_Old_Copy()
    //Function not found: call InitTrig_Voracity()
    //Function not found: call InitTrig_Happy_Hour()
    //Function not found: call InitTrig_Hallucinations()
    //Function not found: call InitTrig_Spell_Steal_Prep()
    //Function not found: call InitTrig_Spell_Steal()
    //Function not found: call InitTrig_Thief_Collision()
    //Function not found: call InitTrig_Venom()
    //Function not found: call InitTrig_Sinful_Sinphony()
    //Function not found: call InitTrig_swag()
    //Function not found: call InitTrig_Undying_Flame()
    //Function not found: call InitTrig_Bloodbath()
    //Function not found: call InitTrig_Blood_Hydrant()
    //Function not found: call InitTrig_NissaBinding()
    //Function not found: call InitTrig_Mass_Charm_Empath()
    //Function not found: call InitTrig_Wild_Haunt()
    //Function not found: call InitTrig_AoE_DoT()
    //Function not found: call InitTrig_FearGuyUlti()
    //Function not found: call InitTrig_FearStacks()
    //Function not found: call InitTrig_FearUlti4Illusion()
    //Function not found: call InitTrig_AoEFearSpell()
    //Function not found: call InitTrig_Chatadruslight()
    //Function not found: call InitTrig_Righteous_Wrath_Cleave()
    //Function not found: call InitTrig_Skaar_Ulti_V2()
    //Function not found: call InitTrig_Decay()
    //Function not found: call InitTrig_Soldiers_of_Fortune()
    //Function not found: call InitTrig_ArcaneDrain()
    //Function not found: call InitTrig_LuckyShot()
    //Function not found: call InitTrig_Lightningbolt()
    //Function not found: call InitTrig_Draw_A_Bead()
    //Function not found: call InitTrig_Paladin_Taunt()
    //Function not found: call InitTrig_Eternal_Battlethirst_Active()
    //Function not found: call InitTrig_MercPaladinHeal()
    //Function not found: call InitTrig_Apple_of_Eden()
    //Function not found: call InitTrig_Faustian_Bargain()
    //Function not found: call InitTrig_Reckless_Greed()
    //Function not found: call InitTrig_Sinister_Creed()
    //Function not found: call InitTrig_Sanctified_Armor()
    //Function not found: call InitTrig_Eternal_BattlethirstPassive()
    //Function not found: call InitTrig_Recklessness_Taunt()
    //Function not found: call InitTrig_DesolationFear()
    //Function not found: call InitTrig_TerrorCrush()
    //Function not found: call InitTrig_Void_Tendrils()
    //Function not found: call InitTrig_Pick_Up_Items_Terror()
    //Function not found: call InitTrig_Bless()
    //Function not found: call InitTrig_Blood_Dance_Damage_Bonus()
    //Function not found: call InitTrig_Earthsplitter()
    //Function not found: call InitTrig_PulverizeCDR()
    //Function not found: call InitTrig_DemonSpawners()
    //Function not found: call InitTrig_Reign_of_Death()
    //Function not found: call InitTrig_Vicious_Vice()
    //Function not found: call InitTrig_Infernal_Martyr()
    //Function not found: call InitTrig_Sword_of_the_Legion()
    //Function not found: call InitTrig_Impenetrable_Fortress_SFX()
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute(gg_trg_Summon_Courier)
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation(Player(0), 0)
    call ForcePlayerStartLocation(Player(0), 0)
    call SetPlayerColor(Player(0), ConvertPlayerColor(0))
    call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(0), false)
    call SetPlayerController(Player(0), MAP_CONTROL_USER)

    // Player 1
    call SetPlayerStartLocation(Player(1), 1)
    call ForcePlayerStartLocation(Player(1), 1)
    call SetPlayerColor(Player(1), ConvertPlayerColor(1))
    call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(1), false)
    call SetPlayerController(Player(1), MAP_CONTROL_USER)

    // Player 2
    call SetPlayerStartLocation(Player(2), 2)
    call ForcePlayerStartLocation(Player(2), 2)
    call SetPlayerColor(Player(2), ConvertPlayerColor(2))
    call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(2), false)
    call SetPlayerController(Player(2), MAP_CONTROL_USER)

    // Player 3
    call SetPlayerStartLocation(Player(3), 3)
    call ForcePlayerStartLocation(Player(3), 3)
    call SetPlayerColor(Player(3), ConvertPlayerColor(3))
    call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(3), false)
    call SetPlayerController(Player(3), MAP_CONTROL_USER)

    // Player 4
    call SetPlayerStartLocation(Player(4), 4)
    call ForcePlayerStartLocation(Player(4), 4)
    call SetPlayerColor(Player(4), ConvertPlayerColor(4))
    call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(4), false)
    call SetPlayerController(Player(4), MAP_CONTROL_USER)

    // Player 5
    call SetPlayerStartLocation(Player(5), 5)
    call ForcePlayerStartLocation(Player(5), 5)
    call SetPlayerColor(Player(5), ConvertPlayerColor(5))
    call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(5), false)
    call SetPlayerController(Player(5), MAP_CONTROL_USER)

    // Player 6
    call SetPlayerStartLocation(Player(6), 6)
    call ForcePlayerStartLocation(Player(6), 6)
    call SetPlayerColor(Player(6), ConvertPlayerColor(6))
    call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(6), false)
    call SetPlayerController(Player(6), MAP_CONTROL_USER)

    // Player 7
    call SetPlayerStartLocation(Player(7), 7)
    call ForcePlayerStartLocation(Player(7), 7)
    call SetPlayerColor(Player(7), ConvertPlayerColor(7))
    call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(7), false)
    call SetPlayerController(Player(7), MAP_CONTROL_USER)

    // Player 8
    call SetPlayerStartLocation(Player(8), 8)
    call ForcePlayerStartLocation(Player(8), 8)
    call SetPlayerColor(Player(8), ConvertPlayerColor(8))
    call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(8), false)
    call SetPlayerController(Player(8), MAP_CONTROL_USER)

    // Player 9
    call SetPlayerStartLocation(Player(9), 9)
    call ForcePlayerStartLocation(Player(9), 9)
    call SetPlayerColor(Player(9), ConvertPlayerColor(9))
    call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(9), false)
    call SetPlayerController(Player(9), MAP_CONTROL_USER)

    // Player 10
    call SetPlayerStartLocation(Player(10), 10)
    call ForcePlayerStartLocation(Player(10), 10)
    call SetPlayerColor(Player(10), ConvertPlayerColor(10))
    call SetPlayerRacePreference(Player(10), RACE_PREF_UNDEAD)
    call SetPlayerRaceSelectable(Player(10), false)
    call SetPlayerController(Player(10), MAP_CONTROL_COMPUTER)

    // Player 11
    call SetPlayerStartLocation(Player(11), 11)
    call ForcePlayerStartLocation(Player(11), 11)
    call SetPlayerColor(Player(11), ConvertPlayerColor(11))
    call SetPlayerRacePreference(Player(11), RACE_PREF_UNDEAD)
    call SetPlayerRaceSelectable(Player(11), false)
    call SetPlayerController(Player(11), MAP_CONTROL_COMPUTER)

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_012
    call SetPlayerTeam(Player(0), 0)
    call SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(1), 0)
    call SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(2), 0)
    call SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(3), 0)
    call SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(4), 0)
    call SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(10), 0)
    call SetPlayerState(Player(10), PLAYER_STATE_ALLIED_VICTORY, 1)

    //   Allied
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(0), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(1), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(2), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
    call SetPlayerAllianceStateAllyBJ(Player(3), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(4), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(0), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(1), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(2), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(3), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(4), true)

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(0), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(1), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(2), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(4), true)
    call SetPlayerAllianceStateVisionBJ(Player(3), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(4), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(0), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(1), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(2), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(3), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(4), true)

    // Force: TRIGSTR_013
    call SetPlayerTeam(Player(5), 1)
    call SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(6), 1)
    call SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(7), 1)
    call SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(8), 1)
    call SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(9), 1)
    call SetPlayerState(Player(9), PLAYER_STATE_ALLIED_VICTORY, 1)
    call SetPlayerTeam(Player(11), 1)
    call SetPlayerState(Player(11), PLAYER_STATE_ALLIED_VICTORY, 1)

    //   Allied
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(5), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(6), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(7), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(5), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(6), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(7), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(9), true)

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(5), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(6), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(7), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(5), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(6), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(7), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(9), true)

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount(0, 9)
    call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(1, 9)
    call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(2, 9)
    call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(3, 9)
    call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(4, 9)
    call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(5, 9)
    call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(6, 9)
    call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(7, 9)
    call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(8, 9)
    call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(9, 9)
    call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
local weathereffect we
local trigger X_X
local trigger t
local integer i
local unit AXR
local trigger AOR
//local trigger ARR
local integer DGE
local integer DHE
local version v
local integer DOE
local integer Z7X
local region r

call SetCameraBounds(- 10240. + GetCameraMargin(CAMERA_MARGIN_LEFT), - 7680. + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 10240. - GetCameraMargin(CAMERA_MARGIN_RIGHT), 8192. - GetCameraMargin(CAMERA_MARGIN_TOP), - 10240. + GetCameraMargin(CAMERA_MARGIN_LEFT), 8192. - GetCameraMargin(CAMERA_MARGIN_TOP), 10240. - GetCameraMargin(CAMERA_MARGIN_RIGHT), - 7680. + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCDalaran\\DNCDalaranTerrain\\DNCDalaranTerrain.mdl", "Environment\\DNC\\DNCDalaran\\DNCDalaranUnit\\DNCDalaranUnit.mdl")
set we=AddWeatherEffect(Rect(- 10240., - 8192., 10240., 8192.), 'LRma')
call EnableWeatherEffect(we, true)
call NewSoundEnvironment("Default")
call SetAmbientDaySound("IceCrownDay")
call SetAmbientNightSound("IceCrownNight")
call SetMapMusic("Music", true, 0)
set GY=CreateSound("Sound\\Interface\\Hint.wav", false, false, false, 10, 10, "DefaultEAXON")
call SetSoundParamsFromLabel(GY, "Hint")
call SetSoundDuration(GY, 2006)
set HY=CreateSound("Sound\\Interface\\GoodJob.wav", false, false, false, 10, 10, "")
call SetSoundParamsFromLabel(HY, "GoodJob")
call SetSoundDuration(HY, 2548)
set JY=CreateSound("Sound\\Interface\\Warning.wav", false, false, false, 10, 10, "")
call SetSoundParamsFromLabel(JY, "Warning")
call SetSoundDuration(JY, 1904)
set KY=CreateSound("Abilities\\Spells\\Other\\ANsa\\SacrificeUnit.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(KY, "SacrificeUnit")
call SetSoundDuration(KY, 2693)
set LY=CreateSound("Units\\Orc\\HeroBladeMaster\\CriticalStrike.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(LY, "CriticalStrike")
call SetSoundDuration(LY, 1962)
set MY=CreateSound("Abilities\\Spells\\Other\\StormEarthFire\\PandarenUltimate.wav", false, true, true, 25, 10, "SpellsEAX")
call SetSoundParamsFromLabel(MY, "StormEarthFireSound")
call SetSoundDuration(MY, 3251)
call SetSoundPitch(MY, 1.4)
set PY=CreateSound("Abilities\\Spells\\Undead\\ReviveUndead\\ReviveUndead.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(PY, "ReviveUndead")
call SetSoundDuration(PY, 3623)
set QY=CreateSound("Abilities\\Spells\\NightElf\\FaerieFire\\FaerieFireLaunch1.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(QY, "FaerieFire")
call SetSoundDuration(QY, 2067)
set SY=CreateSound("Abilities\\Spells\\Orc\\LightningBolt\\LightningBolt.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(SY, "LightningBolt")
call SetSoundDuration(SY, 2136)
set TY=CreateSound("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.wav", false, true, true, 10, 10, "SpellsEAX")
call SetSoundParamsFromLabel(TY, "Tranquility")
call SetSoundDuration(TY, 3572)
call FRX()
set DY=CreateCameraSetup()
call CameraSetupSetField(DY, CAMERA_FIELD_ZOFFSET, .0, .0)
call CameraSetupSetField(DY, CAMERA_FIELD_ROTATION, 90.3, .0)
call CameraSetupSetField(DY, CAMERA_FIELD_ANGLE_OF_ATTACK, 327., .0)
call CameraSetupSetField(DY, CAMERA_FIELD_TARGET_DISTANCE, 910.6, .0)
call CameraSetupSetField(DY, CAMERA_FIELD_ROLL, .0, .0)
call CameraSetupSetField(DY, CAMERA_FIELD_FIELD_OF_VIEW, 90., .0)
call CameraSetupSetField(DY, CAMERA_FIELD_FARZ, 10000., .0)
call CameraSetupSetDestPosition(DY, 3.9, 5842.8, .0)
set FY=CreateCameraSetup()
call CameraSetupSetField(FY, CAMERA_FIELD_ZOFFSET, .0, .0)
call CameraSetupSetField(FY, CAMERA_FIELD_ROTATION, 90., .0)
call CameraSetupSetField(FY, CAMERA_FIELD_ANGLE_OF_ATTACK, 308.4, .0)
call CameraSetupSetField(FY, CAMERA_FIELD_TARGET_DISTANCE, 2500., .0)
call CameraSetupSetField(FY, CAMERA_FIELD_ROLL, .0, .0)
call CameraSetupSetField(FY, CAMERA_FIELD_FIELD_OF_VIEW, 90., .0)
call CameraSetupSetField(FY, CAMERA_FIELD_FARZ, 10000., .0)
call CameraSetupSetDestPosition(FY, - 5.1, 7808.7, .0)
call FEX()
call FXX()
call FVX()
call ConfigureNeutralVictim()
set CXE=Filter(function DDE)
set filterIssueHauntOrderAtLocBJ=Filter(function IssueHauntOrderAtLocBJFilter)
set filterEnumDestructablesInCircleBJ=Filter(function CFE)
set filterGetUnitsInRectOfPlayer=Filter(function GetUnitsInRectOfPlayerFilter)
set filterGetUnitsOfTypeIdAll=Filter(function GetUnitsOfTypeIdAllFilter)
set filterGetUnitsOfPlayerAndTypeId=Filter(function GetUnitsOfPlayerAndTypeIdFilter)
set filterMeleeTrainedUnitIsHeroBJ=Filter(function MeleeTrainedUnitIsHeroBJFilter)
set filterLivingPlayerUnitsOfTypeId=Filter(function LivingPlayerUnitsOfTypeIdFilter)
set DGE=0
loop
exitwhen DGE == 16
set bj_FORCE_PLAYER[DGE]=CreateForce()
call ForceAddPlayer(bj_FORCE_PLAYER[DGE], Player(DGE))
set DGE=DGE + 1
endloop
set bj_FORCE_ALL_PLAYERS=CreateForce()
call ForceEnumPlayers(bj_FORCE_ALL_PLAYERS, null)
set bj_cineModePriorSpeed=GetGameSpeed()
set bj_cineModePriorFogSetting=IsFogEnabled()
set bj_cineModePriorMaskSetting=IsFogMaskEnabled()
set DGE=0
loop
exitwhen DGE >= bj_MAX_QUEUED_TRIGGERS
set bj_queuedExecTriggers[DGE]=null
set bj_queuedExecUseConds[DGE]=false
set DGE=DGE + 1
endloop
set bj_isSinglePlayer=false
set DHE=0
set DGE=0
loop
exitwhen DGE >= 12
if ( GetPlayerController(Player(DGE)) == MAP_CONTROL_USER and GetPlayerSlotState(Player(DGE)) == PLAYER_SLOT_STATE_PLAYING ) then
set DHE=DHE + 1
endif
set DGE=DGE + 1
endloop
set bj_isSinglePlayer=( DHE == 1 )
set bj_rescueSound=CreateSoundFromLabel("Rescue", false, false, false, 10000, 10000)
set bj_questDiscoveredSound=CreateSoundFromLabel("QuestNew", false, false, false, 10000, 10000)
set bj_questUpdatedSound=CreateSoundFromLabel("QuestUpdate", false, false, false, 10000, 10000)
set bj_questCompletedSound=CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
set bj_questFailedSound=CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
set bj_questHintSound=CreateSoundFromLabel("Hint", false, false, false, 10000, 10000)
set bj_questSecretSound=CreateSoundFromLabel("SecretFound", false, false, false, 10000, 10000)
set bj_questItemAcquiredSound=CreateSoundFromLabel("ItemReward", false, false, false, 10000, 10000)
set bj_questWarningSound=CreateSoundFromLabel("Warning", false, false, false, 10000, 10000)
set bj_victoryDialogSound=CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
set bj_defeatDialogSound=CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
call DelayedSuspendDecayCreate()
set v=VersionGet()
if ( v == VERSION_REIGN_OF_CHAOS ) then
set bj_MELEE_MAX_TWINKED_HEROES=bj_MELEE_MAX_TWINKED_HEROES_V0
else
set bj_MELEE_MAX_TWINKED_HEROES=bj_MELEE_MAX_TWINKED_HEROES_V1
endif
call InitQueuedTriggers()
call InitRescuableBehaviorBJ()
call InitDNCSounds()
call InitMapRects()
call InitSummonableCaps()
set DOE=0
loop
set bj_stockAllowedPermanent[DOE]=false
set bj_stockAllowedCharged[DOE]=false
set bj_stockAllowedArtifact[DOE]=false
set DOE=DOE + 1
exitwhen DOE > 10
endloop
call SetAllItemTypeSlots(11)
call SetAllUnitTypeSlots(11)
set bj_stockUpdateTimer=CreateTimer()
call TimerStart(bj_stockUpdateTimer, bj_STOCK_RESTOCK_INITIAL_DELAY, false, function DBE)
set bj_stockItemPurchased=CreateTrigger()
call TriggerRegisterPlayerUnitEvent(bj_stockItemPurchased, Player(PLAYER_NEUTRAL_PASSIVE), EVENT_PLAYER_UNIT_SELL_ITEM, null)
call TriggerAddAction(bj_stockItemPurchased, function RemovePurchasedItem)
call DetectGameStarted()
call ExecuteFunc("AIR")
call ExecuteFunc("L5E")
call ExecuteFunc("M7E")
call ExecuteFunc("PGE")
call ExecuteFunc("P_E")
call ExecuteFunc("QQE")
call ExecuteFunc("QSE")
call ExecuteFunc("Q2E")
call ExecuteFunc("Q4E")
call ExecuteFunc("SRE")
call ExecuteFunc("S8E")
call ExecuteFunc("T9E")
call ExecuteFunc("UJE")
call ExecuteFunc("W8E")
call ExecuteFunc("YNE")
call ExecuteFunc("ZVE")
call ExecuteFunc("XZX")
call ExecuteFunc("OXX")
call ExecuteFunc("OQX")
call ExecuteFunc("RJX")
call ExecuteFunc("RLX")
call ExecuteFunc("RWX")
call ExecuteFunc("R0X")
call ExecuteFunc("INX")
call ExecuteFunc("IFX")
call ExecuteFunc("ILX")
call ExecuteFunc("IUX")
call ExecuteFunc("I_X")
call ExecuteFunc("I3X")
call ExecuteFunc("AVX")
call ExecuteFunc("AIX")
call ExecuteFunc("AFX")
call ExecuteFunc("ALX")
call ExecuteFunc("ATX")
call ExecuteFunc("A1X")
call ExecuteFunc("A5X")
call ExecuteFunc("A9X")
call ExecuteFunc("NRX")
call ExecuteFunc("NKX")
call ExecuteFunc("N2X")
call ExecuteFunc("N5X")
call ExecuteFunc("N9X")
call ExecuteFunc("BNX")
call ExecuteFunc("BYX")
call ExecuteFunc("B_X")
call ExecuteFunc("COX")
call ExecuteFunc("CMX")
call ExecuteFunc("C4X")
call ExecuteFunc("DIX")
call ExecuteFunc("DNX")
call ExecuteFunc("DBX")
call ExecuteFunc("DFX")
call ExecuteFunc("DQX")
call ExecuteFunc("DTX")
call ExecuteFunc("DWX")



call ExecuteFunc("jasshelper__initstructs28509468")
call ExecuteFunc("IsTerrainWalkable__init")
call ExecuteFunc("SetPathing__OnInit")
call ExecuteFunc("TimerUtils___init")
call ExecuteFunc("Sample__init")
call InitializeCitadelVariables__OnInit()
call SecretCodeRevealLadyVashj___OnInit()
call RatRanger___OnInit()
call GreenRanger___OnInit()
call UselessRanger___OnInit()
call RatThief___OnInit()
call NzothCit___OnInit()
call ChonkAM___OnInit()
call QobTyrael___OnInit()
call GrakeTank___OnInit()
call CustomSkinIllusions___OnInit()
call SecretCodeFallenOneDrop__OnInit()
call SecretCodeRevealFallenOne__OnInit()
call SecretCodeLadyVashjDrop__OnInit()
call RegisterSpellEffectEvent(RattyRage__SPELL_ID , function RattyRage__Actions) // INLINED!!
call CustomFallenOne__OnInit()
call CustomBard__OnInit()
call MechaSkaar__OnInit()
call SpikeDMech__OnInit()
call UselessSkaar__OnInit()
call EyeoftheRat__OnInit()
call TankGrakeLearn__OnInit()
call ProtectItems__OnInit()
call DisplayIndex__OnInit()
call SpawnTheseFountains__OnInit()
call HeroDummyInit__OnInit()
call NoMansLand__OnInit()
call StartingIncome__OnInit()
call Autopool__OnInit()
call AetherConstructSelect__OnInit()
call FirelordSelect__OnInit()
call TritusSelect__OnInit()
call MolochSelect__OnInit()
call SummonCourier__OnInit()
call UnitCleanup__OnInit()
call Corruption__OnInit()
call EvasionMastery__OnInit()
call CombatMasteryEvasion__OnInit()
call RegisterSpellEffectEvent('A03X' , function GlythidesGift__Conditions) // INLINED!!
call RegisterSpellEffectEvent(Charge__SPELL_ID , function Charge__Actions) // INLINED!!
call TripleStrike__OnInit()
call RegisterSpellEffectEvent(NuclearOption__SPELL_ID , function NuclearOption__Actions) // INLINED!!
call CreepEvasion80__OnInit()
call CreepEvasion15__OnInit()
call CurseMiss__OnInit()
call AlwaysBerserk__OnInit()
call RegisterSpellEffectEvent('A0K9' , function Leapy__Actions) // INLINED!!
call AlwaysLeap2__OnInit()
call AlwaysLeapTwice__OnInit()
call RegisterSpellEffectEvent(RainOfFireWave21__SPELL_ID , function RainOfFireWave21__Actions) // INLINED!!
call TankAntistuck__OnInit()
call AlwaysDeathBolt__OnInit()
call ForestCall__Init()
call RangedDamageReduction__OnInit()
call RangedDamageReduction80__OnInit()
call FelBolt__OnInit()
call TreeAI__OnInit()
call RegisterSpellEffectEvent(SummonBloodPriestess__SPELL_ID , function SummonBloodPriestess__Actions) // INLINED!!
call RegisterSpellEffectEvent('A0KQ' , function SummonBloodTotem__Actions) // INLINED!!
call CorruptorFear__OnInit()
call FlyingEvasion__OnInit()
call ItemEvasion25__OnInit()
call ItemEvasion35__OnInit()
call ItemEvasion40__OnInit()
call ItemEvasion50__OnInit()
call ItemEvasion75__OnInit()
call ExcessLoseCorr__OnInit()
call FaustianHeal__OnInit()
call DemonicHandLoseCorr__OnInit()
call DemonicHandLoseCorr2__OnInit()
call DemonicHandLoseCorr3__OnInit()
call DemonicMutilatorsLoseCorr__OnInit()
call DemonicMutilatorLoseCorr__OnInit()
call RegisterSpellEffectEvent(DemonicOffering__SPELL_ID , function DemonicOffering__Actions) // INLINED!!
call RegisterSpellEffectEvent(DemonicOfferingVessel__SPELL_ID , function DemonicOfferingVessel__Actions) // INLINED!!
call ItemSetDemo__Init()
call RegisterSpellEffectEvent(TheWitchsTithe__SPELL_ID , function TheWitchsTithe__Actions) // INLINED!!
call WitchsTithePaid__OnInit()
call RegisterSpellEffectEvent(EternitysEnd__SPELL_ID , function EternitysEnd__Actions) // INLINED!!
call Ragnaros__OnInit()
call RegisterSpellEffectEvent('A0CX' , function FearItem__Actions) // INLINED!!
call AntiMagicCharges__OnInit()
call RegisterSpellEffectEvent('A0B8' , function PDownfall__PridesDownfallFunc) // INLINED!!
call RegisterSpellEffectEvent('A04G' , function WandCourierPunishment__Conditions) // INLINED!!
call LoseRagnas__OnInit()
call LoseRagnok__OnInit()
call Ragnarok__OnInit()
call CrucibleHeal__OnInit()
call SinisterJar__OnInit()
call NinjaRope__InitTrig()
call Pacify__OnInit()
call RegisterSpellEffectEvent('A0FN' , function WrathActive__Actions) // INLINED!!
call Defend__OnInit()
call RegisterSpellEffectEvent('A0DR' , function IndulgenceActive__Actions) // INLINED!!
call IndulgenceOnSumm__OnInit()
call Indulgence__OnInit()
call RegisterSpellEffectEvent('A0FQ' , function ForTheCause__Actions) // INLINED!!
call RegisterSpellEffectEvent(LAsers__SPELL_ID , function LAsers__Actions) // INLINED!!
call EndLaserCast__OnInit()
call Soulrend__OnInit()
call Rains__OnInit()
call Rainbow__OnInit()
call SavageStrikes__OnInit()
call StarlightInt__OnInit()
call DoubleStrike__OnInit()
call BleedingSpears__OnInit()
call SkewerA__OnInit()
call SearingAegis__OnInit()
call RegisterSpellEffectEvent(MalVladisPantheon__SPELL_ID , function MalVladisPantheon__Actions) // INLINED!!
call MalVladisRevelry__OnInit()
call Barbarism__OnInit()
call RegisterSpellEffectEvent(SearingAegisActive__ABIL_ID , function SearingAegisActive__OnSpell) // INLINED!!
call RegisterSpellEffectEvent('A0NH' , function WSLeapy__Actions) // INLINED!!
call EldritchCurse__OnInit()
call DemonicLightning__OnInit()
call RegisterSpellEffectEvent(Felreaving__SPELL_ID , function Felreaving__Actions) // INLINED!!
call RegisterSpellEffectEvent(EldCurse__SPELL_ID , function EldCurse__Actions) // INLINED!!
call ChaosOverwhelming__OnInit()
call ChaosBounty__OnInit()
call Diablerie__OnInit()
call RegisterSpellEffectEvent(VacuumBurst__SPELL_ID , function VacuumBurst__onCast) // INLINED!!
call DeathsFavor__OnInit()
call DeathBolt__OnInit()
call CombatMasteryEvasionSkeles__OnInit()
call EvasionMasterySkeleton__OnInit()
call DeathStacks__OnInit()
call RegisterSpellEffectEvent(NexusDamageBonus__SPELL_ID , function NexusDamageBonus__Actions) // INLINED!!
call RegisterSpellEffectEvent(BardSelfGrace__SPELL_ID , function BardSelfGrace__Actions) // INLINED!!
call RegisterSpellEffectEvent(UnnervingSymphony__SPELL_ID , function UnnervingSymphony__Actions) // INLINED!!
call RegisterSpellEffectEvent(FlameTurbine__SPELL_ID , function FlameTurbine__Actions) // INLINED!!
call RegisterSpellEffectEvent(EverlastingFlame__SPELL_ID , function EverlastingFlame__Actions) // INLINED!!
call RegisterSpellEffectEvent(MarkofBaal__SPELL_ID , function MarkofBaal__Actions) // INLINED!!
call RegisterSpellEffectEvent(FlameRuneManual__SPELL_ID , function FlameRuneManual__Actions) // INLINED!!
call RegisterSpellEffectEvent(FlameRuneAuto__SPELL_ID , function FlameRuneAuto__Actions) // INLINED!!
call MarkofBaalLearn__OnInit()
call RegisterSpellEffectEvent(MoltenWaveCast__SPELL_ID , function MoltenWaveCast__Actions) // INLINED!!
call MoltenWaveActions__OnInit()
call ALLSHALLBURN__OnInit()
call PuddleBurn__OnInit()
call FlamingLaser__OnInit()
call FervorStacks__OnInit()
call ToxiaPoison__OnInit()
call RegisterSpellEffectEvent(EnchantWeapons__SPELL_ID , function EnchantWeapons__Actions) // INLINED!!
call CalltoArmsTaunt__OnInit()
call RegisterSpellEffectEvent(CalltoArms__SPELL_ID , function CalltoArms__Actions) // INLINED!!
call EnforceTaxes__OnInit()
call RegisterSpellEffectEvent(EnforcerStrengthBuff__SPELL_ID , function EnforcerStrengthBuff__DP1) // INLINED!!
call RegisterSpellEffectEvent(PiercetheVeil__SPELL_ID , function PiercetheVeil__Actions) // INLINED!!
call ShatteredVeil2__OnInit()
call ShatteredVeil3__OnInit()
call AetherStacks__OnInit()
call AetherShot__OnInit()
call ManaBolt__OnInit()
call RegisterSpellEffectEvent(AetherInfusion__SPELL_ID , function AetherInfusion__Actions) // INLINED!!
call RegisterSpellEffectEvent(AetherFlare__SPELL_ID , function AetherFlare__Actions) // INLINED!!
call RegisterSpellEffectEvent(AetherealActive__CAST_ID , function AetherealActive__OnSpell) // INLINED!!
call InitTrig_Discharge_Aether()
call Ascension__OnInit()
call AetherealMastery__OnInit()
call PuddleSplash__OnInit()
call Drown__OnInit()
call GluttonyPas__OnInit()
call TemperancePas__OnInit()
call RegisterSpellEffectEvent(TemperanceA__SPELL_ID , function TemperanceA__Actions) // INLINED!!
call RegisterSpellEffectEvent(GluttonyA__SPELL_ID , function GluttonyA__Actions) // INLINED!!
call RegisterSpellEffectEvent(Execute__SPELL_ID , function Execute__OnSpell) // INLINED!!
call Voracity__OnInit()
call RegisterSpellEffectEvent(HappyHour__SPELL_ID , function HappyHour__Actions) // INLINED!!
call Hallucinations__OnInit()
call SpellStealPrep__OnInit()
call RegisterSpellEffectEvent(SpellSteal__SPELL_ID , function SpellSteal__Actions) // INLINED!!
call ThiefCollision__OnInit()
call ThiefIllusVenom__OnInit()
call SinfulPassive__OnInit()
call ThiefStacks__OnInit()
call UndyingFlame__OnInit()
call RegisterSpellEffectEvent(Bloodbath__SPELL_ID , function Bloodbath__Actions) // INLINED!!
call RegisterSpellEffectEvent(BloodHydrant__SPELL_ID , function BloodHydrant__Actions) // INLINED!!
call RegisterSpellEffectEvent(NissaBinding__SPELL_ID , function NissaBinding__Actions) // INLINED!!
call RegisterSpellEffectEvent(MassCharm__SPELL_ID , function MassCharm__Actions) // INLINED!!
call RegisterSpellEffectEvent(AoEFearDoT__SPELL_ID , function AoEFearDoT__Actions) // INLINED!!
call RegisterSpellEffectEvent(FearUltimate__SPELL_ID , function FearUltimate__Actions) // INLINED!!
call RegisterSpellEffectEvent(ChatatadrusLight__SPELL_ID , function ChatatadrusLight__Actions) // INLINED!!
call RegisterSpellEffectEvent(RighteousWrath___SPELL_ID , function RighteousWrath___DP1) // INLINED!!
call RegisterSpellEffectEvent(Devastate___SPELL_ID , function Devastate___Actions) // INLINED!!
call RegisterSpellEffectEvent(SoldiersofFortune___ABIL_ID , function SoldiersofFortune___OnSpell) // INLINED!!
call ArcaneDrain___OnInit()
call LuckyShot___OnInit()
call LightningBolt___OnInit()
call RegisterSpellEffectEvent(DrawABead___SPELL_ID , function DrawABead___Actions) // INLINED!!
call RegisterSpellEffectEvent(PaladinTaunt___SPELL_ID , function PaladinTaunt___Actions) // INLINED!!
call RegisterSpellEffectEvent(EternalBattlethirstActive___ABIL_ID , function EternalBattlethirstActive___OnSpell) // INLINED!!
call RegisterSpellEffectEvent(PaladinHeal___ABIL_ID , function PaladinHeal___OnSpell) // INLINED!!
call RegisterSpellEffectEvent(AppleofEden___ABIL_ID , function AppleofEden___OnSpell) // INLINED!!
call FaustianBargain___OnInit()
call RegisterSpellEffectEvent(RecklessGreed___ABIL_ID , function RecklessGreed___OnSpell) // INLINED!!
call SinisterCreed___OnInit()
call SanctifiedArmor___OnInit()
call EternalBattlethirstPas___OnInit()
call RegisterSpellEffectEvent(RecklessnessTaunt___SPELL_ID , function RecklessnessTaunt___Actions) // INLINED!!
call RegisterSpellEffectEvent(TerrorCrush___SPELL_ID , function TerrorCrush___Actions) // INLINED!!
call RegisterSpellEffectEvent(VoidShackles___SPELL_ID , function VoidShackles___Actions) // INLINED!!
call RegisterSpellEffectEvent(TerrorPickUpItems___SPELL_ID , function TerrorPickUpItems___Actions) // INLINED!!
call RegisterSpellEffectEvent(Bless___SPELL_ID , function Bless___Actions) // INLINED!!
call RegisterSpellEffectEvent(BloodDanceDamageBonus___SPELL_ID , function BloodDanceDamageBonus___Actions) // INLINED!!
call RegisterSpellEffectEvent(Earthsplitter___SPELL_ID , function Earthsplitter___Actions) // INLINED!!
call PulverizeCDR___OnInit()
call RegisterSpellEffectEvent(DemonSpawn___SPELL_ID , function DemonSpawn___Actions) // INLINED!!
call RegisterSpellEffectEvent(ReignofDeath___SPELL_ID , function ReignofDeath___Actions) // INLINED!!
call RegisterSpellEffectEvent(ViciousVice___SPELL_ID , function ViciousVice___Actions) // INLINED!!
call InfernalMartyr___OnInit()
call RegisterSpellEffectEvent(FallingSword___SPELL_ID , function FallingSword___Actions) // INLINED!!
call RegisterSpellEffectEvent(ImpenetrableFortress___SPELL_ID , function ImpenetrableFortress___Actions) // INLINED!!


call RegisterSpellEffectEvent('A09J' , function SXX)

call RegisterSpellEffectEvent('A09K' , function SAX)
//set t=CreateTrigger()
//call TriggerAddCondition(t,Condition(function SCX))
//call MOE(II,(t))
//set t=null

set t=null
call RegisterSpellEffectEvent('A062' , function S1X)
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function S5X))
call MOE(II , ( t ))
set t=null

call RegisterSpellEffectEvent('A060' , function TVX)
set i=0

call RegisterSpellEffectEvent(Chernobyliss__ABIL_ID , function Chernobyliss__Actions)
set P_9=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(P_9, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(P_9, Condition(function CalloftheHaunted___OnSpell))
set P_9=null

call RegisterSpellEffectEvent('A0AM' , function DeathCall___OnSpell)

call RegisterSpellEffectEvent('A0AD' , function DandDecay___OnSpell)
//set Q_7 = null

call RegisterSpellEffectEvent('A0AG' , function DtaHoliday___OnSpell)
set Q_5=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Q_5, Player(0), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(1), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(2), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(3), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(4), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(5), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(6), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(7), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(8), "-revivefix", true)
call TriggerRegisterPlayerChatEvent(Q_5, Player(9), "-revivefix", true)
call TriggerAddCondition(Q_5, Condition(function ReviveSafe___OnSpell))
set Q_5=null
set Q_4=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Q_4, Player(0), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(1), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(2), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(3), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(4), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(5), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(6), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(7), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(8), "-toggleautoselect", true)
call TriggerRegisterPlayerChatEvent(Q_4, Player(9), "-toggleautoselect", true)
call TriggerAddCondition(Q_4, Condition(function LichToggleFunc))
set Q_4=null
set Q_3=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Q_3, Player(0), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(1), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(2), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(3), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(4), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(5), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(6), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(7), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(8), "-tips", true)
call TriggerRegisterPlayerChatEvent(Q_3, Player(9), "-tips", true)
call TriggerAddCondition(Q_3, Condition(function TipsToggleFunc))
set Q_3=null
set X2=CreateTrigger()
set OGV=bj_mapInitialPlayableArea
loop
call TriggerRegisterPlayerUnitEvent(X2, Player(i), EVENT_PLAYER_UNIT_ATTACKED, WE)
set i=i + 1
exitwhen i == 16
endloop
call TriggerAddCondition(X2, Condition(function TMX))
call TriggerAddAction(X2, function T9X)
set AXR=CreateUnit(Player(14), 'h007', 700., 700., 0)
call UnitAddAbility(AXR, 'A068')
call RemoveUnit(AXR)
set AXR=null
call Preload("Abilities\\Spells\\Undead\\Web\\Webmissile.mdl")
call Preload("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageDeathCaster.mdl")
call Preload("Abilities\\Spells\\Undead\\Web\\Web_AirTarget.mdl")
call Preload("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
call Preload("Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl")
call Preload("Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl")
call Preload("war3mapImported\\Winter Blast HD.mdx")
set t=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(t, Condition(function UIX))
set t=null
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function UNX))
call MOE(II , ( t ))
set t=null
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function UCX))
call MOE(II , ( t ))
set t=null
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function UFX))
call MOE(II , ( t ))
set t=null
//set t=CreateTrigger()
set A5E[0]=90000
set A5E[1]=125
set A5E[2]=175
set A5E[3]=225

call RegisterSpellEffectEvent('A00J' , function YTX)

call RegisterSpellEffectEvent('A014' , function YWX)
//set t=null
//set t=CreateTrigger()
set A6E[0]=10.
set A6E[1]=25.
set A6E[2]=40.
set A6E[3]=60.
set A6E[4]=120.
set A6E[5]=156.
set A6E[6]=210.
set A6E[7]=260.
set A6E[8]=315.
set A6E[9]=400.

call RegisterSpellEffectEvent('A00C' , function YZX)

call RegisterSpellEffectEvent('A07U' , function ZXX)
set AOR=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(AOR, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(AOR, Condition(function ZCX))
call TriggerAddAction(AOR, function ZDX)
set AOR=null

call RegisterSpellEffectEvent('A004' , function VGO)

call RegisterSpellEffectEvent('A09F' , function VPO)

call RegisterSpellEffectEvent('A00F' , function VWO)

call RegisterSpellEffectEvent('A06S' , function V1O)
call RegisterSpellEffectEvent('A07V' , function V1O)
call RegisterSpellEffectEvent('A0J3' , function V1O)
call RegisterSpellEffectEvent('A08L' , function V1O)

call RegisterSpellEffectEvent('A06T' , function ESO)
set OZV=CreateSound("Abilities\\Spells\\Other\\Submerge\\Submerge1.wav", false, true, true, 10, 10, "")
call SetSoundParamsFromLabel(OZV, "SubmergeSound")
set OYV=InitHashtable()
set O_V[1]=.04 * 50
set O0V[1]=3
set O1V[1]=.25
set O2V[1]=460
set O_V[2]=.04 * 75
set O0V[2]=3
set O1V[2]=.25
set O2V[2]=460
set O_V[3]=.04 * 100
set O0V[3]=3
set O1V[3]=.25
set O2V[3]=460
set O_V[4]=.04 * 150
set O0V[4]=3
set O1V[4]=.25
set O2V[4]=460
set O_V[5]=.04 * 200
set O0V[5]=3
set O1V[5]=.25
set O2V[5]=460
set O_V[6]=.04 * 275
set O0V[6]=3
set O1V[6]=.25
set O2V[6]=460
set O_V[7]=.04 * 350
set O0V[7]=3
set O1V[7]=.25
set O2V[7]=460
set O_V[8]=.04 * 800
set O0V[8]=3
set O1V[8]=.25
set O2V[8]=460
set O_V[9]=.04 * 1800
set O0V[9]=3
set O1V[9]=.25
set O2V[9]=460
set O_V[10]=.04 * 2700
set O0V[10]=3
set O1V[10]=.25
set O2V[10]=460
//set ARR=null

call RegisterSpellEffectEvent('A07V' , function EWO)

call RegisterSpellEffectEvent('A042' , function XSO)

call RegisterSpellEffectEvent('A04W' , function XYO)

call RegisterSpellEffectEvent('A04X' , function X4O)

call RegisterSpellEffectEvent('A0FD' , function ONO)

call RegisterSpellEffectEvent('A0DF' , function ODO)

call RegisterSpellEffectEvent('A0HK' , function OGO)

//call RegisterSpellEffectEvent('A0BX', function OKO)
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function OTO))
call MOE(II , ( t ))
set X_X=CreateTrigger()

call RegisterSpellEffectEvent('A03B' , function O3O)
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function CZO))
call MOE(II , ( t ))
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function D7O))
call MOE(II , ( t ))
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function FVO))
call MOE(II , ( t ))
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function J8O))
call MOE(II , ( t ))
set t=CreateTrigger()
call TriggerAddCondition(t, Condition(function K3O))
call MOE(II , ( t ))
set VRV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VRV, 80., XPV)
call TriggerAddCondition(VRV, Condition(function TDO))
call TriggerAddAction(VRV, function TGO)
set t=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(t, Condition(function W8O))
set t=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_CHANNEL)
call TriggerAddCondition(t, Condition(function OVR))
set i=0
set SC=100
set TC=100
set YC=DialogCreate()
set i=0
loop
exitwhen ( i > 5 )
set VD[i]=0
set i=i + 1
endloop
set ED=100.
set i=0
loop
exitwhen ( i > 12 )
set XD[i]=CreateTimer()
set OD[i]=false
set VL[i]=null
set PL[i]=null
set CQ[i]=600.
set i=i + 1
endloop
set RD=DialogCreate()
set i=0
loop
exitwhen ( i > 3 )
set AD[i]=0
set BD[i]=0
set i=i + 1
endloop
set i=0
loop
exitwhen ( i > 2 )
set KD[i]=false
set QD[i]=false
set GT[i]=0
set HT[i]=0
set i=i + 1
endloop
set SD=CreateGroup()
set i=0
loop
exitwhen ( i > 1 )
set TD[i]=0
set QF[i]=0
set SF[i]=0
set TF[i]=0
set WF[i]=CreateGroup()
set BG[i]=0
set FG[i]=0
set HG[i]=0
set JG[i]=0
set MG[i]=0
set PG[i]=""
set SG[i]=""
set UG[i]=false
set YG[i]=0
set XH[i]=0
set OH[i]=0
set GH[i]=0
set HH[i]=0
set JH[i]=0
set KH[i]=0
set LH[i]=0
set UH[i]=0
set WH[i]=0
set ZH[i]=0
set VJ[i]=0
set XJ[i]=CreateGroup()
set BJ[i]=0
set CJ[i]=0
set DJ[i]=0
set FJ[i]=CreateGroup()
set LJ[i]=0
set MJ[i]=0
set YJ[i]=CreateGroup()
set EM[i]=false
set IM[i]=0
set AM[i]=0
set JM[i]=0
set KM[i]=false
set LM[i]=0
set MM[i]=0
set PM[i]=0
set XP[i]=0
set OP[i]=0
set RP[i]=0
set IP[i]=0
set KP[i]=0
set LP[i]=0
set MP[i]=0
set PP[i]=0
set QP[i]=0
set SQ[i]=""
set UQ[i]=0
set VS[i]=CreateForce()
set XS[i]=""
set IS[i]=0
set AS[i]=CreateMultiboard()
set BS[i]=""
set GS[i]=0
set HS[i]=0
set JS[i]=0
set KS[i]=0
set EU[i]=false
set OU[i]=0
set RU[i]=0
set CU[i]=CreateTimer()
set i=i + 1
endloop
set i=0
loop
exitwhen ( i > 8 )
set UD[i]=""
set SS[i]=""
set TS[i]=0
set US[i]=0
set WS[i]=0
set BT[i]=0
set CT[i]=0
set FT[i]=0
set JT[i]=false
set MT[i]=0
set TT[i]=false
set WT[i]=false
set i=i + 1
endloop
set VG=CreateGroup()
set IG=CreateGroup()
set EH=CreateGroup()
set AH=CreateGroup()
set PH=CreateGroup()
set OJ=CreateGroup()
set ZJ=CreateGroup()
set AK=CreateGroup()
set NK=CreateGroup()
set BK=CreateGroup()
set CK=CreateGroup()
set GK=CreateGroup()
set QK=CreateGroup()
set SK=CreateGroup()
set TK=CreateGroup()
set UK=CreateGroup()
set WK=CreateGroup()
set XL=CreateGroup()
set GL=CreateGroup()
set KL=CreateGroup()

set NM=CreateGroup()
set CM=CreateGroup()
set TM=CreateGroup()
set XQ=CreateForce()
set BQ=CreateForce()
set ES=CreateForce()
set LS=3
set MS=CreateForce()
set PS=2
set i=0
loop
exitwhen ( i > 99 )
set QS[i]=0
set i=i + 1
endloop
set YS=1
set i=0
loop
exitwhen ( i > 10 )
set ZS[i]=0
set IT[i]=0
set AT[i]=0
set KT[i]=0
set i=i + 1
endloop
set i=0
loop
exitwhen ( i > 15 )
set VT[i]=0
set ET[i]=0
set i=i + 1
endloop
set i=0
loop
exitwhen ( i > 41 )
set NT[i]=""
set i=i + 1
endloop
set i=0
loop
exitwhen ( i > 40 )
set DT[i]=""
set QT[i]=0
set i=i + 1
endloop
set DU=CreateTrigger()
set UY=CreateTrigger()
set r=CreateRegion()
call RegionAddRect(r, GetWorldBounds())
call TriggerRegisterEnterRegion(UY, r, null)
call TriggerAddCondition(UY, Condition(function FIX))
call TriggerAddAction(UY, function FCX)
set WY=CreateTrigger()
call TriggerRegisterEnterRegion(WY, r, null)
call TriggerAddCondition(WY, Condition(function FFX))
call TriggerAddAction(WY, function FKX)
set YY=CreateTrigger()
call TriggerRegisterEnterRegion(YY, r, null)
call TriggerAddCondition(YY, Condition(function FMX))
call TriggerAddAction(YY, function FTX)
set ZY=CreateTrigger()
call TriggerRegisterEnterRegion(ZY, r, null)
call TriggerAddCondition(ZY, Condition(function FWX))
call TriggerAddAction(ZY, function F0X)
set VZ=CreateTrigger()
call TriggerRegisterEnterRegion(VZ, r, null)
call TriggerAddCondition(VZ, Condition(function F2X))
call TriggerAddAction(VZ, function F6X)
set EZ=CreateTrigger()
call TriggerRegisterEnterRegion(EZ, r, null)
call TriggerAddCondition(EZ, Condition(function F8X))
call TriggerAddAction(EZ, function GXX)
set XZ=CreateTrigger()
call TriggerRegisterEnterRegion(XZ, r, null)
call TriggerAddCondition(XZ, Condition(function GRX))
call TriggerAddAction(XZ, function GBX)
set OZ=CreateTrigger()
call TriggerRegisterEnterRegion(OZ, r, null)
call TriggerAddCondition(OZ, Condition(function GDX))
call TriggerAddAction(OZ, function GJX)
set RZ=CreateTrigger()
call TriggerRegisterEnterRegion(RZ, r, null)
call TriggerAddCondition(RZ, Condition(function GLX))
call TriggerAddAction(RZ, function GSX)
set IZ=CreateTrigger()
call TriggerRegisterEnterRegion(IZ, r, null)
call TriggerAddCondition(IZ, Condition(function GUX))
call TriggerAddAction(IZ, function G_X)
set AZ=CreateTrigger()
call TriggerRegisterEnterRegion(AZ, r, null)
call TriggerAddCondition(AZ, Condition(function G1X))
call TriggerAddAction(AZ, function G2X)
set NZ=CreateTrigger()
call TriggerRegisterEnterRegion(NZ, r, null)
call TriggerAddCondition(NZ, Condition(function G4X))
call TriggerAddAction(NZ, function G5X)
set BZ=CreateTrigger()
call TriggerRegisterEnterRegion(BZ, r, null)
call TriggerAddCondition(BZ, Condition(function G7X))
call TriggerAddAction(BZ, function G8X)
set CZ=CreateTrigger()
call TriggerRegisterEnterRegion(CZ, r, null)
call TriggerAddCondition(CZ, Condition(function HVX))
call TriggerAddAction(CZ, function HEX)
set DZ=CreateTrigger()
call TriggerRegisterEnterRegion(DZ, r, null)
call TriggerAddCondition(DZ, Condition(function HOX))
call TriggerAddAction(DZ, function HRX)
set FZ=CreateTrigger()
call TriggerRegisterEnterRegion(FZ, r, null)
call TriggerAddCondition(FZ, Condition(function HAX))
call TriggerAddAction(FZ, function HNX)
set GZ=CreateTrigger()
call TriggerRegisterEnterRegion(GZ, r, null)
call TriggerAddCondition(GZ, Condition(function HCX))
call TriggerAddAction(GZ, function HDX)
set HZ=CreateTrigger()
call TriggerRegisterEnterRegion(HZ, r, null)
call TriggerAddCondition(HZ, Condition(function HGX))
call TriggerAddAction(HZ, function HJX)
set JZ=CreateTrigger()
call TriggerRegisterEnterRegion(JZ, r, null)
call TriggerAddCondition(JZ, Condition(function HLX))
call TriggerAddAction(JZ, function HQX)
set KZ=CreateTrigger()
call TriggerRegisterEnterRegion(KZ, r, null)
call TriggerAddCondition(KZ, Condition(function HTX))
call TriggerAddAction(KZ, function HUX)
set LZ=CreateTrigger()
call TriggerRegisterEnterRegion(LZ, r, null)
call TriggerAddCondition(LZ, Condition(function HYX))
call TriggerAddAction(LZ, function HZX)
set MZ=CreateTrigger()
call TriggerRegisterEnterRegion(MZ, r, null)
call TriggerAddCondition(MZ, Condition(function H0X))
call TriggerAddAction(MZ, function H1X)
set PZ=CreateTrigger()
call TriggerRegisterEnterRegion(PZ, r, null)
call TriggerAddCondition(PZ, Condition(function H3X))
call TriggerAddAction(PZ, function H4X)
set QZ=CreateTrigger()
call TriggerRegisterEnterRegion(QZ, r, null)
call TriggerAddCondition(QZ, Condition(function H6X))
call TriggerAddAction(QZ, function H7X)
set SZ=CreateTrigger()
call TriggerRegisterEnterRegion(SZ, r, null)
call TriggerAddCondition(SZ, Condition(function H9X))
call TriggerAddAction(SZ, function JVX)
set TZ=CreateTrigger()
call TriggerRegisterEnterRegion(TZ, r, null)
call TriggerAddCondition(TZ, Condition(function JXX))
call TriggerAddAction(TZ, function JOX)
set UZ=CreateTrigger()
call TriggerRegisterEnterRegion(UZ, r, null)
call TriggerAddCondition(UZ, Condition(function JIX))
call TriggerAddAction(UZ, function JAX)
set WZ=CreateTrigger()
call TriggerRegisterEnterRegion(WZ, r, null)
call TriggerAddCondition(WZ, Condition(function JBX))
call TriggerAddAction(WZ, function JDX)
set YZ=CreateTrigger()
call TriggerRegisterEnterRegion(YZ, r, null)
call TriggerAddCondition(YZ, Condition(function JGX))
call TriggerAddAction(YZ, function JHX)
set ZZ=CreateTrigger()
call TriggerRegisterEnterRegion(ZZ, r, null)
call TriggerAddCondition(ZZ, Condition(function JKX))
call TriggerAddAction(ZZ, function JLX)
set V0=CreateTrigger()
call TriggerRegisterEnterRegion(V0, r, null)
call TriggerAddCondition(V0, Condition(function JPX))
call TriggerAddAction(V0, function JQX)
set E0=CreateTrigger()
call TriggerRegisterEnterRegion(E0, r, null)
call TriggerAddCondition(E0, Condition(function JTX))
call TriggerAddAction(E0, function JUX)
set X0=CreateTrigger()
call TriggerRegisterEnterRegion(X0, r, null)
call TriggerAddCondition(X0, Condition(function JYX))
call TriggerAddAction(X0, function JZX)
set O0=CreateTrigger()
call TriggerRegisterEnterRegion(O0, r, null)
call TriggerAddCondition(O0, Condition(function J0X))
call TriggerAddAction(O0, function J1X)
set R0=CreateTrigger()
call TriggerRegisterEnterRegion(R0, r, null)
call TriggerAddCondition(R0, Condition(function J3X))
call TriggerAddAction(R0, function J4X)
set I0=CreateTrigger()
call TriggerRegisterEnterRegion(I0, r, null)
call TriggerAddCondition(I0, Condition(function J6X))
call TriggerAddAction(I0, function J7X)
set A0=CreateTrigger()
call TriggerRegisterEnterRegion(A0, r, null)
call TriggerAddCondition(A0, Condition(function J9X))
call TriggerAddAction(A0, function KEX)
set N0=CreateTrigger()
call TriggerRegisterEnterRegion(N0, r, null)
call TriggerAddCondition(N0, Condition(function KOX))
call TriggerAddAction(N0, function KRX)
set B0=CreateTrigger()
call TriggerRegisterEnterRegion(B0, r, null)
call TriggerAddCondition(B0, Condition(function KAX))
call TriggerAddAction(B0, function KNX)
set C0=CreateTrigger()
call TriggerRegisterEnterRegion(C0, r, null)
call TriggerAddCondition(C0, Condition(function KCX))
call TriggerAddAction(C0, function KDX)
set D0=CreateTrigger()
call TriggerRegisterEnterRegion(D0, r, null)
call TriggerAddCondition(D0, Condition(function KGX))
call TriggerAddAction(D0, function KHX)
set F0=CreateTrigger()
call TriggerRegisterEnterRegion(F0, r, null)
call TriggerAddCondition(F0, Condition(function KKX))
call TriggerAddAction(F0, function KLX)
set G0=CreateTrigger()
call TriggerRegisterEnterRegion(G0, r, null)
call TriggerAddCondition(G0, Condition(function KPX))
call TriggerAddAction(G0, function KQX)
set H0=CreateTrigger()
call TriggerRegisterEnterRegion(H0, r, null)
call TriggerAddCondition(H0, Condition(function KTX))
call TriggerAddAction(H0, function KUX)
set J0=CreateTrigger()
call TriggerRegisterEnterRegion(J0, r, null)
call TriggerAddCondition(J0, Condition(function KYX))
call TriggerAddAction(J0, function KZX)
set J00=CreateTrigger()
call TriggerRegisterEnterRegion(J00, r, null)
call TriggerAddCondition(J00, Condition(function KYYX))
call TriggerAddAction(J00, function KZZX)
set K0=CreateTrigger()
call TriggerRegisterEnterRegion(K0, r, null)
call TriggerAddCondition(K0, Condition(function K0X))
call TriggerAddAction(K0, function K2X)
set K00=CreateTrigger()
call TriggerRegisterEnterRegion(K00, r, null)
call TriggerAddCondition(K00, Condition(function K0XX))
call TriggerAddAction(K00, function K2XX)
set K000=CreateTrigger()
call TriggerRegisterEnterRegion(K00, r, null)
call TriggerAddCondition(K000, Condition(function K0XXX))
call TriggerAddAction(K000, function K2XXX)
set L0=CreateTrigger()
call TriggerRegisterEnterRegion(L0, r, null)
call TriggerAddCondition(L0, Condition(function K4X))
call TriggerAddAction(L0, function K5X)
set M0=CreateTrigger()
call TriggerRegisterEnterRegion(M0, r, null)
call TriggerAddCondition(M0, Condition(function K7X))
call TriggerAddAction(M0, function K8X)
set P0=CreateTrigger()
call TriggerRegisterEnterRegion(P0, r, null)
call TriggerAddCondition(P0, Condition(function LVX))
call TriggerAddAction(P0, function LEX)
set Q0=CreateTrigger()
call TriggerRegisterEnterRegion(Q0, r, null)
call TriggerAddCondition(Q0, Condition(function LOX))
call TriggerAddAction(Q0, function LRX)
set S0=CreateTrigger()
call TriggerRegisterEnterRegion(S0, r, null)
call TriggerAddCondition(S0, Condition(function LAX))
call TriggerAddAction(S0, function LNX)
set T0=CreateTrigger()
call TriggerRegisterEnterRegion(T0, r, null)
call TriggerAddCondition(T0, Condition(function LCX))
call TriggerAddAction(T0, function LDX)
set U0=CreateTrigger()
call TriggerRegisterEnterRegion(U0, r, null)
call TriggerAddCondition(U0, Condition(function LGX))
call TriggerAddAction(U0, function LHX)
set W0=CreateTrigger()
call TriggerRegisterEnterRegion(W0, r, null)
call TriggerAddCondition(W0, Condition(function LKX))
call TriggerAddAction(W0, function LLX)
set Y0=CreateTrigger()
call TriggerRegisterEnterRegion(Y0, r, null)
call TriggerAddCondition(Y0, Condition(function LPX))
call TriggerAddAction(Y0, function LQX)
set Z0=CreateTrigger()
call TriggerRegisterEnterRegion(Z0, r, null)
call TriggerAddCondition(Z0, Condition(function LTX))
call TriggerAddAction(Z0, function LUX)
set V1=CreateTrigger()
call TriggerRegisterEnterRegion(V1, r, null)
call TriggerAddCondition(V1, Condition(function LYX))
call TriggerAddAction(V1, function LZX)
set E1=CreateTrigger()
call TriggerRegisterEnterRegion(E1, r, null)
call TriggerAddCondition(E1, Condition(function L0X))
call TriggerAddAction(E1, function L1X)
set X1=CreateTrigger()
call TriggerRegisterEnterRegion(X1, r, null)
call TriggerAddCondition(X1, Condition(function L3X))
call TriggerAddAction(X1, function L4X)
set O1=CreateTrigger()
call TriggerRegisterEnterRegion(O1, r, null)
call TriggerAddCondition(O1, Condition(function L6X))
call TriggerAddAction(O1, function L7X)
set BS[1]="|cffff0303"
set BS[2]="|cff0042ff"
set BS[3]="|cff1ce6b9"
set BS[4]="|cff540081"
set BS[5]="|cfffffc01"
set BS[6]="|cfffeba0e"
set BS[7]="|cff20c000"
set BS[8]="|cffe55bb0"
set BS[9]="|cff959697"
set BS[10]="|cff7ebff1"
set BS[11]="|cff106246"
set BS[12]="|cff4e2a04"
set BS[13]="|cff000000"
set BS[14]="|cffffffff"
set BS[15]="|cffffcc00"
set BS[16]="|cff006666"
set R1=CreateTrigger()
call TriggerRegisterTimerEventSingle(R1, .0)
call TriggerAddAction(R1, function MIX)
set I1=CreateTrigger()
call DisableTrigger(I1)
call TriggerAddAction(I1, function MDX)
set A1=CreateTrigger()
call DisableTrigger(A1)
call TriggerRegisterTimerEventPeriodic(A1, 1.)
call TriggerAddAction(A1, function MMX)
set N1=CreateTrigger()
call TriggerRegisterPlayerEventLeave(N1, Player(0))
call TriggerRegisterPlayerEventLeave(N1, Player(1))
call TriggerRegisterPlayerEventLeave(N1, Player(2))
call TriggerRegisterPlayerEventLeave(N1, Player(3))
call TriggerRegisterPlayerEventLeave(N1, Player(4))
call TriggerRegisterPlayerEventLeave(N1, Player(5))
call TriggerRegisterPlayerEventLeave(N1, Player(6))
call TriggerRegisterPlayerEventLeave(N1, Player(7))
call TriggerRegisterPlayerEventLeave(N1, Player(8))
call TriggerRegisterPlayerEventLeave(N1, Player(9))
call TriggerAddAction(N1, function MQX)
set B1=CreateTrigger()
call DisableTrigger(B1)
call TriggerRegisterAnyUnitEventBJ(B1, EVENT_PLAYER_HERO_LEVEL)
call TriggerAddCondition(B1, Condition(function MTX))
call TriggerAddAction(B1, function MWX)
set C1=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(C1, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(C1, Condition(function M_X))
call TriggerAddAction(C1, function M1X)
set D1=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(D1, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(D1, Condition(function M4X))
call TriggerAddAction(D1, function M7X)
set F1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(F1, Player(0), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(1), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(2), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(3), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(4), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(5), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(6), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(7), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(8), "-promote", false)
call TriggerRegisterPlayerChatEvent(F1, Player(9), "-promote", false)
call TriggerAddCondition(F1, Condition(function M9X))
call TriggerAddAction(F1, function POX)
set G1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(G1, Player(0), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(1), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(2), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(3), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(4), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(5), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(6), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(7), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(8), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(9), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(10), "-monsters", true)
call TriggerRegisterPlayerChatEvent(G1, Player(11), "-monsters", true)
call TriggerAddAction(G1, function PCX)
set H1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(H1, Player(0), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(1), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(2), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(3), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(4), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(5), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(6), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(7), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(8), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(9), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(10), "-repick", true)
call TriggerRegisterPlayerChatEvent(H1, Player(11), "-repick", true)
call TriggerAddCondition(H1, Condition(function PFX))
call TriggerAddAction(H1, function PJX)
set J1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(J1, Player(0), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(1), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(2), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(3), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(4), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(5), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(6), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(7), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(8), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(9), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(10), "-zoom", false)
call TriggerRegisterPlayerChatEvent(J1, Player(11), "-zoom", false)
call TriggerAddCondition(J1, Condition(function PLX))
call TriggerAddAction(J1, function PSX)
set K1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(K1, Player(0), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(1), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(2), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(3), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(4), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(5), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(6), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(7), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(8), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(9), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(10), "-tm", false)
call TriggerRegisterPlayerChatEvent(K1, Player(11), "-tm", false)
call TriggerAddAction(K1, function PWX)
call TriggerAddCondition(K1, Condition(function PUX))
set L1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(L1, Player(0), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(1), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(2), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(3), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(4), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(5), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(6), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(7), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(8), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(9), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(10), "-range", false)
call TriggerRegisterPlayerChatEvent(L1, Player(11), "-range", false)
call TriggerAddAction(L1, function P4X)
set M1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(M1, Player(0), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(1), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(2), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(3), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(4), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(5), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(6), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(7), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(8), "-suicide", true)
call TriggerRegisterPlayerChatEvent(M1, Player(9), "-suicide", true)
call TriggerAddAction(M1, function P7X)
set P1=CreateTrigger()
call TriggerRegisterPlayerChatEvent(P1, Player(0), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(1), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(2), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(3), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(4), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(5), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(6), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(7), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(8), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(9), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(10), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(11), "-clear", false)
call TriggerRegisterPlayerChatEvent(P1, Player(0), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(1), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(2), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(3), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(4), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(5), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(6), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(7), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(8), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(9), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(10), "-c", true)
call TriggerRegisterPlayerChatEvent(P1, Player(11), "-c", true)
call TriggerAddAction(P1, function QWX)
set Q1=CreateTrigger()
call TriggerAddAction(Q1, function QZX)

call RegisterSpellEffectEvent('A06I' , function SHX)
set W1=CreateTrigger()
call DisableTrigger(W1)
call TriggerRegisterTimerEventPeriodic(W1, .01)
call TriggerAddAction(W1, function SQX)
set Y1=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Y1, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(Y1, Condition(function STX))
call TriggerAddAction(Y1, function SUX)

call RegisterSpellEffectEvent('A05I' , function TNX)
set V2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(V2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(V2, Condition(function TCX))
call TriggerAddAction(V2, function TDX)

call RegisterSpellEffectEvent('A06A' , function THX)
set O2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(O2, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(O2, Condition(function UVX))
call TriggerAddAction(O2, function UXX)
set R2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(R2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(R2, Condition(function UJX))
call TriggerAddAction(R2, function UMX)
set I2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(I2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(I2, Condition(function UQX))
call TriggerAddAction(I2, function UUX)
set A2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(A2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(A2, Condition(function UYX))
call TriggerAddAction(A2, function U0X)
set N2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(N2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(N2, Condition(function U2X))
call TriggerAddAction(N2, function U5X)
set B2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(B2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(B2, Condition(function U7X))
call TriggerAddAction(B2, function WVX)
set C2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(C2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(C2, Condition(function WXX))
call TriggerAddAction(C2, function WIX)
set D2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(D2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(D2, Condition(function WNX))
call TriggerAddAction(D2, function WDX)
set F2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(F2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(F2, Condition(function WGX))
call TriggerAddAction(F2, function WKX)

call RegisterSpellEffectEvent('Absk' , function WPX)
call RegisterSpellEffectEvent('A0KQ' , function WPX)

call RegisterSpellEffectEvent('A06O' , function WTX)
set J2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(J2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(J2, Condition(function WWX))
call TriggerAddAction(J2, function W_X)
set K2=CreateTrigger()
call MOE(II , ( K2 ))
call TriggerAddCondition(K2, Condition(function W1X))
call TriggerAddAction(K2, function W2X)
set L2=CreateTrigger()
call MOE(II , ( L2 ))
call TriggerAddCondition(L2, Condition(function W4X))
call TriggerAddAction(L2, function W5X)
set M2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(M2, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(M2, Condition(function W7X))
call TriggerAddAction(M2, function YVX)
set P2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(P2, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(P2, Condition(function YXX))
call TriggerAddAction(P2, function YIX)
set Q2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Q2, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(Q2, Condition(function YNX))
call TriggerAddAction(Q2, function YBX)
set S2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(S2, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(S2, Condition(function YDX))
call TriggerAddAction(S2, function YFX)
set T2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(T2, EVENT_PLAYER_UNIT_PICKUP_ITEM)
call TriggerAddCondition(T2, Condition(function YHX))
call TriggerAddAction(T2, function YJX)
set U2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(U2, EVENT_PLAYER_UNIT_DROP_ITEM)
call TriggerAddCondition(U2, Condition(function YLX))
call TriggerAddAction(U2, function YPX)
set W2=CreateTrigger()
call TriggerAddAction(W2, function Y_X)
set Y2=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Y2, EVENT_PLAYER_UNIT_SUMMON)
call TriggerAddCondition(Y2, Condition(function Y2X))
call TriggerAddAction(Y2, function Y3X)
set Z2=CreateTrigger()
call TriggerAddCondition(Z2, Condition(function Y5X))
call TriggerAddAction(Z2, function Y6X)
call MOE(II , ( Z2 ))
set V3=CreateTrigger()
call TriggerAddCondition(V3, Condition(function Y8X))
call TriggerAddAction(V3, function Y9X)
call MOE(II , ( V3 ))
set Z7X=0
set E3=CreateTrigger()
loop
exitwhen Z7X == 16
call TriggerRegisterPlayerUnitEvent(E3, Player(Z7X), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
set Z7X=Z7X + 1
endloop
call TriggerAddCondition(E3, Condition(function ZTX))
call TriggerAddAction(E3, function VOO)
set Z7X=0
loop
exitwhen Z7X > ZKX(4)
call Preload(ZMX(Z7X))
call DestroyEffect(AddSpecialEffect(ZMX(Z7X), 9000, 9000))
set Z7X=Z7X + 1
endloop
set Z7X=0
set X3=CreateTrigger()
call DisableTrigger(X3)
call TriggerRegisterAnyUnitEventBJ(X3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(X3, Condition(function E8O))
call TriggerAddAction(X3, function E9O)
//set O3=CreateTrigger()
//call DisableTrigger(O3)
//call TriggerRegisterAnyUnitEventBJ(O3,EVENT_PLAYER_UNIT_SPELL_EFFECT)
//call TriggerAddCondition(O3,Condition(function XRO))
//call TriggerAddAction(O3,function XIO)
set R3=CreateTrigger()
call DisableTrigger(R3)
call TriggerRegisterAnyUnitEventBJ(R3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(R3, Condition(function XNO))
call TriggerAddAction(R3, function XBO)
set I3=CreateTrigger()
call DisableTrigger(I3)
call TriggerRegisterAnyUnitEventBJ(I3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(I3, Condition(function XDO))
call TriggerAddAction(I3, function XFO)
set A3=CreateTrigger()
call DisableTrigger(A3)
call TriggerRegisterAnyUnitEventBJ(A3, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(A3, Condition(function XHO))
call TriggerAddAction(A3, function XKO)
set N3=CreateTrigger()
call TriggerRegisterTimerEventSingle(N3, .0)
call TriggerAddAction(N3, function XUO)
//set B3=CreateTrigger()
//call TriggerRegisterAnyUnitEventBJ(B3,EVENT_PLAYER_UNIT_SPELL_EFFECT)
//call TriggerAddCondition(B3,Condition(function X6O))
//call TriggerAddAction(B3,function X7O)
set C3=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(C3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(C3, Condition(function X9O))
call TriggerAddAction(C3, function OVO)
set D3=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(D3, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(D3, Condition(function OXO))
call TriggerAddAction(D3, function ORO)
set H3=CreateTrigger()
call DisableTrigger(H3)
call TriggerRegisterAnyUnitEventBJ(H3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(H3, Condition(function OZO))
call TriggerAddAction(H3, function O_O)
set K3=CreateTrigger()
call DisableTrigger(K3)
call TriggerRegisterAnyUnitEventBJ(K3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(K3, Condition(function O6O))
call TriggerAddAction(K3, function O8O)

set M3=CreateTrigger()
call DisableTrigger(M3)
call TriggerRegisterAnyUnitEventBJ(M3, EVENT_PLAYER_UNIT_SUMMON)
call TriggerAddCondition(M3, Condition(function RRO))
call TriggerAddAction(M3, function RIO)
set P3=CreateTrigger()
call DisableTrigger(P3)
call TriggerRegisterAnyUnitEventBJ(P3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(P3, Condition(function RNO))
call TriggerAddAction(P3, function RCO)
set Q3=CreateTrigger()
call DisableTrigger(Q3)
call TriggerRegisterAnyUnitEventBJ(Q3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Q3, Condition(function RFO))
call TriggerAddAction(Q3, function RJO)
set S3=CreateTrigger()
call DisableTrigger(S3)
call TriggerRegisterTimerEventPeriodic(S3, .03)
call TriggerAddAction(S3, function RZO)
set T3=CreateTrigger()
call DisableTrigger(T3)
call TriggerRegisterAnyUnitEventBJ(T3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(T3, Condition(function R0O))
call TriggerAddAction(T3, function R2O)
set U3=CreateTrigger()
call DisableTrigger(U3)
call TriggerRegisterAnyUnitEventBJ(U3, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(U3, Condition(function R4O))
call TriggerAddAction(U3, function R5O)
set W3=CreateTrigger()
call DisableTrigger(W3)
call TriggerRegisterAnyUnitEventBJ(W3, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(W3, Condition(function R7O))
call TriggerAddAction(W3, function R9O)
set Y3=CreateTrigger()
call DisableTrigger(Y3)
call TriggerRegisterAnyUnitEventBJ(Y3, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Y3, Condition(function IEO))
call TriggerAddAction(Y3, function IOO)
set Z3=CreateTrigger()
call DisableTrigger(Z3)
call TriggerRegisterAnyUnitEventBJ(Z3, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(Z3, Condition(function IIO))
call TriggerAddAction(Z3, function IAO)
set V4=CreateTrigger()
call DisableTrigger(V4)
call TriggerRegisterAnyUnitEventBJ(V4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(V4, Condition(function IBO))
call TriggerAddAction(V4, function ITO)
set E4=CreateTrigger()
call DisableTrigger(E4)
call TriggerRegisterAnyUnitEventBJ(E4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(E4, Condition(function IWO))
call TriggerAddAction(E4, function IZO)
set X4=CreateTrigger()
call DisableTrigger(X4)
call TriggerRegisterTimerEventPeriodic(X4, .03)
call TriggerAddAction(X4, function I7O)
set O4=CreateTrigger()
call DisableTrigger(O4)
call TriggerRegisterAnyUnitEventBJ(O4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(O4, Condition(function I9O))
call TriggerAddAction(O4, function AVO)
set R4=CreateTrigger()
call DisableTrigger(R4)
call TriggerRegisterAnyUnitEventBJ(R4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(R4, Condition(function AXO))
call TriggerAddAction(R4, function AIO)
set I4=CreateTrigger()
call DisableTrigger(I4)
call MOE(II , ( I4 ))
call TriggerAddCondition(I4, Condition(function ANO))
call TriggerAddAction(I4, function ACO)
set A4=CreateTrigger()
call DisableTrigger(A4)
call TriggerRegisterAnyUnitEventBJ(A4, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(A4, Condition(function AFO))
call TriggerAddAction(A4, function AGO)
set N4=CreateTrigger()
call DisableTrigger(N4)
call TriggerRegisterAnyUnitEventBJ(N4, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(N4, Condition(function AJO))
call TriggerAddAction(N4, function AKO)
set B4=CreateTrigger()
call DisableTrigger(B4)
call TriggerRegisterAnyUnitEventBJ(B4, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(B4, Condition(function AMO))
call TriggerAddAction(B4, function AQO)
set D4=CreateTrigger()
call DisableTrigger(D4)
call MOE(II , ( D4 ))
call TriggerAddCondition(D4, Condition(function AZO))
call TriggerAddAction(D4, function A_O)
set F4=CreateTrigger()
call DisableTrigger(F4)
call MOE(II , ( F4 ))
call TriggerAddCondition(F4, Condition(function A1O))
call TriggerAddAction(F4, function A2O)
set G4=CreateTrigger()
call MOE(II , ( G4 ))
call TriggerAddCondition(G4, Condition(function A4O))
call TriggerAddAction(G4, function A5O)
set H4=CreateTrigger()
call DisableTrigger(H4)
call TriggerAddCondition(H4, Condition(function A7O))
call TriggerAddAction(H4, function A9O)
call MOE(II , ( H4 ))
set J4=CreateTrigger()
call DisableTrigger(J4)
call MOE(II , ( J4 ))
call TriggerAddCondition(J4, Condition(function NEO))
call TriggerAddAction(J4, function NRO)
set K4=CreateTrigger()
call DisableTrigger(K4)
call TriggerRegisterAnyUnitEventBJ(K4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(K4, Condition(function NAO))
call TriggerAddAction(K4, function NHO)
set L4=CreateTrigger()
call DisableTrigger(L4)
call TriggerRegisterAnyUnitEventBJ(L4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(L4, Condition(function NKO))
call TriggerAddAction(L4, function NLO)
set M4=CreateTrigger()
call DisableTrigger(M4)
call TriggerRegisterAnyUnitEventBJ(M4, EVENT_PLAYER_UNIT_SUMMON)
call TriggerAddCondition(M4, Condition(function NPO))
call TriggerAddAction(M4, function NTO)
set P4=CreateTrigger()
call DisableTrigger(P4)
call MOE(II , ( P4 ))
call TriggerAddCondition(P4, Condition(function NWO))
call TriggerAddAction(P4, function NYO)
set Q4=CreateTrigger()
call DisableTrigger(Q4)
call MOE(II , ( Q4 ))
call TriggerAddCondition(Q4, Condition(function N_O))
call TriggerAddAction(Q4, function N2O)
set S4=CreateTrigger()
call DisableTrigger(S4)
call TriggerRegisterAnyUnitEventBJ(S4, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(S4, Condition(function N4O))
call TriggerAddAction(S4, function N6O)
set T4=CreateTrigger()
call DisableTrigger(T4)
call TriggerRegisterAnyUnitEventBJ(T4, EVENT_PLAYER_HERO_SKILL)
call TriggerAddCondition(T4, Condition(function N8O))
call TriggerAddAction(T4, function N9O)
set U4=CreateTrigger()
call DisableTrigger(U4)
call TriggerRegisterAnyUnitEventBJ(U4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(U4, Condition(function BEO))
call TriggerAddAction(U4, function BOO)
set W4=CreateTrigger()
call DisableTrigger(W4)
call TriggerRegisterAnyUnitEventBJ(W4, EVENT_PLAYER_UNIT_SPELL_ENDCAST)
call TriggerAddCondition(W4, Condition(function BIO))
call TriggerAddAction(W4, function BNO)
set Y4=CreateTrigger()
call DisableTrigger(Y4)
call TriggerRegisterAnyUnitEventBJ(Y4, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Y4, Condition(function BCO))
call TriggerAddAction(Y4, function BFO)
set Z4=CreateTrigger()
call DisableTrigger(Z4)
call TriggerRegisterAnyUnitEventBJ(Z4, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Z4, Condition(function BHO))
call TriggerAddAction(Z4, function BKO)
set V5=CreateTrigger()
call DisableTrigger(V5)
call TriggerRegisterAnyUnitEventBJ(V5, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(V5, Condition(function BMO))
call TriggerAddAction(V5, function BQO)
set E5=CreateTrigger()
call DisableTrigger(E5)
call TriggerRegisterAnyUnitEventBJ(E5, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(E5, Condition(function BTO))
call TriggerAddAction(E5, function BWO)
set X5=CreateTrigger()
call DisableTrigger(X5)
call MOE(II , ( X5 ))
call TriggerAddCondition(X5, Condition(function BZO))
call TriggerAddAction(X5, function B0O)
set O5=CreateTrigger()
call DisableTrigger(O5)
call MOE(II , ( O5 ))
call TriggerAddCondition(O5, Condition(function B2O))
call TriggerAddAction(O5, function B4O)
set R5=CreateTrigger()
call DisableTrigger(R5)
call TriggerRegisterAnyUnitEventBJ(R5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(R5, Condition(function B6O))
call TriggerAddAction(R5, function B9O)
set I5=CreateTrigger()
call DisableTrigger(I5)
call TriggerRegisterAnyUnitEventBJ(I5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(I5, Condition(function CEO))
call TriggerAddAction(I5, function CRO)
set A5=CreateTrigger()
call DisableTrigger(A5)
call TriggerRegisterAnyUnitEventBJ(A5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(A5, Condition(function CAO))
call TriggerAddAction(A5, function CCO)
set N5=CreateTrigger()
call DisableTrigger(N5)
call TriggerRegisterAnyUnitEventBJ(N5, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(N5, Condition(function CFO))
call TriggerAddAction(N5, function CLO)
set B5=CreateTrigger()
call DisableTrigger(B5)
call TriggerRegisterAnyUnitEventBJ(B5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(B5, Condition(function CPO))
call TriggerAddAction(B5, function CQO)
set C5=CreateTrigger()
call DisableTrigger(C5)
call MOE(II , ( C5 ))
call TriggerAddCondition(C5, Condition(function CTO))
call TriggerAddAction(C5, function CUO)
set F5=CreateTrigger()
call DisableTrigger(F5)
call MOE(II , ( F5 ))
call TriggerAddCondition(F5, Condition(function C_O))
call TriggerAddAction(F5, function C1O)
set G5=CreateTrigger()
call DisableTrigger(G5)
call MOE(II , ( G5 ))
call TriggerAddCondition(G5, Condition(function C3O))
call TriggerAddAction(G5, function C4O)
set H5=CreateTrigger()
call DisableTrigger(H5)
call MOE(II , ( H5 ))
call TriggerAddCondition(H5, Condition(function C6O))
call TriggerAddAction(H5, function C7O)
set J5=CreateTrigger()
call DisableTrigger(J5)
call TriggerRegisterAnyUnitEventBJ(J5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(J5, Condition(function C9O))
call TriggerAddAction(J5, function DEO)
set K5=CreateTrigger()
call DisableTrigger(K5)
call TriggerRegisterAnyUnitEventBJ(K5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(K5, Condition(function DOO))
call TriggerAddAction(K5, function DIO)
set L5=CreateTrigger()
call DisableTrigger(L5)
call TriggerRegisterAnyUnitEventBJ(L5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(L5, Condition(function DNO))
call TriggerAddAction(L5, function DDO)
set M5=CreateTrigger()
call DisableTrigger(M5)
call TriggerRegisterAnyUnitEventBJ(M5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(M5, Condition(function DGO))
call TriggerAddAction(M5, function DJO)
set P5=CreateTrigger()
call DisableTrigger(P5)
call TriggerRegisterAnyUnitEventBJ(P5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(P5, Condition(function DLO))
call TriggerAddAction(P5, function DPO)
set Q5=CreateTrigger()
call DisableTrigger(Q5)
call MOE(II , ( Q5 ))
call TriggerAddCondition(Q5, Condition(function DSO))
call TriggerAddAction(Q5, function DTO)
set S5=CreateTrigger()
call DisableTrigger(S5)
call TriggerRegisterAnyUnitEventBJ(S5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(S5, Condition(function DWO))
call TriggerAddAction(S5, function DYO)
set T5=CreateTrigger()
call DisableTrigger(T5)
call TriggerRegisterAnyUnitEventBJ(T5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(T5, Condition(function D_O))
call TriggerAddAction(T5, function D0O)
set U5=CreateTrigger()
call DisableTrigger(U5)
call TriggerRegisterAnyUnitEventBJ(U5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(U5, Condition(function D2O))
call TriggerAddAction(U5, function D4O)
set Z5=CreateTrigger()
call DisableTrigger(Z5)
call TriggerRegisterAnyUnitEventBJ(Z5, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Z5, Condition(function FEO))
call TriggerAddAction(Z5, function FRO)
set V6=CreateTrigger()
call DisableTrigger(V6)
call TriggerRegisterAnyUnitEventBJ(V6, EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(V6, Condition(function FAO))
call TriggerAddAction(V6, function FNO)
set E6=CreateTrigger()
call DisableTrigger(E6)
call TriggerRegisterAnyUnitEventBJ(E6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(E6, Condition(function FCO))
call TriggerAddAction(E6, function FDO)
set X6=CreateTrigger()
call DisableTrigger(X6)
call TriggerRegisterAnyUnitEventBJ(X6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(X6, Condition(function FGO))
call TriggerAddAction(X6, function FMO)
set O6=CreateTrigger()
call DisableTrigger(O6)
call TriggerRegisterAnyUnitEventBJ(O6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(O6, Condition(function FQO))
call TriggerAddAction(O6, function FYO)
set R6=CreateTrigger()
call DisableTrigger(R6)
call TriggerRegisterAnyUnitEventBJ(R6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(R6, Condition(function F_O))
call TriggerAddAction(R6, function F0O)
set I6=CreateTrigger()
call DisableTrigger(I6)
call TriggerRegisterAnyUnitEventBJ(I6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(I6, Condition(function F2O))
call TriggerAddAction(I6, function F3O)
set A6=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(A6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(A6, Condition(function F5O))
call TriggerAddAction(A6, function F6O)
set N6=CreateTrigger()
call DisableTrigger(N6)
call TriggerRegisterAnyUnitEventBJ(N6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(N6, Condition(function F8O))
call TriggerAddAction(N6, function F9O)
set B6=CreateTrigger()
call DisableTrigger(B6)
call TriggerRegisterAnyUnitEventBJ(B6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(B6, Condition(function GEO))
call TriggerAddAction(B6, function GXO)
set C6=CreateTrigger()
call DisableTrigger(C6)
call TriggerRegisterAnyUnitEventBJ(C6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(C6, Condition(function GRO))
call TriggerAddAction(C6, function GIO)
set D6=CreateTrigger()
call DisableTrigger(D6)
call TriggerRegisterAnyUnitEventBJ(D6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(D6, Condition(function GNO))
call TriggerAddAction(D6, function GBO)
set F6=CreateTrigger()
call DisableTrigger(F6)
call TriggerRegisterAnyUnitEventBJ(F6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(F6, Condition(function GDO))
call TriggerAddAction(F6, function GGO)
set G6=CreateTrigger()
call DisableTrigger(G6)
call TriggerRegisterAnyUnitEventBJ(G6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(G6, Condition(function GJO))
call TriggerAddAction(G6, function GKO)
set H6=CreateTrigger()
call DisableTrigger(H6)
call TriggerRegisterAnyUnitEventBJ(H6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(H6, Condition(function GMO))
call TriggerAddAction(H6, function GPO)
set J6=CreateTrigger()
call DisableTrigger(J6)
call TriggerRegisterAnyUnitEventBJ(J6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(J6, Condition(function GSO))
call TriggerAddAction(J6, function GUO)
set K6=CreateTrigger()
call DisableTrigger(K6)
call TriggerRegisterAnyUnitEventBJ(K6, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(K6, Condition(function GYO))
call TriggerAddAction(K6, function GZO)
set L6=CreateTrigger()
call DisableTrigger(L6)
call TriggerRegisterAnyUnitEventBJ(L6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(L6, Condition(function G0O))
call TriggerAddAction(L6, function G6O)
set M6=CreateTrigger()
call DisableTrigger(M6)
call TriggerRegisterAnyUnitEventBJ(M6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(M6, Condition(function G8O))
call TriggerAddAction(M6, function HVO)
set P6=CreateTrigger()
call DisableTrigger(P6)
call TriggerRegisterAnyUnitEventBJ(P6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(P6, Condition(function HXO))
call TriggerAddAction(P6, function HOO)
set Q6=CreateTrigger()
call DisableTrigger(Q6)
call TriggerRegisterAnyUnitEventBJ(Q6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Q6, Condition(function HIO))
call TriggerAddAction(Q6, function HBO)
set S6=CreateTrigger()
call DisableTrigger(S6)
call TriggerRegisterAnyUnitEventBJ(S6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(S6, Condition(function HDO))
call TriggerAddAction(S6, function HJO)
set T6=CreateTrigger()
call DisableTrigger(T6)
call TriggerRegisterAnyUnitEventBJ(T6, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(T6, Condition(function HLO))
call TriggerAddAction(T6, function HSO)
set U6=CreateTrigger()
call DisableTrigger(U6)
call MOE(II , ( U6 ))
call TriggerAddCondition(U6, Condition(function HUO))
call TriggerAddAction(U6, function HWO)
//set W6=CreateTrigger()
//call DisableTrigger(W6)
//call MOE(II,(W6))
//call TriggerAddCondition(W6,Condition(function HZO))
//call TriggerAddAction(W6,function H_O)
set Y6=CreateTrigger()
call DisableTrigger(Y6)
call MOE(II , ( Y6 ))
call TriggerAddCondition(Y6, Condition(function H1O))
call TriggerAddAction(Y6, function H2O)
set Z6=CreateTrigger()
call DisableTrigger(Z6)
call MOE(II , ( Z6 ))
call TriggerAddCondition(Z6, Condition(function H5O))
call TriggerAddAction(Z6, function H6O)
set V7=CreateTrigger()
call DisableTrigger(V7)
call MOE(II , ( V7 ))
call TriggerAddCondition(V7, Condition(function JEO))
call TriggerAddAction(V7, function JOO)
set E7=CreateTrigger()
call DisableTrigger(E7)
call MOE(II , ( E7 ))
call TriggerAddCondition(E7, Condition(function JAO))
call TriggerAddAction(E7, function JUO)
set X7=CreateTrigger()
call DisableTrigger(X7)
call MOE(II , ( X7 ))
call TriggerAddCondition(X7, Condition(function JYO))
call TriggerAddAction(X7, function JZO)
set O7=CreateTrigger()
call DisableTrigger(O7)
call MOE(II , ( O7 ))
call TriggerAddCondition(O7, Condition(function J0O))
call TriggerAddAction(O7, function J1O)
set R7=CreateTrigger()
call DisableTrigger(R7)
call MOE(II , ( R7 ))
call TriggerAddCondition(R7, Condition(function J3O))
call TriggerAddAction(R7, function J4O)
set A7=CreateTrigger()
call DisableTrigger(A7)
call TriggerRegisterAnyUnitEventBJ(A7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(A7, Condition(function J9O))
call TriggerAddAction(A7, function KVO)
set N7=CreateTrigger()
call DisableTrigger(N7)
call TriggerRegisterTimerEventPeriodic(N7, .04)
call TriggerAddAction(N7, function KMO)
set B7=CreateTrigger()
call DisableTrigger(B7)
call TriggerRegisterAnyUnitEventBJ(B7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(B7, Condition(function KQO))
call TriggerAddAction(B7, function K0O)
set F7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(F7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(F7, Condition(function K8O))
call TriggerAddAction(F7, function K9O)
set G7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(G7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(G7, Condition(function LEO))
call TriggerAddAction(G7, function LXO)
set H7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(H7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(H7, Condition(function LRO))
call TriggerAddAction(H7, function LIO)
set J7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(J7, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(J7, Condition(function LNO))
call TriggerAddAction(J7, function LBO)
set K7=CreateTrigger()
call TriggerAddAction(K7, function LDO)
set L7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(L7, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(L7, Condition(function LHO))
call TriggerAddAction(L7, function LJO)
set M7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(M7, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(M7, Condition(function LLO))
call TriggerAddAction(M7, function LMO)
set P7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(P7, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(P7, Condition(function LQO))
call TriggerAddAction(P7, function LSO)
set Q7=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Q7, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(Q7, Condition(function LUO))
call TriggerAddAction(Q7, function LWO)
set S7=CreateTrigger()
call TriggerAddAction(S7, function LZO)
set T7=CreateTrigger()
call TriggerRegisterTimerEventSingle(T7, .0)
call TriggerAddAction(T7, function MNO)
set U7=CreateTrigger()
call TriggerRegisterTimerEventSingle(U7, .0)
call TriggerAddAction(U7, function MCO)
set W7=CreateTrigger()
call DisableTrigger(W7)
call TriggerAddCondition(W7, Condition(function MFO))
call TriggerAddAction(W7, function MSO)
//set Y7=CreateTrigger()
//call TriggerRegisterTimerEventSingle(Y7,.01)
//call TriggerAddAction(Y7,function MWO)
set Z7=CreateTrigger()
call TriggerRegisterTimerEventSingle(Z7, .01)
call TriggerAddAction(Z7, function MZO)
set V8=CreateTrigger()
call TriggerRegisterDialogEvent(V8, YC)
call TriggerAddAction(V8, function M5O)
set E8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(E8, 80., XWV)
call TriggerAddCondition(E8, Condition(function M7O))
call TriggerAddAction(E8, function PVO)
set X8=CreateTrigger()
//call TriggerRegisterUnitInRangeSimple(X8,80.,XCV)
call TriggerRegisterUnitInRangeSimple(X8, 80., OVV)
//call TriggerRegisterUnitInRangeSimple(X8,80.,XQV)
call TriggerAddCondition(X8, Condition(function PXO))
call TriggerAddAction(X8, function PRO)
set O8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(O8, 80., XTV)
call TriggerAddCondition(O8, Condition(function PAO))
call TriggerAddAction(O8, function PBO)
set R8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(R8, 80., XHV)
call TriggerAddCondition(R8, Condition(function PDO))
call TriggerAddAction(R8, function PGO)
set I8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(I8, 80., XHV)
call TriggerAddCondition(I8, Condition(function PJO))
call TriggerAddAction(I8, function PMO)
set A8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(A8, 80., OEV)
call TriggerAddCondition(A8, Condition(function PQO))
call TriggerAddAction(A8, function PTO)
set N8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(N8, 80., XGV)
call TriggerAddCondition(N8, Condition(function PWO))
call TriggerAddAction(N8, function PZO)
set B8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(B8, 80., X9V)
call TriggerAddCondition(B8, Condition(function P0O))
call TriggerAddAction(B8, function P2O)
set C8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(C8, 80., X8V)
call TriggerAddCondition(C8, Condition(function P4O))
call TriggerAddAction(C8, function P6O)
set D8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(D8, 80., X7V)
call TriggerAddCondition(D8, Condition(function P8O))
call TriggerAddAction(D8, function QVO)
set F8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(F8, 80., X7V)
call TriggerAddCondition(F8, Condition(function QXO))
call TriggerAddAction(F8, function QIO)
set G8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(G8, 80., E6V)
call TriggerAddCondition(G8, Condition(function QNO))
call TriggerAddAction(G8, function QCO)
set H8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(H8, 80., XUV)
call TriggerAddCondition(H8, Condition(function QFO))
call TriggerAddAction(H8, function QHO)
set J8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(J8, 80., XEV)
call TriggerAddCondition(J8, Condition(function QKO))
call TriggerAddAction(J8, function QMO)
set K8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(K8, 80., XEV)
call TriggerAddCondition(K8, Condition(function QQO))
call TriggerAddAction(K8, function QUO)
set L8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(L8, 80., XKV)
call TriggerAddCondition(L8, Condition(function QYO))
call TriggerAddAction(L8, function Q_O)
set M8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(M8, 80., E5V)
call TriggerAddCondition(M8, Condition(function Q1O))
call TriggerAddAction(M8, function Q3O)
set P8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(P8, 80., E8V)
call TriggerAddCondition(P8, Condition(function Q5O))
call TriggerAddAction(P8, function Q7O)
set Q8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(Q8, 80., XJV)
call TriggerAddCondition(Q8, Condition(function Q9O))
call TriggerAddAction(Q8, function SEO)
set S8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(S8, 80., XBV)
call TriggerAddCondition(S8, Condition(function SOO))
call TriggerAddAction(S8, function SIO)
set T8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(T8, 80., XSV)
call TriggerAddCondition(T8, Condition(function SNO))
call TriggerAddAction(T8, function SCO)
set U8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(U8, 80., XLV)
call TriggerAddCondition(U8, Condition(function SFO))
call TriggerAddAction(U8, function SHO)
set W8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(W8, 80., XRV)
call TriggerAddCondition(W8, Condition(function SKO))
call TriggerAddAction(W8, function SMO)
set Y8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(Y8, 80., XXV)
call TriggerAddCondition(Y8, Condition(function SQO))
call TriggerAddAction(Y8, function STO)
set Z8=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(Z8, 80., XDV)
call TriggerAddCondition(Z8, Condition(function SWO))
call TriggerAddAction(Z8, function SZO)
set VVV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VVV, 80., XOV)
call TriggerAddCondition(VVV, Condition(function S0O))
call TriggerAddAction(VVV, function S2O)
set VEV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VEV, 80., XNV)
call TriggerAddCondition(VEV, Condition(function S4O))
call TriggerAddAction(VEV, function S6O)
set VXV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VXV, 80., E1V)
call TriggerAddCondition(VXV, Condition(function S8O))
call TriggerAddAction(VXV, function TVO)
set VOV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VOV, 80., OXV)
call TriggerAddCondition(VOV, Condition(function TXO))
call TriggerAddAction(VOV, function TIO)
set VIV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VIV, 80., E2V)
call TriggerAddCondition(VIV, Condition(function THO))
call TriggerAddAction(VIV, function TKO)
set VAV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VAV, 80., X5V)
call TriggerAddCondition(VAV, Condition(function TMO))
call TriggerAddAction(VAV, function TQO)
set VNV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VNV, 80., OOV)
call TriggerAddCondition(VNV, Condition(function TTO))
call TriggerAddAction(VNV, function TWO)
set VBV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VBV, 80., XIV)
call TriggerAddCondition(VBV, Condition(function TZO))
call TriggerAddAction(VBV, function T0O)
set VCV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VCV, 80., E3V)
call TriggerAddCondition(VCV, Condition(function T2O))
call TriggerAddAction(VCV, function T4O)
set VDV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VDV, 80., XAV)
call TriggerAddCondition(VDV, Condition(function T6O))
call TriggerAddAction(VDV, function T8O)
set QoBT=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(QoBT, 80., QoBC)
call TriggerAddCondition(QoBT, Condition(function T6O))
call TriggerAddAction(QoBT, function QoBPT)
set PeHT=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(PeHT, 80., PeHC)
call TriggerAddCondition(PeHT, Condition(function T6O))
call TriggerAddAction(PeHT, function PeHPT)
set VFV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VFV, 80., E9V)
call TriggerAddCondition(VFV, Condition(function UVO))
call TriggerAddAction(VFV, function UXO)
set VGV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VGV, 80., XVV)
call TriggerAddCondition(VGV, Condition(function URO))
call TriggerAddAction(VGV, function UNO)
set VHV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VHV, 80., XFV)
call TriggerAddCondition(VHV, Condition(function UCO))
call TriggerAddAction(VHV, function UFO)
set VJV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(VJV, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(VJV, Condition(function UHO))
call TriggerAddAction(VJV, function UKO)
set VKV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(VKV, EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(VKV, Condition(function UMO))
call TriggerAddAction(VKV, function UPO)
set VLV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VLV, 75., X1V)
call TriggerAddCondition(VLV, Condition(function USO))
call TriggerAddAction(VLV, function UTO)
set VMV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VMV, 75., X_V)
call TriggerAddCondition(VMV, Condition(function UWO))
call TriggerAddAction(VMV, function UYO)
set VPV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VPV, 75., X2V)
call TriggerAddCondition(VPV, Condition(function U_O))
call TriggerAddAction(VPV, function U0O)
set VQV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VQV, 75., X4V)
call TriggerAddCondition(VQV, Condition(function U2O))
call TriggerAddAction(VQV, function U3O)
set VSV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VSV, 75., X0V)
call TriggerAddCondition(VSV, Condition(function U5O))
call TriggerAddAction(VSV, function U6O)
set VTV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VTV, 75., XZV)
call TriggerAddCondition(VTV, Condition(function U8O))
call TriggerAddAction(VTV, function U9O)
set VUV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VUV, 75., X3V)
call TriggerAddCondition(VUV, Condition(function WEO))
call TriggerAddAction(VUV, function WXO)
set VWV=CreateTrigger()
call TriggerRegisterUnitInRangeSimple(VWV, 75., XYV)
call TriggerAddCondition(VWV, Condition(function WRO))
call TriggerAddAction(VWV, function WIO)
set VYV=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(VYV, 30.)
call TriggerAddCondition(VYV, Condition(function WDO))
call TriggerAddAction(VYV, function WFO)
set VZV=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(VZV, 30.)
call TriggerAddCondition(VZV, Condition(function WLO))
call TriggerAddAction(VZV, function WMO)
set V_V=CreateTrigger()
call TriggerRegisterPlayerEventLeave(V_V, Player(0))
call TriggerRegisterPlayerEventLeave(V_V, Player(1))
call TriggerRegisterPlayerEventLeave(V_V, Player(2))
call TriggerRegisterPlayerEventLeave(V_V, Player(3))
call TriggerRegisterPlayerEventLeave(V_V, Player(4))
call TriggerRegisterPlayerEventLeave(V_V, Player(5))
call TriggerRegisterPlayerEventLeave(V_V, Player(6))
call TriggerRegisterPlayerEventLeave(V_V, Player(7))
call TriggerRegisterPlayerEventLeave(V_V, Player(8))
call TriggerRegisterPlayerEventLeave(V_V, Player(9))
call TriggerAddAction(V_V, function WZO)
set V0V=CreateTrigger()
//call TriggerRegisterPlayerUnitEventSimple(V0V,Player(8),EVENT_PLAYER_UNIT_DEATH)
//call TriggerRegisterPlayerUnitEventSimple(V0V,Player(9),EVENT_PLAYER_UNIT_DEATH)
call TriggerRegisterPlayerUnitEventSimple(V0V, Player(10), EVENT_PLAYER_UNIT_DEATH)
call TriggerRegisterPlayerUnitEventSimple(V0V, Player(11), EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(V0V, Condition(function W0O))
call TriggerAddAction(V0V, function W3O)
set V1V=CreateTrigger()
call TriggerRegisterEnterRectSimple(V1V, GU)
call TriggerAddCondition(V1V, Condition(function YVO))
call TriggerAddAction(V1V, function YAO)
set V2V=CreateTrigger()
call TriggerRegisterEnterRectSimple(V2V, HU)
call TriggerAddCondition(V2V, Condition(function YCO))
call TriggerAddAction(V2V, function YKO)
set V3V=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(V3V, 1.)
call TriggerAddAction(V3V, function YZO)
set V4V=CreateTrigger()
call DisableTrigger(V4V)
call TriggerAddAction(V4V, function EHR)
set V5V=CreateTrigger()
call MOE(II , ( V5V ))
call TriggerAddCondition(V5V, Condition(function EKR))
call TriggerAddAction(V5V, function ELR)
set V6V=CreateTrigger()
call MOE(II , ( V6V ))
call TriggerAddCondition(V6V, Condition(function EPR))
call TriggerAddAction(V6V, function EQR)
set V7V=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(V7V, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(V7V, Condition(function ETR))
call TriggerAddAction(V7V, function EUR)
set V8V=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(V8V, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(V8V, Condition(function EYR))
call TriggerAddAction(V8V, function EZR)
set V9V=CreateTrigger()
call MOE(II , ( V9V ))
call TriggerAddCondition(V9V, Condition(function E0R))
call TriggerAddAction(V9V, function E2R)
set EVV=CreateTrigger()
call MOE(II , ( EVV ))
call TriggerAddCondition(EVV, Condition(function E4R))
call TriggerAddAction(EVV, function E5R)
set EEV=CreateTrigger()
call MOE(II , ( EEV ))
call TriggerAddCondition(EEV, Condition(function E7R))
call TriggerAddAction(EEV, function E8R)
set EXV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EXV, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(EXV, Condition(function XVR))
call TriggerAddAction(EXV, function XER)
set EOV=CreateTrigger()
call TriggerAddCondition(EOV, Condition(function XOR))
call TriggerAddAction(EOV, function XRR)
call MOE(II , ( EOV ))
set ERV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ERV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ERV, Condition(function XAR))
call TriggerAddAction(ERV, function XNR)
set EIV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EIV, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(EIV, Condition(function XCR))
call TriggerAddAction(EIV, function XDR)
set EAV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EAV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EAV, Condition(function XGR))
call TriggerAddAction(EAV, function XHR)
set ENV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ENV, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(ENV, Condition(function XKR))
call TriggerAddAction(ENV, function XLR)
set EBV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EBV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EBV, Condition(function XPR))
call TriggerAddAction(EBV, function XQR)
set ECV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ECV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ECV, Condition(function OER))
call TriggerAddAction(ECV, function OXR)
set EDV=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(EDV, ( 1 / 40. ))
call TriggerAddAction(EDV, function OTR)
set EFV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EFV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EFV, Condition(function OWR))
call TriggerAddAction(EFV, function O_R)
set EGV=CreateTrigger()
call TriggerAddAction(EGV, function O2R)
set EHV=CreateTrigger()
call DisableTrigger(EHV)
call TriggerRegisterTimerEventPeriodic(EHV, .02)
call TriggerAddAction(EHV, function O8R)
set EJV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EJV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EJV, Condition(function RVR))
call TriggerAddAction(EJV, function RER)
set EKV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EKV, EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(EKV, Condition(function RRR))
call TriggerAddAction(EKV, function RCR)
set ELV=CreateTrigger()
call DisableTrigger(ELV)
call TriggerRegisterTimerEventPeriodic(ELV, .02)
call TriggerAddAction(ELV, function RKR)
set EMV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EMV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EMV, Condition(function RMR))
call TriggerAddAction(EMV, function RUR)
set EPV=CreateTrigger()
call DisableTrigger(EPV)
call TriggerRegisterTimerEventPeriodic(EPV, .02)
call TriggerAddAction(EPV, function R4R)
set EQV=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(EQV, EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(EQV, Condition(function R6R))
call TriggerAddAction(EQV, function R9R)
set ESV=CreateTrigger()
call DisableTrigger(ESV)
call TriggerRegisterTimerEventPeriodic(ESV, .02)
call TriggerAddAction(ESV, function IIR)
set ETV=CreateTrigger()
call TriggerAddAction(ETV, function IGR)
//set EWV=CreateTrigger()
//call TriggerRegisterAnyUnitEventBJ(EWV,EVENT_PLAYER_UNIT_SPELL_EFFECT)
//call TriggerAddCondition(EWV,Condition(function ITR))
//call TriggerAddAction(EWV,function IZR)
call RegisterSpellEffectEvent('A02D' , function IZR)
//set EYV=CreateTrigger()
//call TriggerRegisterAnyUnitEventBJ(EYV,EVENT_PLAYER_UNIT_SPELL_EFFECT)
//call TriggerAddCondition(EYV,Condition(function I1R))
//call TriggerAddAction(EYV,function I3R)
//return((GetSpellAbilityId()=='A02J')or(GetSpellAbilityId()=='A0BG')or(GetSpellAbilityId()=='A0GX')or(GetSpellAbilityId()=='A08X')or(GetSpellAbilityId()=='A08V')or(GetSpellAbilityId()=='A08H')or(GetSpellAbilityId()=='A03F')and not JT[(1+GetPlayerId(GetOwningPlayer(GetTriggerUnit())))])
call RegisterSpellEffectEvent('A02J' , function I3R)
call RegisterSpellEffectEvent('A0BG' , function I3R)
call RegisterSpellEffectEvent('A0GX' , function I3R)
call RegisterSpellEffectEvent('A08X' , function I3R)
call RegisterSpellEffectEvent('A08V' , function I3R)
call RegisterSpellEffectEvent('A08H' , function I3R)
call RegisterSpellEffectEvent('A03F' , function I3R)
set EZV=CreateTrigger()
call TriggerAddAction(EZV, function I5R)
set E_V=CreateTrigger()
call TriggerRegisterTimerEventSingle(E_V, .01)
call TriggerAddAction(E_V, function I8R)
set E0V=CreateTrigger()
call TriggerAddAction(E0V, function AVR)
call ConditionalTriggerExecute(Q1)
call ConditionalTriggerExecute(T1)
call ConditionalTriggerExecute(S7)
call ConditionalTriggerExecute(EZV)
call ConditionalTriggerExecute(E_V)
call ConditionalTriggerExecute(E0V)
call CreateDeadDestructableZ('YTfb', - 5536, - 6624, 192, 270, 1, 0)
call CreateDeadDestructableZ('YTfb', - 5536, - 6624, 192, 270, 1, 0)

endfunction //injected main function (! inject command)??

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
call SetMapName("|cffaa0000Enfo's FFB Edition v1.32|r")
call SetMapDescription("A more advanced and harder version of the classic Enfo maps. Created by clan FFB.\n\n|cffffcc00Released on 15th Feb, 2014.|r\nChange log and info at: |cffaa0000discord.gg/9fuCGD3|r")
call SetPlayers(12)
call SetTeams(12)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0, .0, - 5120.)
call DefineStartLocation(1, .0, - 5120.)
call DefineStartLocation(2, .0, - 5120.)
call DefineStartLocation(3, .0, - 5120.)
call DefineStartLocation(4, .0, - 5120.)
call DefineStartLocation(5, .0, - 5120.)
call DefineStartLocation(6, .0, - 5120.)
call DefineStartLocation(7, .0, - 5120.)
call DefineStartLocation(8, .0, - 5120.)
call DefineStartLocation(9, .0, - 5120.)
call DefineStartLocation(10, .0, - 5120.)
call DefineStartLocation(11, .0, - 5120.)
call SetPlayerStartLocation(Player(0), 0)
call ForcePlayerStartLocation(Player(0), 0)
call SetPlayerColor(Player(0), ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0), false)
call SetPlayerController(Player(0), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1), 1)
call ForcePlayerStartLocation(Player(1), 1)
call SetPlayerColor(Player(1), ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1), false)
call SetPlayerController(Player(1), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2), 2)
call ForcePlayerStartLocation(Player(2), 2)
call SetPlayerColor(Player(2), ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2), false)
call SetPlayerController(Player(2), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3), 3)
call ForcePlayerStartLocation(Player(3), 3)
call SetPlayerColor(Player(3), ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3), false)
call SetPlayerController(Player(3), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4), 4)
call ForcePlayerStartLocation(Player(4), 4)
call SetPlayerColor(Player(4), ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4), false)
call SetPlayerController(Player(4), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5), 5)
call ForcePlayerStartLocation(Player(5), 5)
call SetPlayerColor(Player(5), ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5), false)
call SetPlayerController(Player(5), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6), 6)
call ForcePlayerStartLocation(Player(6), 6)
call SetPlayerColor(Player(6), ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6), false)
call SetPlayerController(Player(6), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7), 7)
call ForcePlayerStartLocation(Player(7), 7)
call SetPlayerColor(Player(7), ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7), false)
call SetPlayerController(Player(7), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8), 8)
call ForcePlayerStartLocation(Player(8), 8)
call SetPlayerColor(Player(8), ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8), false)
call SetPlayerController(Player(8), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9), 9)
call ForcePlayerStartLocation(Player(9), 9)
call SetPlayerColor(Player(9), ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9), false)
call SetPlayerController(Player(9), MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10), 10)
call ForcePlayerStartLocation(Player(10), 10)
call SetPlayerColor(Player(10), ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10), RACE_PREF_UNDEAD)
call SetPlayerRaceSelectable(Player(10), false)
call SetPlayerController(Player(10), MAP_CONTROL_COMPUTER)
call SetPlayerStartLocation(Player(11), 11)
call ForcePlayerStartLocation(Player(11), 11)
call SetPlayerColor(Player(11), ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11), RACE_PREF_UNDEAD)
call SetPlayerRaceSelectable(Player(11), false)
call SetPlayerController(Player(11), MAP_CONTROL_COMPUTER)
call InitCustomTeams()
call SetStartLocPrioCount(0, 7)
call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1, 7)
call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2, 7)
call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3, 7)
call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4, 7)
call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5, 7)
call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6, 7)
call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7, 7)
call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8, 11)
call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 9, 10, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8, 10, 11, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9, 11)
call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 9, 10, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9, 10, 11, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10, 11)
call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10, 10, 11, MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(11, 11)
call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)



endfunction




//Struct method generated initializers/callers:

//Functions for BigArrays:
function sa__NinjaRope__FallingBolt_onDestroy takes nothing returns boolean
local integer this=f__arg_this
            call DestroyLightning(s__NinjaRope__FallingBolt_bolt[this])
            set s__NinjaRope__FallingBolt_bolt[this]=null
   return true
endfunction
function sa__NinjaRope__SpellData_onDestroy takes nothing returns boolean
local integer this=f__arg_this
        local real height= 0.
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U00O' or GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U003' then
            set height=30.
            endif
            if GetUnitTypeId(s__NinjaRope__SpellData_Caster[this]) == 'U000' then
            set height=120.
            endif
            call SetUnitFlyHeight(s__NinjaRope__SpellData_Caster[this], height, 0.)
            call SetUnitPathing(s__NinjaRope__SpellData_Caster[this], true)
            set s__NinjaRope__SpellData_CasterData[GetUnitUserData(s__NinjaRope__SpellData_Caster[this])]=0
            if s__NinjaRope__SpellData_Caster[this] != null then
                call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], NinjaRope__ABILITY_STOPID)
							if GetUnitAbilityLevel(s__NinjaRope__SpellData_Caster[this], 'A0O7') != 0 then
			call UnitRemoveAbility(s__NinjaRope__SpellData_Caster[this], 'A0O7')
			endif
            endif
            set s__NinjaRope__SpellData_Caster[this]=null
            if s__NinjaRope__SpellData_AttachPoint[this] != null then
                call KillUnit(s__NinjaRope__SpellData_AttachPoint[this])
            endif
            set s__NinjaRope__SpellData_AttachPoint[this]=null
            if s__NinjaRope__SpellData_bolt[this] != null then
                call DestroyLightning(s__NinjaRope__SpellData_bolt[this])
            endif
            set s__NinjaRope__SpellData_bolt[this]=null
            call TriggerRemoveCondition(s__NinjaRope__SpellData_onDeath[this], s__NinjaRope__SpellData_onDeathCond[this])
            call DestroyTrigger(s__NinjaRope__SpellData_onDeath[this])
            set s__NinjaRope__SpellData_onDeathCond[this]=null
            set s__NinjaRope__SpellData_onDeath[this]=null
   return true
endfunction
function sa__NinjaRope__SpellData_Stop takes nothing returns boolean
local integer this=f__arg_this
            set s__NinjaRope__SpellData_ticks[this]=0
   return true
endfunction
function sa__ForestCall__MyStruct_onDestroy takes nothing returns boolean
local integer this=f__arg_this
            local unit f
            loop
                set f=FirstOfGroup(s__ForestCall__MyStruct_dummyEffects[this])
                exitwhen ( f == null )
                call GroupRemoveUnit(s__ForestCall__MyStruct_dummyEffects[this], f)
                call KillUnit(f)
            endloop
            if ( ForestCall__ChannelTrees(s__ForestCall__MyStruct_level[this]) ) then
                loop
                    set f=FirstOfGroup(s__ForestCall__MyStruct_trees[this])
                    exitwhen ( f == null )
                    call GroupRemoveUnit(s__ForestCall__MyStruct_trees[this], f)
                    call KillUnit(f)
                endloop
            call DestroyGroup(s__ForestCall__MyStruct_trees[this])
            endif
            call FlushChildHashtable(ForestCall__activeTable, GetHandleId(s__ForestCall__MyStruct_caster[this]))
            call GroupRemoveUnit(ForestCall__TreeInvocationCasters, s__ForestCall__MyStruct_caster[this])
            call ReleaseTimer(s__ForestCall__MyStruct_cycleTimer[this])
            call DestroyGroup(s__ForestCall__MyStruct_dummyEffects[this])
   return true
endfunction
function sa__Roflcopter__bomb_create takes nothing returns boolean
local integer i=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real h=f__arg_real3
            local integer this= s__Roflcopter__bomb__allocate()
            set s__Roflcopter__bomb_i[this]=i
            set s__Roflcopter__bomb_x[this]=x
            set s__Roflcopter__bomb_y[this]=y
            set s__Roflcopter__bomb_h[this]=h
            call SetTextTagPermanent(s__Roflcopter__bomb_t[this], false)
            call SetTextTagVisibility(s__Roflcopter__bomb_t[this], true)
            call SetTextTagPos(s__Roflcopter__bomb_t[this], x, y, h)
            call SetTextTagText(s__Roflcopter__bomb_t[this], "*", 0.04)
            call s__Roflcopter__bomb_start(this)
            call s__Roflcopter__instance_add(s__Roflcopter__bomb_i[this])
set f__result_integer= this
   return true
endfunction
function sa__Roflcopter__bomb_destroy takes nothing returns boolean
local integer this=f__arg_this
            call DestroyTextTag(s__Roflcopter__bomb_t[this])
            call DestroyEffect(AddSpecialEffect(Roflcopter__EXPLOSION_EFFECT, s__Roflcopter__bomb_x[this], s__Roflcopter__bomb_y[this]))
            set s__Roflcopter__bomb_This=this
            call GroupEnumUnitsInRange(s__Roflcopter__bomb_g, s__Roflcopter__bomb_x[this], s__Roflcopter__bomb_y[this], s__Roflcopter__instance_a[s__Roflcopter__bomb_i[this]], Filter(function s__Roflcopter__bomb_explosion))
            call s__Roflcopter__bomb_end(this)
            call s__Roflcopter__instance_sub(s__Roflcopter__bomb_i[this])
            call s__Roflcopter__bomb_deallocate(this)
   return true
endfunction
function sa__Roflcopter__roflcopter_create takes nothing returns boolean
local integer i=f__arg_integer1
local real x=f__arg_real1
local real y=f__arg_real2
local real l=f__arg_real3
local real p=f__arg_real4
            local integer this= s__Roflcopter__roflcopter__allocate()
            local real a= Atan2(y - GetUnitY(s__Roflcopter__instance_u[i]), x - GetUnitX(s__Roflcopter__instance_u[i]))
            if a < 0 then
                set a=2 * bj_PI + a
            endif
            set s__Roflcopter__roflcopter_i[this]=i
            set s__Roflcopter__roflcopter_l[this]=l
            set s__Roflcopter__roflcopter_a[this]=a + bj_PI / 2
            set s__Roflcopter__roflcopter_bp[this]=(NewTimerEx(0)) // INLINED!!
            call TimerStart(s__Roflcopter__roflcopter_bp[this], p, true, function s__Roflcopter__roflcopter_bombdrop)
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__Roflcopter__roflcopter_bp[this] )), ( this)) // INLINED!!
            set s__Roflcopter__roflcopter_sp[this]=(NewTimerEx(0)) // INLINED!!
            call TimerStart(s__Roflcopter__roflcopter_sp[this], Roflcopter__SPIN_PERIOD, true, function s__Roflcopter__roflcopter_spin)
            call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__Roflcopter__roflcopter_sp[this] )), ( this)) // INLINED!!
            call SetTextTagPermanent(s__Roflcopter__roflcopter_t[this], false)
            call SetTextTagVisibility(s__Roflcopter__roflcopter_t[this], true)
            set s__Roflcopter__roflcopter_x[this]=x + l / 2 * Cos(a - bj_PI / 2) - Roflcopter__DEVIATION
            set s__Roflcopter__roflcopter_y[this]=y + Roflcopter__TRAVEL_LENGTH(i) / 2 * Sin(a - bj_PI / 2)
            call SetTextTagPos(s__Roflcopter__roflcopter_t[this], s__Roflcopter__roflcopter_x[this], s__Roflcopter__roflcopter_y[this], Roflcopter__HEIGHT)
            if a < bj_PI then
                set s__Roflcopter__roflcopter_p[this]=1
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R1, 0.0184)
            else
                set s__Roflcopter__roflcopter_p[this]=3
                call SetTextTagText(s__Roflcopter__roflcopter_t[this], Roflcopter__R3, 0.0184)
            endif
            call s__Roflcopter__roflcopter_start(this)
            call s__Roflcopter__instance_add(s__Roflcopter__roflcopter_i[this])
set f__result_integer= this
   return true
endfunction
function sa__Roflcopter__roflcopter_destroy takes nothing returns boolean
local integer this=f__arg_this
            call DestroyTextTag(s__Roflcopter__roflcopter_t[this])
            call ReleaseTimer(s__Roflcopter__roflcopter_bp[this])
            call ReleaseTimer(s__Roflcopter__roflcopter_sp[this])
            call s__Roflcopter__roflcopter_end(this)
            call s__Roflcopter__instance_sub(s__Roflcopter__roflcopter_i[this])
            call s__Roflcopter__roflcopter_deallocate(this)
   return true
endfunction
function sa__MainShops_selectShop takes nothing returns boolean

            local unit u= GetTriggerUnit()
            local integer this= LoadInteger(ShopSystem__MainShop, GetHandleId(u), 0)
            local player p= GetTriggerPlayer()
            local integer id= GetPlayerId(p)
            if this == 0 or not ShopSystem__CanShop[id] then
                set p=null
set f__result_boolean= false
return true
            endif
            call SetUnitX(ShopSystem__DummyShop[id], GetUnitX(u))
            call SetUnitY(ShopSystem__DummyShop[id], GetUnitY(u))
            call s__Shops_forceChangeItems(s__MainShops_baseItem[this] , id)
            if GetLocalPlayer() == p then
                call ClearSelection()
                call SelectUnit(ShopSystem__DummyShop[id], true)
            endif
            set u=null
set f__result_boolean= false
   return true
endfunction
function sa___prototype4_TimerUtils___init takes nothing returns boolean

     local integer i=0
     local integer o=- 1
     local boolean oops= false
        if ( TimerUtils___didinit ) then
    return true
        else
            set TimerUtils___didinit=true
        endif
            set TimerUtils___ht=InitHashtable()
            loop
                exitwhen ( i == TimerUtils___QUANTITY )
                set s__TimerUtils___tT[i]= CreateTimer()
                call SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[i] )), ( TimerUtils___HELD)) // INLINED!!
                set i=i + 1
            endloop
            set TimerUtils___tN=TimerUtils___QUANTITY
    return true
endfunction
function sa___prototype4_NinjaRope__InitVars takes nothing returns boolean

        set NinjaRope__ROPE_STABLELENGTH[1]=700.
        set NinjaRope__ROPE_STABLELENGTH[2]=700.
        set NinjaRope__ROPE_STABLELENGTH[3]=700.
        set NinjaRope__ROPE_ATTACHHEIGHT[1]=800.
        set NinjaRope__ROPE_ATTACHHEIGHT[2]=800.
        set NinjaRope__ROPE_ATTACHHEIGHT[3]=800.
        set NinjaRope__ANGLE_INITIALVELOCITY[1]=- 0.5
        set NinjaRope__ANGLE_INITIALVELOCITY[2]=- 0.5
        set NinjaRope__ANGLE_INITIALVELOCITY[3]=- 0.5
        set NinjaRope__SPELL_CONFLICT_IDS[1]='BEer' //Entaling roots
        set NinjaRope__SPELL_CONFLICT_IDS[2]='Beng' //Raider's Ensnare
        set NinjaRope__SPELL_CONFLICT_IDS[3]='Bcy2' //DoTT's Cyclone
    return true
endfunction

function jasshelper__initstructs28509468 takes nothing returns nothing
    set st__NinjaRope__FallingBolt_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__NinjaRope__FallingBolt_onDestroy,Condition( function sa__NinjaRope__FallingBolt_onDestroy))
    set st__NinjaRope__SpellData_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__NinjaRope__SpellData_onDestroy,Condition( function sa__NinjaRope__SpellData_onDestroy))
    set st__NinjaRope__SpellData_Stop=CreateTrigger()
    call TriggerAddCondition(st__NinjaRope__SpellData_Stop,Condition( function sa__NinjaRope__SpellData_Stop))
    set st__ForestCall__MyStruct_onDestroy=CreateTrigger()
    call TriggerAddCondition(st__ForestCall__MyStruct_onDestroy,Condition( function sa__ForestCall__MyStruct_onDestroy))
    set st__Roflcopter__bomb_create=CreateTrigger()
    call TriggerAddCondition(st__Roflcopter__bomb_create,Condition( function sa__Roflcopter__bomb_create))
    set st__Roflcopter__bomb_destroy=CreateTrigger()
    call TriggerAddCondition(st__Roflcopter__bomb_destroy,Condition( function sa__Roflcopter__bomb_destroy))
    set st__Roflcopter__roflcopter_create=CreateTrigger()
    call TriggerAddCondition(st__Roflcopter__roflcopter_create,Condition( function sa__Roflcopter__roflcopter_create))
    set st__Roflcopter__roflcopter_destroy=CreateTrigger()
    call TriggerAddCondition(st__Roflcopter__roflcopter_destroy,Condition( function sa__Roflcopter__roflcopter_destroy))
    set st__MainShops_selectShop=CreateTrigger()
    call TriggerAddCondition(st__MainShops_selectShop,Condition( function sa__MainShops_selectShop))
    set st__NewBonus_onDestroy[5]=null
    set st__NewBonus_onDestroy[8]=null
    set st___prototype4[1]=CreateTrigger()
    call TriggerAddAction(st___prototype4[1],function sa___prototype4_TimerUtils___init)
    call TriggerAddCondition(st___prototype4[1],Condition(function sa___prototype4_TimerUtils___init))
    set st___prototype4[2]=CreateTrigger()
    call TriggerAddAction(st___prototype4[2],function sa___prototype4_NinjaRope__InitVars)
    call TriggerAddCondition(st___prototype4[2],Condition(function sa___prototype4_NinjaRope__InitVars))












call ExecuteFunc("s__SpellEffectEvent__S_SpellEffectEvent__M___onInit")



call ExecuteFunc("s__Roflcopter__roflcopter_II___onInit")

call ExecuteFunc("s__Roflcopter__bomb_II___onInit")



































































call ExecuteFunc("s__AoEFearSpell__A_AoEFearSpell__Module___onInit")












call ExecuteFunc("s__TestFear___A_TestFear___Module___onInit")










    call ExecuteFunc("s__Fear_onInit")
    call ExecuteFunc("s__NewBonusUtils__NewBonusUtils_onInit")
    call ExecuteFunc("s__Shops_onInit")
    call ExecuteFunc("s__ShadowImageBlink__ShadowImageBlink_onInit")
    call ExecuteFunc("s__FearUlti4Illusion__ShadowImageBlink_onInit")
    call ExecuteFunc("s__Decay___tempDat_onInit")
endfunction

