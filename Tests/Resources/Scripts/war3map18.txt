globals
    // User-defined
integer array udg_Lives
integer udg_BuildPeriodTime= 0
integer udg_Player_Count= 0
unit udg_Temp_Unit= null
player udg_Temp_Player= null
force udg_Spawns= null
button array udg_DialogButtons
dialog udg_Dialog_Mode= null
timer udg_FirstWaveTimer= null
location udg_Point= null
integer udg_LoopInt1= 0
integer udg_LoopInt2= 0
rect array udg_SpawnRects
force udg_Force= null
group udg_Group= null
string array udg_ColorName
integer udg_TempInt= 0
integer array udg_CreepType
integer array udg_GoldLevel
string array udg_SpecialWave
integer array udg_CreepSpawns
real array udg_SpawnInterval
boolean array udg_IsPlaying
force udg_Players= null
rect array udg_CheckpointRegion
integer udg_Level= 0
integer udg_CreepCount= 0
real udg_WaveTime= 0
real udg_SellValueG= 0
real udg_SellValueL= 0
integer array udg_SellGold
integer array udg_SellLumber
integer array udg_SellType
integer udg_SellCount= 0
boolean udg_SinglePlayer= false
location array udg_loc
integer array udg_Income_array
player array udg_Player_array
location udg_XTemp_Point= null
integer udg_XTemp_LoopInt= 0
integer udg_XTemp_LoopInt2= 0
force udg_XTemp_Force= null
unit array udg_KingsArray
string array udg_WaveNotify
rect array udg_RegCastleArray
rect array udg_RegBarrackArray
group udg_XCorpse= null
integer udg_MaxLevel= 0
string array udg_WaveMultBord
string array udg_WaveMultBordC
integer array udg_ItemBase
integer array udg_AbilityBase
integer udg_XTemp_LoopInt3= 0
integer udg_AbiAmount= 0
integer array udg_PengAmount
rect array udg_RegEliteBarrackArray
player udg_TutorPlayer= null
rect array udg_RegCursedLodgeArray
timer array udg_CurseTimer
group udg_KingsCursing= null
force udg_CS_PlayersPlaying= null
location array udg_CS_SoundPoint
rect array udg_KingReg_array
integer udg_TempPlayerId= 0
integer udg_CreepsAliveCount= 0
rect array udg_TreeRegion
force udg_PlayersPlaying= null
rect array udg_PenguinWorkRegion
string array udg_HealText
string array udg_AutoHealText
rect array udg_IncomeAreaRegion
integer array udg_SendableCreeps
integer array udg_IncomePerCreep
string array udg_ArmorType
string udg_ArmorHeavy
string udg_ArmorUnnarmored
string udg_ArmorFortified
integer array udg_TowerType0
integer array udg_TowerType1
location udg_TempLoc= null
boolean array udg_HasHealed
real array udg_AutoHealTreshold
string array udg_Color
string array udg_DifficultyText
player udg_TempPlayer= null
integer udg_StatLevel= 0
integer udg_StatLevelMax= 0
integer udg_TempInt2= 0

    // Generated
rect gg_rct_Blue_Barracks_1= null
rect gg_rct_Blue_Barracks_2= null
rect gg_rct_Blue_Income_Area= null
rect gg_rct_Blue_Spawn= null
rect gg_rct_Bue_Igloo= null
rect gg_rct_Creep_Death_Area_Blue_and_Purple= null
rect gg_rct_Creep_Death_Area_Orange_and_Pink= null
rect gg_rct_Creep_Death_Area_Red_and_Teal= null
rect gg_rct_Creep_Death_Area_Yellow_and_Green= null
rect gg_rct_Creep_Move_Blue_1= null
rect gg_rct_Creep_Move_Blue_2= null
rect gg_rct_Creep_Move_Blue_3= null
rect gg_rct_Creep_Move_Blue_4= null
rect gg_rct_Creep_Move_Green_1= null
rect gg_rct_Creep_Move_Green_2= null
rect gg_rct_Creep_Move_Green_3= null
rect gg_rct_Creep_Move_Green_4= null
rect gg_rct_Creep_Move_Orange_1= null
rect gg_rct_Creep_Move_Orange_2= null
rect gg_rct_Creep_Move_Orange_3= null
rect gg_rct_Creep_Move_Orange_4= null
rect gg_rct_Creep_Move_Pink_1= null
rect gg_rct_Creep_Move_Pink_2= null
rect gg_rct_Creep_Move_Pink_3= null
rect gg_rct_Creep_Move_Pink_4= null
rect gg_rct_Creep_Move_Purple_1= null
rect gg_rct_Creep_Move_Purple_2= null
rect gg_rct_Creep_Move_Purple_3= null
rect gg_rct_Creep_Move_Purple_4= null
rect gg_rct_Creep_Move_Red_1= null
rect gg_rct_Creep_Move_Red_2= null
rect gg_rct_Creep_Move_Red_3= null
rect gg_rct_Creep_Move_Red_4= null
rect gg_rct_Creep_Move_Teal_1= null
rect gg_rct_Creep_Move_Teal_2= null
rect gg_rct_Creep_Move_Teal_3= null
rect gg_rct_Creep_Move_Teal_4= null
rect gg_rct_Creep_Move_Yellow_1= null
rect gg_rct_Creep_Move_Yellow_2= null
rect gg_rct_Creep_Move_Yellow_3= null
rect gg_rct_Creep_Move_Yellow_4= null
rect gg_rct_Creep_Spawn_Blue= null
rect gg_rct_Creep_Spawn_Green= null
rect gg_rct_Creep_Spawn_Orange= null
rect gg_rct_Creep_Spawn_Pink= null
rect gg_rct_Creep_Spawn_Purple= null
rect gg_rct_Creep_Spawn_Red= null
rect gg_rct_Creep_Spawn_Teal= null
rect gg_rct_Creep_Spawn_Yellow= null
rect gg_rct_Green_Barracks_1= null
rect gg_rct_Green_Barracks_2= null
rect gg_rct_Green_Igloo= null
rect gg_rct_Green_Income_Area= null
rect gg_rct_Green_Spawn= null
rect gg_rct_Greens_Area= null
rect gg_rct_Lasers= null
rect gg_rct_Lasers_Copy= null
rect gg_rct_Orange_Barracks_1= null
rect gg_rct_Orange_Barracks_2= null
rect gg_rct_Orange_Igloo= null
rect gg_rct_Orange_Income_Area= null
rect gg_rct_Orange_Spawn= null
rect gg_rct_Oranges_Area= null
rect gg_rct_Pink_Barracks_1= null
rect gg_rct_Pink_Barracks_2= null
rect gg_rct_Pink_Igloo= null
rect gg_rct_Pink_Income_Area= null
rect gg_rct_Pink_Spawn= null
rect gg_rct_Pinks_Area= null
rect gg_rct_Purple_Barracks_1= null
rect gg_rct_Purple_Barracks_2= null
rect gg_rct_Purple_Igloo= null
rect gg_rct_Purple_Income_Area= null
rect gg_rct_Purple_Spawn= null
rect gg_rct_Purples_Area= null
rect gg_rct_Red_Barracks_1= null
rect gg_rct_Red_Barracks_2= null
rect gg_rct_Red_Income_Area= null
rect gg_rct_Red_Spawn= null
rect gg_rct_Reds_Area= null
rect gg_rct_Spawn_Kings_Castle_Blue= null
rect gg_rct_Spawn_Kings_Castle_Green= null
rect gg_rct_Spawn_Kings_Castle_Orange= null
rect gg_rct_Spawn_Kings_Castle_Pink= null
rect gg_rct_Spawn_Kings_Castle_Purple= null
rect gg_rct_Spawn_Kings_Castle_Red= null
rect gg_rct_Spawn_Kings_Castle_Teal= null
rect gg_rct_Spawn_Kings_Castle_Yellow= null
rect gg_rct_Teal_Barracks_1= null
rect gg_rct_Teal_Barracks_2= null
rect gg_rct_Teal_Income_Area= null
rect gg_rct_Teal_Spawn= null
rect gg_rct_Teals_Area= null
rect gg_rct_Blues_Area= null
rect gg_rct_Trees= null
rect gg_rct_Trees_2= null
rect gg_rct_Trees_3= null
rect gg_rct_Trees_4= null
rect gg_rct_Trees_5= null
rect gg_rct_Trees_6= null
rect gg_rct_Trees_7= null
rect gg_rct_Trees_8= null
rect gg_rct_Yellow_Barracks_1= null
rect gg_rct_Yellow_Barracks_2= null
rect gg_rct_Yellow_Igloo= null
rect gg_rct_Yellow_Spawn= null
rect gg_rct_Yellows_Area= null
rect gg_rct_Aura= null
rect gg_rct_Aura_Copy_3= null
rect gg_rct_Aura_Copy_4= null
rect gg_rct_Aura_Copy_6= null
rect gg_rct_Aura_Copy_8= null
rect gg_rct_Aura_Copy_10= null
rect gg_rct_Aura_Copy_12= null
rect gg_rct_Aura_Copy_14= null
rect gg_rct_Aura_Copy_17= null
rect gg_rct_Aura_Copy_18= null
rect gg_rct_Aura_Copy_21= null
rect gg_rct_Aura_Copy_22= null
rect gg_rct_Aura_Copy_24= null
rect gg_rct_Aura_Copy_27= null
rect gg_rct_Aura_Copy_28= null
rect gg_rct_Aura_Copy_31= null
rect gg_rct_Purple_Voodoo_Lodge= null
rect gg_rct_Teal_Voodoo_Lodge= null
rect gg_rct_Red_Voodoo_Lodge= null
rect gg_rct_Blue_Voodoo_Lodge= null
rect gg_rct_Yellow_Voodoo_Lodge= null
rect gg_rct_Orange_Voodoo_Lodge= null
rect gg_rct_Pink_Voodoo_Lodge= null
rect gg_rct_Green_Voodoo_Lodge= null
rect gg_rct_Yellow_Income_Area= null
rect gg_rct_Penguin_Chop_Red= null
rect gg_rct_Penguin_Chop_Teal= null
rect gg_rct_Penguin_Chop_Blue= null
rect gg_rct_Penguin_Chop_Purple= null
rect gg_rct_Penguin_Chop_Yellow= null
rect gg_rct_Penguin_Chop_Orange= null
rect gg_rct_Penguin_Chop_Green= null
rect gg_rct_Penguin_Chop_Pink= null
rect gg_rct_Red_Igloo= null
rect gg_rct_Teal_Igloo= null
rect gg_rct_Discord= null
rect gg_rct_Discord_Copy= null
sound gg_snd_Warning= null
sound gg_snd_SoulPreservation= null
sound gg_snd_DispelMagicTarget= null
sound gg_snd_DivineShield= null
sound gg_snd_ClanInvitation= null
sound gg_snd_GoodJob= null
sound gg_snd_BattleNetTick= null
sound gg_snd_QuestFailed= null
trigger gg_trg_Map_Init= null
trigger gg_trg_Run_texts= null
trigger gg_trg_All_player_intro= null
trigger gg_trg_Display_All_Aura= null
trigger gg_trg_Select_On_Start= null
trigger gg_trg_Next_Page= null
trigger gg_trg_Penguin_Work_Init= null
trigger gg_trg_Penguin_Work_Order= null
trigger gg_trg_Penguin_Spawn= null
trigger gg_trg_Issue_Igloo_Order= null
trigger gg_trg_Sell_Towers= null
trigger gg_trg_Auto_Attack= null
trigger gg_trg_PenguinKingLimit= null
trigger gg_trg_PenguinKingLimit2= null
trigger gg_trg_PenguinKing_Enable= null
trigger gg_trg_Penguin_Limit= null
trigger gg_trg_Penguin_Count= null
trigger gg_trg_PenguinDetonate= null
trigger gg_trg_The_Hatchery_Spawn= null
trigger gg_trg_The_Hatchery_Train= null
trigger gg_trg_The_Hatchery_Stop= null
trigger gg_trg_Hydra_Portal_Spawn= null
trigger gg_trg_Hydra_Portal_Train= null
trigger gg_trg_Hydra_Portal_Stop= null
trigger gg_trg_Spawned_Units_Limit= null
trigger gg_trg_Remove_Hydra_Portal= null
trigger gg_trg_Remove_Phoenix= null
trigger gg_trg_Remove_The_Hatchery= null
trigger gg_trg_Remove_The_Hatchery_Phoenix= null
trigger gg_trg_Remove_The_Hatchery_Phoenix_Egg= null
trigger gg_trg_Divine_Shield= null
trigger gg_trg_Heal_Init= null
trigger gg_trg_Heal= null
trigger gg_trg_AutoHeal= null
trigger gg_trg_AbiInit= null
trigger gg_trg_Upgrades_to_Income_v2= null
trigger gg_trg_King_Upgrades_Init= null
trigger gg_trg_KingMaxUp_and_lumbering_speed= null
trigger gg_trg_King_Upgrades= null
trigger gg_trg_King_Abilities= null
trigger gg_trg_King_Leech= null
trigger gg_trg_Defeat_Test= null
trigger gg_trg_Income_Test= null
trigger gg_trg_Penguin_Display_Amount= null
trigger gg_trg_Commands= null
trigger gg_trg_Single_Player= null
trigger gg_trg_Camera_Set= null
trigger gg_trg_Reset_Camera= null
trigger gg_trg_Camera_Zoom= null
trigger gg_trg_TopDown= null
trigger gg_trg_Dialog_Setup= null
trigger gg_trg_Mode_Choose= null
trigger gg_trg_Mode_Warning= null
trigger gg_trg_Mode_Units= null
trigger gg_trg_Multiboard= null
trigger gg_trg_Tower_Types_Init= null
trigger gg_trg_Movement_Speed_to_0= null
trigger gg_trg_Movement_Speed_to_1= null
trigger gg_trg_Setting_up_Creeps= null
trigger gg_trg_Init_Spawn= null
trigger gg_trg_Spawn_Creeps= null
trigger gg_trg_Timer= null
trigger gg_trg_Checkpoints= null
trigger gg_trg_Corpse_Removall= null
trigger gg_trg_Wave_Timer= null
trigger gg_trg_Build_Period= null
trigger gg_trg_Build_Period_Timer= null
trigger gg_trg_Send_troops_v2= null
trigger gg_trg_Sendable_Units_Init= null
trigger gg_trg_Add_Income_with_send= null
trigger gg_trg_variable_init= null
trigger gg_trg_Income_EndofRound= null
trigger gg_trg_Player_Group_Init= null
trigger gg_trg_Spawn_Recognization= null
trigger gg_trg_Player_lost_or_innactive= null
trigger gg_trg_Color_text_init= null
trigger gg_trg_PlayerLeaves= null
trigger gg_trg_King_Dies= null
trigger gg_trg_Time_Passed_5_Mins= null
trigger gg_trg_Time_Passed_10_Mins= null
trigger gg_trg_Time_Passed_15_Mins= null
trigger gg_trg_Time_Passed_20_Mins= null
trigger gg_trg_Time_Passed_25_Mins= null
trigger gg_trg_Time_Passed_30_Mins= null
trigger gg_trg_Kings_Influence_Red= null
trigger gg_trg_Kings_Influence_Blue= null
trigger gg_trg_Kings_Influence_Teal= null
trigger gg_trg_Kings_Influence_Purple= null
trigger gg_trg_Kings_Influence_Yellow= null
trigger gg_trg_Kings_Influence_Orange= null
trigger gg_trg_Kings_Influence_Green= null
trigger gg_trg_Kings_Influence_Pink= null
trigger gg_trg_CSys_Sounds= null
trigger gg_trg_CSys_Configuration= null
trigger gg_trg_CSys_Core= null
unit gg_unit_H00Q_0027= null
unit gg_unit_H00Q_0028= null
unit gg_unit_H00Q_0029= null
unit gg_unit_H00Q_0030= null
unit gg_unit_H00Q_0031= null
unit gg_unit_H00Q_0024= null
unit gg_unit_H00Q_0026= null
unit gg_unit_H00Q_0025= null

hashtable CS_ActiveCurses= InitHashtable()

integer array CS_CurseDummyUnits
integer array CS_DebuffDummyUnits
integer array CS_DebuffStart
integer array CS_DebuffEnd
integer array CS_CurseTechIds

integer CS_CurseSeller= 'h00C'
integer CS_MaxCurses= 0
integer CS_MaxDebuff= 0
integer CS_MaxPlayersPlayingCount= 8
    
real array CS_CurseDuration
    
string array CS_PlayersColors
integer array CS_GetDebuffFor
    
boolean array CS_CurseAvailable
integer array CS_GetCurseFor

integer CS_FOR_CREEP= 0
integer CS_FOR_TOWER= 1
integer CS_FOR_KING= 2
integer CS_FOR_BOTH

    // CS_ActiveCurses CHILDKEYS
integer CS_PLAYER_ID= 0
integer CS_CURSE_ID= 1



//JASSHelper struct globals:

endglobals


//===========================================================================
// 
// |cffff1805Kings & Curses TD V1.198|r
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: Zeus#1516
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************


function InitGlobals takes nothing returns nothing
    local integer i= 0
    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_Lives[i]=0
        set i=i + 1
    endloop

    set udg_BuildPeriodTime=0
    set udg_Player_Count=0
    set udg_Spawns=CreateForce()
    set udg_Dialog_Mode=DialogCreate()
    set udg_FirstWaveTimer=CreateTimer()
    set udg_LoopInt1=0
    set udg_LoopInt2=0
    set udg_Force=CreateForce()
    set udg_Group=CreateGroup()
    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_ColorName[i]=""
        set i=i + 1
    endloop

    set udg_TempInt=0
    set i=0
    loop
        exitwhen ( i > 0 )
        set udg_GoldLevel[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_SpecialWave[i]=""
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 0 )
        set udg_CreepSpawns[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_SpawnInterval[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_IsPlaying[i]=false
        set i=i + 1
    endloop

    set udg_Players=CreateForce()
    set udg_Level=0
    set udg_CreepCount=0
    set udg_WaveTime=0
    set udg_SellValueG=0
    set udg_SellValueL=0
    set i=0
    loop
        exitwhen ( i > 0 )
        set udg_SellGold[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 0 )
        set udg_SellLumber[i]=0
        set i=i + 1
    endloop

    set udg_SellCount=0
    set udg_SinglePlayer=false
    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_Income_array[i]=0
        set i=i + 1
    endloop

    set udg_XTemp_LoopInt=0
    set udg_XTemp_LoopInt2=0
    set udg_XTemp_Force=CreateForce()
    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_WaveNotify[i]=""
        set i=i + 1
    endloop

    set udg_XCorpse=CreateGroup()
    set udg_MaxLevel=0
    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_WaveMultBord[i]=""
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_WaveMultBordC[i]=""
        set i=i + 1
    endloop

    set udg_XTemp_LoopInt3=0
    set udg_AbiAmount=0
    set i=0
    loop
        exitwhen ( i > 12 )
        set udg_PengAmount[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 1 )
        set udg_CurseTimer[i]=CreateTimer()
        set i=i + 1
    endloop

    set udg_KingsCursing=CreateGroup()
    set udg_CS_PlayersPlaying=CreateForce()
    set udg_TempPlayerId=0
    set udg_CreepsAliveCount=0
    set udg_PlayersPlaying=CreateForce()
    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_HealText[i]=""
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_AutoHealText[i]=""
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 32 )
        set udg_IncomePerCreep[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 70 )
        set udg_ArmorType[i]=""
        set i=i + 1
    endloop

    set udg_ArmorHeavy=""
    set udg_ArmorUnnarmored=""
    set udg_ArmorFortified=""
    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_HasHealed[i]=false
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_AutoHealTreshold[i]=0
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 9 )
        set udg_Color[i]=""
        set i=i + 1
    endloop

    set i=0
    loop
        exitwhen ( i > 8 )
        set udg_DifficultyText[i]=""
        set i=i + 1
    endloop

    set udg_StatLevel=0
    set udg_StatLevelMax=0
    set udg_TempInt2=0
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************

//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_Warning=CreateSound("Sound/Interface/Warning.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_Warning, "Warning")
    call SetSoundDuration(gg_snd_Warning, 1903)
    call SetSoundVolume(gg_snd_Warning, 80)
    set gg_snd_SoulPreservation=CreateSound("Abilities/Spells/Demon/SoulPreservation/SoulPreservation.flac", false, true, true, 0, 0, "SpellsEAX")
    call SetSoundParamsFromLabel(gg_snd_SoulPreservation, "SoulPreservation")
    call SetSoundDuration(gg_snd_SoulPreservation, 3612)
    call SetSoundVolume(gg_snd_SoulPreservation, 127)
    set gg_snd_DispelMagicTarget=CreateSound("Abilities/Spells/Human/DispelMagic/DispelMagicTarget.flac", false, true, true, 0, 0, "SpellsEAX")
    call SetSoundParamsFromLabel(gg_snd_DispelMagicTarget, "DispelMagic")
    call SetSoundDuration(gg_snd_DispelMagicTarget, 1950)
    call SetSoundVolume(gg_snd_DispelMagicTarget, 127)
    set gg_snd_DivineShield=CreateSound("Abilities/Spells/Human/DivineShield/DivineShield.flac", false, true, true, 0, 0, "SpellsEAX")
    call SetSoundParamsFromLabel(gg_snd_DivineShield, "DivineShield")
    call SetSoundDuration(gg_snd_DivineShield, 1955)
    call SetSoundVolume(gg_snd_DivineShield, 127)
    set gg_snd_ClanInvitation=CreateSound("Sound/Interface/ClanInvitation.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_ClanInvitation, "ClanInvitation")
    call SetSoundDuration(gg_snd_ClanInvitation, 4295)
    call SetSoundVolume(gg_snd_ClanInvitation, 127)
    set gg_snd_GoodJob=CreateSound("Sound/Interface/GoodJob.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_GoodJob, "GoodJob")
    call SetSoundDuration(gg_snd_GoodJob, 2954)
    call SetSoundVolume(gg_snd_GoodJob, 127)
    set gg_snd_BattleNetTick=CreateSound("Sound/Interface/BattleNetTick.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_BattleNetTick, "ChatroomTimerTick")
    call SetSoundDuration(gg_snd_BattleNetTick, 657)
    call SetSoundVolume(gg_snd_BattleNetTick, 80)
    set gg_snd_QuestFailed=CreateSound("Sound/Interface/QuestFailed.flac", false, false, false, 0, 0, "DefaultEAXON")
    call SetSoundParamsFromLabel(gg_snd_QuestFailed, "QuestFailed")
    call SetSoundDuration(gg_snd_QuestFailed, 4690)
    call SetSoundVolume(gg_snd_QuestFailed, 80)
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateUnitsForPlayer0 takes nothing returns nothing
    local player p= Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0024=BlzCreateUnitWithSkin(p, 'H00Q', - 9226.8, 2428.4, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer1 takes nothing returns nothing
    local player p= Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0025=BlzCreateUnitWithSkin(p, 'H00Q', - 1287.8, 2420.8, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer2 takes nothing returns nothing
    local player p= Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0026=BlzCreateUnitWithSkin(p, 'H00Q', - 9220.1, - 3721.2, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer3 takes nothing returns nothing
    local player p= Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0027=BlzCreateUnitWithSkin(p, 'H00Q', - 1274.1, - 3714.8, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer4 takes nothing returns nothing
    local player p= Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0031=BlzCreateUnitWithSkin(p, 'H00Q', 1270.7, 2403.6, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer5 takes nothing returns nothing
    local player p= Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0030=BlzCreateUnitWithSkin(p, 'H00Q', 9222.1, 2404.5, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer6 takes nothing returns nothing
    local player p= Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0028=BlzCreateUnitWithSkin(p, 'H00Q', 1280.2, - 3717.0, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer7 takes nothing returns nothing
    local player p= Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H00Q_0029=BlzCreateUnitWithSkin(p, 'H00Q', 9213.7, - 3717.6, 270.000, 'H00Q')
endfunction

//===========================================================================
function CreateUnitsForPlayer8 takes nothing returns nothing
    local player p= Player(8)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u=BlzCreateUnitWithSkin(p, 'Ofar', - 842.6, 3703.9, 7.750, 'Ofar')
    set u=BlzCreateUnitWithSkin(p, 'Ofar', 849.4, 3695.8, 190.680, 'Ofar')
    set u=BlzCreateUnitWithSkin(p, 'Oshd', 10.7, 3679.3, 241.836, 'Oshd')
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer0()
    call CreateUnitsForPlayer1()
    call CreateUnitsForPlayer2()
    call CreateUnitsForPlayer3()
    call CreateUnitsForPlayer4()
    call CreateUnitsForPlayer5()
    call CreateUnitsForPlayer6()
    call CreateUnitsForPlayer7()
    call CreateUnitsForPlayer8()
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreatePlayerBuildings()
    call CreatePlayerUnits()
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Blue_Barracks_1=Rect(- 3648.0, 2912.0, - 2848.0, 3552.0)
    set gg_rct_Blue_Barracks_2=Rect(- 4704.0, 3200.0, - 4608.0, 3296.0)
    set gg_rct_Blue_Income_Area=Rect(- 1696.0, 1888.0, - 864.0, 2976.0)
    set gg_rct_Blue_Spawn=Rect(- 3904.0, 832.0, - 3808.0, 928.0)
    set gg_rct_Bue_Igloo=Rect(- 2432.0, 1216.0, - 2304.0, 1344.0)
    set gg_rct_Creep_Death_Area_Blue_and_Purple=Rect(- 2240.0, - 864.0, - 1856.0, - 416.0)
    set gg_rct_Creep_Death_Area_Orange_and_Pink=Rect(8256.0, - 896.0, 8640.0, - 448.0)
    set gg_rct_Creep_Death_Area_Red_and_Teal=Rect(- 8608.0, - 864.0, - 8256.0, - 416.0)
    set gg_rct_Creep_Death_Area_Yellow_and_Green=Rect(1888.0, - 896.0, 2240.0, - 448.0)
    set gg_rct_Creep_Move_Blue_1=Rect(- 5120.0, 1984.0, - 4896.0, 2368.0)
    set gg_rct_Creep_Move_Blue_2=Rect(- 5120.0, - 96.0, - 4864.0, 256.0)
    set gg_rct_Creep_Move_Blue_3=Rect(- 4672.0, - 544.0, - 4256.0, - 320.0)
    set gg_rct_Creep_Move_Blue_4=Rect(- 2464.0, - 608.0, - 2240.0, - 256.0)
    set gg_rct_Creep_Move_Green_1=Rect(4896.0, - 3680.0, 5120.0, - 3264.0)
    set gg_rct_Creep_Move_Green_2=Rect(4864.0, - 1568.0, 5120.0, - 1216.0)
    set gg_rct_Creep_Move_Green_3=Rect(4288.0, - 992.0, 4672.0, - 768.0)
    set gg_rct_Creep_Move_Green_4=Rect(2272.0, - 1024.0, 2464.0, - 672.0)
    set gg_rct_Creep_Move_Orange_1=Rect(5376.0, 1984.0, 5600.0, 2368.0)
    set gg_rct_Creep_Move_Orange_2=Rect(5376.0, - 128.0, 5632.0, 224.0)
    set gg_rct_Creep_Move_Orange_3=Rect(5824.0, - 576.0, 6240.0, - 352.0)
    set gg_rct_Creep_Move_Orange_4=Rect(8032.0, - 640.0, 8256.0, - 288.0)
    set gg_rct_Creep_Move_Pink_1=Rect(5376.0, - 3680.0, 5600.0, - 3264.0)
    set gg_rct_Creep_Move_Pink_2=Rect(5376.0, - 1568.0, 5632.0, - 1216.0)
    set gg_rct_Creep_Move_Pink_3=Rect(5824.0, - 992.0, 6240.0, - 768.0)
    set gg_rct_Creep_Move_Pink_4=Rect(8032.0, - 1024.0, 8256.0, - 672.0)
    set gg_rct_Creep_Move_Purple_1=Rect(- 5120.0, - 3648.0, - 4896.0, - 3264.0)
    set gg_rct_Creep_Move_Purple_2=Rect(- 5120.0, - 1536.0, - 4864.0, - 1184.0)
    set gg_rct_Creep_Move_Purple_3=Rect(- 4672.0, - 960.0, - 4256.0, - 736.0)
    set gg_rct_Creep_Move_Purple_4=Rect(- 2464.0, - 992.0, - 2240.0, - 640.0)
    set gg_rct_Creep_Move_Red_1=Rect(- 5600.0, 1984.0, - 5376.0, 2368.0)
    set gg_rct_Creep_Move_Red_2=Rect(- 5632.0, - 96.0, - 5376.0, 256.0)
    set gg_rct_Creep_Move_Red_3=Rect(- 6208.0, - 544.0, - 5824.0, - 320.0)
    set gg_rct_Creep_Move_Red_4=Rect(- 8224.0, - 640.0, - 8032.0, - 256.0)
    set gg_rct_Creep_Move_Teal_1=Rect(- 5600.0, - 3648.0, - 5376.0, - 3264.0)
    set gg_rct_Creep_Move_Teal_2=Rect(- 5632.0, - 1536.0, - 5376.0, - 1184.0)
    set gg_rct_Creep_Move_Teal_3=Rect(- 6208.0, - 960.0, - 5824.0, - 736.0)
    set gg_rct_Creep_Move_Teal_4=Rect(- 8224.0, - 1024.0, - 8032.0, - 672.0)
    set gg_rct_Creep_Move_Yellow_1=Rect(4896.0, 1984.0, 5120.0, 2368.0)
    set gg_rct_Creep_Move_Yellow_2=Rect(4864.0, - 128.0, 5120.0, 224.0)
    set gg_rct_Creep_Move_Yellow_3=Rect(4288.0, - 576.0, 4672.0, - 352.0)
    set gg_rct_Creep_Move_Yellow_4=Rect(2272.0, - 672.0, 2464.0, - 288.0)
    set gg_rct_Creep_Spawn_Blue=Rect(- 2368.0, 2176.0, - 2048.0, 2624.0)
    set gg_rct_Creep_Spawn_Green=Rect(2048.0, - 3904.0, 2368.0, - 3424.0)
    set gg_rct_Creep_Spawn_Orange=Rect(8128.0, 2144.0, 8448.0, 2592.0)
    set gg_rct_Creep_Spawn_Pink=Rect(8128.0, - 3872.0, 8448.0, - 3456.0)
    set gg_rct_Creep_Spawn_Purple=Rect(- 2368.0, - 3840.0, - 2048.0, - 3424.0)
    set gg_rct_Creep_Spawn_Red=Rect(- 8448.0, 2176.0, - 8128.0, 2624.0)
    set gg_rct_Creep_Spawn_Teal=Rect(- 8448.0, - 3872.0, - 8128.0, - 3392.0)
    set gg_rct_Creep_Spawn_Yellow=Rect(2048.0, 2144.0, 2368.0, 2592.0)
    set gg_rct_Green_Barracks_1=Rect(2848.0, - 4896.0, 3648.0, - 4256.0)
    set gg_rct_Green_Barracks_2=Rect(4608.0, - 4576.0, 4704.0, - 4480.0)
    set gg_rct_Green_Igloo=Rect(2304.0, - 2656.0, 2432.0, - 2528.0)
    set gg_rct_Green_Income_Area=Rect(864.0, - 4256.0, 1696.0, - 3168.0)
    set gg_rct_Green_Spawn=Rect(3776.0, - 2240.0, 3872.0, - 2144.0)
    set gg_rct_Greens_Area=Rect(704.0, - 4064.0, 5152.0, - 736.0)
    set gg_rct_Lasers=Rect(- 5344.0, - 736.0, - 5152.0, - 544.0)
    set gg_rct_Lasers_Copy=Rect(5152.0, - 768.0, 5344.0, - 576.0)
    set gg_rct_Orange_Barracks_1=Rect(6848.0, 2912.0, 7648.0, 3552.0)
    set gg_rct_Orange_Barracks_2=Rect(5792.0, 3200.0, 5888.0, 3296.0)
    set gg_rct_Orange_Igloo=Rect(8064.0, 1216.0, 8192.0, 1344.0)
    set gg_rct_Orange_Income_Area=Rect(8800.0, 1888.0, 9632.0, 2944.0)
    set gg_rct_Orange_Spawn=Rect(6592.0, 832.0, 6688.0, 928.0)
    set gg_rct_Oranges_Area=Rect(5312.0, - 576.0, 9824.0, 2784.0)
    set gg_rct_Pink_Barracks_1=Rect(6848.0, - 4864.0, 7648.0, - 4224.0)
    set gg_rct_Pink_Barracks_2=Rect(5792.0, - 4576.0, 5888.0, - 4480.0)
    set gg_rct_Pink_Igloo=Rect(8064.0, - 2656.0, 8192.0, - 2528.0)
    set gg_rct_Pink_Income_Area=Rect(8800.0, - 4256.0, 9632.0, - 3200.0)
    set gg_rct_Pink_Spawn=Rect(6592.0, - 2240.0, 6688.0, - 2144.0)
    set gg_rct_Pinks_Area=Rect(5344.0, - 4128.0, 10048.0, - 672.0)
    set gg_rct_Purple_Barracks_1=Rect(- 3648.0, - 4896.0, - 2848.0, - 4256.0)
    set gg_rct_Purple_Barracks_2=Rect(- 4704.0, - 4576.0, - 4608.0, - 4480.0)
    set gg_rct_Purple_Igloo=Rect(- 2432.0, - 2656.0, - 2304.0, - 2528.0)
    set gg_rct_Purple_Income_Area=Rect(- 1696.0, - 4256.0, - 864.0, - 3168.0)
    set gg_rct_Purple_Spawn=Rect(- 3904.0, - 2240.0, - 3808.0, - 2144.0)
    set gg_rct_Purples_Area=Rect(- 5152.0, - 4096.0, - 448.0, - 736.0)
    set gg_rct_Red_Barracks_1=Rect(- 7648.0, 2912.0, - 6848.0, 3552.0)
    set gg_rct_Red_Barracks_2=Rect(- 5888.0, 3200.0, - 5792.0, 3296.0)
    set gg_rct_Red_Income_Area=Rect(- 9632.0, 1888.0, - 8800.0, 2976.0)
    set gg_rct_Red_Spawn=Rect(- 6720.0, 832.0, - 6624.0, 928.0)
    set gg_rct_Reds_Area=Rect(- 10016.0, - 544.0, - 5344.0, 2816.0)
    set gg_rct_Spawn_Kings_Castle_Blue=Rect(- 1632.0, 1056.0, - 1056.0, 1472.0)
    set gg_rct_Spawn_Kings_Castle_Green=Rect(1056.0, - 2784.0, 1632.0, - 2368.0)
    set gg_rct_Spawn_Kings_Castle_Orange=Rect(8864.0, 1056.0, 9440.0, 1472.0)
    set gg_rct_Spawn_Kings_Castle_Pink=Rect(8864.0, - 2784.0, 9440.0, - 2368.0)
    set gg_rct_Spawn_Kings_Castle_Purple=Rect(- 1632.0, - 2784.0, - 1056.0, - 2368.0)
    set gg_rct_Spawn_Kings_Castle_Red=Rect(- 9440.0, 1056.0, - 8864.0, 1472.0)
    set gg_rct_Spawn_Kings_Castle_Teal=Rect(- 9440.0, - 2784.0, - 8864.0, - 2368.0)
    set gg_rct_Spawn_Kings_Castle_Yellow=Rect(1056.0, 1056.0, 1632.0, 1472.0)
    set gg_rct_Teal_Barracks_1=Rect(- 7648.0, - 4896.0, - 6848.0, - 4256.0)
    set gg_rct_Teal_Barracks_2=Rect(- 5888.0, - 4576.0, - 5792.0, - 4480.0)
    set gg_rct_Teal_Income_Area=Rect(- 9632.0, - 4256.0, - 8800.0, - 3168.0)
    set gg_rct_Teal_Spawn=Rect(- 6720.0, - 2240.0, - 6624.0, - 2144.0)
    set gg_rct_Teals_Area=Rect(- 9824.0, - 4064.0, - 5344.0, - 736.0)
    set gg_rct_Blues_Area=Rect(- 5184.0, - 544.0, - 672.0, 2720.0)
    set gg_rct_Trees=Rect(- 8192.0, 0.0, - 8064.0, 128.0)
    set gg_rct_Trees_2=Rect(- 2432.0, 0.0, - 2304.0, 128.0)
    set gg_rct_Trees_3=Rect(- 8192.0, - 1408.0, - 8064.0, - 1280.0)
    set gg_rct_Trees_4=Rect(- 2432.0, - 1408.0, - 2304.0, - 1280.0)
    set gg_rct_Trees_5=Rect(2304.0, 0.0, 2432.0, 128.0)
    set gg_rct_Trees_6=Rect(8064.0, 0.0, 8192.0, 128.0)
    set gg_rct_Trees_7=Rect(2304.0, - 1408.0, 2432.0, - 1280.0)
    set gg_rct_Trees_8=Rect(8064.0, - 1408.0, 8192.0, - 1280.0)
    set gg_rct_Yellow_Barracks_1=Rect(2848.0, 2912.0, 3648.0, 3552.0)
    set gg_rct_Yellow_Barracks_2=Rect(4608.0, 3200.0, 4704.0, 3296.0)
    set gg_rct_Yellow_Igloo=Rect(2304.0, 1216.0, 2432.0, 1344.0)
    set gg_rct_Yellow_Spawn=Rect(3776.0, 832.0, 3872.0, 928.0)
    set gg_rct_Yellows_Area=Rect(480.0, - 576.0, 5152.0, 2784.0)
    set gg_rct_Aura=Rect(3680.0, 960.0, 3808.0, 1088.0)
    set gg_rct_Aura_Copy_3=Rect(3680.0, 704.0, 3808.0, 832.0)
    set gg_rct_Aura_Copy_4=Rect(6496.0, 960.0, 6624.0, 1088.0)
    set gg_rct_Aura_Copy_6=Rect(6496.0, 704.0, 6624.0, 832.0)
    set gg_rct_Aura_Copy_8=Rect(3680.0, - 2112.0, 3808.0, - 1984.0)
    set gg_rct_Aura_Copy_10=Rect(3680.0, - 2368.0, 3808.0, - 2240.0)
    set gg_rct_Aura_Copy_12=Rect(6496.0, - 2112.0, 6624.0, - 1984.0)
    set gg_rct_Aura_Copy_14=Rect(6496.0, - 2368.0, 6624.0, - 2240.0)
    set gg_rct_Aura_Copy_17=Rect(- 4000.0, - 2368.0, - 3872.0, - 2240.0)
    set gg_rct_Aura_Copy_18=Rect(- 4000.0, - 2112.0, - 3872.0, - 1984.0)
    set gg_rct_Aura_Copy_21=Rect(- 4000.0, 704.0, - 3872.0, 832.0)
    set gg_rct_Aura_Copy_22=Rect(- 4000.0, 960.0, - 3872.0, 1088.0)
    set gg_rct_Aura_Copy_24=Rect(- 6816.0, 960.0, - 6688.0, 1088.0)
    set gg_rct_Aura_Copy_27=Rect(- 6816.0, 704.0, - 6688.0, 832.0)
    set gg_rct_Aura_Copy_28=Rect(- 6816.0, - 2112.0, - 6688.0, - 1984.0)
    set gg_rct_Aura_Copy_31=Rect(- 6816.0, - 2368.0, - 6688.0, - 2240.0)
    set gg_rct_Purple_Voodoo_Lodge=Rect(- 2496.0, - 4800.0, - 2112.0, - 4320.0)
    set gg_rct_Teal_Voodoo_Lodge=Rect(- 8384.0, - 4800.0, - 8000.0, - 4320.0)
    set gg_rct_Red_Voodoo_Lodge=Rect(- 8384.0, 3008.0, - 8000.0, 3488.0)
    set gg_rct_Blue_Voodoo_Lodge=Rect(- 2496.0, 3040.0, - 2112.0, 3520.0)
    set gg_rct_Yellow_Voodoo_Lodge=Rect(2112.0, 3008.0, 2496.0, 3488.0)
    set gg_rct_Orange_Voodoo_Lodge=Rect(8000.0, 3008.0, 8384.0, 3488.0)
    set gg_rct_Pink_Voodoo_Lodge=Rect(8000.0, - 4800.0, 8384.0, - 4320.0)
    set gg_rct_Green_Voodoo_Lodge=Rect(2112.0, - 4800.0, 2496.0, - 4320.0)
    set gg_rct_Yellow_Income_Area=Rect(864.0, 1888.0, 1696.0, 2976.0)
    set gg_rct_Penguin_Chop_Red=Rect(- 8352.0, 896.0, - 7904.0, 1216.0)
    set gg_rct_Penguin_Chop_Teal=Rect(- 8352.0, - 2528.0, - 7904.0, - 2208.0)
    set gg_rct_Penguin_Chop_Blue=Rect(- 2592.0, 896.0, - 2144.0, 1216.0)
    set gg_rct_Penguin_Chop_Purple=Rect(- 2592.0, - 2528.0, - 2144.0, - 2208.0)
    set gg_rct_Penguin_Chop_Yellow=Rect(2144.0, 896.0, 2592.0, 1216.0)
    set gg_rct_Penguin_Chop_Orange=Rect(7904.0, 896.0, 8352.0, 1216.0)
    set gg_rct_Penguin_Chop_Green=Rect(2144.0, - 2528.0, 2592.0, - 2208.0)
    set gg_rct_Penguin_Chop_Pink=Rect(7904.0, - 2528.0, 8352.0, - 2208.0)
    set gg_rct_Red_Igloo=Rect(- 8192.0, 1216.0, - 8064.0, 1344.0)
    set gg_rct_Teal_Igloo=Rect(- 8192.0, - 2656.0, - 8064.0, - 2528.0)
    set gg_rct_Discord=Rect(- 1376.0, 4320.0, - 512.0, 4576.0)
    set gg_rct_Discord_Copy=Rect(- 352.0, 4288.0, 512.0, 4544.0)
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Map Init
//===========================================================================
function Trig_Map_Init_Func007002 takes nothing returns nothing
    call CreateFogModifierRectBJ(true, GetEnumPlayer(), FOG_OF_WAR_VISIBLE, GetEntireMapRect())
endfunction

function Trig_Map_Init_Func008002 takes nothing returns nothing
    call SetPlayerFlagBJ(PLAYER_STATE_GIVES_BOUNTY, true, GetEnumPlayer())
endfunction

function Trig_Map_Init_Func349002 takes nothing returns nothing
    call SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, 115)
endfunction

function Trig_Map_Init_Func350002 takes nothing returns nothing
    call SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER, 20)
endfunction

function Trig_Map_Init_Func352Func002C takes nothing returns boolean
    if ( not ( GetPlayerSlotState(ConvertedPlayer(udg_LoopInt1)) == PLAYER_SLOT_STATE_PLAYING ) ) then
        return false
    endif
    return true
endfunction

function Trig_Map_Init_Actions takes nothing returns nothing
    call FlashQuestDialogButtonBJ()
    call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_909", "TRIGSTR_910", "ReplaceableTextures\\CommandButtons\\BTNAmbush.blp")
    call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_911", "TRIGSTR_912", "ReplaceableTextures\\CommandButtons\\BTNThunderclap.blp")
    call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_2201", "TRIGSTR_2202", "ReplaceableTextures\\PassiveButtons\\PASBTNInvisibility.blp")
    call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_913", "TRIGSTR_914", "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp")
    call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_915", "TRIGSTR_916", "ReplaceableTextures\\CommandButtons\\BTNSoulBurn.blp")
    call ForForce(GetPlayersAll(), function Trig_Map_Init_Func007002)
    call ForForce(GetPlayersAll(), function Trig_Map_Init_Func008002)
    set udg_Lives[1]=30
    set udg_Lives[2]=30
    set udg_Lives[3]=30
    set udg_Lives[4]=30
    set udg_Lives[5]=30
    set udg_Lives[6]=30
    set udg_Lives[7]=30
    set udg_Lives[8]=30
    // Detect Single/Multi Player
    call InitGameCacheBJ("SinglePlayer.w3v")
    if ( SaveGameCache(bj_lastCreatedGameCache) == true ) then
    set udg_SinglePlayer=true
    else
    set udg_SinglePlayer=false
    endif
    // Setting up Sell Values
    set udg_SellValueG=0.75
    set udg_SellValueL=0.75
    set udg_SellCount=1
    set udg_SellType[udg_SellCount]='h01B'
    set udg_SellGold[udg_SellCount]=50
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00F'
    set udg_SellGold[udg_SellCount]=170
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01D'
    set udg_SellGold[udg_SellCount]=340
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00K'
    set udg_SellGold[udg_SellCount]=540
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='e003'
    set udg_SellGold[udg_SellCount]=1250
    set udg_SellLumber[udg_SellCount]=625
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='u004'
    set udg_SellGold[udg_SellCount]=40
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='u00C'
    set udg_SellGold[udg_SellCount]=360
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01U'
    set udg_SellGold[udg_SellCount]=0
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n00J'
    set udg_SellGold[udg_SellCount]=405
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n027'
    set udg_SellGold[udg_SellCount]=1215
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n028'
    set udg_SellGold[udg_SellCount]=2235
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01B'
    set udg_SellGold[udg_SellCount]=3575
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02O'
    set udg_SellGold[udg_SellCount]=405
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01R'
    set udg_SellGold[udg_SellCount]=1215
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01Q'
    set udg_SellGold[udg_SellCount]=2235
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01T'
    set udg_SellGold[udg_SellCount]=3575
    set udg_SellLumber[udg_SellCount]=20
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02I'
    set udg_SellGold[udg_SellCount]=200
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02J'
    set udg_SellGold[udg_SellCount]=515
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n00I'
    set udg_SellGold[udg_SellCount]=965
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n00D'
    set udg_SellGold[udg_SellCount]=120
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n00E'
    set udg_SellGold[udg_SellCount]=360
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02N'
    set udg_SellGold[udg_SellCount]=680
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n00K'
    set udg_SellGold[udg_SellCount]=310
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n001'
    set udg_SellGold[udg_SellCount]=690
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01S'
    set udg_SellGold[udg_SellCount]=910
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n021'
    set udg_SellGold[udg_SellCount]=85
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n008'
    set udg_SellGold[udg_SellCount]=200
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n009'
    set udg_SellGold[udg_SellCount]=385
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n01N'
    set udg_SellGold[udg_SellCount]=645
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n025'
    set udg_SellGold[udg_SellCount]=945
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02A'
    set udg_SellGold[udg_SellCount]=115
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n004'
    set udg_SellGold[udg_SellCount]=315
    set udg_SellLumber[udg_TempInt]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02C'
    set udg_SellGold[udg_SellCount]=560
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02D'
    set udg_SellGold[udg_SellCount]=885
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02E'
    set udg_SellGold[udg_SellCount]=1255
    set udg_SellLumber[udg_SellCount]=0
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n013'
    set udg_SellGold[udg_SellCount]=300
    set udg_SellLumber[udg_SellCount]=150
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n02G'
    set udg_SellGold[udg_SellCount]=650
    set udg_SellLumber[udg_SellCount]=325
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='n002'
    set udg_SellGold[udg_SellCount]=400
    set udg_SellLumber[udg_SellCount]=200
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00O'
    set udg_SellGold[udg_SellCount]=1600
    set udg_SellLumber[udg_SellCount]=800
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00L'
    set udg_SellGold[udg_SellCount]=2400
    set udg_SellLumber[udg_SellCount]=1200
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01K'
    set udg_SellGold[udg_SellCount]=3500
    set udg_SellLumber[udg_SellCount]=1750
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01H'
    set udg_SellGold[udg_SellCount]=4000
    set udg_SellLumber[udg_SellCount]=2000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h014'
    set udg_SellGold[udg_SellCount]=7000
    set udg_SellLumber[udg_SellCount]=4000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01I'
    set udg_SellGold[udg_SellCount]=8500
    set udg_SellLumber[udg_SellCount]=5500
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00A'
    set udg_SellGold[udg_SellCount]=6000
    set udg_SellLumber[udg_SellCount]=3000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01J'
    set udg_SellGold[udg_SellCount]=10000
    set udg_SellLumber[udg_SellCount]=5500
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h00E'
    set udg_SellGold[udg_SellCount]=8000
    set udg_SellLumber[udg_SellCount]=4000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h01L'
    set udg_SellGold[udg_SellCount]=12000
    set udg_SellLumber[udg_SellCount]=6000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h010'
    set udg_SellGold[udg_SellCount]=10000
    set udg_SellLumber[udg_SellCount]=5000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h011'
    set udg_SellGold[udg_SellCount]=20000
    set udg_SellLumber[udg_SellCount]=10000
    set udg_SellCount=( udg_SellCount + 1 )
    set udg_SellType[udg_SellCount]='h113'
    set udg_SellGold[udg_SellCount]=5000
    set udg_SellLumber[udg_SellCount]=5000
    set udg_SellCount=( udg_SellCount + 1 )
    // Setting up Kick Colors
    set udg_ColorName[2]="blue"
    set udg_ColorName[3]="teal"
    set udg_ColorName[4]="purple"
    set udg_ColorName[5]="yellow"
    set udg_ColorName[6]="orange"
    set udg_ColorName[7]="green"
    set udg_ColorName[8]="pink"
    // Setting up Init Rects
    set udg_SpawnRects[1]=gg_rct_Red_Spawn
    set udg_SpawnRects[2]=gg_rct_Blue_Spawn
    set udg_SpawnRects[3]=gg_rct_Teal_Spawn
    set udg_SpawnRects[4]=gg_rct_Purple_Spawn
    set udg_SpawnRects[5]=gg_rct_Yellow_Spawn
    set udg_SpawnRects[6]=gg_rct_Orange_Spawn
    set udg_SpawnRects[7]=gg_rct_Green_Spawn
    set udg_SpawnRects[8]=gg_rct_Pink_Spawn
    // Setting up Spawn Rects
    set udg_CheckpointRegion[1]=gg_rct_Creep_Spawn_Red
    set udg_CheckpointRegion[2]=gg_rct_Creep_Spawn_Blue
    set udg_CheckpointRegion[3]=gg_rct_Creep_Spawn_Teal
    set udg_CheckpointRegion[4]=gg_rct_Creep_Spawn_Purple
    set udg_CheckpointRegion[5]=gg_rct_Creep_Spawn_Yellow
    set udg_CheckpointRegion[6]=gg_rct_Creep_Spawn_Orange
    set udg_CheckpointRegion[7]=gg_rct_Creep_Spawn_Green
    set udg_CheckpointRegion[8]=gg_rct_Creep_Spawn_Pink
    // Setting dest1
    set udg_CheckpointRegion[9]=gg_rct_Creep_Move_Red_1
    set udg_CheckpointRegion[10]=gg_rct_Creep_Move_Blue_1
    set udg_CheckpointRegion[11]=gg_rct_Creep_Move_Teal_1
    set udg_CheckpointRegion[12]=gg_rct_Creep_Move_Purple_1
    set udg_CheckpointRegion[13]=gg_rct_Creep_Move_Yellow_1
    set udg_CheckpointRegion[14]=gg_rct_Creep_Move_Orange_1
    set udg_CheckpointRegion[15]=gg_rct_Creep_Move_Green_1
    set udg_CheckpointRegion[16]=gg_rct_Creep_Move_Pink_1
    // Setting Dest2
    set udg_CheckpointRegion[17]=gg_rct_Creep_Move_Red_2
    set udg_CheckpointRegion[18]=gg_rct_Creep_Move_Blue_2
    set udg_CheckpointRegion[19]=gg_rct_Creep_Move_Teal_2
    set udg_CheckpointRegion[20]=gg_rct_Creep_Move_Purple_2
    set udg_CheckpointRegion[21]=gg_rct_Creep_Move_Yellow_2
    set udg_CheckpointRegion[22]=gg_rct_Creep_Move_Orange_2
    set udg_CheckpointRegion[23]=gg_rct_Creep_Move_Green_2
    set udg_CheckpointRegion[24]=gg_rct_Creep_Move_Pink_2
    // Setting Dest3
    set udg_CheckpointRegion[25]=gg_rct_Creep_Move_Red_3
    set udg_CheckpointRegion[26]=gg_rct_Creep_Move_Blue_3
    set udg_CheckpointRegion[27]=gg_rct_Creep_Move_Teal_3
    set udg_CheckpointRegion[28]=gg_rct_Creep_Move_Purple_3
    set udg_CheckpointRegion[29]=gg_rct_Creep_Move_Yellow_3
    set udg_CheckpointRegion[30]=gg_rct_Creep_Move_Orange_3
    set udg_CheckpointRegion[31]=gg_rct_Creep_Move_Green_3
    set udg_CheckpointRegion[32]=gg_rct_Creep_Move_Pink_3
    // Setting Dest4
    set udg_CheckpointRegion[33]=gg_rct_Creep_Move_Red_4
    set udg_CheckpointRegion[34]=gg_rct_Creep_Move_Blue_4
    set udg_CheckpointRegion[35]=gg_rct_Creep_Move_Teal_4
    set udg_CheckpointRegion[36]=gg_rct_Creep_Move_Purple_4
    set udg_CheckpointRegion[37]=gg_rct_Creep_Move_Yellow_4
    set udg_CheckpointRegion[38]=gg_rct_Creep_Move_Orange_4
    set udg_CheckpointRegion[39]=gg_rct_Creep_Move_Green_4
    set udg_CheckpointRegion[40]=gg_rct_Creep_Move_Pink_4
    // Setting Dest Death
    set udg_CheckpointRegion[41]=gg_rct_Creep_Death_Area_Red_and_Teal
    set udg_CheckpointRegion[42]=gg_rct_Creep_Death_Area_Blue_and_Purple
    set udg_CheckpointRegion[43]=gg_rct_Creep_Death_Area_Red_and_Teal
    set udg_CheckpointRegion[44]=gg_rct_Creep_Death_Area_Blue_and_Purple
    set udg_CheckpointRegion[45]=gg_rct_Creep_Death_Area_Yellow_and_Green
    set udg_CheckpointRegion[46]=gg_rct_Creep_Death_Area_Orange_and_Pink
    set udg_CheckpointRegion[47]=gg_rct_Creep_Death_Area_Yellow_and_Green
    set udg_CheckpointRegion[48]=gg_rct_Creep_Death_Area_Orange_and_Pink
    // Set Kings
    set udg_KingsArray[1]=gg_unit_H00Q_0024
    set udg_KingsArray[2]=gg_unit_H00Q_0025
    set udg_KingsArray[3]=gg_unit_H00Q_0026
    set udg_KingsArray[4]=gg_unit_H00Q_0027
    set udg_KingsArray[5]=gg_unit_H00Q_0031
    set udg_KingsArray[6]=gg_unit_H00Q_0030
    set udg_KingsArray[7]=gg_unit_H00Q_0028
    set udg_KingsArray[8]=gg_unit_H00Q_0029
    // Set KingCasRegs
    set udg_RegCastleArray[1]=gg_rct_Spawn_Kings_Castle_Red
    set udg_RegCastleArray[2]=gg_rct_Spawn_Kings_Castle_Blue
    set udg_RegCastleArray[3]=gg_rct_Spawn_Kings_Castle_Teal
    set udg_RegCastleArray[4]=gg_rct_Spawn_Kings_Castle_Purple
    set udg_RegCastleArray[5]=gg_rct_Spawn_Kings_Castle_Yellow
    set udg_RegCastleArray[6]=gg_rct_Spawn_Kings_Castle_Orange
    set udg_RegCastleArray[7]=gg_rct_Spawn_Kings_Castle_Green
    set udg_RegCastleArray[8]=gg_rct_Spawn_Kings_Castle_Pink
    // Set RacksRegs
    set udg_RegBarrackArray[1]=gg_rct_Red_Barracks_1
    set udg_RegBarrackArray[2]=gg_rct_Blue_Barracks_1
    set udg_RegBarrackArray[3]=gg_rct_Teal_Barracks_1
    set udg_RegBarrackArray[4]=gg_rct_Purple_Barracks_1
    set udg_RegBarrackArray[5]=gg_rct_Yellow_Barracks_1
    set udg_RegBarrackArray[6]=gg_rct_Orange_Barracks_1
    set udg_RegBarrackArray[7]=gg_rct_Green_Barracks_1
    set udg_RegBarrackArray[8]=gg_rct_Pink_Barracks_1
    // Set EliteRacksRegs
    set udg_RegEliteBarrackArray[1]=gg_rct_Red_Barracks_2
    set udg_RegEliteBarrackArray[2]=gg_rct_Blue_Barracks_2
    set udg_RegEliteBarrackArray[3]=gg_rct_Teal_Barracks_2
    set udg_RegEliteBarrackArray[4]=gg_rct_Purple_Barracks_2
    set udg_RegEliteBarrackArray[5]=gg_rct_Yellow_Barracks_2
    set udg_RegEliteBarrackArray[6]=gg_rct_Orange_Barracks_2
    set udg_RegEliteBarrackArray[7]=gg_rct_Green_Barracks_2
    set udg_RegEliteBarrackArray[8]=gg_rct_Pink_Barracks_2
    // Set VoodooLodgeRegs
    set udg_RegCursedLodgeArray[1]=gg_rct_Red_Voodoo_Lodge
    set udg_RegCursedLodgeArray[2]=gg_rct_Blue_Voodoo_Lodge
    set udg_RegCursedLodgeArray[3]=gg_rct_Teal_Voodoo_Lodge
    set udg_RegCursedLodgeArray[4]=gg_rct_Purple_Voodoo_Lodge
    set udg_RegCursedLodgeArray[5]=gg_rct_Yellow_Voodoo_Lodge
    set udg_RegCursedLodgeArray[6]=gg_rct_Orange_Voodoo_Lodge
    set udg_RegCursedLodgeArray[7]=gg_rct_Green_Voodoo_Lodge
    set udg_RegCursedLodgeArray[8]=gg_rct_Pink_Voodoo_Lodge
    // Trigger 1
    call ForForce(GetPlayersAll(), function Trig_Map_Init_Func349002)
    call ForForce(GetPlayersAll(), function Trig_Map_Init_Func350002)
    // Trigger 2-9
    set udg_LoopInt1=1
    loop
        exitwhen udg_LoopInt1 > 8
        // The magic of the loop...
        if ( Trig_Map_Init_Func352Func002C() ) then
            // SETTING end
            set udg_IsPlaying[udg_LoopInt1]=true
            set udg_Point=GetPlayerStartLocationLoc(ConvertedPlayer(udg_LoopInt1))
            call CreateNUnitsAtLoc(1, 'hhou', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call RemoveLocation(udg_Point)
            // KingCastle
            set udg_Point=GetRectCenter(udg_RegCastleArray[udg_LoopInt1])
            call CreateNUnitsAtLoc(1, 'h00T', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call RemoveLocation(udg_Point)
            // Barrack
            set udg_Point=GetRectCenter(udg_RegBarrackArray[udg_LoopInt1])
            call CreateNUnitsAtLoc(1, 'h001', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call RemoveLocation(udg_Point)
            // Elite Barrack
            set udg_Point=GetRectCenter(udg_RegEliteBarrackArray[udg_LoopInt1])
            call CreateNUnitsAtLoc(1, 'h009', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call RemoveLocation(udg_Point)
            // Voodoo Lodge
            set udg_Point=GetRectCenter(udg_RegCursedLodgeArray[udg_LoopInt1])
            call CreateNUnitsAtLoc(1, 'h00C', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call RemoveLocation(udg_Point)
            // NavyCap
            set udg_Point=GetRectCenter(udg_SpawnRects[udg_LoopInt1])
            call CreateNUnitsAtLoc(1, 'h00S', ConvertedPlayer(udg_LoopInt1), udg_Point, 270.00)
            call PanCameraToTimedLocForPlayer(ConvertedPlayer(udg_LoopInt1), udg_Point, 0)
            call RemoveLocation(udg_Point)
        else
            call RemoveUnit(udg_KingsArray[udg_LoopInt1])
        endif
        set udg_LoopInt1=udg_LoopInt1 + 1
    endloop
    // Trigger 10
    call DisplayTextToForce(GetPlayersAll(), ( ( "|cffff0000" + GetPlayerName(Player(0)) ) + " |ris picking the difficulty mode, please wait." ))
    call PauseAllUnitsBJ(true)
    // Trigger 11
    call SetTimeOfDay(12)
    call UseTimeOfDayBJ(false)
endfunction

//===========================================================================
function InitTrig_Map_Init takes nothing returns nothing
    set gg_trg_Map_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Map_Init, function Trig_Map_Init_Actions)
endfunction

//===========================================================================
// Trigger: Run texts
//===========================================================================
function Trig_Run_texts_Actions takes nothing returns nothing
    call SetTextTagPermanentBJ(GetLastCreatedTextTag(), false)
    call SetTextTagLifespanBJ(GetLastCreatedTextTag(), 40.00)
    call ShowTextTagForceBJ(false, GetLastCreatedTextTag(), GetPlayersAll())
    call ShowTextTagForceBJ(true, GetLastCreatedTextTag(), GetForceOfPlayer(udg_TutorPlayer))
endfunction

//===========================================================================
function InitTrig_Run_texts takes nothing returns nothing
    set gg_trg_Run_texts=CreateTrigger()
    call TriggerAddAction(gg_trg_Run_texts, function Trig_Run_texts_Actions)
endfunction

//===========================================================================
// Trigger: All player intro
//===========================================================================
function Trig_All_player_intro_Actions takes nothing returns nothing
    // RED
    set udg_TutorPlayer=Player(0)
    call CreateTextTagLocBJ("TRIGSTR_1475", GetRectCenter(gg_rct_Red_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1597", GetRectCenter(gg_rct_Red_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1484", GetRectCenter(gg_rct_Spawn_Kings_Castle_Red), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1485", GetRectCenter(gg_rct_Red_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1486", GetRectCenter(gg_rct_Red_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1487", GetRectCenter(gg_rct_Creep_Spawn_Red), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // BLUE
    set udg_TutorPlayer=Player(1)
    call CreateTextTagLocBJ("TRIGSTR_1488", GetRectCenter(gg_rct_Bue_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1598", GetRectCenter(gg_rct_Blue_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1489", GetRectCenter(gg_rct_Spawn_Kings_Castle_Blue), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1490", GetRectCenter(gg_rct_Blue_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1491", GetRectCenter(gg_rct_Blue_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1492", GetRectCenter(gg_rct_Creep_Spawn_Blue), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // TEAL
    set udg_TutorPlayer=Player(2)
    call CreateTextTagLocBJ("TRIGSTR_1493", GetRectCenter(gg_rct_Teal_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1599", GetRectCenter(gg_rct_Teal_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1494", GetRectCenter(gg_rct_Spawn_Kings_Castle_Teal), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1495", GetRectCenter(gg_rct_Teal_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1496", GetRectCenter(gg_rct_Teal_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1497", GetRectCenter(gg_rct_Creep_Spawn_Teal), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // PURPLE
    set udg_TutorPlayer=Player(3)
    call CreateTextTagLocBJ("TRIGSTR_1498", GetRectCenter(gg_rct_Purple_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1600", GetRectCenter(gg_rct_Purple_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1499", GetRectCenter(gg_rct_Spawn_Kings_Castle_Purple), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1500", GetRectCenter(gg_rct_Purple_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1501", GetRectCenter(gg_rct_Purple_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1502", GetRectCenter(gg_rct_Creep_Spawn_Purple), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // YELLOW
    set udg_TutorPlayer=Player(4)
    call CreateTextTagLocBJ("TRIGSTR_1503", GetRectCenter(gg_rct_Yellow_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1601", GetRectCenter(gg_rct_Yellow_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1504", GetRectCenter(gg_rct_Spawn_Kings_Castle_Yellow), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1505", GetRectCenter(gg_rct_Yellow_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1506", GetRectCenter(gg_rct_Yellow_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1507", GetRectCenter(gg_rct_Creep_Spawn_Yellow), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // ORANGE
    set udg_TutorPlayer=Player(5)
    call CreateTextTagLocBJ("TRIGSTR_1508", GetRectCenter(gg_rct_Orange_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1602", GetRectCenter(gg_rct_Orange_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1509", GetRectCenter(gg_rct_Spawn_Kings_Castle_Orange), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1510", GetRectCenter(gg_rct_Orange_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1511", GetRectCenter(gg_rct_Orange_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1512", GetRectCenter(gg_rct_Creep_Spawn_Orange), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // GREEN
    set udg_TutorPlayer=Player(6)
    call CreateTextTagLocBJ("TRIGSTR_1513", GetRectCenter(gg_rct_Green_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1603", GetRectCenter(gg_rct_Green_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1514", GetRectCenter(gg_rct_Spawn_Kings_Castle_Green), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1515", GetRectCenter(gg_rct_Green_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1516", GetRectCenter(gg_rct_Green_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1517", GetRectCenter(gg_rct_Creep_Spawn_Green), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    // PINK
    set udg_TutorPlayer=Player(7)
    call CreateTextTagLocBJ("TRIGSTR_1518", GetRectCenter(gg_rct_Pink_Igloo), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1604", GetRectCenter(gg_rct_Pink_Voodoo_Lodge), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1519", GetRectCenter(gg_rct_Spawn_Kings_Castle_Pink), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1520", GetRectCenter(gg_rct_Pink_Barracks_1), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1521", GetRectCenter(gg_rct_Pink_Income_Area), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
    call CreateTextTagLocBJ("TRIGSTR_1522", GetRectCenter(gg_rct_Creep_Spawn_Pink), 0, 10, 100, 100, 100, 0)
    call ConditionalTriggerExecute(gg_trg_Run_texts)
endfunction

//===========================================================================
function InitTrig_All_player_intro takes nothing returns nothing
    set gg_trg_All_player_intro=CreateTrigger()
    call TriggerAddAction(gg_trg_All_player_intro, function Trig_All_player_intro_Actions)
endfunction

//===========================================================================
// Trigger: Display All Aura
//===========================================================================
function Trig_Display_All_Aura_Actions takes nothing returns nothing
    call CreateTextTagLocBJ("TRIGSTR_1410", GetRectCenter(gg_rct_Aura), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_2324", GetRectCenter(gg_rct_Discord), 0, 20.00, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_2326", GetRectCenter(gg_rct_Discord_Copy), 0, 20.00, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1411", GetRectCenter(gg_rct_Aura_Copy_3), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1415", GetRectCenter(gg_rct_Aura_Copy_4), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1416", GetRectCenter(gg_rct_Aura_Copy_6), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1419", GetRectCenter(gg_rct_Aura_Copy_8), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_2325", GetRectCenter(gg_rct_Aura_Copy_10), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1423", GetRectCenter(gg_rct_Aura_Copy_12), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1425", GetRectCenter(gg_rct_Aura_Copy_14), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1428", GetRectCenter(gg_rct_Aura_Copy_17), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1429", GetRectCenter(gg_rct_Aura_Copy_18), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1432", GetRectCenter(gg_rct_Aura_Copy_21), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1433", GetRectCenter(gg_rct_Aura_Copy_22), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1435", GetRectCenter(gg_rct_Aura_Copy_24), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1438", GetRectCenter(gg_rct_Aura_Copy_27), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1439", GetRectCenter(gg_rct_Aura_Copy_28), 0, 10, 100, 100, 100, 0)
    call CreateTextTagLocBJ("TRIGSTR_1442", GetRectCenter(gg_rct_Aura_Copy_31), 0, 10, 100, 100, 100, 0)
endfunction

//===========================================================================
function InitTrig_Display_All_Aura takes nothing returns nothing
    set gg_trg_Display_All_Aura=CreateTrigger()
    call TriggerAddAction(gg_trg_Display_All_Aura, function Trig_Display_All_Aura_Actions)
endfunction

//===========================================================================
// Trigger: Select On Start
//===========================================================================
function Trig_Select_On_Start_Actions takes nothing returns nothing
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(0))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(1))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(2))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(3))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(4))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(5))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(6))
    call SelectUnitForPlayerSingle(GetLastCreatedUnit(), Player(7))
endfunction

//===========================================================================
function InitTrig_Select_On_Start takes nothing returns nothing
    set gg_trg_Select_On_Start=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Select_On_Start, 1.00)
    call TriggerAddAction(gg_trg_Select_On_Start, function Trig_Select_On_Start_Actions)
endfunction

//===========================================================================
// Trigger: Next Page
//===========================================================================
function Trig_Next_Page_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Next_Page_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ(GetTriggerUnit(), "build")
endfunction

//===========================================================================
function InitTrig_Next_Page takes nothing returns nothing
    set gg_trg_Next_Page=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Next_Page, EVENT_PLAYER_UNIT_SPELL_FINISH)
    call TriggerAddCondition(gg_trg_Next_Page, Condition(function Trig_Next_Page_Conditions))
    call TriggerAddAction(gg_trg_Next_Page, function Trig_Next_Page_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Work Init
//===========================================================================
function Trig_Penguin_Work_Init_Actions takes nothing returns nothing
    set udg_TreeRegion[1]=gg_rct_Trees
    set udg_TreeRegion[2]=gg_rct_Trees_2
    set udg_TreeRegion[3]=gg_rct_Trees_3
    set udg_TreeRegion[4]=gg_rct_Trees_4
    set udg_TreeRegion[5]=gg_rct_Trees_5
    set udg_TreeRegion[6]=gg_rct_Trees_6
    set udg_TreeRegion[7]=gg_rct_Trees_7
    set udg_TreeRegion[8]=gg_rct_Trees_8
    set udg_PenguinWorkRegion[1]=gg_rct_Penguin_Chop_Red
    set udg_PenguinWorkRegion[2]=gg_rct_Penguin_Chop_Blue
    set udg_PenguinWorkRegion[3]=gg_rct_Penguin_Chop_Teal
    set udg_PenguinWorkRegion[4]=gg_rct_Penguin_Chop_Purple
    set udg_PenguinWorkRegion[5]=gg_rct_Penguin_Chop_Yellow
    set udg_PenguinWorkRegion[6]=gg_rct_Penguin_Chop_Orange
    set udg_PenguinWorkRegion[7]=gg_rct_Penguin_Chop_Green
    set udg_PenguinWorkRegion[8]=gg_rct_Penguin_Chop_Pink
endfunction

//===========================================================================
function InitTrig_Penguin_Work_Init takes nothing returns nothing
    set gg_trg_Penguin_Work_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Penguin_Work_Init, function Trig_Penguin_Work_Init_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Work Order
//===========================================================================
function Trig_Penguin_Work_Order_Actions takes nothing returns nothing
    call IssueTargetDestructableOrder(GetTriggerUnit(), "smart", RandomDestructableInRectSimpleBJ(udg_TreeRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]))
    call TriggerSleepAction(5.00)
    call DisableTrigger(GetTriggeringTrigger())
endfunction

//===========================================================================
function InitTrig_Penguin_Work_Order takes nothing returns nothing
    set gg_trg_Penguin_Work_Order=CreateTrigger()
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Red)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Blue)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Teal)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Purple)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Yellow)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Orange)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Green)
    call TriggerRegisterEnterRectSimple(gg_trg_Penguin_Work_Order, gg_rct_Penguin_Chop_Pink)
    call TriggerAddAction(gg_trg_Penguin_Work_Order, function Trig_Penguin_Work_Order_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Spawn
//===========================================================================
function Trig_Penguin_Spawn_Func001Func001001 takes nothing returns boolean
    return ( GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_EMPTY )
endfunction

function Trig_Penguin_Spawn_Func001A takes nothing returns nothing
    if ( (GetPlayerSlotState(GetEnumPlayer()) == PLAYER_SLOT_STATE_EMPTY) ) then // INLINED!!
        return
    else
        call DoNothing()
    endif
    call CreateNUnitsAtLoc(1, 'opeo', GetEnumPlayer(), GetRectCenter(udg_PenguinWorkRegion[GetConvertedPlayerId(GetEnumPlayer())]), bj_UNIT_FACING)
endfunction

function Trig_Penguin_Spawn_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_Penguin_Spawn_Func001A)
endfunction

//===========================================================================
function InitTrig_Penguin_Spawn takes nothing returns nothing
    set gg_trg_Penguin_Spawn=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Penguin_Spawn, 2.50)
    call TriggerAddAction(gg_trg_Penguin_Spawn, function Trig_Penguin_Spawn_Actions)
endfunction

//===========================================================================
// Trigger: Issue Igloo Order
//===========================================================================
function Trig_Issue_Igloo_Order_Func001002 takes nothing returns nothing
    call GroupTargetDestructableOrder(GetUnitsOfPlayerAndTypeId(GetEnumPlayer(), 'hhou'), "smart", RandomDestructableInRectSimpleBJ(udg_TreeRegion[GetConvertedPlayerId(GetEnumPlayer())]))
endfunction

function Trig_Issue_Igloo_Order_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_Issue_Igloo_Order_Func001002)
endfunction

//===========================================================================
function InitTrig_Issue_Igloo_Order takes nothing returns nothing
    set gg_trg_Issue_Igloo_Order=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Issue_Igloo_Order, 1.00)
    call TriggerAddAction(gg_trg_Issue_Igloo_Order, function Trig_Issue_Igloo_Order_Actions)
endfunction

//===========================================================================
// Trigger: Sell Towers
//===========================================================================
function Trig_Sell_Towers_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A000' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sell_Towers_Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == udg_SellType[udg_LoopInt1] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sell_Towers_Actions takes nothing returns nothing
    set udg_LoopInt1=1
    loop
        exitwhen udg_LoopInt1 > udg_SellCount
        if ( Trig_Sell_Towers_Func001Func001C() ) then
            call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit())), ( "You have sold a " + ( ( GetUnitName(GetTriggerUnit()) + " for " ) + ( ( I2S(R2I(( I2R(udg_SellGold[udg_LoopInt1]) * udg_SellValueG ))) + " |cffffcc00 gold|r and " ) + ( I2S(R2I(( I2R(udg_SellLumber[udg_LoopInt1]) * udg_SellValueL ))) + "|CFF00FF00 lumber|r." ) ) ) ))
            call AdjustPlayerStateBJ(R2I(( I2R(udg_SellGold[udg_LoopInt1]) * udg_SellValueG )), GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD)
            call AdjustPlayerStateBJ(R2I(( I2R(udg_SellLumber[udg_LoopInt1]) * udg_SellValueL )), GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER)
            set udg_Point=GetUnitLoc(GetTriggerUnit())
            call AddSpecialEffectLocBJ(udg_Point, "Abilities\\Spells\\Other\\Transmute\\PileofGold.mdl")
            call DestroyEffectBJ(GetLastCreatedEffectBJ())
            call RemoveLocation(udg_Point)
            call RemoveUnit(GetTriggerUnit())
            set udg_LoopInt1=120
        else
        endif
        set udg_LoopInt1=udg_LoopInt1 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Sell_Towers takes nothing returns nothing
    set gg_trg_Sell_Towers=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Sell_Towers, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_Sell_Towers, Condition(function Trig_Sell_Towers_Conditions))
    call TriggerAddAction(gg_trg_Sell_Towers, function Trig_Sell_Towers_Actions)
endfunction

//===========================================================================
// Trigger: Auto Attack
//===========================================================================
function Trig_Auto_Attack_Func009C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'u004' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'u009' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n007' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n008' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n009' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n01N' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n01C' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n003' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n004' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n005' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n006' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n01O' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00D' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00E' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00F' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n000' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n001' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00A' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00G' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00H' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n00I' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n014' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'n002' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h00O' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h00L' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h00M' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h00E' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h00B' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h113' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetOrderedUnit()) == 'h112' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Auto_Attack_Conditions takes nothing returns boolean
    if ( not Trig_Auto_Attack_Func009C() ) then
        return false
    endif
    return true
endfunction

function Trig_Auto_Attack_Actions takes nothing returns nothing
    call TriggerSleepAction(0.00)
    call IssueImmediateOrderBJ(GetTriggerUnit(), "stop")
endfunction

//===========================================================================
function InitTrig_Auto_Attack takes nothing returns nothing
    set gg_trg_Auto_Attack=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(0), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(1), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(2), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(3), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(4), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(5), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(6), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Auto_Attack, Player(7), EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerAddCondition(gg_trg_Auto_Attack, Condition(function Trig_Auto_Attack_Conditions))
    call TriggerAddAction(gg_trg_Auto_Attack, function Trig_Auto_Attack_Actions)
endfunction

//===========================================================================
// Trigger: PenguinKingLimit
//===========================================================================
function Trig_PenguinKingLimit_Conditions takes nothing returns boolean
    if ( not ( GetTrainedUnitType() == 'H007' ) ) then
        return false
    endif
    return true
endfunction

function Trig_PenguinKingLimit_Actions takes nothing returns nothing
    call SetPlayerTechMaxAllowedSwap('H007', 1, GetOwningPlayer(GetTriggerUnit()))
endfunction

//===========================================================================
function InitTrig_PenguinKingLimit takes nothing returns nothing
    set gg_trg_PenguinKingLimit=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_PenguinKingLimit, EVENT_PLAYER_UNIT_TRAIN_START)
    call TriggerAddCondition(gg_trg_PenguinKingLimit, Condition(function Trig_PenguinKingLimit_Conditions))
    call TriggerAddAction(gg_trg_PenguinKingLimit, function Trig_PenguinKingLimit_Actions)
endfunction

//===========================================================================
// Trigger: PenguinKingLimit2
//===========================================================================
function Trig_PenguinKingLimit2_Conditions takes nothing returns boolean
    if ( not ( GetTrainedUnitType() == 'H007' ) ) then
        return false
    endif
    return true
endfunction

function Trig_PenguinKingLimit2_Actions takes nothing returns nothing
    call SetPlayerUnitAvailableBJ('H007', false, GetOwningPlayer(GetTriggerUnit()))
endfunction

//===========================================================================
function InitTrig_PenguinKingLimit2 takes nothing returns nothing
    set gg_trg_PenguinKingLimit2=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_PenguinKingLimit2, EVENT_PLAYER_UNIT_TRAIN_START)
    call TriggerAddCondition(gg_trg_PenguinKingLimit2, Condition(function Trig_PenguinKingLimit2_Conditions))
    call TriggerAddAction(gg_trg_PenguinKingLimit2, function Trig_PenguinKingLimit2_Actions)
endfunction

//===========================================================================
// Trigger: PenguinKing Enable
//===========================================================================
function Trig_PenguinKing_Enable_Func002C takes nothing returns boolean
    if ( ( GetTrainedUnitType() == 'H007' ) ) then
        return true
    endif
    return false
endfunction

function Trig_PenguinKing_Enable_Conditions takes nothing returns boolean
    if ( not Trig_PenguinKing_Enable_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_PenguinKing_Enable_Func003C takes nothing returns boolean
    return true
endfunction

function Trig_PenguinKing_Enable_Actions takes nothing returns nothing
    if ( (true) ) then // INLINED!!
        call SetPlayerUnitAvailableBJ('H007', true, GetOwningPlayer(GetTriggerUnit()))
    else
    endif
endfunction

//===========================================================================
function InitTrig_PenguinKing_Enable takes nothing returns nothing
    set gg_trg_PenguinKing_Enable=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_PenguinKing_Enable, EVENT_PLAYER_UNIT_TRAIN_CANCEL)
    call TriggerAddCondition(gg_trg_PenguinKing_Enable, Condition(function Trig_PenguinKing_Enable_Conditions))
    call TriggerAddAction(gg_trg_PenguinKing_Enable, function Trig_PenguinKing_Enable_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Limit
//===========================================================================
function Trig_Penguin_Limit_Func002A takes nothing returns nothing
    call SetPlayerTechMaxAllowedSwap('opeo', 25, GetEnumPlayer())
endfunction

function Trig_Penguin_Limit_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_Penguin_Limit_Func002A)
endfunction

//===========================================================================
function InitTrig_Penguin_Limit takes nothing returns nothing
    set gg_trg_Penguin_Limit=CreateTrigger()
    call TriggerAddAction(gg_trg_Penguin_Limit, function Trig_Penguin_Limit_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Count
//===========================================================================
function Trig_Penguin_Count_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTrainedUnit()) == 'opeo' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Penguin_Count_Actions takes nothing returns nothing
    set udg_PengAmount[GetConvertedPlayerId(GetOwningPlayer(GetTrainedUnit()))]=( udg_PengAmount[GetConvertedPlayerId(GetOwningPlayer(GetTrainedUnit()))] + 1 )
endfunction

//===========================================================================
function InitTrig_Penguin_Count takes nothing returns nothing
    set gg_trg_Penguin_Count=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Penguin_Count, EVENT_PLAYER_UNIT_TRAIN_FINISH)
    call TriggerAddCondition(gg_trg_Penguin_Count, Condition(function Trig_Penguin_Count_Conditions))
    call TriggerAddAction(gg_trg_Penguin_Count, function Trig_Penguin_Count_Actions)
endfunction

//===========================================================================
// Trigger: PenguinDetonate
//===========================================================================
function Trig_PenguinDetonate_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'Adtn' ) ) then
        return false
    endif
    return true
endfunction

function Trig_PenguinDetonate_Actions takes nothing returns nothing
    set udg_Force=GetForceOfPlayer(GetTriggerPlayer())
    call DisplayTextToForce(udg_Force, "TRIGSTR_2408")
    set udg_PengAmount[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]=udg_PengAmount[( GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit())) - 1 )]
    call AdjustPlayerStateBJ(53, GetTriggerPlayer(), PLAYER_STATE_RESOURCE_GOLD)
    call DestroyForce(udg_Force)
endfunction

//===========================================================================
function InitTrig_PenguinDetonate takes nothing returns nothing
    set gg_trg_PenguinDetonate=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_PenguinDetonate, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_PenguinDetonate, Condition(function Trig_PenguinDetonate_Conditions))
    call TriggerAddAction(gg_trg_PenguinDetonate, function Trig_PenguinDetonate_Actions)
endfunction

//===========================================================================
// Trigger: The Hatchery Spawn
//===========================================================================
function Trig_The_Hatchery_Spawn_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetConstructedStructure()) == 'h010' ) ) then
        return false
    endif
    return true
endfunction

function Trig_The_Hatchery_Spawn_Actions takes nothing returns nothing
    call IssueTrainOrderByIdBJ(GetConstructedStructure(), 'hphx')
endfunction

//===========================================================================
function InitTrig_The_Hatchery_Spawn takes nothing returns nothing
    set gg_trg_The_Hatchery_Spawn=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_The_Hatchery_Spawn, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
    call TriggerAddCondition(gg_trg_The_Hatchery_Spawn, Condition(function Trig_The_Hatchery_Spawn_Conditions))
    call TriggerAddAction(gg_trg_The_Hatchery_Spawn, function Trig_The_Hatchery_Spawn_Actions)
endfunction

//===========================================================================
// Trigger: The Hatchery Train
//===========================================================================
function Trig_The_Hatchery_Train_Actions takes nothing returns nothing
    call IssueTrainOrderByIdBJ(GroupPickRandomUnit(GetUnitsOfTypeIdAll('h010')), 'hphx')
endfunction

//===========================================================================
function InitTrig_The_Hatchery_Train takes nothing returns nothing
    set gg_trg_The_Hatchery_Train=CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(gg_trg_The_Hatchery_Train, 0.10)
    call TriggerAddAction(gg_trg_The_Hatchery_Train, function Trig_The_Hatchery_Train_Actions)
endfunction

//===========================================================================
// Trigger: The Hatchery Stop
//===========================================================================
function Trig_The_Hatchery_Stop_Conditions takes nothing returns boolean
    if ( not ( GetTrainedUnitType() == 'hphx' ) ) then
        return false
    endif
    return true
endfunction

function Trig_The_Hatchery_Stop_Actions takes nothing returns nothing
    call DisableTrigger(gg_trg_The_Hatchery_Train)
    call TriggerSleepAction(30.00)
    call EnableTrigger(gg_trg_The_Hatchery_Train)
endfunction

//===========================================================================
function InitTrig_The_Hatchery_Stop takes nothing returns nothing
    set gg_trg_The_Hatchery_Stop=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_The_Hatchery_Stop, EVENT_PLAYER_UNIT_TRAIN_CANCEL)
    call TriggerAddCondition(gg_trg_The_Hatchery_Stop, Condition(function Trig_The_Hatchery_Stop_Conditions))
    call TriggerAddAction(gg_trg_The_Hatchery_Stop, function Trig_The_Hatchery_Stop_Actions)
endfunction

//===========================================================================
// Trigger: Hydra Portal Spawn
//===========================================================================
function Trig_Hydra_Portal_Spawn_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetConstructedStructure()) == 'h011' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hydra_Portal_Spawn_Actions takes nothing returns nothing
    call IssueTrainOrderByIdBJ(GetConstructedStructure(), 'n01P')
endfunction

//===========================================================================
function InitTrig_Hydra_Portal_Spawn takes nothing returns nothing
    set gg_trg_Hydra_Portal_Spawn=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Hydra_Portal_Spawn, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
    call TriggerAddCondition(gg_trg_Hydra_Portal_Spawn, Condition(function Trig_Hydra_Portal_Spawn_Conditions))
    call TriggerAddAction(gg_trg_Hydra_Portal_Spawn, function Trig_Hydra_Portal_Spawn_Actions)
endfunction

//===========================================================================
// Trigger: Hydra Portal Train
//===========================================================================
function Trig_Hydra_Portal_Train_Actions takes nothing returns nothing
    call IssueTrainOrderByIdBJ(GroupPickRandomUnit(GetUnitsOfTypeIdAll('h011')), 'n01P')
endfunction

//===========================================================================
function InitTrig_Hydra_Portal_Train takes nothing returns nothing
    set gg_trg_Hydra_Portal_Train=CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(gg_trg_Hydra_Portal_Train, 0.10)
    call TriggerAddAction(gg_trg_Hydra_Portal_Train, function Trig_Hydra_Portal_Train_Actions)
endfunction

//===========================================================================
// Trigger: Hydra Portal Stop
//===========================================================================
function Trig_Hydra_Portal_Stop_Conditions takes nothing returns boolean
    if ( not ( GetTrainedUnitType() == 'n01P' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hydra_Portal_Stop_Actions takes nothing returns nothing
    call DisableTrigger(gg_trg_Hydra_Portal_Train)
    call TriggerSleepAction(30.00)
    call EnableTrigger(gg_trg_Hydra_Portal_Train)
endfunction

//===========================================================================
function InitTrig_Hydra_Portal_Stop takes nothing returns nothing
    set gg_trg_Hydra_Portal_Stop=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Hydra_Portal_Stop, EVENT_PLAYER_UNIT_TRAIN_CANCEL)
    call TriggerAddCondition(gg_trg_Hydra_Portal_Stop, Condition(function Trig_Hydra_Portal_Stop_Conditions))
    call TriggerAddAction(gg_trg_Hydra_Portal_Stop, function Trig_Hydra_Portal_Stop_Actions)
endfunction

//===========================================================================
// Trigger: Spawned Units Limit
//===========================================================================
function Trig_Spawned_Units_Limit_Func001A takes nothing returns nothing
    call SetPlayerTechMaxAllowedSwap('h010', 1, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('h011', 1, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('hphx', 7, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('hpxe', 7, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('n01P', 7, GetEnumPlayer())
endfunction

function Trig_Spawned_Units_Limit_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_Spawned_Units_Limit_Func001A)
endfunction

//===========================================================================
function InitTrig_Spawned_Units_Limit takes nothing returns nothing
    set gg_trg_Spawned_Units_Limit=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Spawned_Units_Limit, 1.00)
    call TriggerAddAction(gg_trg_Spawned_Units_Limit, function Trig_Spawned_Units_Limit_Actions)
endfunction

//===========================================================================
// Trigger: Remove Hydra Portal
//===========================================================================
function Trig_Remove_Hydra_Portal_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A000' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'h011' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Remove_Hydra_Portal_Func001001002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'n01P' )
endfunction

function Trig_Remove_Hydra_Portal_Func001001002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()) )
endfunction

function Trig_Remove_Hydra_Portal_Func001001002 takes nothing returns boolean
    return GetBooleanAnd((GetUnitTypeId(GetFilterUnit()) == 'n01P'), (GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()))) // INLINED!!
endfunction

function Trig_Remove_Hydra_Portal_Func001A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Remove_Hydra_Portal_Actions takes nothing returns nothing
    call ForGroupBJ(GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Remove_Hydra_Portal_Func001001002)), function Trig_Remove_Hydra_Portal_Func001A)
endfunction

//===========================================================================
function InitTrig_Remove_Hydra_Portal takes nothing returns nothing
    set gg_trg_Remove_Hydra_Portal=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_Hydra_Portal, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_Remove_Hydra_Portal, Condition(function Trig_Remove_Hydra_Portal_Conditions))
    call TriggerAddAction(gg_trg_Remove_Hydra_Portal, function Trig_Remove_Hydra_Portal_Actions)
endfunction

//===========================================================================
// Trigger: Remove Phoenix
//===========================================================================
function Trig_Remove_Phoenix_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'h011' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Remove_Phoenix_Func001001002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'hphx' )
endfunction

function Trig_Remove_Phoenix_Func001001002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()) )
endfunction

function Trig_Remove_Phoenix_Func001001002 takes nothing returns boolean
    return GetBooleanAnd((GetUnitTypeId(GetFilterUnit()) == 'hphx'), (GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()))) // INLINED!!
endfunction

function Trig_Remove_Phoenix_Func001A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Remove_Phoenix_Actions takes nothing returns nothing
    call ForGroupBJ(GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Remove_Phoenix_Func001001002)), function Trig_Remove_Phoenix_Func001A)
endfunction

//===========================================================================
function InitTrig_Remove_Phoenix takes nothing returns nothing
    set gg_trg_Remove_Phoenix=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_Phoenix, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
    call TriggerAddCondition(gg_trg_Remove_Phoenix, Condition(function Trig_Remove_Phoenix_Conditions))
    call TriggerAddAction(gg_trg_Remove_Phoenix, function Trig_Remove_Phoenix_Actions)
endfunction

//===========================================================================
// Trigger: Remove The Hatchery
//===========================================================================
function Trig_Remove_The_Hatchery_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'h011' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Remove_The_Hatchery_Func001001002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'h010' )
endfunction

function Trig_Remove_The_Hatchery_Func001001002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()) )
endfunction

function Trig_Remove_The_Hatchery_Func001001002 takes nothing returns boolean
    return GetBooleanAnd((GetUnitTypeId(GetFilterUnit()) == 'h010'), (GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()))) // INLINED!!
endfunction

function Trig_Remove_The_Hatchery_Func001A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Remove_The_Hatchery_Actions takes nothing returns nothing
    call ForGroupBJ(GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Remove_The_Hatchery_Func001001002)), function Trig_Remove_The_Hatchery_Func001A)
endfunction

//===========================================================================
function InitTrig_Remove_The_Hatchery takes nothing returns nothing
    set gg_trg_Remove_The_Hatchery=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_The_Hatchery, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
    call TriggerAddCondition(gg_trg_Remove_The_Hatchery, Condition(function Trig_Remove_The_Hatchery_Conditions))
    call TriggerAddAction(gg_trg_Remove_The_Hatchery, function Trig_Remove_The_Hatchery_Actions)
endfunction

//===========================================================================
// Trigger: Remove The Hatchery Phoenix
//===========================================================================
function Trig_Remove_The_Hatchery_Phoenix_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A000' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'h010' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Func001001002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'hphx' )
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Func001001002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()) )
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Func001001002 takes nothing returns boolean
    return GetBooleanAnd((GetUnitTypeId(GetFilterUnit()) == 'hphx'), (GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()))) // INLINED!!
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Func001A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Actions takes nothing returns nothing
    call ForGroupBJ(GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Remove_The_Hatchery_Phoenix_Func001001002)), function Trig_Remove_The_Hatchery_Phoenix_Func001A)
endfunction

//===========================================================================
function InitTrig_Remove_The_Hatchery_Phoenix takes nothing returns nothing
    set gg_trg_Remove_The_Hatchery_Phoenix=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_The_Hatchery_Phoenix, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_Remove_The_Hatchery_Phoenix, Condition(function Trig_Remove_The_Hatchery_Phoenix_Conditions))
    call TriggerAddAction(gg_trg_Remove_The_Hatchery_Phoenix, function Trig_Remove_The_Hatchery_Phoenix_Actions)
endfunction

//===========================================================================
// Trigger: Remove The Hatchery Phoenix Egg
//===========================================================================
function Trig_Remove_The_Hatchery_Phoenix_Egg_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A000' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'h010' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001001002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'hpxe' )
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001001002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()) )
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001001002 takes nothing returns boolean
    return GetBooleanAnd((GetUnitTypeId(GetFilterUnit()) == 'hpxe'), (GetOwningPlayer(GetTriggerUnit()) == GetOwningPlayer(GetFilterUnit()))) // INLINED!!
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Remove_The_Hatchery_Phoenix_Egg_Actions takes nothing returns nothing
    call ForGroupBJ(GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001001002)), function Trig_Remove_The_Hatchery_Phoenix_Egg_Func001A)
endfunction

//===========================================================================
function InitTrig_Remove_The_Hatchery_Phoenix_Egg takes nothing returns nothing
    set gg_trg_Remove_The_Hatchery_Phoenix_Egg=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_The_Hatchery_Phoenix_Egg, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_Remove_The_Hatchery_Phoenix_Egg, Condition(function Trig_Remove_The_Hatchery_Phoenix_Egg_Conditions))
    call TriggerAddAction(gg_trg_Remove_The_Hatchery_Phoenix_Egg, function Trig_Remove_The_Hatchery_Phoenix_Egg_Actions)
endfunction

//===========================================================================
// Trigger: Heal Init
//===========================================================================
function Trig_Heal_Init_Func001A takes nothing returns nothing
    call SetPlayerTechResearchedSwap('R00G', 1, GetEnumPlayer())
endfunction

function Trig_Heal_Init_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_Heal_Init_Func001A)
    set udg_HealText[1]=" |cffff0000(Red)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[2]=" |cff0000ff(Blue)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[3]=" |cff00ffff(Teal)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[4]=" |cff6f2583(Purple)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[5]=" |cffffff00(Yellow)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[6]=" |cffd45e19(Orange)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[7]=" |cff00ff00(Green)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    set udg_HealText[8]=" |cffff8080(Pink)|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King."
    // -----------------------------------------------
    set udg_AutoHealText[1]=" |cffff0000(Red)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[2]=" |cff0000ff(Blue)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[3]=" |cff00ffff(Teal)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[4]=" |cff6f2583(Purple)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[5]=" |cffffff00(Yellow)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[6]=" |cffd45e19(Orange)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[7]=" |cff00ff00(Green)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    set udg_AutoHealText[8]=" |cffff8080(Pink)|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King. - Healing effectiveness reduced to 70% !"
    // -----------------------------------------------
    set udg_IncomeAreaRegion[1]=gg_rct_Red_Income_Area
    set udg_IncomeAreaRegion[2]=gg_rct_Blue_Income_Area
    set udg_IncomeAreaRegion[3]=gg_rct_Teal_Income_Area
    set udg_IncomeAreaRegion[4]=gg_rct_Purple_Income_Area
    set udg_IncomeAreaRegion[5]=gg_rct_Yellow_Income_Area
    set udg_IncomeAreaRegion[6]=gg_rct_Orange_Income_Area
    set udg_IncomeAreaRegion[7]=gg_rct_Green_Income_Area
    set udg_IncomeAreaRegion[8]=gg_rct_Pink_Income_Area
endfunction

//===========================================================================
function InitTrig_Heal_Init takes nothing returns nothing
    set gg_trg_Heal_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Heal_Init, function Trig_Heal_Init_Actions)
endfunction

//===========================================================================
// Trigger: Heal
//===========================================================================
function Trig_Heal_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00H' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Heal_Func002Func004002 takes nothing returns nothing
    call SetUnitManaPercentBJ(GetEnumUnit(), 100.00)
endfunction

function Trig_Heal_Func002Func010002 takes nothing returns nothing
    call SetUnitManaPercentBJ(GetEnumUnit(), 0.00)
endfunction

function Trig_Heal_Func002C takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_KingsArray[udg_TempPlayerId]) > ( I2R(BlzGetUnitMaxHP(udg_KingsArray[udg_TempPlayerId])) / 2.00 ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Heal_Actions takes nothing returns nothing
    set udg_TempPlayerId=GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))
    if ( Trig_Heal_Func002C() ) then
        call IssueImmediateOrderBJ(GetTriggerUnit(), "stop")
        call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit())), "TRIGSTR_2614")
        call TriggerSleepAction(0.50)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(GetOwningPlayer(GetTriggerUnit()), 'h00S'), function Trig_Heal_Func002Func004002)
    else
        call SetUnitLifePercentBJ(udg_KingsArray[udg_TempPlayerId], 100)
        call SmartCameraPanBJ(GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_IncomeAreaRegion[udg_TempPlayerId]), 0.5)
        call AddSpecialEffectTargetUnitBJ("overhead", udg_KingsArray[udg_TempPlayerId], "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        call DisplayTextToForce(GetPlayersAll(), ( ( udg_Color[udg_TempPlayerId] + GetPlayerName(GetOwningPlayer(GetTriggerUnit())) ) + "|r has used their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability on their King." ))
        call SetPlayerTechResearchedSwap('R00G', 0, GetOwningPlayer(GetTriggerUnit()))
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(GetOwningPlayer(GetTriggerUnit()), 'h00S'), function Trig_Heal_Func002Func010002)
        set udg_HasHealed[udg_TempPlayerId]=true
    endif
endfunction

//===========================================================================
function InitTrig_Heal takes nothing returns nothing
    set gg_trg_Heal=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Heal, EVENT_PLAYER_UNIT_SPELL_CAST)
    call TriggerAddCondition(gg_trg_Heal, Condition(function Trig_Heal_Conditions))
    call TriggerAddAction(gg_trg_Heal, function Trig_Heal_Actions)
endfunction

//===========================================================================
// Trigger: AutoHeal
//===========================================================================
function Trig_AutoHeal_Conditions takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) < GetEventDamage() ) ) then
        return false
    endif
    return true
endfunction

function Trig_AutoHeal_Func012Func010002 takes nothing returns nothing
    call SetUnitManaPercentBJ(GetEnumUnit(), 0.00)
endfunction

function Trig_AutoHeal_Func012C takes nothing returns boolean
    if ( not ( udg_HasHealed[udg_TempPlayerId] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_AutoHeal_Actions takes nothing returns nothing
    set udg_TempPlayerId=GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))
    set udg_TempPlayer=GetOwningPlayer(GetTriggerUnit())
    if ( Trig_AutoHeal_Func012C() ) then
        call SetUnitLifeBJ(GetTriggerUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetTriggerUnit()) + GetEventDamage() ))
        call TriggerSleepAction(0.02)
        call SetUnitLifePercentBJ(udg_KingsArray[udg_TempPlayerId], 70.00)
        set udg_HasHealed[udg_TempPlayerId]=true
        call SmartCameraPanBJ(udg_TempPlayer, GetRectCenter(udg_IncomeAreaRegion[udg_TempPlayerId]), 0.5)
        call AddSpecialEffectTargetUnitBJ("overhead", udg_KingsArray[udg_TempPlayerId], "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
        call DisplayTextToForce(GetPlayersAll(), ( ( udg_Color[udg_TempPlayerId] + GetPlayerName(udg_TempPlayer) ) + "|r automatically had their |cffffffffH|r|cffffffe3o|r|cffffffc7l|r|cffffffaay|r|cffffff8e |r|cffffff72L|r|cffffff55i|r|cffffff39g|r|cffffff1dh|r|cffffff00t|r ability cast on their King.              Healing effectiveness reduced to 70% !" ))
        call SetPlayerTechResearchedSwap('R00G', 0, udg_TempPlayer)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(udg_TempPlayer, 'h00S'), function Trig_AutoHeal_Func012Func010002)
    else
    endif
endfunction

//===========================================================================
function InitTrig_AutoHeal takes nothing returns nothing
    set gg_trg_AutoHeal=CreateTrigger()
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0024, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0025, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0026, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0027, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0028, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0029, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0030, EVENT_UNIT_DAMAGED)
    call TriggerRegisterUnitEvent(gg_trg_AutoHeal, gg_unit_H00Q_0031, EVENT_UNIT_DAMAGED)
    call TriggerAddCondition(gg_trg_AutoHeal, Condition(function Trig_AutoHeal_Conditions))
    call TriggerAddAction(gg_trg_AutoHeal, function Trig_AutoHeal_Actions)
endfunction

//===========================================================================
// Trigger: AbiInit
//
// Add lines 
// set udg_AbilityBase[X] = 'Aqwe'
// set udg_ItemBase[X] = 'Iqwe'
// Replace Y in udg_AbiAmount = Y to X
// set udg_AbiAmount = X
// This will add a spell to database. No more hard stuff to do ^^
//===========================================================================
function Trig_AbiInit_Actions takes nothing returns nothing

	set udg_AbilityBase[1]='AKim'
	set udg_ItemBase[1]='IKim'
	set udg_AbilityBase[2]='AKsw'
	set udg_ItemBase[2]='IKsw'
	set udg_AbilityBase[3]='A00A'
	set udg_ItemBase[3]='I000'
	set udg_AbilityBase[4]='A00F'
	set udg_ItemBase[4]='I001'
	set udg_AbiAmount=4

endfunction

//===========================================================================
function InitTrig_AbiInit takes nothing returns nothing
    set gg_trg_AbiInit=CreateTrigger()
    call TriggerAddAction(gg_trg_AbiInit, function Trig_AbiInit_Actions)
endfunction


//===========================================================================
// Trigger: Upgrades to Income v2
//===========================================================================
function Trig_Upgrades_to_Income_v2_Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u005' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u006' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u007' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Upgrades_to_Income_v2_Conditions takes nothing returns boolean
    if ( not Trig_Upgrades_to_Income_v2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrades_to_Income_v2_Func003C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u005' ) ) then
        return false
    endif
    if ( not ( GetPlayerTechCountSimple('Rkis', GetOwningPlayer(GetTriggerUnit())) < GetPlayerTechMaxAllowedSwap('Rkis', GetOwningPlayer(GetTriggerUnit())) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrades_to_Income_v2_Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u006' ) ) then
        return false
    endif
    if ( not ( GetPlayerTechCountSimple('RkiA', GetOwningPlayer(GetTriggerUnit())) < GetPlayerTechMaxAllowedSwap('RkiA', GetOwningPlayer(GetTriggerUnit())) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrades_to_Income_v2_Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u007' ) ) then
        return false
    endif
    if ( not ( GetPlayerTechCountSimple('RkiI', GetOwningPlayer(GetTriggerUnit())) < GetPlayerTechMaxAllowedSwap('RkiI', GetOwningPlayer(GetTriggerUnit())) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrades_to_Income_v2_Actions takes nothing returns nothing
    set udg_TempPlayerId=GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))
    if ( Trig_Upgrades_to_Income_v2_Func003C() ) then
        set udg_Income_array[udg_TempPlayerId]=( udg_Income_array[udg_TempPlayerId] + 3 )
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( udg_TempPlayerId + 2 ), I2S(udg_Income_array[udg_TempPlayerId]))
    else
    endif
    if ( Trig_Upgrades_to_Income_v2_Func004C() ) then
        set udg_Income_array[udg_TempPlayerId]=( udg_Income_array[udg_TempPlayerId] + 3 )
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( udg_TempPlayerId + 2 ), I2S(udg_Income_array[udg_TempPlayerId]))
    else
    endif
    if ( Trig_Upgrades_to_Income_v2_Func005C() ) then
        set udg_Income_array[udg_TempPlayerId]=( udg_Income_array[udg_TempPlayerId] + 3 )
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( udg_TempPlayerId + 2 ), I2S(udg_Income_array[udg_TempPlayerId]))
    else
    endif
endfunction

//===========================================================================
function InitTrig_Upgrades_to_Income_v2 takes nothing returns nothing
    set gg_trg_Upgrades_to_Income_v2=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Upgrades_to_Income_v2, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddCondition(gg_trg_Upgrades_to_Income_v2, Condition(function Trig_Upgrades_to_Income_v2_Conditions))
    call TriggerAddAction(gg_trg_Upgrades_to_Income_v2, function Trig_Upgrades_to_Income_v2_Actions)
endfunction

//===========================================================================
// Trigger: King Upgrades Init
//===========================================================================
function Trig_King_Upgrades_Init_Func001A takes nothing returns nothing
    call SetPlayerTechMaxAllowedSwap('Rkis', 10, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('RkiA', 10, GetEnumPlayer())
    call SetPlayerTechMaxAllowedSwap('RkiI', 10, GetEnumPlayer())
endfunction

function Trig_King_Upgrades_Init_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_King_Upgrades_Init_Func001A)
endfunction

//===========================================================================
function InitTrig_King_Upgrades_Init takes nothing returns nothing
    set gg_trg_King_Upgrades_Init=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_King_Upgrades_Init, 1.00)
    call TriggerAddAction(gg_trg_King_Upgrades_Init, function Trig_King_Upgrades_Init_Actions)
endfunction

//===========================================================================
// Trigger: KingMaxUp and lumbering speed
//===========================================================================
function Trig_KingMaxUp_and_lumbering_speed_Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_Level == ( 11 * udg_TempInt ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_KingMaxUp_and_lumbering_speed_Func001Func001Func002C takes nothing returns boolean
    if ( not ( udg_Level == ( 22 * udg_TempInt ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_KingMaxUp_and_lumbering_speed_Func001A takes nothing returns nothing
    set udg_TempInt=1
    loop
        exitwhen udg_TempInt > 5
        if ( Trig_KingMaxUp_and_lumbering_speed_Func001Func001Func001C() ) then
            call SetPlayerTechMaxAllowedSwap('Rkis', ( 10 + ( 5 * udg_TempInt ) ), GetEnumPlayer())
            call SetPlayerTechMaxAllowedSwap('RkiA', ( 10 + ( 5 * udg_TempInt ) ), GetEnumPlayer())
            call SetPlayerTechMaxAllowedSwap('RkiI', ( 10 + ( 5 * udg_TempInt ) ), GetEnumPlayer())
            call DisplayTimedTextToForce(GetForceOfPlayer(GetEnumPlayer()), 6.00, ( "|cff0000ffYou can now upgrade your King stats up to " + ( I2S(GetPlayerTechMaxAllowedSwap('Rkis', GetEnumPlayer())) + " per stat maximum|r" ) ))
        else
        endif
        if ( Trig_KingMaxUp_and_lumbering_speed_Func001Func001Func002C() ) then
            call SetPlayerTechResearchedSwap('R00H', ( udg_TempInt + 1 ), GetEnumPlayer())
            call DisplayTimedTextToForce(GetForceOfPlayer(GetEnumPlayer()), 6.00, "TRIGSTR_2961")
        else
        endif
        set udg_TempInt=udg_TempInt + 1
    endloop
endfunction

function Trig_KingMaxUp_and_lumbering_speed_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_KingMaxUp_and_lumbering_speed_Func001A)
endfunction

//===========================================================================
function InitTrig_KingMaxUp_and_lumbering_speed takes nothing returns nothing
    set gg_trg_KingMaxUp_and_lumbering_speed=CreateTrigger()
    call TriggerAddAction(gg_trg_KingMaxUp_and_lumbering_speed, function Trig_KingMaxUp_and_lumbering_speed_Actions)
endfunction

//===========================================================================
// Trigger: King Upgrades
//===========================================================================
function Trig_King_Upgrades_Func004C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u005' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u006' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u007' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSoldUnit()) == 'u008' ) ) then
        return true
    endif
    return false
endfunction

function Trig_King_Upgrades_Conditions takes nothing returns boolean
    if ( not Trig_King_Upgrades_Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func004Func003C takes nothing returns boolean
    if ( not ( GetPlayerTechCountSimple('Rkis', udg_Temp_Player) < GetPlayerTechMaxAllowedSwap('Rkis', udg_Temp_Player) ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u005' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetSellingUnit()) == GetEnumPlayer() ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func005Func001C takes nothing returns boolean
    if ( not ( GetPlayerTechCountSimple('RkiA', udg_Temp_Player) < GetPlayerTechMaxAllowedSwap('RkiA', udg_Temp_Player) ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u006' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetSellingUnit()) == GetEnumPlayer() ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func006Func001C takes nothing returns boolean
    if ( not ( GetPlayerTechCountSimple('RkiI', udg_Temp_Player) < GetPlayerTechMaxAllowedSwap('RkiI', udg_Temp_Player) ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func006C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u007' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetSellingUnit()) == GetEnumPlayer() ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func007Func001C takes nothing returns boolean
    if ( not ( GetPlayerTechCountSimple('RkiL', udg_Temp_Player) < GetPlayerTechMaxAllowedSwap('RkiL', udg_Temp_Player) ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002Func007C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'u008' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetSellingUnit()) == GetEnumPlayer() ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Upgrades_Func002A takes nothing returns nothing
    set udg_Temp_Player=GetEnumPlayer()
    set udg_Temp_Unit=udg_KingsArray[GetConvertedPlayerId(GetEnumPlayer())]
    set udg_StatLevelMax=GetPlayerTechMaxAllowedSwap('Rkis', udg_Temp_Player)
    if ( Trig_King_Upgrades_Func002Func004C() ) then
        if ( Trig_King_Upgrades_Func002Func004Func003C() ) then
            call ModifyHeroStat(bj_HEROSTAT_STR, udg_Temp_Unit, bj_MODIFYMETHOD_ADD, 1)
            call SetPlayerTechResearchedSwap('Rkis', ( GetPlayerTechCountSimple('Rkis', udg_Temp_Player) + 1 ), udg_Temp_Player)
            set udg_StatLevel=GetPlayerTechCountSimple('Rkis', udg_Temp_Player)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, ( "You upgraded your King's Strength " + ( I2S(udg_StatLevel) + ( "/" + I2S(udg_StatLevelMax) ) ) ))
            call DestroyForce(udg_XTemp_Force)
        else
            call AdjustPlayerStateBJ(60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_RESOURCE_LUMBER)
            call AdjustPlayerStateBJ(- 60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_LUMBER_GATHERED)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, "TRIGSTR_1044")
            call DestroyForce(udg_XTemp_Force)
        endif
    else
    endif
    if ( Trig_King_Upgrades_Func002Func005C() ) then
        if ( Trig_King_Upgrades_Func002Func005Func001C() ) then
            call ModifyHeroStat(bj_HEROSTAT_AGI, udg_Temp_Unit, bj_MODIFYMETHOD_ADD, 1)
            call SetPlayerTechResearchedSwap('RkiA', ( GetPlayerTechCountSimple('RkiA', udg_Temp_Player) + 1 ), udg_Temp_Player)
            set udg_StatLevel=GetPlayerTechCountSimple('RkiA', udg_Temp_Player)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, ( "You upgraded your King's Agility " + ( I2S(udg_StatLevel) + ( "/" + I2S(udg_StatLevelMax) ) ) ))
            call DestroyForce(udg_XTemp_Force)
        else
            call AdjustPlayerStateBJ(60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_RESOURCE_LUMBER)
            call AdjustPlayerStateBJ(- 60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_LUMBER_GATHERED)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, "TRIGSTR_1043")
            call DestroyForce(udg_XTemp_Force)
        endif
    else
    endif
    if ( Trig_King_Upgrades_Func002Func006C() ) then
        if ( Trig_King_Upgrades_Func002Func006Func001C() ) then
            call ModifyHeroStat(bj_HEROSTAT_INT, udg_Temp_Unit, bj_MODIFYMETHOD_ADD, 1)
            call SetPlayerTechResearchedSwap('RkiI', ( GetPlayerTechCountSimple('RkiI', udg_Temp_Player) + 1 ), udg_Temp_Player)
            set udg_StatLevel=GetPlayerTechCountSimple('RkiI', udg_Temp_Player)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, ( "You upgraded your King's Intelligence " + ( I2S(udg_StatLevel) + ( "/" + I2S(udg_StatLevelMax) ) ) ))
            call DestroyForce(udg_XTemp_Force)
        else
            call AdjustPlayerStateBJ(60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_RESOURCE_LUMBER)
            call AdjustPlayerStateBJ(- 60, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_LUMBER_GATHERED)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, "TRIGSTR_1042")
            call DestroyForce(udg_XTemp_Force)
        endif
    else
    endif
    if ( Trig_King_Upgrades_Func002Func007C() ) then
        if ( Trig_King_Upgrades_Func002Func007Func001C() ) then
            call SetHeroLevelBJ(udg_Temp_Unit, ( GetHeroLevel(udg_Temp_Unit) + 1 ), true)
            call SetPlayerTechResearchedSwap('RkiL', ( GetPlayerTechCountSimple('RkiL', udg_Temp_Player) + 1 ), udg_Temp_Player)
            set udg_StatLevel=GetPlayerTechCountSimple('RkiL', udg_Temp_Player)
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, "TRIGSTR_1040")
            call DestroyForce(udg_XTemp_Force)
        else
            call AdjustPlayerStateBJ(200, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_RESOURCE_LUMBER)
            call AdjustPlayerStateBJ(- 200, GetOwningPlayer(GetSellingUnit()), PLAYER_STATE_LUMBER_GATHERED)
            call SetPlayerUnitAvailableBJ('u008', false, GetOwningPlayer(GetSellingUnit()))
            set udg_XTemp_Force=GetForceOfPlayer(udg_Temp_Player)
            call DisplayTimedTextToForce(udg_XTemp_Force, 10.00, "TRIGSTR_1041")
            call DestroyForce(udg_XTemp_Force)
        endif
    else
    endif
endfunction

function Trig_King_Upgrades_Actions takes nothing returns nothing
    // Applying Upgrade
    call ForForce(udg_PlayersPlaying, function Trig_King_Upgrades_Func002A)
    call RemoveUnit(GetSoldUnit())
endfunction

//===========================================================================
function InitTrig_King_Upgrades takes nothing returns nothing
    set gg_trg_King_Upgrades=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_King_Upgrades, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddCondition(gg_trg_King_Upgrades, Condition(function Trig_King_Upgrades_Conditions))
    call TriggerAddAction(gg_trg_King_Upgrades, function Trig_King_Upgrades_Actions)
endfunction

//===========================================================================
// Trigger: King Abilities
//===========================================================================
function Trig_King_Abilities_Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped(udg_AbilityBase[udg_XTemp_LoopInt3], GetManipulatingUnit()) < 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Abilities_Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped(udg_AbilityBase[udg_XTemp_LoopInt3], GetManipulatingUnit()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Abilities_Func001Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetManipulatedItem()) == udg_ItemBase[udg_XTemp_LoopInt3] ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Abilities_Actions takes nothing returns nothing
    set udg_XTemp_LoopInt3=1
    loop
        exitwhen udg_XTemp_LoopInt3 > udg_AbiAmount
        if ( Trig_King_Abilities_Func001Func001C() ) then
            if ( Trig_King_Abilities_Func001Func001Func001C() ) then
                call UnitAddAbilityBJ(udg_AbilityBase[udg_XTemp_LoopInt3], GetManipulatingUnit())
            else
                if ( Trig_King_Abilities_Func001Func001Func001Func001C() ) then
                    call IncUnitAbilityLevelSwapped(udg_AbilityBase[udg_XTemp_LoopInt3], GetManipulatingUnit())
                else
                    call AdjustPlayerStateBJ(100, GetOwningPlayer(GetManipulatingUnit()), PLAYER_STATE_RESOURCE_GOLD)
                    call AdjustPlayerStateBJ(350, GetOwningPlayer(GetManipulatingUnit()), PLAYER_STATE_RESOURCE_LUMBER)
                endif
            endif
        else
        endif
        set udg_XTemp_LoopInt3=udg_XTemp_LoopInt3 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_King_Abilities takes nothing returns nothing
    set gg_trg_King_Abilities=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_King_Abilities, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerAddAction(gg_trg_King_Abilities, function Trig_King_Abilities_Actions)
endfunction

//===========================================================================
// Trigger: King Leech
//===========================================================================
function Trig_King_Leech_Conditions takes nothing returns boolean
    if ( not ( GetLearnedSkillBJ() == 'AUav' ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Leech_Func001C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('AKle', GetLearningUnit()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Leech_Actions takes nothing returns nothing
    if ( Trig_King_Leech_Func001C() ) then
        call UnitAddAbilityBJ('AKle', GetLearningUnit())
    else
        call SetUnitAbilityLevelSwapped('AKle', GetLearningUnit(), GetUnitAbilityLevelSwapped('AUav', GetLearningUnit()))
    endif
endfunction

//===========================================================================
function InitTrig_King_Leech takes nothing returns nothing
    set gg_trg_King_Leech=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_King_Leech, EVENT_PLAYER_HERO_SKILL)
    call TriggerAddCondition(gg_trg_King_Leech, Condition(function Trig_King_Leech_Conditions))
    call TriggerAddAction(gg_trg_King_Leech, function Trig_King_Leech_Actions)
endfunction

//===========================================================================
// Trigger: Defeat Test
//===========================================================================
function Trig_Defeat_Test_Func003C takes nothing returns boolean
    if ( ( GetPlayerName(GetTriggerPlayer()) == "ZiHeLL#2440" ) ) then
        return true
    endif
    if ( ( GetPlayerName(GetTriggerPlayer()) == "ZiHeLL #2440" ) ) then
        return true
    endif
    if ( ( GetPlayerName(GetTriggerPlayer()) == "Zeus#1516" ) ) then
        return true
    endif
    if ( ( GetPlayerName(GetTriggerPlayer()) == "WorldEdit" ) ) then
        return true
    endif
    return false
endfunction

function Trig_Defeat_Test_Conditions takes nothing returns boolean
    if ( not Trig_Defeat_Test_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Defeat_Test_Actions takes nothing returns nothing
    set udg_Lives[1]=1
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 3, I2S(udg_Lives[1]))
endfunction

//===========================================================================
function InitTrig_Defeat_Test takes nothing returns nothing
    set gg_trg_Defeat_Test=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Defeat_Test, Player(0), "-Defeat_Me", true)
    call TriggerAddCondition(gg_trg_Defeat_Test, Condition(function Trig_Defeat_Test_Conditions))
    call TriggerAddAction(gg_trg_Defeat_Test, function Trig_Defeat_Test_Actions)
endfunction

//===========================================================================
// Trigger: Income Test
//===========================================================================
function Trig_Income_Test_Func007C takes nothing returns boolean
    if ( ( GetPlayerName(GetTriggerPlayer()) == "GodsInstinct#2173" ) ) then
        return true
    endif
    if ( ( GetPlayerName(GetTriggerPlayer()) == "Zeus#1516" ) ) then
        return true
    endif
    if ( ( GetPlayerName(GetTriggerPlayer()) == "WorldEdit" ) ) then
        return true
    endif
    return false
endfunction

function Trig_Income_Test_Conditions takes nothing returns boolean
    if ( not Trig_Income_Test_Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_Income_Test_Actions takes nothing returns nothing
    call SetPlayerStateBJ(Player(0), PLAYER_STATE_RESOURCE_GOLD, 100000)
    call SetPlayerStateBJ(Player(1), PLAYER_STATE_RESOURCE_GOLD, 100000)
    call SetPlayerStateBJ(Player(0), PLAYER_STATE_RESOURCE_LUMBER, 100000)
    call SetPlayerStateBJ(Player(1), PLAYER_STATE_RESOURCE_LUMBER, 100000)
    call SetPlayerStateBJ(Player(0), PLAYER_STATE_RESOURCE_FOOD_CAP, 100)
    call SetPlayerStateBJ(Player(1), PLAYER_STATE_RESOURCE_FOOD_CAP, 100)
    set udg_Income_array[1]=999
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 3, I2S(udg_Income_array[1]))
endfunction

//===========================================================================
function InitTrig_Income_Test takes nothing returns nothing
    set gg_trg_Income_Test=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Income_Test, Player(0), "-Income_Me", true)
    call TriggerAddCondition(gg_trg_Income_Test, Condition(function Trig_Income_Test_Conditions))
    call TriggerAddAction(gg_trg_Income_Test, function Trig_Income_Test_Actions)
endfunction

//===========================================================================
// Trigger: Penguin Display Amount
//===========================================================================
function Trig_Penguin_Display_Amount_Actions takes nothing returns nothing
    call DisplayTextToForce(GetForceOfPlayer(GetTriggerPlayer()), ( I2S(( udg_PengAmount[GetConvertedPlayerId(GetTriggerPlayer())] + 1 )) + " Penguins have been trained so far." ))
endfunction

//===========================================================================
function InitTrig_Penguin_Display_Amount takes nothing returns nothing
    set gg_trg_Penguin_Display_Amount=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(0), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(1), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(2), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(3), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(4), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(5), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(6), "-penguins", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Penguin_Display_Amount, Player(7), "-penguins", true)
    call TriggerAddAction(gg_trg_Penguin_Display_Amount, function Trig_Penguin_Display_Amount_Actions)
endfunction

//===========================================================================
// Trigger: Commands
//===========================================================================
function Trig_Commands_Func002Func001Func001C takes nothing returns boolean
    if ( not ( SubStringBJ(GetEventPlayerChatString(), 7, StringLength(GetEventPlayerChatString())) == udg_ColorName[udg_LoopInt2] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Commands_Func002C takes nothing returns boolean
    if ( not ( StringCase(SubStringBJ(GetEventPlayerChatString(), 2, 5), false) == "kick" ) ) then
        return false
    endif
    if ( not ( GetTriggerPlayer() == Player(0) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Commands_Func004Func002Func001C takes nothing returns boolean
    if ( not ( udg_IsPlaying[udg_LoopInt2] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Commands_Func004Func003C takes nothing returns boolean
    if ( not ( udg_TempInt == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Commands_Func004Func004C takes nothing returns boolean
    if ( ( StringCase(SubStringBJ(GetEventPlayerChatString(), 2, 5), false) == "next" ) ) then
        return true
    endif
    if ( ( StringCase(SubStringBJ(GetEventPlayerChatString(), 2, 10), false) == "next wave" ) ) then
        return true
    endif
    return false
endfunction

function Trig_Commands_Func004C takes nothing returns boolean
    if ( not Trig_Commands_Func004Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_Commands_Actions takes nothing returns nothing
    // Kick-command
    if ( Trig_Commands_Func002C() ) then
        set udg_LoopInt2=2
        loop
            exitwhen udg_LoopInt2 > 8
            if ( Trig_Commands_Func002Func001Func001C() ) then
                call CustomDefeatBJ(ConvertedPlayer(udg_LoopInt2), "TRIGSTR_1013")
                call DisplayTextToForce(GetPlayersAll(), ( GetPlayerName(ConvertedPlayer(udg_LoopInt2)) + ( " Has been kicked from the game." ) ))
            else
            endif
            set udg_LoopInt2=udg_LoopInt2 + 1
        endloop
    else
    endif
    // Next Wave
    if ( Trig_Commands_Func004C() ) then
        set udg_TempInt=0
        set udg_LoopInt2=1
        loop
            exitwhen udg_LoopInt2 > 8
            if ( Trig_Commands_Func004Func002Func001C() ) then
                set udg_TempInt=( udg_TempInt + 1 )
            else
            endif
            set udg_LoopInt2=udg_LoopInt2 + 1
        endloop
        if ( Trig_Commands_Func004Func003C() ) then
            call ConditionalTriggerExecute(gg_trg_Build_Period)
            set udg_BuildPeriodTime=0
        else
        endif
    else
    endif
endfunction

//===========================================================================
function InitTrig_Commands takes nothing returns nothing
    set gg_trg_Commands=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(0), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(1), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(2), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(3), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(4), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(5), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(6), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Commands, Player(7), "-", false)
    call TriggerAddAction(gg_trg_Commands, function Trig_Commands_Actions)
endfunction

//===========================================================================
// Trigger: Single Player
//===========================================================================
function Trig_Single_Player_Conditions takes nothing returns boolean
    if ( not ( udg_SinglePlayer == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Single_Player_Func001C takes nothing returns boolean
    if ( not ( StringCase(SubStringBJ(GetEventPlayerChatString(), 2, StringLength(GetEventPlayerChatString())), false) == "morelives" ) ) then
        return false
    endif
    return true
endfunction

function Trig_Single_Player_Actions takes nothing returns nothing
    if ( Trig_Single_Player_Func001C() ) then
        set udg_Lives[( ( GetConvertedPlayerId(GetTriggerPlayer()) + 1 ) / 2 )]=( udg_Lives[( ( GetConvertedPlayerId(GetTriggerPlayer()) + 1 ) / 2 )] + 5 )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Single_Player takes nothing returns nothing
    set gg_trg_Single_Player=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(0), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(1), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(2), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(3), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(4), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(5), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(6), "-", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Single_Player, Player(7), "-", false)
    call TriggerAddCondition(gg_trg_Single_Player, Condition(function Trig_Single_Player_Conditions))
    call TriggerAddAction(gg_trg_Single_Player, function Trig_Single_Player_Actions)
endfunction

//===========================================================================
// Trigger: Camera Set
//===========================================================================
function Trig_Camera_Set_Func001002 takes nothing returns nothing
    call SetCameraFieldForPlayer(GetEnumPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 3500.00, 0)
endfunction

function Trig_Camera_Set_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_Camera_Set_Func001002)
endfunction

//===========================================================================
function InitTrig_Camera_Set takes nothing returns nothing
    set gg_trg_Camera_Set=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Camera_Set, 0.00)
    call TriggerAddAction(gg_trg_Camera_Set, function Trig_Camera_Set_Actions)
endfunction

//===========================================================================
// Trigger: Reset Camera
//===========================================================================
function Trig_Reset_Camera_Actions takes nothing returns nothing
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 3500.00, 0)
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_ANGLE_OF_ATTACK, 300.00, 0)
endfunction

//===========================================================================
function InitTrig_Reset_Camera takes nothing returns nothing
    set gg_trg_Reset_Camera=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(0), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(1), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(2), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(3), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(4), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(5), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(6), "-resetcam", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Reset_Camera, Player(7), "-resetcam", true)
    call TriggerAddAction(gg_trg_Reset_Camera, function Trig_Reset_Camera_Actions)
endfunction

//===========================================================================
// Trigger: Camera Zoom
//===========================================================================
function Trig_Camera_Zoom_Actions takes nothing returns nothing
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 3000.00, 0)
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_ANGLE_OF_ATTACK, 300.00, 0)
endfunction

//===========================================================================
function InitTrig_Camera_Zoom takes nothing returns nothing
    set gg_trg_Camera_Zoom=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(0), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(1), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(2), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(3), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(4), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(5), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(6), "-zoomin", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_Camera_Zoom, Player(7), "-zoomin", true)
    call TriggerAddAction(gg_trg_Camera_Zoom, function Trig_Camera_Zoom_Actions)
endfunction

//===========================================================================
// Trigger: TopDown
//===========================================================================
function Trig_TopDown_Actions takes nothing returns nothing
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, 3500.00, 0)
    call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_ANGLE_OF_ATTACK, 270.00, 0)
endfunction

//===========================================================================
function InitTrig_TopDown takes nothing returns nothing
    set gg_trg_TopDown=CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(0), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(1), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(2), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(3), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(4), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(5), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(6), "-topdown", true)
    call TriggerRegisterPlayerChatEvent(gg_trg_TopDown, Player(7), "-topdown", true)
    call TriggerAddAction(gg_trg_TopDown, function Trig_TopDown_Actions)
endfunction

//===========================================================================
// Trigger: Dialog Setup
//===========================================================================
function Trig_Dialog_Setup_Actions takes nothing returns nothing
    // hmh
    call DialogClearBJ(udg_Dialog_Mode)
    call DialogAddButtonBJ(udg_Dialog_Mode, "TRIGSTR_1006")
    set udg_DialogButtons[1]=GetLastCreatedButtonBJ()
    call DialogAddButtonBJ(udg_Dialog_Mode, "TRIGSTR_1007")
    set udg_DialogButtons[2]=GetLastCreatedButtonBJ()
    call DialogAddButtonBJ(udg_Dialog_Mode, "TRIGSTR_1009")
    set udg_DialogButtons[3]=GetLastCreatedButtonBJ()
    call DialogAddButtonBJ(udg_Dialog_Mode, "TRIGSTR_1012")
    set udg_DialogButtons[4]=GetLastCreatedButtonBJ()
    call DialogDisplayBJ(true, udg_Dialog_Mode, Player(0))
endfunction

//===========================================================================
function InitTrig_Dialog_Setup takes nothing returns nothing
    set gg_trg_Dialog_Setup=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Dialog_Setup, 0.01)
    call TriggerAddAction(gg_trg_Dialog_Setup, function Trig_Dialog_Setup_Actions)
endfunction

//===========================================================================
// Trigger: Mode Choose
//===========================================================================
function Trig_Mode_Choose_Func001001 takes nothing returns boolean
    return ( GetClickedButtonBJ() == udg_DialogButtons[1] )
endfunction

function Trig_Mode_Choose_Func001002002 takes nothing returns nothing
    call SetPlayerHandicapBJ(GetEnumPlayer(), 80.00)
endfunction

function Trig_Mode_Choose_Func002001 takes nothing returns boolean
    return ( GetClickedButtonBJ() == udg_DialogButtons[2] )
endfunction

function Trig_Mode_Choose_Func002002002 takes nothing returns nothing
    call SetPlayerHandicapBJ(GetEnumPlayer(), 100.00)
endfunction

function Trig_Mode_Choose_Func003001 takes nothing returns boolean
    return ( GetClickedButtonBJ() == udg_DialogButtons[3] )
endfunction

function Trig_Mode_Choose_Func003002002 takes nothing returns nothing
    call SetPlayerHandicapBJ(GetEnumPlayer(), 120.00)
endfunction

function Trig_Mode_Choose_Func004001 takes nothing returns boolean
    return ( GetClickedButtonBJ() == udg_DialogButtons[4] )
endfunction

function Trig_Mode_Choose_Func004002002 takes nothing returns nothing
    call SetPlayerHandicapBJ(GetEnumPlayer(), 150.00)
endfunction

function Trig_Mode_Choose_Actions takes nothing returns nothing
    if ( (GetClickedButtonBJ() == udg_DialogButtons[1]) ) then // INLINED!!
        call ForForce(udg_Spawns, function Trig_Mode_Choose_Func001002002)
    else
        call DoNothing()
    endif
    if ( (GetClickedButtonBJ() == udg_DialogButtons[2]) ) then // INLINED!!
        call ForForce(udg_Spawns, function Trig_Mode_Choose_Func002002002)
    else
        call DoNothing()
    endif
    if ( (GetClickedButtonBJ() == udg_DialogButtons[3]) ) then // INLINED!!
        call ForForce(udg_Spawns, function Trig_Mode_Choose_Func003002002)
    else
        call DoNothing()
    endif
    if ( (GetClickedButtonBJ() == udg_DialogButtons[4]) ) then // INLINED!!
        call ForForce(udg_Spawns, function Trig_Mode_Choose_Func004002002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Mode_Choose takes nothing returns nothing
    set gg_trg_Mode_Choose=CreateTrigger()
    call TriggerRegisterDialogEventBJ(gg_trg_Mode_Choose, udg_Dialog_Mode)
    call TriggerAddAction(gg_trg_Mode_Choose, function Trig_Mode_Choose_Actions)
endfunction

//===========================================================================
// Trigger: Mode Warning
//===========================================================================
function Trig_Mode_Warning_Func006Func001C takes nothing returns boolean
    if ( not ( GetClickedButtonBJ() == udg_DialogButtons[udg_TempInt] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mode_Warning_Actions takes nothing returns nothing
    set udg_DifficultyText[1]="|CFF0000FFEasy|r"
    set udg_DifficultyText[2]="|CFF00FF00Normal|r"
    set udg_DifficultyText[3]="|CFFFFD700Hard|r"
    set udg_DifficultyText[4]="|CFF800080Impossible|r"
    // -------------------------------------------------------------------------------
    set udg_TempInt=1
    loop
        exitwhen udg_TempInt > 4
        if ( Trig_Mode_Warning_Func006Func001C() ) then
            call DisplayTextToForce(GetPlayersAll(), ( "|cffff0000" + ( GetPlayerName(Player(0)) + ( " |rhas selected " + udg_DifficultyText[udg_TempInt] ) ) ))
            call CreateMultiboardBJ(3, 14, ( "|cffff0000Kings & Curses TD|r - " + udg_DifficultyText[udg_TempInt] ))
            call ConditionalTriggerExecute(gg_trg_Multiboard)
            set udg_TempInt=5
        else
        endif
        set udg_TempInt=udg_TempInt + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Mode_Warning takes nothing returns nothing
    set gg_trg_Mode_Warning=CreateTrigger()
    call TriggerRegisterDialogEventBJ(gg_trg_Mode_Warning, udg_Dialog_Mode)
    call TriggerAddAction(gg_trg_Mode_Warning, function Trig_Mode_Warning_Actions)
endfunction

//===========================================================================
// Trigger: Mode Units
//===========================================================================
function Trig_Mode_Units_Func003A takes nothing returns nothing
    call SetPlayerTechResearchedSwap('R00F', 1, GetEnumPlayer())
endfunction

function Trig_Mode_Units_Actions takes nothing returns nothing
    call PauseAllUnitsBJ(false)
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 13, "TRIGSTR_1145")
    call ForForce(udg_PlayersPlaying, function Trig_Mode_Units_Func003A)
    // Initiate first Build period
    call ConditionalTriggerExecute(gg_trg_Build_Period)
endfunction

//===========================================================================
function InitTrig_Mode_Units takes nothing returns nothing
    set gg_trg_Mode_Units=CreateTrigger()
    call TriggerRegisterDialogEventBJ(gg_trg_Mode_Units, udg_Dialog_Mode)
    call TriggerAddAction(gg_trg_Mode_Units, function Trig_Mode_Units_Actions)
endfunction

//===========================================================================
// Trigger: Multiboard
//===========================================================================
function Trig_Multiboard_Func001002001001001 takes nothing returns boolean
    return ( GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER )
endfunction

function Trig_Multiboard_Func001002001001002 takes nothing returns boolean
    return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Multiboard_Func001002001001 takes nothing returns boolean
    return GetBooleanAnd((GetPlayerController(GetFilterPlayer()) == MAP_CONTROL_USER), (GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING)) // INLINED!!
endfunction

function Trig_Multiboard_Actions takes nothing returns nothing
    set udg_Player_Count=CountPlayersInForceBJ(GetPlayersMatching(Condition(function Trig_Multiboard_Func001002001001)))
    call MultiboardSetItemWidthBJ(GetLastCreatedMultiboard(), 0, 0, 8.00)
    call MultiboardSetItemWidthBJ(GetLastCreatedMultiboard(), 1, 0, 7.70)
    call MultiboardSetItemWidthBJ(GetLastCreatedMultiboard(), 2, 0, 6.00)
    call MultiboardSetItemWidthBJ(GetLastCreatedMultiboard(), 3, 0, 8.25)
    call MultiboardSetItemIconBJ(GetLastCreatedMultiboard(), 1, 1, "ReplaceableTextures\\CommandButtons\\BTNArthasFrost.blp")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 1, "TRIGSTR_1985")
    call MultiboardSetItemIconBJ(GetLastCreatedMultiboard(), 2, 1, "UI\\Feedback\\Resources\\ResourceGold.blp")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 1, "TRIGSTR_1986")
    call MultiboardSetItemIconBJ(GetLastCreatedMultiboard(), 3, 1, "ReplaceableTextures\\CommandButtons\\BTNPotionGreen.blp")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 1, "TRIGSTR_1987")
    // Setup all player info
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 3, ( "|cffff0000" + ( GetPlayerName(Player(0)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 3, "TRIGSTR_1988")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 3, "TRIGSTR_1989")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 4, ( "|cff0000ff" + ( GetPlayerName(Player(1)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 4, "TRIGSTR_1990")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 4, "TRIGSTR_1991")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 5, ( "|cff00ffff" + ( GetPlayerName(Player(2)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 5, "TRIGSTR_1992")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 5, "TRIGSTR_1993")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 6, ( "|cff6f2583" + ( GetPlayerName(Player(3)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 6, "TRIGSTR_1994")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 6, "TRIGSTR_1995")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 7, ( "|cffffff00" + ( GetPlayerName(Player(4)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 7, "TRIGSTR_1996")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 7, "TRIGSTR_1997")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 8, ( "|cffd45e19" + ( GetPlayerName(Player(5)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 8, "TRIGSTR_1998")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 8, "TRIGSTR_1999")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 9, ( "|cff00ff00" + ( GetPlayerName(Player(6)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 9, "TRIGSTR_2000")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 9, "TRIGSTR_2001")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 10, ( "|cffff8080" + ( GetPlayerName(Player(7)) + "|r" ) ))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 10, "TRIGSTR_2002")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 10, "TRIGSTR_2003")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 11, "TRIGSTR_2004")
    // Setup wave timer and Armor type of wave
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 12, "TRIGSTR_2005")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 12, I2S(udg_BuildPeriodTime))
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 14, "TRIGSTR_2493")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 14, udg_ArmorType[1])
    call MultiboardSetItemStyleBJ(GetLastCreatedMultiboard(), 0, 0, true, false)
    call MultiboardSetItemStyleBJ(GetLastCreatedMultiboard(), 1, 1, true, true)
    call MultiboardSetItemStyleBJ(GetLastCreatedMultiboard(), 2, 1, true, true)
    call MultiboardSetItemStyleBJ(GetLastCreatedMultiboard(), 3, 1, true, true)
    call MultiboardDisplayBJ(true, GetLastCreatedMultiboard())
endfunction

//===========================================================================
function InitTrig_Multiboard takes nothing returns nothing
    set gg_trg_Multiboard=CreateTrigger()
    call TriggerAddAction(gg_trg_Multiboard, function Trig_Multiboard_Actions)
endfunction

//===========================================================================
// Trigger: Tower Types Init
//===========================================================================
function Trig_Tower_Types_Init_Actions takes nothing returns nothing
    set udg_TowerType0[1]='n021'
    set udg_TowerType0[2]='n008'
    set udg_TowerType0[3]='n009'
    set udg_TowerType0[4]='n01N'
    set udg_TowerType0[5]='n025'
    set udg_TowerType0[6]='u004'
    set udg_TowerType0[7]='u00C'
    set udg_TowerType0[8]='n02I'
    set udg_TowerType0[9]='n02J'
    set udg_TowerType0[10]='n00I'
    set udg_TowerType0[11]='n00D'
    set udg_TowerType0[12]='n00E'
    set udg_TowerType0[13]='n02N'
    set udg_TowerType0[14]='n00K'
    set udg_TowerType0[15]='n001'
    set udg_TowerType0[16]='n01S'
    set udg_TowerType0[17]='n02A'
    set udg_TowerType0[18]='n004'
    set udg_TowerType0[19]='n02C'
    set udg_TowerType0[20]='n02D'
    set udg_TowerType0[21]='n02E'
    set udg_TowerType0[22]='n013'
    set udg_TowerType0[23]='n02G'
    set udg_TowerType0[24]='e003'
    set udg_TowerType0[25]='h00O'
    set udg_TowerType0[26]='h00L'
    set udg_TowerType0[27]='h01K'
    set udg_TowerType0[28]='h00E'
    set udg_TowerType0[29]='h01L'
    set udg_TowerType0[30]='n002'
    set udg_TowerType0[31]='h113'
    // ------------------------
    set udg_TowerType1[1]='n007'
    set udg_TowerType1[2]='n022'
    set udg_TowerType1[3]='n023'
    set udg_TowerType1[4]='n024'
    set udg_TowerType1[5]='n01C'
    set udg_TowerType1[6]='u00B'
    set udg_TowerType1[7]='u009'
    set udg_TowerType1[8]='n00G'
    set udg_TowerType1[9]='n00H'
    set udg_TowerType1[10]='n02K'
    set udg_TowerType1[11]='n02L'
    set udg_TowerType1[12]='n02M'
    set udg_TowerType1[13]='n00F'
    set udg_TowerType1[14]='n000'
    set udg_TowerType1[15]='n00L'
    set udg_TowerType1[16]='n00A'
    set udg_TowerType1[17]='n003'
    set udg_TowerType1[18]='n02B'
    set udg_TowerType1[19]='n005'
    set udg_TowerType1[20]='n006'
    set udg_TowerType1[21]='n01O'
    set udg_TowerType1[22]='n02F'
    set udg_TowerType1[23]='n014'
    set udg_TowerType1[24]='e01D'
    set udg_TowerType1[25]='h013'
    set udg_TowerType1[26]='h01F'
    set udg_TowerType1[27]='h00M'
    set udg_TowerType1[28]='h01M'
    set udg_TowerType1[29]='h00B'
    set udg_TowerType1[30]='n02H'
    set udg_TowerType1[31]='h112'
endfunction

//===========================================================================
function InitTrig_Tower_Types_Init takes nothing returns nothing
    set gg_trg_Tower_Types_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Tower_Types_Init, function Trig_Tower_Types_Init_Actions)
endfunction

//===========================================================================
// Trigger: Movement Speed to 0
//===========================================================================
function Trig_Movement_Speed_to_0_Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnumUnit()) == udg_TowerType1[udg_TempInt] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Movement_Speed_to_0_Func001Func001A takes nothing returns nothing
    set udg_TempInt=1
    loop
        exitwhen udg_TempInt > 31
        if ( Trig_Movement_Speed_to_0_Func001Func001Func001Func001C() ) then
            set udg_TempLoc=GetUnitLoc(GetEnumUnit())
            call ReplaceUnitBJ(GetEnumUnit(), udg_TowerType0[udg_TempInt], bj_UNIT_STATE_METHOD_RELATIVE)
            call RemoveLocation(udg_TempLoc)
        else
        endif
        set udg_TempInt=udg_TempInt + 1
    endloop
endfunction

function Trig_Movement_Speed_to_0_Func001A takes nothing returns nothing
    call ForGroupBJ(GetUnitsOfPlayerAll(GetEnumPlayer()), function Trig_Movement_Speed_to_0_Func001Func001A)
endfunction

function Trig_Movement_Speed_to_0_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_Movement_Speed_to_0_Func001A)
endfunction

//===========================================================================
function InitTrig_Movement_Speed_to_0 takes nothing returns nothing
    set gg_trg_Movement_Speed_to_0=CreateTrigger()
    call TriggerAddAction(gg_trg_Movement_Speed_to_0, function Trig_Movement_Speed_to_0_Actions)
endfunction

//===========================================================================
// Trigger: Movement Speed to 1
//===========================================================================
function Trig_Movement_Speed_to_1_Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnumUnit()) == udg_TowerType0[udg_TempInt] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Movement_Speed_to_1_Func001Func001A takes nothing returns nothing
    set udg_TempInt=1
    loop
        exitwhen udg_TempInt > 31
        if ( Trig_Movement_Speed_to_1_Func001Func001Func001Func001C() ) then
            set udg_TempLoc=GetUnitLoc(GetEnumUnit())
            call ReplaceUnitBJ(GetEnumUnit(), udg_TowerType1[udg_TempInt], bj_UNIT_STATE_METHOD_RELATIVE)
            call RemoveLocation(udg_TempLoc)
        else
        endif
        set udg_TempInt=udg_TempInt + 1
    endloop
endfunction

function Trig_Movement_Speed_to_1_Func001A takes nothing returns nothing
    call ForGroupBJ(GetUnitsOfPlayerAll(GetEnumPlayer()), function Trig_Movement_Speed_to_1_Func001Func001A)
endfunction

function Trig_Movement_Speed_to_1_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_Movement_Speed_to_1_Func001A)
endfunction

//===========================================================================
function InitTrig_Movement_Speed_to_1 takes nothing returns nothing
    set gg_trg_Movement_Speed_to_1=CreateTrigger()
    call TriggerAddAction(gg_trg_Movement_Speed_to_1, function Trig_Movement_Speed_to_1_Actions)
endfunction

//===========================================================================
// Trigger: Setting up Creeps
//===========================================================================
function Trig_Setting_up_Creeps_Actions takes nothing returns nothing
    set udg_ArmorUnnarmored="|cff0a801eUnnarmored|r"
    set udg_ArmorHeavy="|cff6f2583Heavy|r"
    set udg_ArmorFortified="|cffff0000Fortified|r"
    // CreepType[X] = Creep type of each level
    // GoldLevel[X] = Gold gained after defeating a level
    // CreepSpawns[X] = The amount of units that spawn per level
    // SpawnInterval[X] = The delay between each creep spawn
    // GoldLevel[X] = The gold you get after clearing a wave.
    // Level 1
    set udg_TempInt=1
    set udg_CreepType[udg_TempInt]='h000'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc001|r) - |CFF7EBFF1Footman|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc001|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Footman|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=4
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 2
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h019'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc002|r) - |CFF7EBFF1Knight|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc002|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Knight|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=7
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 3
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='o000'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc003|r) - |CFF7EBFF1Tauren|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc003|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Tauren|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=13
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 4
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='o004'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc004|r) - |CFF7EBFF1Kodo Beast|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc004|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Kodo Beast|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=19
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 5
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='o003'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc005|r) - |CFF7EBFF1Shaman|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc005|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Shaman|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=27
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 6
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='o002'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc006|r) - |CFF7EBFF1Spirit Walker|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc006|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Spirit Walker|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=32
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 7
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='u002'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc007|r) - |CFF7EBFF1Shade|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc007|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Shade|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=39
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 8
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='u000'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc008|r) - |CFF7EBFF1Abomination|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc008|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Abomination|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=44
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 9
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='u003'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc009|r) - |CFF7EBFF1Crypt Fiend|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc009|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Crypt Fiend|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=51
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 10
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='u001'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0010|r) - |CFF7EBFF1Necromancer|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880010|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Necromancer|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=58
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Boss Level 1
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='H01A'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc001|r) - |cffff0000Mountain King|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33001|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11Mountain King|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=62
    set udg_ArmorType[udg_TempInt]="|cff0000ffMedium|r"
    // Level 11
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n00B'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0011|r) - |CFF7EBFF1Mur'gul Reaver|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0011|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Mur'Gul Reaver|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=68
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 12
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n00C'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0012|r) - |CFF7EBFF1Naga Siren|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0012|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Naga Siren|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=76
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 13
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='o001'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0013|r) - |CFF7EBFF1Orc Warchief|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0013|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Orc Warchief|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=81
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 14
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h003'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0014|r) - |CFF7EBFF1Rifleman|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0014|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Rifleman|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=90
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 15
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h004'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0015|r) - |CFF7EBFF1Mortar Team|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0015|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Mortar Team|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=97
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 16
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h005'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0016|r) - |CFF7EBFF1Priest|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0016|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Priest|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=105
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 17
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h006'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0017|r) - |CFF7EBFF1Sorceress|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0017|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Sorceress|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=113
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 18
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h007'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0018|r) - |CFF7EBFF1Spell Breaker|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0018|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Spell Breaker|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=121
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 19
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='h008'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0019|r) - |CFF7EBFF1Siege Engine|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0019|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Siege Engine|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=134
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 20
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e001'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0020|r) - |CFF7EBFF1Huntress|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880020|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Huntress|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=147
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Boss Level 2
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e002'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc002|r) - |cffff0000Mountain Giant|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33002|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11Mountain Giant|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=150
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 21
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e004'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0021|r) - |CFF7EBFF1Demon|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0021|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Demon|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=164
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 22
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e006'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0022|r) - |CFF7EBFF1Demonician|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0022|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Demonician|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=183
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 23
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e005'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0023|r) - |CFF7EBFF1Satan|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0023|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Satan|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=204
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 24 (Diablo 1 on PS 1 is best game ever made)
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e007'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0024|r) - |CFF7EBFF1Diablo|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0024|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Diablo|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=219
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 25
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e008'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0025|r) - |CFF7EBFF1Evil Abomination|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0025|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Evil Abomination|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=240
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 26
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e009'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0026|r) - |CFF7EBFF1Demonic Toilet|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0026|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Demonic Toilet|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=265
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 27
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00B'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0027|r) - |CFF7EBFF1Shadow Spawn|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0027|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Shadow Spawn|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=293
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 28
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n026'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0028|r) - |CFF7EBFF1Dark Weaver|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0028|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Dark Weaver|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=320
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 29
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00C'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0029|r) - |CFF7EBFF1Nether Demon|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0029|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Nether Demon|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=367
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 30
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00F'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0030|r) - |CFF7EBFF1Lichling|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880030|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Lichling|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=400
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Boss Level 3
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00E'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc003|r) - |cffff0000Doom Beast|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33003|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11Doom Beast|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=3000
    set udg_ArmorType[udg_TempInt]="Light"
    // Level 31
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n01V'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0031|r) - |CFF7EBFF1Brood Mother|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0031|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Brood Mother|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=440
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 32
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00G'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0032|r) - |CFF7EBFF1Dark Captain|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0032|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Dark Captain|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=500
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 33
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00H'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0033|r) - |CFF7EBFF1Crystal Arachnid|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0033|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Crystal Arachnid|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=550
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 34
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00I'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0034|r) - |CFF7EBFF1Infected Mutant|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0034|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Infected Mutant|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=600
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 35
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00J'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0035|r) - |CFF7EBFF1Demolisher|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880035|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Demolisher|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=650
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 36
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00K'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0036|r) - |CFF7EBFF1Fire Lord|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0036|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Fire Lord|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=700
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 37
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00L'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0037|r) - |CFF7EBFF1Goblin Blaster|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0037|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Goblin Blaster|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=750
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 38
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00M'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0038|r) - |CFF7EBFF1Infernal|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0038|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Infernal|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=800
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 39
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n01W'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0039|r) - |CFF7EBFF1Polar Champion|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0039|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Polar Champion|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=850
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 40
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00O'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0040|r) - |CFF7EBFF1Tornado|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880040|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Tornado|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Boss Level 4
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00P'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc004|r) - |cffff0000Ember Knight|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33004|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11Ember Knight|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=5000
    set udg_ArmorType[udg_TempInt]=udg_ArmorHeavy
    // Level 41
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00Q'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0041|r) - |CFF7EBFF1Evil Warden|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0041|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Evil Warden|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 42
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n01Y'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0042|r) - |CFF7EBFF1Vile Temptress|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0042|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Vile Temptress|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorUnnarmored
    // Level 43
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00S'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0043|r) - |CFF7EBFF1Avatar of Vengeance|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0043|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Avatar of Vengeance|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 44
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00T'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0044|r) - |CFF7EBFF1Azgalor|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0044|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Azgalor|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 45
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00U'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0045|r) - |CFF7EBFF1Banshee|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0045|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Banshee|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 46
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n01X'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0046|r) - |CFF7EBFF1Berserk Elemental|r - is about to begin ! "
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0046|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Berserk Elemental|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 47
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00W'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0047|r) - |CFF7EBFF1Black Dragon|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0047|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Black Dragon|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 48
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00X'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0048|r) - |CFF7EBFF1Dark Ranger|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0048|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Dark Ranger|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 49
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00Z'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0049|r) - |CFF7EBFF1Deeplord Revenant|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0049|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Deeplord Revenant|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 50
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e00Y'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0050|r) - |CFF7EBFF1The Death Knight|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffff880050|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1The Death Knight|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Boss Level 5
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e010'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc005|r) - |cffff0000The King's Doppelganger|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33005|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11The King's Doppelganger|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=5000
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 51
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='E01C'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0051|r) - |CFF7EBFF1Demon Hunter|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0051|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Demon Hunter|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 52
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e013'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0052|r) - |CFF7EBFF1Detheroc|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0052|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Detheroc|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 53
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n01Z'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0053|r) - |CFF7EBFF1Enforcer|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0053|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Enforcer|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 54
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e014'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0054|r) - |CFF7EBFF1Earth|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0054|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Earth|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 55
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e015'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0055|r) - |CFF7EBFF1Gazlowe|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0055|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Gazlowe|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 56
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='n020'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0056|r) - |CFF7EBFF1Granite Golem|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0056|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Granite Golem|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 57
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e017'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0057|r) - |CFF7EBFF1Grommash|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0057|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Grommash|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 58
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e018'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0058|r) - |CFF7EBFF1The Lifebringer|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0058|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1The Lifebringer|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 59
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e019'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0059|r) - |CFF7EBFF1Kil`jaeden|r - is about to begin !"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0059|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Kil`jaeden|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Level 60
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='u00A'
    set udg_WaveNotify[udg_TempInt]="Wave Level (|cffffcc0060|r) - |CFF7EBFF1Sapphiron's Offspring|r - is about to begin ! |cffff2000Difficulty is about to increase next round!|r"
    set udg_WaveMultBord[udg_TempInt]="Level |cffffcc0060|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFF7EBFF1Sapphiron's Offspring|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=15
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=900
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Boss Level 6
    set udg_TempInt=( udg_TempInt + 1 )
    set udg_CreepType[udg_TempInt]='e01B'
    set udg_WaveNotify[udg_TempInt]="Boss Level (|cffffcc006|r) - |cffff0000Sapphiron the Undead|r - is about to begin ! - Costs 5 lives !"
    set udg_WaveMultBord[udg_TempInt]="Boss |cffff33006|r"
    set udg_WaveMultBordC[udg_TempInt]="|CFFFE8F11Sapphiron the Undead|r"
    set udg_SpecialWave[udg_TempInt]=" Normal "
    set udg_CreepSpawns[udg_TempInt]=1
    set udg_SpawnInterval[udg_TempInt]=2.50
    set udg_GoldLevel[udg_TempInt]=5000
    set udg_ArmorType[udg_TempInt]=udg_ArmorFortified
    // Setting up the Max Level
    set udg_MaxLevel=udg_TempInt
endfunction

//===========================================================================
function InitTrig_Setting_up_Creeps takes nothing returns nothing
    set gg_trg_Setting_up_Creeps=CreateTrigger()
    call TriggerAddAction(gg_trg_Setting_up_Creeps, function Trig_Setting_up_Creeps_Actions)
endfunction

//===========================================================================
// Trigger: Init Spawn
//===========================================================================
function Trig_Init_Spawn_Func001A takes nothing returns nothing
    call SetPlayerTechResearchedSwap('R00F', 0, GetEnumPlayer())
endfunction

function Trig_Init_Spawn_Func003Func002Func003A takes nothing returns nothing
    call CustomVictoryBJ(GetEnumPlayer(), true, true)
endfunction

function Trig_Init_Spawn_Func003Func002C takes nothing returns boolean
    if ( not ( udg_Level == udg_MaxLevel ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_Spawn_Func003C takes nothing returns boolean
    if ( not ( udg_Level == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_Spawn_Actions takes nothing returns nothing
    call ForForce(GetPlayersAll(), function Trig_Init_Spawn_Func001A)
    // First Level?
    if ( Trig_Init_Spawn_Func003C() ) then
        set udg_Level=( udg_Level + 1 )
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 13, "TRIGSTR_2547")
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 13, udg_WaveMultBord[udg_Level])
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 13, udg_WaveMultBordC[udg_Level])
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 14, udg_ArmorType[udg_Level])
        set udg_CreepCount=0
        set udg_WaveTime=0.00
        call ConditionalTriggerExecute(gg_trg_Movement_Speed_to_1)
        call EnableTrigger(gg_trg_Timer)
        call PlaySoundBJ(gg_snd_ClanInvitation)
        call DisplayTimedTextToForce(GetPlayersAll(), 10.00, udg_WaveNotify[udg_Level])
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Red), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Blue), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Teal), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Purple), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Yellow), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Orange), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Green), "BlackHole.mdx")
        call AddSpecialEffectLocBJ(GetRectCenter(gg_rct_Creep_Spawn_Pink), "BlackHole.mdx")
        return
    else
        // Victory?
        if ( Trig_Init_Spawn_Func003Func002C() ) then
            call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_953")
            call TriggerSleepAction(45.00)
            call ForForce(udg_Players, function Trig_Init_Spawn_Func003Func002Func003A)
            return
        else
        endif
    endif
    // Wave information
    set udg_Level=( udg_Level + 1 )
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 13, "TRIGSTR_2549")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 13, udg_WaveMultBord[udg_Level])
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 13, udg_WaveMultBordC[udg_Level])
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 14, udg_ArmorType[udg_Level])
    call DisplayTimedTextToForce(GetPlayersAll(), 10.00, udg_WaveNotify[udg_Level])
    call PlaySoundBJ(gg_snd_Warning)
    set udg_CreepCount=0
    set udg_WaveTime=0.00
    call ConditionalTriggerExecute(gg_trg_Movement_Speed_to_1)
    call EnableTrigger(gg_trg_Timer)
endfunction

//===========================================================================
function InitTrig_Init_Spawn takes nothing returns nothing
    set gg_trg_Init_Spawn=CreateTrigger()
    call TriggerAddAction(gg_trg_Init_Spawn, function Trig_Init_Spawn_Actions)
endfunction

//===========================================================================
// Trigger: Spawn Creeps
//===========================================================================
function Trig_Spawn_Creeps_Func001Func001Func006C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func007C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func008C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func009C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func010C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 5 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func011C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 6 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func012C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001Func013C takes nothing returns boolean
    if ( not ( udg_LoopInt1 == 8 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func001Func001C takes nothing returns boolean
    if ( not ( udg_IsPlaying[udg_LoopInt1] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Func004C takes nothing returns boolean
    if ( not ( udg_CreepCount == udg_CreepSpawns[udg_Level] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Spawn_Creeps_Actions takes nothing returns nothing
    set udg_LoopInt1=1
    loop
        exitwhen udg_LoopInt1 > 8
        if ( Trig_Spawn_Creeps_Func001Func001C() ) then
            // Setting spawn and move-locations
            set udg_loc[1]=GetRectCenter(udg_CheckpointRegion[udg_LoopInt1])
            set udg_loc[2]=GetRectCenter(udg_CheckpointRegion[( 8 + udg_LoopInt1 )])
            // Spawning, moving and setting checkpoint value
            if ( Trig_Spawn_Creeps_Func001Func001Func006C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(8), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func007C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(9), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func008C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(10), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func009C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(11), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func010C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(12), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func011C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(13), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func012C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(14), udg_loc[1], 0.00)
            else
            endif
            if ( Trig_Spawn_Creeps_Func001Func001Func013C() ) then
                call CreateNUnitsAtLoc(1, udg_CreepType[udg_Level], Player(15), udg_loc[1], 0.00)
            else
            endif
            call IssuePointOrderLocBJ(GetLastCreatedUnit(), "move", udg_loc[2])
            call SetUnitUserData(GetLastCreatedUnit(), ( 8 + udg_LoopInt1 ))
            // Removing leaks
            call RemoveLocation(udg_loc[1])
            call RemoveLocation(udg_loc[2])
        else
        endif
        set udg_LoopInt1=udg_LoopInt1 + 1
    endloop
    // Checking if all units have spawned
    set udg_CreepCount=( udg_CreepCount + 1 )
    if ( Trig_Spawn_Creeps_Func004C() ) then
        call DisableTrigger(gg_trg_Timer)
    else
    endif
endfunction

//===========================================================================
function InitTrig_Spawn_Creeps takes nothing returns nothing
    set gg_trg_Spawn_Creeps=CreateTrigger()
    call TriggerAddAction(gg_trg_Spawn_Creeps, function Trig_Spawn_Creeps_Actions)
endfunction

//===========================================================================
// Trigger: Timer
//===========================================================================
function Trig_Timer_Func002C takes nothing returns boolean
    if ( not ( udg_WaveTime >= udg_SpawnInterval[udg_Level] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Timer_Actions takes nothing returns nothing
    set udg_WaveTime=( udg_WaveTime + 1.00 )
    if ( Trig_Timer_Func002C() ) then
        call ConditionalTriggerExecute(gg_trg_Spawn_Creeps)
        set udg_WaveTime=0.00
    else
    endif
endfunction

//===========================================================================
function InitTrig_Timer takes nothing returns nothing
    set gg_trg_Timer=CreateTrigger()
    call DisableTrigger(gg_trg_Timer)
    call TriggerRegisterTimerEventPeriodic(gg_trg_Timer, 1.00)
    call TriggerAddAction(gg_trg_Timer, function Trig_Timer_Actions)
endfunction

//===========================================================================
// Trigger: Checkpoints
//===========================================================================
function Trig_Checkpoints_Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitUserData(GetTriggerUnit()) == udg_LoopInt2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Checkpoints_Func003Func001Func002Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'H01A' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'e002' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'e00E' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'e00P' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'e010' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetTriggerUnit()) == 'e01B' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Checkpoints_Func003Func001Func002C takes nothing returns boolean
    if ( not Trig_Checkpoints_Func003Func001Func002Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Checkpoints_Func003Func001Func003Func003C takes nothing returns boolean
    if ( not ( udg_Lives[udg_LoopInt2] <= 0 ) ) then
        return false
    endif
    if ( not ( udg_IsPlaying[udg_LoopInt2] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Checkpoints_Func003Func001Func003Func004A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Checkpoints_Func003Func001Func003C takes nothing returns boolean
    if ( not Trig_Checkpoints_Func003Func001Func003Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Checkpoints_Func003Func001C takes nothing returns boolean
    if ( not ( GetUnitUserData(GetTriggerUnit()) == ( 48 + udg_LoopInt2 ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Checkpoints_Actions takes nothing returns nothing
    set udg_LoopInt2=0
    loop
        exitwhen udg_LoopInt2 > 48
        if ( Trig_Checkpoints_Func001Func001C() ) then
            call SetUnitUserData(GetEnteringUnit(), ( 8 + udg_LoopInt2 ))
            set udg_Point=GetRectCenter(udg_CheckpointRegion[( 8 + udg_LoopInt2 )])
            call IssuePointOrderLocBJ(GetEnteringUnit(), "move", udg_Point)
            call RemoveLocation(udg_Point)
            set udg_LoopInt2=41
        else
        endif
        set udg_LoopInt2=udg_LoopInt2 + 1
    endloop
    // Lose lives
    set udg_LoopInt2=1
    loop
        exitwhen udg_LoopInt2 > 8
        if ( Trig_Checkpoints_Func003Func001C() ) then
            // Bosses cost 5 lives
            if ( Trig_Checkpoints_Func003Func001Func002C() ) then
                set udg_Lives[udg_LoopInt2]=( udg_Lives[udg_LoopInt2] - 5 )
            else
                set udg_Lives[udg_LoopInt2]=( udg_Lives[udg_LoopInt2] - 1 )
            endif
            if ( Trig_Checkpoints_Func003Func001Func003C() ) then
                set udg_IsPlaying[udg_LoopInt2]=false
                call ForGroupBJ(GetUnitsInRectOfPlayer(GetPlayableMapRect(), udg_Player_array[udg_LoopInt2]), function Trig_Checkpoints_Func003Func001Func003Func004A)
                call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, ( udg_LoopInt2 + 2 ), "TRIGSTR_3026")
                call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( udg_LoopInt2 + 2 ), "TRIGSTR_3027")
                call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, ( udg_LoopInt2 + 2 ), "TRIGSTR_3028")
            else
                call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, ( udg_LoopInt2 + 2 ), I2S(udg_Lives[udg_LoopInt2]))
            endif
            call RemoveUnit(GetTriggerUnit())
            set udg_LoopInt2=9
        else
        endif
        set udg_LoopInt2=udg_LoopInt2 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Checkpoints takes nothing returns nothing
    set gg_trg_Checkpoints=CreateTrigger()
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Red_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Red_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Red_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Red_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Blue_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Blue_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Blue_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Blue_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Teal_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Teal_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Teal_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Teal_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Purple_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Purple_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Purple_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Purple_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Yellow_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Yellow_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Yellow_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Yellow_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Orange_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Orange_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Orange_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Orange_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Green_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Green_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Green_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Green_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Pink_1)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Pink_2)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Pink_3)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Move_Pink_4)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Death_Area_Red_and_Teal)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Death_Area_Blue_and_Purple)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Death_Area_Yellow_and_Green)
    call TriggerRegisterEnterRectSimple(gg_trg_Checkpoints, gg_rct_Creep_Death_Area_Orange_and_Pink)
    call TriggerAddAction(gg_trg_Checkpoints, function Trig_Checkpoints_Actions)
endfunction

//===========================================================================
// Trigger: Corpse Removall
//===========================================================================
function Trig_Corpse_Removall_Func001002002 takes nothing returns boolean
    return ( IsUnitDeadBJ(GetFilterUnit()) == true )
endfunction

function Trig_Corpse_Removall_Func002A takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function Trig_Corpse_Removall_Actions takes nothing returns nothing
    set udg_XCorpse=GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Corpse_Removall_Func001002002))
    call ForGroupBJ(udg_XCorpse, function Trig_Corpse_Removall_Func002A)
    call DestroyGroup(udg_XCorpse)
endfunction

//===========================================================================
function InitTrig_Corpse_Removall takes nothing returns nothing
    set gg_trg_Corpse_Removall=CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(gg_trg_Corpse_Removall, 20.00)
    call TriggerAddAction(gg_trg_Corpse_Removall, function Trig_Corpse_Removall_Actions)
endfunction

//===========================================================================
// Trigger: Wave Timer
//===========================================================================
function Trig_Wave_Timer_Func003Func002001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Wave_Timer_Func003Func002A takes nothing returns nothing
    set udg_CreepsAliveCount=( udg_CreepsAliveCount + 1 )
endfunction

function Trig_Wave_Timer_Func003A takes nothing returns nothing
    set bj_wantDestroyGroup=true
    call ForGroupBJ(GetUnitsOfPlayerMatching(GetEnumPlayer(), Condition(function Trig_Wave_Timer_Func003Func002001002)), function Trig_Wave_Timer_Func003Func002A)
endfunction

function Trig_Wave_Timer_Func004C takes nothing returns boolean
    if ( not ( udg_CreepsAliveCount == 3 ) ) then
        return false
    endif
    if ( not ( udg_CreepCount == udg_CreepSpawns[udg_Level] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Timer_Actions takes nothing returns nothing
    set udg_CreepsAliveCount=0
    call ForForce(udg_Spawns, function Trig_Wave_Timer_Func003A)
    if ( Trig_Wave_Timer_Func004C() ) then
        call ConditionalTriggerExecute(gg_trg_Build_Period)
        call DisableTrigger(GetTriggeringTrigger())
    else
    endif
endfunction

//===========================================================================
function InitTrig_Wave_Timer takes nothing returns nothing
    set gg_trg_Wave_Timer=CreateTrigger()
    call DisableTrigger(gg_trg_Wave_Timer)
    call TriggerRegisterTimerEventPeriodic(gg_trg_Wave_Timer, 1.00)
    call TriggerAddAction(gg_trg_Wave_Timer, function Trig_Wave_Timer_Actions)
endfunction

//===========================================================================
// Trigger: Build Period
//===========================================================================
function Trig_Build_Period_Func002Func009Func003A takes nothing returns nothing
    call CustomVictoryBJ(GetEnumPlayer(), true, true)
endfunction

function Trig_Build_Period_Func002Func009C takes nothing returns boolean
    if ( not ( udg_Level == udg_MaxLevel ) ) then
        return false
    endif
    return true
endfunction

function Trig_Build_Period_Func002C takes nothing returns boolean
    if ( not ( udg_Level == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Build_Period_Func006A takes nothing returns nothing
    call SetPlayerTechResearchedSwap('R00F', 1, GetEnumPlayer())
endfunction

function Trig_Build_Period_Func015Func001C takes nothing returns boolean
    if ( not ( GetPlayerSlotState(ConvertedPlayer(udg_LoopInt2)) == PLAYER_SLOT_STATE_PLAYING ) ) then
        return false
    endif
    return true
endfunction

function Trig_Build_Period_Actions takes nothing returns nothing
    // First Level?
    if ( Trig_Build_Period_Func002C() ) then
        // Duration of the initial build period
        set udg_BuildPeriodTime=76
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 13, "TRIGSTR_2546")
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 13, udg_WaveMultBord[( udg_Level + 1 )])
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 13, udg_WaveMultBordC[( udg_Level + 1 )])
        call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 14, udg_ArmorType[( udg_Level + 1 )])
        call ConditionalTriggerExecute(gg_trg_Movement_Speed_to_0)
        call EnableTrigger(gg_trg_Build_Period_Timer)
        return
    else
        // Victory?
        if ( Trig_Build_Period_Func002Func009C() ) then
            call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_2419")
            call TriggerSleepAction(45.00)
            call ForForce(udg_Players, function Trig_Build_Period_Func002Func009Func003A)
            return
        else
        endif
    endif
    // Wave has ended
    set udg_BuildPeriodTime=31
    call PlaySoundBJ(gg_snd_GoodJob)
    call ForForce(udg_PlayersPlaying, function Trig_Build_Period_Func006A)
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, 13, "TRIGSTR_2613")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 13, udg_WaveMultBord[( udg_Level + 1 )])
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, 13, udg_WaveMultBordC[( udg_Level + 1 )])
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 14, udg_ArmorType[( udg_Level + 1 )])
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_2414")
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_2417")
    call DisplayTimedTextToForce(udg_PlayersPlaying, 6.00, ( "|cffffcc00Gold received: |r" + I2S(udg_GoldLevel[udg_Level]) ))
    // Give level gold and income to each player
    set udg_LoopInt2=1
    loop
        exitwhen udg_LoopInt2 > 8
        if ( Trig_Build_Period_Func015Func001C() ) then
            call AdjustPlayerStateBJ(udg_GoldLevel[udg_Level], ConvertedPlayer(udg_LoopInt2), PLAYER_STATE_RESOURCE_GOLD)
        else
        endif
        set udg_LoopInt2=udg_LoopInt2 + 1
    endloop
    call ConditionalTriggerExecute(gg_trg_KingMaxUp_and_lumbering_speed)
    call ConditionalTriggerExecute(gg_trg_Movement_Speed_to_0)
    call ConditionalTriggerExecute(gg_trg_Income_EndofRound)
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_2418")
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_2406")
    call EnableTrigger(gg_trg_Build_Period_Timer)
endfunction

//===========================================================================
function InitTrig_Build_Period takes nothing returns nothing
    set gg_trg_Build_Period=CreateTrigger()
    call TriggerAddAction(gg_trg_Build_Period, function Trig_Build_Period_Actions)
endfunction

//===========================================================================
// Trigger: Build Period Timer
//===========================================================================
function Trig_Build_Period_Timer_Func001C takes nothing returns boolean
    if ( not ( udg_BuildPeriodTime <= 5 ) ) then
        return false
    endif
    if ( not ( udg_BuildPeriodTime != 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Build_Period_Timer_Func002C takes nothing returns boolean
    if ( not ( udg_BuildPeriodTime == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Build_Period_Timer_Actions takes nothing returns nothing
    if ( Trig_Build_Period_Timer_Func001C() ) then
        call PlaySoundBJ(gg_snd_BattleNetTick)
    else
    endif
    if ( Trig_Build_Period_Timer_Func002C() ) then
        // Once the build time is over, start the next wave
        call ConditionalTriggerExecute(gg_trg_Init_Spawn)
        call EnableTrigger(gg_trg_Wave_Timer)
        call DisableTrigger(GetTriggeringTrigger())
    else
        set udg_BuildPeriodTime=( udg_BuildPeriodTime - 1 )
    endif
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, 12, I2S(udg_BuildPeriodTime))
endfunction

//===========================================================================
function InitTrig_Build_Period_Timer takes nothing returns nothing
    set gg_trg_Build_Period_Timer=CreateTrigger()
    call DisableTrigger(gg_trg_Build_Period_Timer)
    call TriggerRegisterTimerEventPeriodic(gg_trg_Build_Period_Timer, 1.00)
    call TriggerAddAction(gg_trg_Build_Period_Timer, function Trig_Build_Period_Timer_Actions)
endfunction

//===========================================================================
// Trigger: Send troops v2
//===========================================================================
function Trig_Send_troops_v2_Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSellingUnit()) == 'h00C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Send_troops_v2_Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetSellingUnit()) == 'h001' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetSellingUnit()) == 'h009' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Send_troops_v2_Func001Func004Func001C takes nothing returns boolean
    if ( not ( GetEnumPlayer() != GetOwningPlayer(GetSellingUnit()) ) ) then
        return false
    endif
    if ( not ( udg_IsPlaying[GetConvertedPlayerId(GetEnumPlayer())] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Send_troops_v2_Func001Func004A takes nothing returns nothing
    if ( Trig_Send_troops_v2_Func001Func004Func001C() ) then
        set udg_XTemp_Point=GetRandomLocInRect(udg_KingReg_array[GetConvertedPlayerId(GetEnumPlayer())])
        call CreateNUnitsAtLoc(1, GetUnitTypeId(GetSoldUnit()), Player(16), udg_XTemp_Point, bj_UNIT_FACING)
        call RemoveLocation(udg_XTemp_Point)
    else
    endif
endfunction

function Trig_Send_troops_v2_Func001C takes nothing returns boolean
    if ( not Trig_Send_troops_v2_Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Send_troops_v2_Actions takes nothing returns nothing
    if ( Trig_Send_troops_v2_Func001C() ) then
        call RemoveUnit(GetSoldUnit())
        call ForForce(udg_PlayersPlaying, function Trig_Send_troops_v2_Func001Func004A)
    else
        if ( Trig_Send_troops_v2_Func001Func001C() ) then
            call RemoveUnit(GetSoldUnit())
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_Send_troops_v2 takes nothing returns nothing
    set gg_trg_Send_troops_v2=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Send_troops_v2, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddAction(gg_trg_Send_troops_v2, function Trig_Send_troops_v2_Actions)
endfunction

//===========================================================================
// Trigger: Sendable Units Init
//===========================================================================
function Trig_Sendable_Units_Init_Actions takes nothing returns nothing
    set udg_SendableCreeps[1]='n00N'
    set udg_SendableCreeps[2]='n00Z'
    set udg_SendableCreeps[3]='n00X'
    set udg_SendableCreeps[4]='n00U'
    set udg_SendableCreeps[5]='n00Q'
    set udg_SendableCreeps[6]='n010'
    set udg_SendableCreeps[7]='n00Y'
    set udg_SendableCreeps[8]='n00T'
    set udg_SendableCreeps[9]='n00O'
    set udg_SendableCreeps[10]='n00R'
    set udg_SendableCreeps[11]='n017'
    set udg_SendableCreeps[12]='n00W'
    set udg_SendableCreeps[13]='n019'
    set udg_SendableCreeps[14]='n00P'
    set udg_SendableCreeps[15]='n012'
    set udg_SendableCreeps[16]='n00S'
    set udg_SendableCreeps[17]='n011'
    set udg_SendableCreeps[18]='o005'
    set udg_SendableCreeps[19]='H012'
    set udg_SendableCreeps[20]='H017'
    set udg_SendableCreeps[21]='H018'
    set udg_SendableCreeps[22]='n01E'
    set udg_SendableCreeps[23]='n01F'
    set udg_SendableCreeps[24]='n01G'
    set udg_SendableCreeps[25]='n01L'
    set udg_SendableCreeps[26]='n01I'
    set udg_SendableCreeps[27]='n01J'
    set udg_SendableCreeps[28]='n01K'
    set udg_SendableCreeps[29]='n01M'
    // --------------------
    set udg_IncomePerCreep[1]=2
    set udg_IncomePerCreep[2]=4
    set udg_IncomePerCreep[3]=6
    set udg_IncomePerCreep[4]=8
    set udg_IncomePerCreep[5]=10
    set udg_IncomePerCreep[6]=12
    set udg_IncomePerCreep[7]=18
    set udg_IncomePerCreep[8]=25
    set udg_IncomePerCreep[9]=35
    set udg_IncomePerCreep[10]=50
    set udg_IncomePerCreep[11]=5
    set udg_IncomePerCreep[12]=10
    set udg_IncomePerCreep[13]=15
    set udg_IncomePerCreep[14]=25
    set udg_IncomePerCreep[15]=50
    set udg_IncomePerCreep[16]=75
    set udg_IncomePerCreep[17]=100
    set udg_IncomePerCreep[18]=150
    set udg_IncomePerCreep[19]=350
    set udg_IncomePerCreep[20]=350
    set udg_IncomePerCreep[21]=350
    set udg_IncomePerCreep[22]=25
    set udg_IncomePerCreep[23]=25
    set udg_IncomePerCreep[24]=25
    set udg_IncomePerCreep[25]=25
    set udg_IncomePerCreep[26]=25
    set udg_IncomePerCreep[27]=25
    set udg_IncomePerCreep[28]=25
    set udg_IncomePerCreep[29]=25
endfunction

//===========================================================================
function InitTrig_Sendable_Units_Init takes nothing returns nothing
    set gg_trg_Sendable_Units_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Sendable_Units_Init, function Trig_Sendable_Units_Init_Actions)
endfunction

//===========================================================================
// Trigger: Add Income with send
//
// Configuration:
// Income value: Income_array[XTemp_LoopInt2]=income_array[XTemp_LoopInt2] + X
// Unit types: Unit type equal to X
// Add more units (12):
// Copy the first "if"
//===========================================================================
function Trig_Add_Income_with_send_Func002Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == udg_SendableCreeps[udg_TempInt] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Add_Income_with_send_Actions takes nothing returns nothing
    set udg_TempPlayerId=GetConvertedPlayerId(GetOwningPlayer(GetSellingUnit()))
    set udg_TempInt=1
    loop
        exitwhen udg_TempInt > 29
        if ( Trig_Add_Income_with_send_Func002Func001C() ) then
            set udg_Income_array[udg_TempPlayerId]=( udg_Income_array[udg_TempPlayerId] + udg_IncomePerCreep[udg_TempInt] )
            call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( udg_TempPlayerId + 2 ), I2S(udg_Income_array[udg_TempPlayerId]))
        else
        endif
        set udg_TempInt=udg_TempInt + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Add_Income_with_send takes nothing returns nothing
    set gg_trg_Add_Income_with_send=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Add_Income_with_send, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddAction(gg_trg_Add_Income_with_send, function Trig_Add_Income_with_send_Actions)
endfunction

//===========================================================================
// Trigger: variable init
//===========================================================================
function Trig_variable_init_Actions takes nothing returns nothing
    set bj_forLoopAIndex=1
    set bj_forLoopAIndexEnd=8
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        set udg_Income_array[GetForLoopIndexA()]=0
        set udg_Player_array[GetForLoopIndexA()]=ConvertedPlayer(GetForLoopIndexA())
        call SetPlayerTechMaxAllowedSwap('Rkis', 25, udg_Player_array[GetForLoopIndexA()])
        call SetPlayerTechMaxAllowedSwap('RkiA', 25, udg_Player_array[GetForLoopIndexA()])
        call SetPlayerTechMaxAllowedSwap('RkiI', 25, udg_Player_array[GetForLoopIndexA()])
        call SetPlayerTechMaxAllowedSwap('RkiL', 15, udg_Player_array[GetForLoopIndexA()])
        set bj_forLoopAIndex=bj_forLoopAIndex + 1
    endloop
    set udg_KingReg_array[1]=gg_rct_Red_Income_Area
    set udg_KingReg_array[2]=gg_rct_Blue_Income_Area
    set udg_KingReg_array[3]=gg_rct_Teal_Income_Area
    set udg_KingReg_array[4]=gg_rct_Purple_Income_Area
    set udg_KingReg_array[5]=gg_rct_Yellow_Income_Area
    set udg_KingReg_array[6]=gg_rct_Orange_Income_Area
    set udg_KingReg_array[7]=gg_rct_Green_Income_Area
    set udg_KingReg_array[8]=gg_rct_Pink_Income_Area
endfunction

//===========================================================================
function InitTrig_variable_init takes nothing returns nothing
    set gg_trg_variable_init=CreateTrigger()
    call TriggerAddAction(gg_trg_variable_init, function Trig_variable_init_Actions)
endfunction

//===========================================================================
// Trigger: Income EndofRound
//===========================================================================
function Trig_Income_EndofRound_Func001A takes nothing returns nothing
    call AdjustPlayerStateBJ(udg_Income_array[GetConvertedPlayerId(GetEnumPlayer())], GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
    call DisplayTextToForce(GetForceOfPlayer(GetEnumPlayer()), ( I2S(udg_Income_array[GetConvertedPlayerId(GetEnumPlayer())]) + "|cffffff00 income has been paid|r." ))
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_2783")
endfunction

function Trig_Income_EndofRound_Actions takes nothing returns nothing
    call ForForce(udg_PlayersPlaying, function Trig_Income_EndofRound_Func001A)
endfunction

//===========================================================================
function InitTrig_Income_EndofRound takes nothing returns nothing
    set gg_trg_Income_EndofRound=CreateTrigger()
    call TriggerAddAction(gg_trg_Income_EndofRound, function Trig_Income_EndofRound_Actions)
endfunction

//===========================================================================
// Trigger: Player Group Init
//===========================================================================
function Trig_Player_Group_Init_Actions takes nothing returns nothing
    call ForceAddPlayerSimple(Player(0), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(1), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(2), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(3), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(4), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(5), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(6), udg_PlayersPlaying)
    call ForceAddPlayerSimple(Player(7), udg_PlayersPlaying)
endfunction

//===========================================================================
function InitTrig_Player_Group_Init takes nothing returns nothing
    set gg_trg_Player_Group_Init=CreateTrigger()
    call TriggerAddAction(gg_trg_Player_Group_Init, function Trig_Player_Group_Init_Actions)
endfunction

//===========================================================================
// Trigger: Spawn Recognization
//===========================================================================
function Trig_Spawn_Recognization_Actions takes nothing returns nothing
    call ForceAddPlayerSimple(Player(8), udg_Spawns)
    call ForceAddPlayerSimple(Player(9), udg_Spawns)
    call ForceAddPlayerSimple(Player(10), udg_Spawns)
    call ForceAddPlayerSimple(Player(11), udg_Spawns)
    call ForceAddPlayerSimple(Player(12), udg_Spawns)
    call ForceAddPlayerSimple(Player(13), udg_Spawns)
    call ForceAddPlayerSimple(Player(14), udg_Spawns)
    call ForceAddPlayerSimple(Player(15), udg_Spawns)
    // Red nonaoe
    call SetPlayerAllianceStateBJ(Player(0), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(0), Player(15), bj_ALLIANCE_ALLIED)
    // Blue nonaoe
    call SetPlayerAllianceStateBJ(Player(1), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(1), Player(15), bj_ALLIANCE_ALLIED)
    // Teal nonaoe
    call SetPlayerAllianceStateBJ(Player(2), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(2), Player(15), bj_ALLIANCE_ALLIED)
    // Purple nonaoe
    call SetPlayerAllianceStateBJ(Player(3), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(3), Player(15), bj_ALLIANCE_ALLIED)
    // Yellow nonaoe
    call SetPlayerAllianceStateBJ(Player(4), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(4), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(4), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(4), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(4), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(4), Player(15), bj_ALLIANCE_ALLIED)
    // Orange nonaoe
    call SetPlayerAllianceStateBJ(Player(5), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(5), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(5), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(5), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(5), Player(14), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(5), Player(15), bj_ALLIANCE_ALLIED)
    // Green nonaoe
    call SetPlayerAllianceStateBJ(Player(6), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(6), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(6), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(6), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(6), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(6), Player(15), bj_ALLIANCE_ALLIED)
    // Pink nonaoe
    call SetPlayerAllianceStateBJ(Player(7), Player(8), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(9), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(10), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(11), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(12), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(13), bj_ALLIANCE_ALLIED)
    call SetPlayerAllianceStateBJ(Player(7), Player(14), bj_ALLIANCE_ALLIED)
endfunction

//===========================================================================
function InitTrig_Spawn_Recognization takes nothing returns nothing
    set gg_trg_Spawn_Recognization=CreateTrigger()
    call TriggerAddAction(gg_trg_Spawn_Recognization, function Trig_Spawn_Recognization_Actions)
endfunction

//===========================================================================
// Trigger: Player lost or innactive
//===========================================================================
function Trig_Player_lost_or_innactive_Func001001001001 takes nothing returns boolean
    return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_EMPTY )
endfunction

function Trig_Player_lost_or_innactive_Func001001001002001 takes nothing returns boolean
    return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_LEFT )
endfunction

function Trig_Player_lost_or_innactive_Func001001001002002001 takes nothing returns boolean
    return ( udg_Lives[GetConvertedPlayerId(GetFilterPlayer())] == 0 )
endfunction

function Trig_Player_lost_or_innactive_Func001001001002002002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_KingsArray[GetConvertedPlayerId(GetFilterPlayer())]) == false )
endfunction

function Trig_Player_lost_or_innactive_Func001001001002002 takes nothing returns boolean
    return GetBooleanOr((udg_Lives[GetConvertedPlayerId(GetFilterPlayer())] == 0), (IsUnitAliveBJ(udg_KingsArray[GetConvertedPlayerId(GetFilterPlayer())]) == false)) // INLINED!!
endfunction

function Trig_Player_lost_or_innactive_Func001001001002 takes nothing returns boolean
    return GetBooleanOr((GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_LEFT), (GetBooleanOr((udg_Lives[GetConvertedPlayerId(GetFilterPlayer())] == 0), (IsUnitAliveBJ(udg_KingsArray[GetConvertedPlayerId(GetFilterPlayer())]) == false)))) // INLINED!!
endfunction

function Trig_Player_lost_or_innactive_Func001001001 takes nothing returns boolean
    return GetBooleanOr((GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_EMPTY), (GetBooleanOr((GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_LEFT), (GetBooleanOr((udg_Lives[GetConvertedPlayerId(GetFilterPlayer())] == 0), (IsUnitAliveBJ(udg_KingsArray[GetConvertedPlayerId(GetFilterPlayer())]) == false)))))) // INLINED!!
endfunction

function Trig_Player_lost_or_innactive_Func001Func002Func001Func001001 takes nothing returns boolean
    return ( GetUnitTypeId(GetEnumUnit()) != 'H00Q' )
endfunction

function Trig_Player_lost_or_innactive_Func001Func002Func001A takes nothing returns nothing
    if ( (GetUnitTypeId(GetEnumUnit()) != 'H00Q') ) then // INLINED!!
        call RemoveUnit(GetEnumUnit())
    else
        call DoNothing()
    endif
endfunction

function Trig_Player_lost_or_innactive_Func001Func002Func002Func001001 takes nothing returns boolean
    return ( GetUnitTypeId(GetEnumUnit()) != 'H00Q' )
endfunction

function Trig_Player_lost_or_innactive_Func001Func002Func002A takes nothing returns nothing
    if ( (GetUnitTypeId(GetEnumUnit()) != 'H00Q') ) then // INLINED!!
        call RemoveUnit(GetEnumUnit())
    else
        call DoNothing()
    endif
endfunction

function Trig_Player_lost_or_innactive_Func001Func002C takes nothing returns boolean
    if ( not ( GetEnumPlayer() != Player(8) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(9) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(10) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(11) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(12) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(13) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(14) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(15) ) ) then
        return false
    endif
    if ( not ( GetEnumPlayer() != Player(16) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_lost_or_innactive_Func001A takes nothing returns nothing
    call ForceRemovePlayerSimple(GetEnumPlayer(), udg_PlayersPlaying)
    if ( Trig_Player_lost_or_innactive_Func001Func002C() ) then
        call ForGroupBJ(GetUnitsInRectAll(udg_IncomeAreaRegion[GetConvertedPlayerId(GetEnumPlayer())]), function Trig_Player_lost_or_innactive_Func001Func002Func001A)
        call ForGroupBJ(GetUnitsInRectOfPlayer(GetPlayableMapRect(), GetEnumPlayer()), function Trig_Player_lost_or_innactive_Func001Func002Func002A)
    else
    endif
endfunction

function Trig_Player_lost_or_innactive_Actions takes nothing returns nothing
    call ForForce(GetPlayersMatching(Condition(function Trig_Player_lost_or_innactive_Func001001001)), function Trig_Player_lost_or_innactive_Func001A)
endfunction

//===========================================================================
function InitTrig_Player_lost_or_innactive takes nothing returns nothing
    set gg_trg_Player_lost_or_innactive=CreateTrigger()
    call TriggerRegisterTimerEventPeriodic(gg_trg_Player_lost_or_innactive, 1.00)
    call TriggerAddAction(gg_trg_Player_lost_or_innactive, function Trig_Player_lost_or_innactive_Actions)
endfunction

//===========================================================================
// Trigger: Color text init
//===========================================================================
function Trig_Color_text_init_Actions takes nothing returns nothing
    set udg_Color[1]="|cffff0000"
    set udg_Color[2]="|cff0000ff"
    set udg_Color[3]="|cff00ffff"
    set udg_Color[4]="|cff6f2583"
    set udg_Color[5]="|cffffff00"
    set udg_Color[6]="|cffd45e19"
    set udg_Color[7]="|cff00ff00"
    set udg_Color[8]="|cffff8080"
endfunction

//===========================================================================
function InitTrig_Color_text_init takes nothing returns nothing
    set gg_trg_Color_text_init=CreateTrigger()
    call TriggerAddAction(gg_trg_Color_text_init, function Trig_Color_text_init_Actions)
endfunction

//===========================================================================
// Trigger: PlayerLeaves
//===========================================================================
function Trig_PlayerLeaves_Actions takes nothing returns nothing
    set udg_IsPlaying[GetConvertedPlayerId(GetTriggerPlayer())]=false
    set udg_Lives[GetConvertedPlayerId(GetTriggerPlayer())]=0
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, ( GetConvertedPlayerId(GetTriggerPlayer()) + 2 ), "TRIGSTR_3018")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( GetConvertedPlayerId(GetTriggerPlayer()) + 2 ), "TRIGSTR_3019")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, ( GetConvertedPlayerId(GetTriggerPlayer()) + 2 ), "TRIGSTR_3020")
endfunction

//===========================================================================
function InitTrig_PlayerLeaves takes nothing returns nothing
    set gg_trg_PlayerLeaves=CreateTrigger()
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(0))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(1))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(2))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(3))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(4))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(5))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(6))
    call TriggerRegisterPlayerEventLeave(gg_trg_PlayerLeaves, Player(7))
    call TriggerAddAction(gg_trg_PlayerLeaves, function Trig_PlayerLeaves_Actions)
endfunction

//===========================================================================
// Trigger: King Dies
//===========================================================================
function Trig_King_Dies_Func012C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'H00Q' ) ) then
        return false
    endif
    return true
endfunction

function Trig_King_Dies_Conditions takes nothing returns boolean
    if ( not Trig_King_Dies_Func012C() ) then
        return false
    endif
    return true
endfunction

function Trig_King_Dies_Actions takes nothing returns nothing
    call SmartCameraPanBJ(GetOwningPlayer(GetDyingUnit()), GetRectCenter(udg_IncomeAreaRegion[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))]), 0.50)
    call TriggerSleepAction(0.30)
    call DisplayTimedTextToForce(GetPlayersAll(), 6.00, "TRIGSTR_3029")
    call DisplayTextToForce(GetPlayersAll(), ( ( udg_Color[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))] + GetPlayerName(GetOwningPlayer(GetDyingUnit())) ) + "|r |cffd45e19h|r|cffd86f32a|r|cffdd814bs|r|cffe29365 |r|cffe6a57el|r|cffebb697o|r|cfff0c8b1s|r|cfff5dacat|r|cfff9ece4 |r|cfffefefe!|r" ))
    call PlaySoundOnUnitBJ(gg_snd_QuestFailed, 100, GetDyingUnit())
    call CreateTextTagUnitBJ("TRIGSTR_3030", GetDyingUnit(), - 10.00, 11.00, 100, 100, 100, 0)
    call ShowTextTagForceBJ(false, GetLastCreatedTextTag(), GetPlayersAll())
    call ShowTextTagForceBJ(true, GetLastCreatedTextTag(), GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())))
    call SetTextTagVelocityBJ(GetLastCreatedTextTag(), 40.00, 90)
    call SetTextTagPermanentBJ(GetLastCreatedTextTag(), false)
    call SetTextTagLifespanBJ(GetLastCreatedTextTag(), 5.00)
    set udg_IsPlaying[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))]=false
    set udg_Lives[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))]=0
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 1, ( GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit())) + 2 ), "TRIGSTR_3031")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 2, ( GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit())) + 2 ), "TRIGSTR_3032")
    call MultiboardSetItemValueBJ(GetLastCreatedMultiboard(), 3, ( GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit())) + 2 ), "TRIGSTR_3033")
endfunction

//===========================================================================
function InitTrig_King_Dies takes nothing returns nothing
    set gg_trg_King_Dies=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_King_Dies, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_King_Dies, Condition(function Trig_King_Dies_Conditions))
    call TriggerAddAction(gg_trg_King_Dies, function Trig_King_Dies_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 5 Mins
//===========================================================================
function Trig_Time_Passed_5_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(100, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_5_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(10, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_5_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1020")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_5_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_5_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_5_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_5_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_5_Mins, 300.00)
    call TriggerAddAction(gg_trg_Time_Passed_5_Mins, function Trig_Time_Passed_5_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 10 Mins
//===========================================================================
function Trig_Time_Passed_10_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(150, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_10_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(20, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_10_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1019")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_10_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_10_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_10_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_10_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_10_Mins, 600.00)
    call TriggerAddAction(gg_trg_Time_Passed_10_Mins, function Trig_Time_Passed_10_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 15 Mins
//===========================================================================
function Trig_Time_Passed_15_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(200, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_15_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(30, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_15_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1018")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_15_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_15_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_15_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_15_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_15_Mins, 900.00)
    call TriggerAddAction(gg_trg_Time_Passed_15_Mins, function Trig_Time_Passed_15_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 20 Mins
//===========================================================================
function Trig_Time_Passed_20_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(250, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_20_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(40, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_20_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1017")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_20_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_20_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_20_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_20_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_20_Mins, 1200.00)
    call TriggerAddAction(gg_trg_Time_Passed_20_Mins, function Trig_Time_Passed_20_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 25 Mins
//===========================================================================
function Trig_Time_Passed_25_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(300, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_25_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(50, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_25_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1016")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_25_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_25_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_25_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_25_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_25_Mins, 1500.00)
    call TriggerAddAction(gg_trg_Time_Passed_25_Mins, function Trig_Time_Passed_25_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Time Passed 30 Mins
//===========================================================================
function Trig_Time_Passed_30_Mins_Func002002 takes nothing returns nothing
    call AdjustPlayerStateBJ(300, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)
endfunction

function Trig_Time_Passed_30_Mins_Func003002 takes nothing returns nothing
    call AdjustPlayerStateBJ(50, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER)
endfunction

function Trig_Time_Passed_30_Mins_Actions takes nothing returns nothing
    call DisplayTextToForce(GetPlayersAll(), "TRIGSTR_1015")
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_30_Mins_Func002002)
    call ForForce(GetPlayersAll(), function Trig_Time_Passed_30_Mins_Func003002)
endfunction

//===========================================================================
function InitTrig_Time_Passed_30_Mins takes nothing returns nothing
    set gg_trg_Time_Passed_30_Mins=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_Time_Passed_30_Mins, 1800.00)
    call TriggerAddAction(gg_trg_Time_Passed_30_Mins, function Trig_Time_Passed_30_Mins_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Red
//===========================================================================
function Trig_Kings_Influence_Red_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Red_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Red_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Red_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Red_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(0), 'H007'), function Trig_Kings_Influence_Red_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(0), 'H007'), function Trig_Kings_Influence_Red_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Red takes nothing returns nothing
    set gg_trg_Kings_Influence_Red=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Red, Player(0), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Red, function Trig_Kings_Influence_Red_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Blue
//===========================================================================
function Trig_Kings_Influence_Blue_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Blue_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Blue_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Blue_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Blue_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(1), 'H007'), function Trig_Kings_Influence_Blue_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(1), 'H007'), function Trig_Kings_Influence_Blue_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Blue takes nothing returns nothing
    set gg_trg_Kings_Influence_Blue=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Blue, Player(1), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Blue, function Trig_Kings_Influence_Blue_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Teal
//===========================================================================
function Trig_Kings_Influence_Teal_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Teal_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Teal_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Teal_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Teal_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(2), 'H007'), function Trig_Kings_Influence_Teal_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(2), 'H007'), function Trig_Kings_Influence_Teal_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Teal takes nothing returns nothing
    set gg_trg_Kings_Influence_Teal=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Teal, Player(2), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Teal, function Trig_Kings_Influence_Teal_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Purple
//===========================================================================
function Trig_Kings_Influence_Purple_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Purple_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Purple_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Purple_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Purple_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(3), 'H007'), function Trig_Kings_Influence_Purple_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(3), 'H007'), function Trig_Kings_Influence_Purple_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Purple takes nothing returns nothing
    set gg_trg_Kings_Influence_Purple=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Purple, Player(3), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Purple, function Trig_Kings_Influence_Purple_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Yellow
//===========================================================================
function Trig_Kings_Influence_Yellow_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Yellow_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Yellow_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Yellow_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Yellow_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(4), 'H007'), function Trig_Kings_Influence_Yellow_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(4), 'H007'), function Trig_Kings_Influence_Yellow_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Yellow takes nothing returns nothing
    set gg_trg_Kings_Influence_Yellow=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Yellow, Player(4), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Yellow, function Trig_Kings_Influence_Yellow_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Orange
//===========================================================================
function Trig_Kings_Influence_Orange_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Orange_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Orange_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Orange_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Orange_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(5), 'H007'), function Trig_Kings_Influence_Orange_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(5), 'H007'), function Trig_Kings_Influence_Orange_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Orange takes nothing returns nothing
    set gg_trg_Kings_Influence_Orange=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Orange, Player(5), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Orange, function Trig_Kings_Influence_Orange_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Green
//===========================================================================
function Trig_Kings_Influence_Green_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Green_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Green_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Green_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Green_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(6), 'H007'), function Trig_Kings_Influence_Green_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(6), 'H007'), function Trig_Kings_Influence_Green_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Green takes nothing returns nothing
    set gg_trg_Kings_Influence_Green=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Green, Player(6), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Green, function Trig_Kings_Influence_Green_Actions)
endfunction

//===========================================================================
// Trigger: Kings Influence Pink
//===========================================================================
function Trig_Kings_Influence_Pink_Func001Func002002 takes nothing returns nothing
    call UnitAddItemByIdSwapped('I001', GetEnumUnit())
endfunction

function Trig_Kings_Influence_Pink_Func001Func020002 takes nothing returns nothing
    call RemoveItem(GetLastCreatedItem())
endfunction

function Trig_Kings_Influence_Pink_Func001C takes nothing returns boolean
    if ( not ( GetItemTypeId(GetSoldItem()) == 'I001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Kings_Influence_Pink_Actions takes nothing returns nothing
    if ( Trig_Kings_Influence_Pink_Func001C() ) then
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(7), 'H007'), function Trig_Kings_Influence_Pink_Func001Func002002)
        call TriggerSleepAction(0.50)
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0024, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0025, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0026, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0027, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0031, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0030, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0028, 'I001'))
        call RemoveItem(GetItemOfTypeFromUnitBJ(gg_unit_H00Q_0029, 'I001'))
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0024)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0025)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0026)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0027)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0031)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0030)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0028)
        call UnitRemoveAbilityBJ('A00F', gg_unit_H00Q_0029)
        call ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player(7), 'H007'), function Trig_Kings_Influence_Pink_Func001Func020002)
    else
        call DoNothing()
    endif
endfunction

//===========================================================================
function InitTrig_Kings_Influence_Pink takes nothing returns nothing
    set gg_trg_Kings_Influence_Pink=CreateTrigger()
    call TriggerRegisterPlayerUnitEventSimple(gg_trg_Kings_Influence_Pink, Player(7), EVENT_PLAYER_UNIT_SELL_ITEM)
    call TriggerAddAction(gg_trg_Kings_Influence_Pink, function Trig_Kings_Influence_Pink_Actions)
endfunction

//===========================================================================
// Trigger: CSys Sounds
//
// Saving point of spawn for sfx of Curse System.
//===========================================================================
function Trig_CSys_Sounds_Actions takes nothing returns nothing
    set udg_CS_SoundPoint[0]=GetRectCenter(udg_KingReg_array[1])
    set udg_CS_SoundPoint[1]=GetRectCenter(udg_KingReg_array[2])
    set udg_CS_SoundPoint[2]=GetRectCenter(udg_KingReg_array[3])
    set udg_CS_SoundPoint[3]=GetRectCenter(udg_KingReg_array[4])
    set udg_CS_SoundPoint[4]=GetRectCenter(udg_KingReg_array[5])
    set udg_CS_SoundPoint[5]=GetRectCenter(udg_KingReg_array[6])
    set udg_CS_SoundPoint[6]=GetRectCenter(udg_KingReg_array[7])
    set udg_CS_SoundPoint[7]=GetRectCenter(udg_KingReg_array[8])
endfunction

//===========================================================================
function InitTrig_CSys_Sounds takes nothing returns nothing
    set gg_trg_CSys_Sounds=CreateTrigger()
    call TriggerRegisterTimerEventSingle(gg_trg_CSys_Sounds, 0.00)
    call TriggerAddAction(gg_trg_CSys_Sounds, function Trig_CSys_Sounds_Actions)
endfunction

//===========================================================================
// Trigger: CSys Configuration
//===========================================================================
//
// Curse System by VictorAlvarado AKA iam20842
// - this system allow you to curse all enemy players
// - use a store with DUMMY UNITS selling (for avoid inventory full limit)
//


function CS_IsDebuff takes unit dummy returns boolean
    local integer i= 0
    local integer dummy_type_id= GetUnitTypeId(dummy)
    loop
        exitwhen i > CS_MaxDebuff
        if CS_DebuffDummyUnits[i] == dummy_type_id then
          return true
        endif
        set i=i + 1
    endloop
    return false
endfunction

function CS_GetDebuffId takes unit dummy returns integer
    local integer i= 0
    local integer dummy_type_id= GetUnitTypeId(dummy)
    local integer response= - 1
    loop
        exitwhen i > CS_MaxDebuff
        if CS_DebuffDummyUnits[i] == dummy_type_id then
            set response=i
        endif
        set i=i + 1
    endloop
    return response
endfunction

function CS_Debuff takes player caster,unit dummy returns nothing
    local integer caster_id= GetPlayerId(caster)
    local integer ally_id= caster_id + 8
    local integer tech_id
    local integer tech_before_level
    local integer tech_after_level
    local integer clock_id
    local integer debuff_id= CS_GetDebuffId(dummy)
    local integer debuff_start= CS_DebuffStart[debuff_id]
    local integer debuff_end= CS_DebuffEnd[debuff_id]
    local integer debuff_count_a
    local integer debuff_count_b
    local timer clock

    local integer isDebuffFor= CS_GetDebuffFor[debuff_id]

    local player ally= Player(ally_id)

    if ( isDebuffFor == CS_FOR_BOTH ) then
        set debuff_count_a=debuff_start
        // SELF DEBUFF (TOWER+CREEP)
        loop
            exitwhen debuff_count_a > debuff_end

            set tech_id=CS_CurseTechIds[debuff_count_a]
            set tech_before_level=GetPlayerTechCountSimple(tech_id, caster)
            set tech_after_level=tech_before_level - 1

            call SetPlayerTechResearchedSwap(tech_id, tech_after_level, caster)

            set clock=LoadTimerHandle(CS_ActiveCurses, caster_id, debuff_count_a)

            set clock_id=GetHandleId(clock)

            call FlushChildHashtable(CS_ActiveCurses, clock_id)
            call FlushChildHashtable(CS_ActiveCurses, caster_id)

            set CS_CurseAvailable[debuff_count_a]=true
            
            call PauseTimer(clock)
            call DestroyTimer(clock)
            
            set clock=null
            set debuff_count_a=debuff_count_a + 1
        endloop

        // CREEP ALLIES
        set debuff_count_a=debuff_start
        loop
           
            exitwhen debuff_count_a > debuff_end

            set tech_id=CS_CurseTechIds[debuff_count_a]
            set tech_before_level=GetPlayerTechCountSimple(tech_id, ally)
            set tech_after_level=tech_before_level - 1

            call SetPlayerTechResearchedSwap(tech_id, tech_after_level, ally)

            set clock=LoadTimerHandle(CS_ActiveCurses, ally_id, debuff_count_a)
            set clock_id=GetHandleId(clock)

            call FlushChildHashtable(CS_ActiveCurses, clock_id)
            call FlushChildHashtable(CS_ActiveCurses, ally_id)

            set CS_CurseAvailable[debuff_count_a]=true
            
            call PauseTimer(clock)
            call DestroyTimer(clock)
            
            set clock=null
            set debuff_count_a=debuff_count_a + 1

        endloop

    elseif ( isDebuffFor == CS_FOR_KING ) then
        // DEBUFF KING
        set debuff_count_a=debuff_start
        loop
            exitwhen debuff_count_a > debuff_end

            set tech_id=CS_CurseTechIds[debuff_count_a]
            set tech_before_level=GetPlayerTechCountSimple(tech_id, caster)
            set tech_after_level=tech_before_level - 1

            call SetPlayerTechResearchedSwap(tech_id, tech_after_level, caster)

            set clock=LoadTimerHandle(CS_ActiveCurses, caster_id, debuff_count_a)

            set clock_id=GetHandleId(clock)

            call FlushChildHashtable(CS_ActiveCurses, clock_id)
            call FlushChildHashtable(CS_ActiveCurses, caster_id)

            set CS_CurseAvailable[debuff_count_a]=true
            
            call PauseTimer(clock)
            call DestroyTimer(clock)
            
            set clock=null
            set debuff_count_a=debuff_count_a + 1
        endloop
    endif

    call DisplayTextToPlayer(caster, 0, 0, CS_PlayersColors[caster_id] + GetPlayerName(caster) + "|r your curses were removed by the gods!")
    call PlaySoundAtPointBJ(gg_snd_DivineShield, 100, udg_CS_SoundPoint[caster_id], 0)
endfunction

function CS_IsCurse takes unit dummy returns boolean
    local integer i= 0
    local integer dummy_type_id= GetUnitTypeId(dummy)
    loop
        exitwhen i > CS_MaxCurses
        if CS_CurseDummyUnits[i] == dummy_type_id then
          return true
        endif
        set i=i + 1
    endloop
    return false
endfunction


function CS_IsCurseAvailable takes integer curse_id returns boolean
    local boolean response= CS_CurseAvailable[curse_id]
    return response
endfunction

function CS_GetCurseId takes unit dummy returns integer
    local integer i= 0
    local integer dummy_type_id= GetUnitTypeId(dummy)
    local integer response= - 1
    loop
        exitwhen i > CS_MaxCurses
        if CS_CurseDummyUnits[i] == dummy_type_id then
            set response=i
        endif
        set i=i + 1
    endloop
    return response
endfunction



function Trig_CSys_Configuration_Actions takes nothing returns nothing
    local integer dummy_unit
    local integer upgrade_id
    local real duration

    local integer dummy_debuff
    local integer debuff_start
    local integer debuff_end

    // Adding more curse than 14.
    // * You can copy and paste the Curse Seller and set new curse dummy units :D

    // Setting a new curse
    // * Create the dummy unit (see examples)
    // * Add it to the Curse Store
    // * Create the upgrade (see examples)
    // * Add the upgrade to the units
    // * set here the next values based on that dummy unit and upgrade
    // 1. dummy_unit is the raw unit code (control + d)
    // 2. upgrade_id is the raw upgrade code (control + d)
    // 3. duration is the duration of the course
    // 4. Be default we set the curse available for the players (TRUE value)
    // 5. CurseSelf this value is for apply the effect over your units or enemy creeps :D


    // Curse is based on upgrades BUT i want a curse with an effect that dont appear like upgrade, let say... reduce attack damage by %
    // for this case you can use the upgrade Ability Level Bonus
    // for that you need to create a unit spell with 2 level.
    // Level 1: will have only 0 values, this is a dummy spell
    // Level 2: will have the real values
    // Add the spell to the unit
    // see King attack damage or tower damage for an example

    // ADD for every unit/building cursed the Curse Effect Aura  ;)

    // Creep Mov Speed 0
    set dummy_unit='n01E'
    set upgrade_id='R008'
    set duration=75.0
    
    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_CREEP

    set CS_MaxCurses=CS_MaxCurses + 1

    // Creep Health 1
    set dummy_unit='n01G'
    set upgrade_id='R007'
    set duration=75.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_CREEP
    set CS_MaxCurses=CS_MaxCurses + 1


    // Tower Attack Damage 2
    set dummy_unit='n01F'
    set upgrade_id='R00D'
    set duration=75.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_TOWER
    set CS_MaxCurses=CS_MaxCurses + 1

    // Tower Attack Speed 3
    set dummy_unit='n01L'
    set upgrade_id='R00E'
    set duration=75.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_TOWER
    set CS_MaxCurses=CS_MaxCurses + 1

    // King Attack Damage 4
    set dummy_unit='n01K'
    set upgrade_id='R009'
    set duration=30.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_KING
    set CS_MaxCurses=CS_MaxCurses + 1

    // King Attack Speed 5
    set dummy_unit='n01I'
    set upgrade_id='R00A'
    set duration=30.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_KING
    set CS_MaxCurses=CS_MaxCurses + 1

    // King Health Regen 6
    set dummy_unit='n01J'
    set upgrade_id='R00B'
    set duration=30.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_KING
    set CS_MaxCurses=CS_MaxCurses + 1

    // King Mana Regen 7
    set dummy_unit='n01M'
    set upgrade_id='R00C'
    set duration=60.0

    set CS_CurseDummyUnits[CS_MaxCurses]=dummy_unit
    set CS_CurseTechIds[CS_MaxCurses]=upgrade_id
    set CS_CurseDuration[CS_MaxCurses]=duration
    set CS_CurseAvailable[CS_MaxCurses]=TRUE
    set CS_GetCurseFor[CS_MaxCurses]=CS_FOR_KING
    set CS_MaxCurses=CS_MaxCurses + 1

    // --- New Curse ---
    //set dummy_unit = 'h007'
    //set upgrade_id = 'R007'
    //set duration = 30.0
    //set CS_CurseDummyUnits[CS_MaxCurses] = dummy_unit
    //set CS_CurseTechIds[CS_MaxCurses] = upgrade_id
    //set CS_CurseDuration[CS_MaxCurses] = duration
    //set CS_CurseAvailable[CS_MaxCurses] = TRUE
    //set CS_MaxCurses = CS_MaxCurses + 1

    // Setting a new debuff:
    // * Create the dummy unit (see examples)
    // * Add it to the Curse Store
    // * set here the next values based on that dummy unit
    // 1. dummy_debuff is the raw unit code (control + d)
    // 2. debuff_start is the start value of the range of curse id that will be removed from player
    // 3. debuff_end is the end value of the range of curse id that will be removed from player
    // if you want to remove attack speed, attack damage and turn rate from creep you need to set
    // the index of that curse like 1,2,3 or 6,7,8 because the debuff will loop in the start/end range for delete them

    // Creep Debuff & Tower Debuff
    set dummy_debuff='n01D'
    set debuff_start=0
    set debuff_end=3

    set CS_DebuffDummyUnits[1]=dummy_debuff
    set CS_DebuffStart[1]=debuff_start
    set CS_DebuffEnd[1]=debuff_end
    set CS_MaxDebuff=CS_MaxDebuff + 1
    set CS_GetDebuffFor[CS_MaxDebuff]=CS_FOR_BOTH

    // King Debuff
    set dummy_debuff='n01H'
    set debuff_start=4
    set debuff_end=7

    set CS_DebuffDummyUnits[2]=dummy_debuff
    set CS_DebuffStart[2]=debuff_start
    set CS_DebuffEnd[2]=debuff_end
    set CS_MaxDebuff=CS_MaxDebuff + 1
    set CS_GetDebuffFor[CS_MaxDebuff]=CS_FOR_KING

    // Players Colors
    set CS_PlayersColors[0]="|cffff0303"
    set CS_PlayersColors[1]="|cff0042ff"
    set CS_PlayersColors[2]="|cff1ce6b9"
    set CS_PlayersColors[3]="|cff540081"
    set CS_PlayersColors[4]="|cfffffc00"
    set CS_PlayersColors[5]="|cfffe8a0e"
    set CS_PlayersColors[6]="|cff20c000"
    set CS_PlayersColors[7]="|cffe55bb0"

endfunction

//===========================================================================
function InitTrig_CSys_Configuration takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterTimerEventSingle(trig, 0.00)
    call TriggerAddAction(trig, function Trig_CSys_Configuration_Actions)
endfunction
//===========================================================================
// Trigger: CSys Core
//
// loop
//     set myTimer = LoadTimerHandle(ht, playerId, i)
//     // Do stuff here
//     // ----
//     set i = i + 1
//     exitwhen (i == 12)
// endloop
//===========================================================================
function CS_RemoveCurse takes nothing returns nothing
    local timer clock= GetExpiredTimer()

    local integer clock_id= GetHandleId(clock)
    local integer player_id= LoadInteger(CS_ActiveCurses, clock_id, CS_PLAYER_ID)
    local integer curse_id= LoadInteger(CS_ActiveCurses, clock_id, CS_CURSE_ID)
    local integer tech_id= CS_CurseTechIds[curse_id]
    local integer tech_after_level= GetPlayerTechCountSimple(tech_id, Player(player_id))
    local integer tech_before_level= tech_after_level - 1
    local integer isCurseFor= CS_GetCurseFor[curse_id]

    call SetPlayerTechResearchedSwap(tech_id, tech_before_level, Player(player_id))
    call FlushChildHashtable(CS_ActiveCurses, clock_id)
    call FlushChildHashtable(CS_ActiveCurses, player_id)
    call PauseTimer(clock)
    call DestroyTimer(clock)
    
    set CS_CurseAvailable[curse_id]=true
    set clock=null

    if ( isCurseFor == CS_FOR_KING or isCurseFor == CS_FOR_TOWER ) then
        call DisplayTextToPlayer(Player(player_id), 0, 0, CS_PlayersColors[player_id] + GetPlayerName(Player(player_id)) + "|r|cffff0000the curse has banished|r")
        call PlaySoundAtPointBJ(gg_snd_DispelMagicTarget, 100, udg_CS_SoundPoint[player_id], 0)
    else
        call DisplayTextToPlayer(Player(player_id - 8), 0, 0, CS_PlayersColors[player_id - 8] + GetPlayerName(Player(player_id - 8)) + "|r|cffff0000the curse has banished|r")
        call PlaySoundAtPointBJ(gg_snd_DispelMagicTarget, 100, udg_CS_SoundPoint[player_id - 8], 0)
    endif
endfunction


function CS_ApplyCurse takes integer curse_id,player caster returns nothing
    local player enemy
    local player enemy_creep
    local player caster_creep

    local timer clock

    local integer enemy_id
    local integer enemy_creep_id
    local integer i
    local integer clock_id
    local integer tech_after_level
    local integer tech_before_level
    local integer tech_id= CS_CurseTechIds[curse_id]
    local integer isCurseFor= CS_GetCurseFor[curse_id]

    local real duration= CS_CurseDuration[curse_id]

    set i=0
    loop
        if ( isCurseFor == CS_FOR_KING or isCurseFor == CS_FOR_TOWER ) then
            // CURSE FOR THE KING OR TOWER
            set enemy=Player(i)

            if not ( enemy == caster ) then
                    set clock=CreateTimer()
                    set clock_id=GetHandleId(clock)
                    set tech_before_level=GetPlayerTechCountSimple(tech_id, enemy)
                    set tech_after_level=tech_before_level + 1
                    set enemy_id=GetPlayerId(enemy)
            
                    call SetPlayerTechResearchedSwap(tech_id, tech_after_level, enemy)
                    call SaveInteger(CS_ActiveCurses, clock_id, CS_PLAYER_ID, enemy_id)
                    call SaveInteger(CS_ActiveCurses, clock_id, CS_CURSE_ID, curse_id)
                    call SaveTimerHandle(CS_ActiveCurses, enemy_id, curse_id, clock)
                    call TimerStart(clock, duration, false, function CS_RemoveCurse)
                    call DisplayTextToPlayer(enemy, 0, 0, ( ( CS_PlayersColors[enemy_id] ) + GetPlayerName(enemy) + "|r |cffff0000you have been cursed!|r" ))
                    call PlaySoundAtPointBJ(gg_snd_SoulPreservation, 100, udg_CS_SoundPoint[enemy_id], 0)
            endif
        elseif ( isCurseFor == CS_FOR_CREEP ) then
            set enemy=Player(i)
            set enemy_id=GetPlayerId(enemy)
            set enemy_creep=Player(i + 8)
            set enemy_creep_id=GetPlayerId(enemy_creep)
            set caster_creep=Player(GetPlayerId(caster) + 8)
            
            if not ( enemy_creep == caster_creep ) then
                set clock=CreateTimer()
                set clock_id=GetHandleId(clock)
                set tech_before_level=GetPlayerTechCountSimple(tech_id, enemy_creep)
                set tech_after_level=tech_before_level + 1
                        
                call SetPlayerTechResearchedSwap(tech_id, tech_after_level, enemy_creep)
                call SaveInteger(CS_ActiveCurses, clock_id, CS_PLAYER_ID, enemy_creep_id)
                call SaveInteger(CS_ActiveCurses, clock_id, CS_CURSE_ID, curse_id)
                call SaveTimerHandle(CS_ActiveCurses, enemy_creep_id, curse_id, clock)
                call TimerStart(clock, duration, false, function CS_RemoveCurse)
                call DisplayTextToPlayer(enemy_creep, 0, 0, ( ( CS_PlayersColors[enemy_id] ) + GetPlayerName(enemy) + "|r |cffff0000you have been cursed!|r" ))
                call PlaySoundAtPointBJ(gg_snd_SoulPreservation, 100, udg_CS_SoundPoint[enemy_id], 0)
            endif
        endif
        set i=i + 1
        exitwhen i == CS_MaxPlayersPlayingCount
    endloop

endfunction

function Trig_CSys_Core_Conditions takes nothing returns boolean
    local unit dummy
    local boolean isCurse
    local boolean isCurseAvailable
    local boolean isDebuff
    local integer dummy_id
    local integer tech_id
    local integer curse_id
    local real duration
    local player caster
    local integer caster_id

    if ( not ( GetUnitTypeId(GetSellingUnit()) == CS_CurseSeller ) ) then
        return false
    endif

    set dummy=GetSoldUnit()
    set isCurse=CS_IsCurse(dummy)
    set isDebuff=CS_IsDebuff(dummy)

    if not ( isCurse ) then
        if not ( isDebuff ) then
            return false
        else
            set caster=GetOwningPlayer(dummy)

            call CS_Debuff(caster , dummy)
            call RemoveUnit(dummy)

            set dummy=null

            return false
        endif
    endif

    set dummy_id=GetUnitTypeId(dummy)
    set curse_id=CS_GetCurseId(dummy)
    set isCurseAvailable=CS_IsCurseAvailable(curse_id)
    set caster=GetOwningPlayer(dummy)
    set caster_id=GetPlayerId(caster)

    if not ( isCurseAvailable ) then
        call DisplayTextToPlayer(caster, 0, 0, CS_PlayersColors[caster_id] + GetPlayerName(caster) + "|r |cffff0000This curse is not available|r")
        set dummy=null
        return false
    endif

    set CS_CurseAvailable[curse_id]=false
        

    call CS_ApplyCurse(curse_id , caster)
    call DisplayTextToPlayer(caster, 0, 0, CS_PlayersColors[caster_id] + GetPlayerName(caster) + "|r |cffff0000You cast a curse!|r")
    call RemoveUnit(dummy)
    
    return true
endfunction

//===========================================================================
function InitTrig_CSys_Core takes nothing returns nothing
    local trigger trig= CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddCondition(trig, Condition(function Trig_CSys_Core_Conditions))
endfunction
//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Map_Init()
    call InitTrig_Run_texts()
    call InitTrig_All_player_intro()
    call InitTrig_Display_All_Aura()
    call InitTrig_Select_On_Start()
    call InitTrig_Next_Page()
    call InitTrig_Penguin_Work_Init()
    call InitTrig_Penguin_Work_Order()
    call InitTrig_Penguin_Spawn()
    call InitTrig_Issue_Igloo_Order()
    call InitTrig_Sell_Towers()
    call InitTrig_Auto_Attack()
    call InitTrig_PenguinKingLimit()
    call InitTrig_PenguinKingLimit2()
    call InitTrig_PenguinKing_Enable()
    call InitTrig_Penguin_Limit()
    call InitTrig_Penguin_Count()
    call InitTrig_PenguinDetonate()
    call InitTrig_The_Hatchery_Spawn()
    call InitTrig_The_Hatchery_Train()
    call InitTrig_The_Hatchery_Stop()
    call InitTrig_Hydra_Portal_Spawn()
    call InitTrig_Hydra_Portal_Train()
    call InitTrig_Hydra_Portal_Stop()
    call InitTrig_Spawned_Units_Limit()
    call InitTrig_Remove_Hydra_Portal()
    call InitTrig_Remove_Phoenix()
    call InitTrig_Remove_The_Hatchery()
    call InitTrig_Remove_The_Hatchery_Phoenix()
    call InitTrig_Remove_The_Hatchery_Phoenix_Egg()
    call InitTrig_Heal_Init()
    call InitTrig_Heal()
    call InitTrig_AutoHeal()
    call InitTrig_AbiInit()
    call InitTrig_Upgrades_to_Income_v2()
    call InitTrig_King_Upgrades_Init()
    call InitTrig_KingMaxUp_and_lumbering_speed()
    call InitTrig_King_Upgrades()
    call InitTrig_King_Abilities()
    call InitTrig_King_Leech()
    call InitTrig_Defeat_Test()
    call InitTrig_Income_Test()
    call InitTrig_Penguin_Display_Amount()
    call InitTrig_Commands()
    call InitTrig_Single_Player()
    call InitTrig_Camera_Set()
    call InitTrig_Reset_Camera()
    call InitTrig_Camera_Zoom()
    call InitTrig_TopDown()
    call InitTrig_Dialog_Setup()
    call InitTrig_Mode_Choose()
    call InitTrig_Mode_Warning()
    call InitTrig_Mode_Units()
    call InitTrig_Multiboard()
    call InitTrig_Tower_Types_Init()
    call InitTrig_Movement_Speed_to_0()
    call InitTrig_Movement_Speed_to_1()
    call InitTrig_Setting_up_Creeps()
    call InitTrig_Init_Spawn()
    call InitTrig_Spawn_Creeps()
    call InitTrig_Timer()
    call InitTrig_Checkpoints()
    call InitTrig_Corpse_Removall()
    call InitTrig_Wave_Timer()
    call InitTrig_Build_Period()
    call InitTrig_Build_Period_Timer()
    call InitTrig_Send_troops_v2()
    call InitTrig_Sendable_Units_Init()
    call InitTrig_Add_Income_with_send()
    call InitTrig_variable_init()
    call InitTrig_Income_EndofRound()
    call InitTrig_Player_Group_Init()
    call InitTrig_Spawn_Recognization()
    call InitTrig_Player_lost_or_innactive()
    call InitTrig_Color_text_init()
    call InitTrig_PlayerLeaves()
    call InitTrig_King_Dies()
    call InitTrig_Time_Passed_5_Mins()
    call InitTrig_Time_Passed_10_Mins()
    call InitTrig_Time_Passed_15_Mins()
    call InitTrig_Time_Passed_20_Mins()
    call InitTrig_Time_Passed_25_Mins()
    call InitTrig_Time_Passed_30_Mins()
    call InitTrig_Kings_Influence_Red()
    call InitTrig_Kings_Influence_Blue()
    call InitTrig_Kings_Influence_Teal()
    call InitTrig_Kings_Influence_Purple()
    call InitTrig_Kings_Influence_Yellow()
    call InitTrig_Kings_Influence_Orange()
    call InitTrig_Kings_Influence_Green()
    call InitTrig_Kings_Influence_Pink()
    call InitTrig_CSys_Sounds()
    call InitTrig_CSys_Configuration()
    call InitTrig_CSys_Core()
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute(gg_trg_Map_Init)
    call ConditionalTriggerExecute(gg_trg_All_player_intro)
    call ConditionalTriggerExecute(gg_trg_Display_All_Aura)
    call ConditionalTriggerExecute(gg_trg_Penguin_Work_Init)
    call ConditionalTriggerExecute(gg_trg_Penguin_Limit)
    call ConditionalTriggerExecute(gg_trg_Heal_Init)
    call ConditionalTriggerExecute(gg_trg_AbiInit)
    call ConditionalTriggerExecute(gg_trg_Tower_Types_Init)
    call ConditionalTriggerExecute(gg_trg_Setting_up_Creeps)
    call ConditionalTriggerExecute(gg_trg_Sendable_Units_Init)
    call ConditionalTriggerExecute(gg_trg_variable_init)
    call ConditionalTriggerExecute(gg_trg_Player_Group_Init)
    call ConditionalTriggerExecute(gg_trg_Spawn_Recognization)
    call ConditionalTriggerExecute(gg_trg_Color_text_init)
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation(Player(0), 0)
    call ForcePlayerStartLocation(Player(0), 0)
    call SetPlayerColor(Player(0), ConvertPlayerColor(0))
    call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(0), false)
    call SetPlayerController(Player(0), MAP_CONTROL_USER)

    // Player 1
    call SetPlayerStartLocation(Player(1), 1)
    call ForcePlayerStartLocation(Player(1), 1)
    call SetPlayerColor(Player(1), ConvertPlayerColor(1))
    call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(1), false)
    call SetPlayerController(Player(1), MAP_CONTROL_USER)

    // Player 2
    call SetPlayerStartLocation(Player(2), 2)
    call ForcePlayerStartLocation(Player(2), 2)
    call SetPlayerColor(Player(2), ConvertPlayerColor(2))
    call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(2), false)
    call SetPlayerController(Player(2), MAP_CONTROL_USER)

    // Player 3
    call SetPlayerStartLocation(Player(3), 3)
    call ForcePlayerStartLocation(Player(3), 3)
    call SetPlayerColor(Player(3), ConvertPlayerColor(3))
    call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(3), false)
    call SetPlayerController(Player(3), MAP_CONTROL_USER)

    // Player 4
    call SetPlayerStartLocation(Player(4), 4)
    call ForcePlayerStartLocation(Player(4), 4)
    call SetPlayerColor(Player(4), ConvertPlayerColor(4))
    call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(4), false)
    call SetPlayerController(Player(4), MAP_CONTROL_USER)

    // Player 5
    call SetPlayerStartLocation(Player(5), 5)
    call ForcePlayerStartLocation(Player(5), 5)
    call SetPlayerColor(Player(5), ConvertPlayerColor(5))
    call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(5), false)
    call SetPlayerController(Player(5), MAP_CONTROL_USER)

    // Player 6
    call SetPlayerStartLocation(Player(6), 6)
    call ForcePlayerStartLocation(Player(6), 6)
    call SetPlayerColor(Player(6), ConvertPlayerColor(6))
    call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(6), false)
    call SetPlayerController(Player(6), MAP_CONTROL_USER)

    // Player 7
    call SetPlayerStartLocation(Player(7), 7)
    call ForcePlayerStartLocation(Player(7), 7)
    call SetPlayerColor(Player(7), ConvertPlayerColor(7))
    call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(7), false)
    call SetPlayerController(Player(7), MAP_CONTROL_USER)

    // Player 8
    call SetPlayerStartLocation(Player(8), 8)
    call ForcePlayerStartLocation(Player(8), 8)
    call SetPlayerColor(Player(8), ConvertPlayerColor(8))
    call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(8), false)
    call SetPlayerController(Player(8), MAP_CONTROL_COMPUTER)

    // Player 9
    call SetPlayerStartLocation(Player(9), 9)
    call ForcePlayerStartLocation(Player(9), 9)
    call SetPlayerColor(Player(9), ConvertPlayerColor(9))
    call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(9), false)
    call SetPlayerController(Player(9), MAP_CONTROL_COMPUTER)

    // Player 10
    call SetPlayerStartLocation(Player(10), 10)
    call ForcePlayerStartLocation(Player(10), 10)
    call SetPlayerColor(Player(10), ConvertPlayerColor(10))
    call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(10), false)
    call SetPlayerController(Player(10), MAP_CONTROL_COMPUTER)

    // Player 11
    call SetPlayerStartLocation(Player(11), 11)
    call ForcePlayerStartLocation(Player(11), 11)
    call SetPlayerColor(Player(11), ConvertPlayerColor(11))
    call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(11), false)
    call SetPlayerController(Player(11), MAP_CONTROL_COMPUTER)

    // Player 12
    call SetPlayerStartLocation(Player(12), 12)
    call ForcePlayerStartLocation(Player(12), 12)
    call SetPlayerColor(Player(12), ConvertPlayerColor(12))
    call SetPlayerRacePreference(Player(12), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(12), false)
    call SetPlayerController(Player(12), MAP_CONTROL_COMPUTER)

    // Player 13
    call SetPlayerStartLocation(Player(13), 13)
    call ForcePlayerStartLocation(Player(13), 13)
    call SetPlayerColor(Player(13), ConvertPlayerColor(13))
    call SetPlayerRacePreference(Player(13), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(13), false)
    call SetPlayerController(Player(13), MAP_CONTROL_COMPUTER)

    // Player 14
    call SetPlayerStartLocation(Player(14), 14)
    call ForcePlayerStartLocation(Player(14), 14)
    call SetPlayerColor(Player(14), ConvertPlayerColor(14))
    call SetPlayerRacePreference(Player(14), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(14), false)
    call SetPlayerController(Player(14), MAP_CONTROL_COMPUTER)

    // Player 15
    call SetPlayerStartLocation(Player(15), 15)
    call ForcePlayerStartLocation(Player(15), 15)
    call SetPlayerColor(Player(15), ConvertPlayerColor(15))
    call SetPlayerRacePreference(Player(15), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(15), false)
    call SetPlayerController(Player(15), MAP_CONTROL_COMPUTER)

    // Player 16
    call SetPlayerStartLocation(Player(16), 16)
    call ForcePlayerStartLocation(Player(16), 16)
    call SetPlayerColor(Player(16), ConvertPlayerColor(16))
    call SetPlayerRacePreference(Player(16), RACE_PREF_HUMAN)
    call SetPlayerRaceSelectable(Player(16), false)
    call SetPlayerController(Player(16), MAP_CONTROL_COMPUTER)

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_1034
    call SetPlayerTeam(Player(0), 0)
    call SetPlayerTeam(Player(1), 0)
    call SetPlayerTeam(Player(2), 0)
    call SetPlayerTeam(Player(3), 0)
    call SetPlayerTeam(Player(4), 0)
    call SetPlayerTeam(Player(5), 0)
    call SetPlayerTeam(Player(6), 0)
    call SetPlayerTeam(Player(7), 0)

    // Force: TRIGSTR_1035
    call SetPlayerTeam(Player(8), 1)
    call SetPlayerTeam(Player(9), 1)
    call SetPlayerTeam(Player(10), 1)
    call SetPlayerTeam(Player(11), 1)
    call SetPlayerTeam(Player(12), 1)
    call SetPlayerTeam(Player(13), 1)
    call SetPlayerTeam(Player(14), 1)
    call SetPlayerTeam(Player(15), 1)
    call SetPlayerTeam(Player(16), 1)

    //   Allied
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(8), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(9), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(10), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(11), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(12), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(13), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(15), true)
    call SetPlayerAllianceStateAllyBJ(Player(14), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(15), Player(16), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(8), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(9), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(10), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(11), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(12), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(13), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(14), true)
    call SetPlayerAllianceStateAllyBJ(Player(16), Player(15), true)

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(8), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(9), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(10), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(11), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(12), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(13), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(15), true)
    call SetPlayerAllianceStateVisionBJ(Player(14), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(15), Player(16), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(8), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(9), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(10), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(11), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(12), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(13), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(14), true)
    call SetPlayerAllianceStateVisionBJ(Player(16), Player(15), true)

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount(0, 1)
    call SetStartLocPrio(0, 0, 2, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(1, 2)
    call SetStartLocPrio(1, 0, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(1, 1, 4, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(2, 1)
    call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(3, 3)
    call SetStartLocPrio(3, 0, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(3, 1, 2, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(3, 2, 6, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(4, 2)
    call SetStartLocPrio(4, 0, 1, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(4, 1, 6, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(5, 1)
    call SetStartLocPrio(5, 0, 7, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(6, 2)
    call SetStartLocPrio(6, 0, 3, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(6, 1, 4, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(7, 2)
    call SetStartLocPrio(7, 0, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(7, 1, 6, MAP_LOC_PRIO_LOW)

    call SetStartLocPrioCount(8, 10)
    call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 6, 7, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 7, 9, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(8, 8, 16, MAP_LOC_PRIO_HIGH)

    call SetEnemyStartLocPrioCount(8, 9)
    call SetEnemyStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(8, 1, 1, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(8, 3, 3, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(8, 4, 5, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(8, 5, 7, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(8, 6, 9, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(8, 7, 16, MAP_LOC_PRIO_LOW)

    call SetStartLocPrioCount(9, 8)
    call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 1, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 2, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 3, 7, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(9, 4, 10, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(9, 5, 12, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(9, 6, 15, MAP_LOC_PRIO_LOW)

    call SetEnemyStartLocPrioCount(9, 6)
    call SetEnemyStartLocPrio(9, 0, 2, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(9, 1, 3, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(9, 2, 12, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(9, 3, 14, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(9, 4, 15, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(9, 5, 16, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(10, 13)
    call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 10, 11, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(10, 11, 16, MAP_LOC_PRIO_LOW)

    call SetEnemyStartLocPrioCount(10, 10)
    call SetEnemyStartLocPrio(10, 0, 1, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 1, 3, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 2, 8, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 3, 9, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 4, 12, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 5, 13, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(10, 6, 14, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(10, 7, 15, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(10, 8, 16, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(11, 8)
    call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(11, 1, 2, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(11, 2, 4, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(11, 3, 12, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(11, 4, 13, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(11, 5, 14, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(11, 6, 15, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(11, 7, 16, MAP_LOC_PRIO_LOW)

    call SetEnemyStartLocPrioCount(11, 6)
    call SetEnemyStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(11, 1, 1, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(11, 2, 2, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(11, 3, 4, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(11, 4, 12, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(11, 5, 14, MAP_LOC_PRIO_HIGH)

    call SetStartLocPrioCount(12, 14)
    call SetStartLocPrio(12, 0, 1, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(12, 1, 3, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(12, 2, 4, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 3, 6, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 4, 7, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 5, 8, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 6, 9, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 7, 10, MAP_LOC_PRIO_HIGH)
    call SetStartLocPrio(12, 8, 11, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 9, 13, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 10, 14, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 11, 15, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(12, 12, 16, MAP_LOC_PRIO_LOW)

    call SetEnemyStartLocPrioCount(12, 12)
    call SetEnemyStartLocPrio(12, 0, 0, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(12, 1, 1, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(12, 2, 3, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(12, 3, 4, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 4, 5, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 5, 7, MAP_LOC_PRIO_HIGH)
    call SetEnemyStartLocPrio(12, 6, 8, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 7, 10, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 8, 11, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 9, 13, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 10, 14, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(12, 11, 15, MAP_LOC_PRIO_LOW)

    call SetStartLocPrioCount(13, 8)
    call SetStartLocPrio(13, 0, 1, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 1, 2, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 2, 3, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 3, 4, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 4, 11, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 5, 12, MAP_LOC_PRIO_LOW)
    call SetStartLocPrio(13, 6, 14, MAP_LOC_PRIO_LOW)

    call SetEnemyStartLocPrioCount(13, 8)
    call SetEnemyStartLocPrio(13, 0, 1, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 1, 2, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 2, 3, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 3, 4, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 4, 11, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 5, 12, MAP_LOC_PRIO_LOW)
    call SetEnemyStartLocPrio(13, 6, 14, MAP_LOC_PRIO_LOW)
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    local weathereffect we
    call SetCameraBounds(- 11520.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), - 5632.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 11520.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 5120.0 - GetCameraMargin(CAMERA_MARGIN_TOP), - 11520.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 5120.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 11520.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), - 5632.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
    call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
    set we=AddWeatherEffect(Rect(- 12288.0, - 6144.0, 12288.0, 6144.0), 'SNhs')
    call EnableWeatherEffect(we, true)
    call NewSoundEnvironment("Default")
    call SetAmbientDaySound("IceCrownDay")
    call SetAmbientNightSound("IceCrownNight")
    call SetMapMusic("Music", true, 0)
    call InitSounds()
    call CreateRegions()
    call CreateAllUnits()
    call InitBlizzard()


    call InitGlobals()
    call InitCustomTriggers()
    call RunInitializationTriggers()

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName("TRIGSTR_905")
    call SetMapDescription("TRIGSTR_907")
    call SetPlayers(17)
    call SetTeams(17)
    call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)

    call DefineStartLocation(0, - 8128.0, 1216.0)
    call DefineStartLocation(1, - 2368.0, 1280.0)
    call DefineStartLocation(2, - 8128.0, - 2560.0)
    call DefineStartLocation(3, - 2368.0, - 2560.0)
    call DefineStartLocation(4, 2368.0, 1216.0)
    call DefineStartLocation(5, 8128.0, 1280.0)
    call DefineStartLocation(6, 2368.0, - 2560.0)
    call DefineStartLocation(7, 8128.0, - 2560.0)
    call DefineStartLocation(8, 0.0, - 512.0)
    call DefineStartLocation(9, 0.0, - 512.0)
    call DefineStartLocation(10, 0.0, - 512.0)
    call DefineStartLocation(11, 0.0, - 512.0)
    call DefineStartLocation(12, 0.0, - 512.0)
    call DefineStartLocation(13, 0.0, - 512.0)
    call DefineStartLocation(14, 0.0, - 512.0)
    call DefineStartLocation(15, 0.0, - 512.0)
    call DefineStartLocation(16, 0.0, - 512.0)

    // Player setup
    call InitCustomPlayerSlots()
    call InitCustomTeams()
    call InitAllyPriorities()
endfunction




//Struct method generated initializers/callers:

