//===========================================================================
// 
// Sailor Moon Castle Defence v2.7
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: TheBesthero
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    rect array              udg_HeroStartRegion
    integer                 udg_MonsterType            = 0
    integer                 udg_MonsterAmount          = 0
    timer                   udg_MonsterTimer           = null
    string                  udg_Level
    string                  udg_MonsterTypeText
    string                  udg_MonsterAmountText
    trigger                 udg_MonsterLevelTrig       = null
    trigger array           udg_Hints
    leaderboard             udg_TheLeaderBoard         = null
    integer array           udg_Kills
    integer                 udg_BountyRound            = 0
    sound array             udg_Music
    real array              udg_RealHitPoints
    integer                 udg_LevelTimer             = 0
    integer                 udg_Lumber                 = 0
    integer                 udg_YAYWait                = 0
    integer                 udg_CinematicSkip          = 0
    integer                 udg_Five                   = 0
    integer                 udg_VoteNeeded             = 0
    force                   udg_Allies                 = null
    integer                 udg_OffsetRandom           = 0
    unit                    udg_MoonHealingCaster      = null
    unit                    udg_MoonHealingTarget      = null
    integer                 udg_MoonHealingHitCount    = 0
    location                udg_MoonHealingPoint       = null
    unit                    udg_MoonHealingDummy       = null
    location                udg_Temp1                  = null
    real                    udg_TempReal1              = 0
    location                udg_TempLoc1               = null
    unit                    udg_TempUnit2              = null
    unit                    udg_TempUnit1              = null
    group                   udg_TempGroup1             = null
    unit                    udg_TempUnit3              = null
    integer                 udg_PR_CastCount           = 0
    unit array              udg_PR_Caster
    location array          udg_PR_Location
    unit array              udg_PR_UnitTimer
    group array             udg_PR_UnitGroup
    integer                 udg_PR_LoopInteger         = 0
    real array              udg_SoEL_Angle
    real array              udg_SoEL_Damage
    real array              udg_SoEL_DamageCounter
    real array              udg_SoEL_DummyDistance
    real array              udg_SoEL_DummySpeed
    unit array              udg_SoEL_DummyUnit
    real array              udg_SoEL_HitBox
    integer array           udg_SoEL_Index
    boolean array           udg_SoEL_Off
    boolean array           udg_SoEL_RemoveOnHit
    effect array            udg_SoEL_SpecialEffect
    effect array            udg_SoE_AttachmentEffect1
    effect array            udg_SoE_AttachmentEffect2
    unit array              udg_SoE_Caster
    real array              udg_SoE_CasterX
    real array              udg_SoE_CasterY
    real array              udg_SoE_Damage
    real array              udg_SoE_DummyDistance
    real array              udg_SoE_DummySpeed
    real array              udg_SoE_HitBox
    integer array           udg_SoE_Index
    integer array           udg_SoE_LightningCount
    string array            udg_SoE_ModelEffect
    boolean array           udg_SoE_Off
    location array          udg_SoE_Point
    boolean array           udg_SoE_RemoveOnHit
    real array              udg_SoE_Timer_NewLightning
    real array              udg_SoE_Timer_NewLightning_Count
    group                   udg_SoE_UnitGroup          = null
    boolean array           udg_SoE_EnableMovement
    real array              udg_SoE_AimValue
    real array              udg_SoE_MissileSpawnDistance
    string array            udg_SoE_HitEffect
    string array            udg_SoEL_HitEffect
    real                    udg_SpellBounceRange       = 0
    real                    udg_SpellBounceSpeed       = 0
    integer                 udg_SpellNumberBounces     = 0
    integer                 udg_SpellMaximumNumberHits = 0
    location array          udg_TemporaryPoint
    group                   udg_PowerChainGroup        = null
    hashtable               udg_PowerChainHash         = null
    unit                    udg_TemporaryTarget        = null
    handle                  udg_TemporaryKeyTarget     = null
    integer                 udg_TemporaryKeySpell      = 0
    group array             udg_TemporaryGroup
    unit                    udg_Caster                 = null
    location array          udg_Points
    real array              udg_Real
    hashtable               udg_Hashtable              = null
    group                   udg_Shockwaves             = null
    group                   udg_Enemies                = null
    hashtable               udg_hash                   = null
    real                    udg_Damage                 = 0
    real                    udg_Bred                   = 0
    real                    udg_SpeedInc               = 0
    real                    udg_Frequency              = 0
    group                   udg_Caster_G               = null
    real                    udg_RemaningTime           = 0
    location                udg_StartPoint             = null
    real                    udg_StartPoint1            = 0
    real                    udg_StartPoint2            = 0
    real                    udg_BOOM                   = 0
    real                    udg_Speed                  = 0
    real                    udg_Anglechange            = 0
    location                udg_CP                     = null
    real                    udg_Angle                  = 0
    location                udg_StartPoint3            = null
    location                udg_Point3                 = null
    real                    udg_SinAC                  = 0
    real                    udg_Degg                   = 0
    real                    udg_Speed2                 = 0
    real                    udg_Bred2                  = 0
    real                    udg_Dis                    = 0
    location                udg_Point2                 = null
    location                udg_Point4                 = null
    hashtable               udg_FrostTable             = null
    hashtable               udg_DummyTable             = null
    location                udg_Map_Point              = null
    unit                    udg_FS_Caster              = null
    location                udg_FS_Location_I          = null
    location                udg_FS_Location_II         = null
    integer                 udg_FS_Ability_Level       = 0
    handle                  udg_FS_Unit_Handle         = null
    real                    udg_FS_Angle               = 0
    real                    udg_FS_Speed               = 0
    real                    udg_FS_Distance            = 0
    integer                 udg_FS_Buff                = 0
    real                    udg_FS_Nova_AoE            = 0
    integer                 udg_FS_Intervals           = 0
    integer                 udg_FS_Dummy_Ability       = 0
    group                   udg_FS_Move_Group          = null
    real                    udg_FS_Counter             = 0
    integer                 udg_FS_Shards              = 0
    location                udg_FS_Move_Loc_I          = null
    location                udg_FS_Move_Loc_II         = null
    location                udg_FS_Dummy_Cast_Point    = null
    location                udg_FS_Dummy_Cast_Point2   = null
    real                    udg_FS_Shard_Distance      = 0
    real                    udg_FS_Shard_Speed         = 0
    real                    udg_FS_Shard_Angle         = 0
    unit                    udg_FS_Dummy_Missile       = null
    group                   udg_FS_Dummy_Group         = null
    location                udg_FS_DummyLocI           = null
    location                udg_FS_DummyLocII          = null
    group                   udg_FS_Dummy_Damage_Group  = null
    location                udg_FS_Location            = null
    group                   udg_FS_Damage_Group        = null
    unit                    udg_FS_Dummy               = null
    location                udg_GoodHeroSpawn          = null
    location                udg_EvilHeroSpawn          = null
    location array          udg_EvilAttack
    location array          udg_GoodAttack
    effect array            udg_SupremeThunderEffect
    integer array           udg_SupremeThunder_Index
    integer array           udg_SupremeThunderDragon_Index
    effect array            udg_SupremeThunderDragonEffect
    integer array           udg_CrescentBeam_Index
    effect array            udg_CrescentBeamEffect
    integer array           udg_CrescentBeamShower_Index
    effect array            udg_CrescentBeamShowerEffect
    integer array           udg_VenusLoveMeChain_Index
    effect array            udg_VenusLoveMeChainEffect
    integer array           udg_BurningMandala_Index
    effect array            udg_BurningMandalaEffect
    integer array           udg_WorldShaking_Index
    effect array            udg_WorldShakingEffect
    integer array           udg_DeepSubmerge_Index
    effect array            udg_DeepSubmergeEffect
    integer array           udg_DeadScream_Index
    effect array            udg_DeadScreamEffect
    integer array           udg_MoonGorgeousMeditation_Index
    effect array            udg_MoonGorgeousMeditationEffect
    integer array           udg_MoonPrincessHalation_Index
    effect array            udg_MoonPrincessHalationEffect
    integer array           udg_SilenceGlaiveSurprise_Index
    effect array            udg_SilenceGlaiveSurpriseEffect
    integer array           udg_ChronosTyphoon_Index
    effect array            udg_ChronosTyphoonEffect
    integer                 udg_SBIndex                = 0
    integer                 udg_SBLastRecycled         = 0
    integer array           udg_SBRecycledList
    integer                 udg_SBMax                  = 0
    boolean array           udg_SBHas
    unit array              udg_SBCaster
    location array          udg_SBCasterPoint
    location array          udg_SBTargetPoint
    real array              udg_SBDistance
    integer array           udg_SBLevel
    real array              udg_SBMaxDistance
    real array              udg_SBAngle
    location                udg_SBTempPoint            = null
    integer array           udg_SBEffectDelayer
    group array             udg_SBDummyGroup
    real array              udg_SBScale
    group array             udg_SBChannelGroup
    integer                 udg_SBCount                = 0
    real array              udg_SBTimer
    integer                 udg_SBInteger              = 0
    location                udg_SBTempPoint2           = null
    group                   udg_SBTempGroup            = null
    real                    udg_r                      = 0
    unit                    udg_Power_Slam_Caster      = null
    unit                    udg_Power_Slam_Target      = null
    location                udg_Power_Slam_Location    = null
    player                  udg_Power_Slam_Owner       = null
    integer                 udg_Power_Slam_Ability_Level = 0
    integer                 udg_Power_Slam_Strength    = 0
    real                    udg_Power_Slam_Damage_Multiplier = 0
    real                    udg_Power_Slam_Damage      = 0
    real                    udg_Power_Slam_Base_Chance = 0
    real                    udg_Power_Slam_Total_Chance = 0
    integer                 udg_Power_Slam_Dummy_Ability = 0
    hashtable               udg_NBHashtable            = null
    real                    udg_NBDamage               = 0
    real                    udg_NBWide                 = 0
    real                    udg_NBSpeedIncreae         = 0
    real                    udg_NBFrequency            = 0
    unit                    udg_NBCaster               = null
    integer                 udg_NBIntCaster            = 0
    group                   udg_NBGroup                = null
    real                    udg_NBRemaningTime         = 0
    location                udg_NBStartPoint           = null
    real                    udg_NBCollisionIndicator   = 0
    real                    udg_NBSpeed                = 0
    real                    udg_NBAnglechange          = 0
    location                udg_NBCastPoint            = null
    real                    udg_NBAngle                = 0
    real                    udg_NBSpellLevel           = 0
    unit array              udg_NBBalls
    unit                    udg_NBDummy                = null
    location                udg_NBPoint2               = null
    real                    udg_NBSinAC                = 0
    real                    udg_NBDegree               = 0
    real                    udg_NBSpeed2               = 0
    real                    udg_NBWide2                = 0
    real                    udg_NBDistance             = 0
    location                udg_NBPoint1               = null
    location                udg_NBPoint3               = null
    real                    udg_WaveAnimationEB        = 0
    real                    udg_aoeEB                  = 0
    real                    udg_DummyDistanceEB        = 0
    real                    udg_DummySpeedEB           = 0
    real                    udg_Interval               = 0
    real                    udg_BlastAoeEB             = 0
    integer                 udg_AbilityEB              = 0
    integer                 udg_DummyTypeEB            = 0
    real                    udg_DummyTimelifeEB        = 0
    real                    udg_DummySpeedIntervalEB   = 0
    boolean                 udg_SupportMultiLevelEB    = false
    integer                 udg_MultiplierPerLevelINT  = 0
    integer                 udg_MultiplierAoePerLevelINT = 0
    boolean                 udg_ShowDamageEB           = false
    string array            udg_DummySFX_EB
    integer                 udg_Key2EB                 = 0
    integer array           udg_KeyEB
    integer                 udg_KeyMaxEB               = 0
    integer                 udg_ArrayEB                = 0
    unit array              udg_CasterEB
    location                udg_CasterLocEB            = null
    location                udg_TargetLocEB            = null
    real                    udg_DummyAngleEB           = 0
    real array              udg_DamageEB
    integer                 udg_CasterINT_EB           = 0
    real array              udg_DamageAoeEB
    integer                 udg_AbilityLevelEB         = 0
    unit array              udg_DummyEB
    integer                 udg_LoopingIntegerEB       = 0
    location                udg_DummyLocEB             = null
    location                udg_DummyMoveEB            = null
    group array             udg_UnitGroupDamagedEB
    effect array            udg_DeathRebornRevolutionEffect
    integer array           udg_DeathRebornRevolution_Index
    integer                 udg_Overpower              = 0
    integer                 udg_Overpowermax           = 0
    hashtable               udg_BC_hash                = null
    group array             udg_BYB_group
    location array          udg_BYB_POINT
    hashtable               udg_BYB_HASH               = null
    unit                    udg_BYB_unit               = null
    hashtable               udg_SpellEventHash         = null
    hashtable               udg_genHashKnockback       = null
    integer array           udg_SpellEventAbility
    trigger array           udg_SpellEventTrigger
    hashtable               udg_sorHashFlame           = null
    hashtable               udg_sorHashIgnite          = null
    hashtable               udg_sorHashWither          = null
    hashtable               udg_sorHashThunder         = null
    hashtable               udg_sorHashBomb            = null
    hashtable               udg_sorHashMeteor          = null
    hashtable               udg_sorHashOrb             = null
    hashtable               udg_licHashHaunt           = null
    unit                    udg_tempUnit0              = null
    player                  udg_tempPlayer             = null
    integer                 udg_tempInteger0           = 0
    location                udg_tempLoc0               = null
    location                udg_tempLoc1               = null
    real                    udg_tempReal0              = 0
    location                udg_tempLoc2               = null
    real                    udg_sorOrbSpeed            = 0
    group                   udg_sorOrbGroup            = null
    integer                 udg_sorCountOrb            = 0
    integer                 udg_tempInteger1           = 0
    real                    udg_tempReal1              = 0
    group                   udg_tempGroup              = null
    real                    udg_sorOrbRadius           = 0
    integer                 udg_tempInteger2           = 0
    unit                    udg_tempUnit1              = null
    real                    udg_sorOrbSpin             = 0
    real                    udg_sorOrbCollision        = 0
    group                   udg_sorOrbShardGroup       = null
    integer                 udg_sorCountShard          = 0
    real                    udg_sorOrbRange            = 0
    real                    udg_tempReal2              = 0
    unit                    udg_tempUnit2              = null
    unit                    udg_tempUnit3              = null
    real                    udg_tempReal3              = 0
    real                    udg_sorOrbDmgBase          = 0
    real                    udg_sorOrbDmgLFactor       = 0
    attacktype              udg_ATElemental            = null
    damagetype              udg_DTElemental            = null
    group                   udg_sorWitherCasters       = null
    integer                 udg_sorCountWither         = 0
    real                    udg_sorWitherDamageBase    = 0
    real                    udg_intervalAbilityProjectile = 0
    lightning               udg_tempLight              = null
    real                    udg_sorWitherRangeMax      = 0
    real                    udg_sorWitherLightZ        = 0
    integer                 udg_AbilityPhoenixFire     = 0
    integer                 udg_AddAbility             = 0
    integer                 udg_Buff_PhoenixFire       = 0
    real                    udg_SpinSpeed              = 0
    integer                 udg_MUIPhoenixFire         = 0
    unit array              udg_Caster_PhoenixFire
    integer                 udg_Loop_Interger          = 0
    location                udg_PointPhoenix           = null
    integer                 udg_SM_Ability             = 0
    integer                 udg_SM_SM_Type             = 0
    real                    udg_SM_DistanceTraveled    = 0
    real                    udg_SM_HealFactor          = 0
    real array              udg_SM_InitialDamage
    real                    udg_SM_DamagePer20DBonus   = 0
    real                    udg_LoopInterval           = 0
    integer                 udg_SM_Index               = 0
    unit array              udg_SM_Caster
    unit array              udg_SM_Target
    integer array           udg_SM_Level
    location array          udg_tempPoints
    real array              udg_SM_Angle
    player                  udg_SM_OwnerofUnit         = null
    real array              udg_SM_Damage
    unit array              udg_SM_SM
    integer                 udg_tempInt                = 0
    real array              udg_SM_HealAmount
    real array              udg_BB__Acceleration
    real array              udg_BB__Angle
    real                    udg_BB__BoundMaxX          = 0
    real                    udg_BB__BoundMaxY          = 0
    real                    udg_BB__BoundMinX          = 0
    real                    udg_BB__BoundMinY          = 0
    real array              udg_BB__BrakePoint
    unit array              udg_BB__Caster
    integer array           udg_BB__Count
    real array              udg_BB__Damage
    real array              udg_BB__Deacceleration
    real array              udg_BB__Duration
    real array              udg_BB__Dc
    real array              udg_BB__Dx
    group                   udg_BB__Group              = null
    unit array              udg_BB__Missile
    player array            udg_BB__Player
    effect array            udg_BB__Sfx
    real array              udg_BB__Speed
    real array              udg_BB__SpeedMax
    real array              udg_BB__SpeedMin
    boolean array           udg_BB__State
    real                    udg_BB__TAU                = 0
    unit array              udg_BB__Target
    timer                   udg_BB__Timer              = null
    integer                 udg_BB__Total              = 0
    real array              udg_BB__TurnRateMax
    real array              udg_BB__TurnRateMin
    real                    udg_sorFlameCollision      = 0
    group                   udg_sorFlameMGroup         = null
    integer                 udg_sorCountFlame          = 0
    real                    udg_sorFlameSpeedBase      = 0
    real                    udg_sorFlameSpeedInc       = 0
    real                    udg_sorFlameRadius         = 0
    real                    udg_sorFlameScaleRange     = 0
    real                    udg_sorFlameDmgMinBase     = 0
    real                    udg_sorFlameDmgMaxBase     = 0
    real                    udg_sorFlameDmgMaxInc      = 0
    real                    udg_sorIgniteFactor        = 0
    real                    udg_intervalAbilityEffects = 0
    real                    udg_sorIgniteDuration      = 0
    group                   udg_sorIgniteTargets       = null
    group                   udg_sorIgniteGroup         = null
    integer                 udg_sorCountIgnite         = 0
    real                    udg_sorFlameRange          = 0
    unit                    udg_SBC_Cast               = null
    location array          udg_Point
    real array              udg_Cell_Angle
    integer array           udg_Integer
    effect array            udg_Effect
    unit array              udg_Dummy
    group array             udg_Cell_Group
    integer                 udg_ESCounts               = 0
    integer                 udg_ESCountMax             = 0
    unit array              udg_ESCaster
    integer array           udg_ESDamage
    location                udg_ESTargetedArea         = null
    real                    udg_ESAngle                = 0
    location                udg_ESCastersLocation      = null
    integer array           udg_ESDuration
    group                   udg_ESStartGroup           = null
    integer                 udg_ESValue                = 0
    location                udg_ESDummy                = null
    location                udg_ESMov                  = null
    group                   udg_ESGroup                = null
    location array          udg_ESTargetLoc
    unit                    udg_SSI_Cast               = null
    hashtable               udg_FoK_hashtable          = null
    integer array           udg_knivecount
    real array              udg_knivesaoe
    real array              udg_knivesdamageaoe
    real array              udg_knivesdamage
    real array              udg_knivesduration
    real array              udg_knivesspeed
    real array              udg_flyingheight
    unit                    udg_caster                 = null
    integer                 udg_level                  = 0
    location                udg_point1                 = null
    location                udg_point2                 = null
    integer                 udg_i                      = 0
    unit                    udg_target                 = null
    group                   udg_FanofKnivesGroup       = null
    location                udg_point3                 = null
    real                    udg_angle                  = 0
    real                    udg_timer                  = 0
    integer                 udg_handle                 = 0
    player                  udg_ownerplayer            = null
    location                udg_zLoc                   = null
    integer                 udg_ShockRifle_Max         = 0
    unit array              udg_ShockRifle_Unit
    unit                    udg_u                      = null
    location                udg_loc                    = null
    real                    udg_a                      = 0
    real array              udg_ShockRifle_Data
    group                   udg_ShockRifle_Orbs        = null
    group array             udg_ShockRifle_Group
    real                    udg_x                      = 0
    real                    udg_x2                     = 0
    real                    udg_y                      = 0
    real                    udg_y2                     = 0
    unit array              udg_PinkSugarCaster
    unit array              udg_PinkSugarDummy
    integer array           udg_PinkSugarHitCount
    location                udg_PinkSugarPoint         = null
    unit array              udg_PinkSugarTarget
    integer                 udg_PinkSugarIndex         = 0
    integer                 udg_LoopInteger            = 0
    integer                 udg_StarIndex              = 0
    integer array           udg_StarCount
    effect array            udg_StarEffect
    player                  udg_player                 = null
    unit array              udg_HEROUNIT
    integer                 udg_integer3               = 0
    real array              udg_real
    real                    udg_ReviveTimerValue       = 0
    timer array             udg_Revtime2
    timerdialog array       udg_Rev_Timer_Window2
    integer                 udg_integer                = 0
    hashtable               udg_HASHPLAYER             = null
    integer                 udg_integer2               = 0
    timer                   udg_Timertest              = null
    unit                    udg_unit                   = null
    integer array           udg_hsIndex
    real array              udg_hsDamage
    real array              udg_hsTurn
    real array              udg_hsDetect
    real array              udg_hsCollide
    real array              udg_hsSpeedMax
    location array          udg_hstPoint
    integer array           udg_hsTargPointIndex
    integer array           udg_hsTargPointCounter
    location array          udg_hsTargPoint
    unit array              udg_hsTarg
    unit array              udg_hsDart
    integer array           udg_hsDartPointIndex
    real array              udg_hstReal
    group                   udg_hstUGroup              = null
    integer                 udg__Pause                 = 0
    integer                 udg_Config_CH_Spell        = 0
    integer                 udg_Config_CH_Unit         = 0
    real                    udg_Config_CH_Duration     = 0
    real                    udg_Config_CH_lvlDuration  = 0
    real                    udg_Config_CH_AoE          = 0
    real                    udg_Config_CH_lvlAoE       = 0
    integer                 udg_CH_Dex                 = 0
    unit array              udg_CH_Caster
    integer                 udg_CH_lvl                 = 0
    location                udg_CH_p                   = null
    unit array              udg_CH_Effect
    real array              udg_CH_AoE
    integer                 udg_CH_i                   = 0
    unit                    udg_CH_unit                = null
    group                   udg_CH_Group               = null
    group                   udg_CH_Group2              = null
    integer                 udg_Viv_cAbility           = 0
    integer                 udg_Viv_cBuff              = 0
    string                  udg_Viv_cSpecialEffect
    integer                 udg_Viv_cAbilityDummy      = 0
    integer                 udg_Viv_cCasterDummy       = 0
    integer                 udg_Viv_cTwistCount        = 0
    real array              udg_Viv_cDamage
    real array              udg_Viv_cInterval
    integer                 udg_Viv_Count              = 0
    integer array           udg_Viv_Tw
    unit array              udg_Viv_Unit
    integer array           udg_Viv_L
    integer array           udg_Viv_Case
    real array              udg_Viv_Timer
    integer                 udg_Viv_Integer            = 0
    effect array            udg_Viv_SpecialEffect
    location                udg_Viv_Point              = null
    unit                    udg_Viv_tmpUnit            = null
    real                    udg_WoS_Speed              = 0
    real                    udg_WoS_SoulsAngle         = 0
    real                    udg_WoS_AoE                = 0
    real                    udg_WoS_BaseDamage         = 0
    real                    udg_WoS_DamagePerLevel     = 0
    real                    udg_WoS_RangeMax           = 0
    real                    udg_WoS_RangeMin           = 0
    integer                 udg_WoS_Times              = 0
    integer                 udg_WoS_Skip               = 0
    unit array              udg_WoS_Caster
    integer array           udg_WoS_SpellLvl
    location                udg_WoS_Point1             = null
    location                udg_WoS_Point2             = null
    boolean array           udg_WoS_Off
    real array              udg_WoS_Angle
    integer array           udg_WoS_Loop
    integer                 udg_WoS                    = 0
    integer                 udg_WoS2_Times             = 0
    integer                 udg_WoS2_Skip              = 0
    unit array              udg_WoS2_Caster
    boolean array           udg_WoS2_Off
    real array              udg_WoS2_Distance
    unit array              udg_WoS_Dummy
    integer array           udg_WoS2_SpellLvl
    location                udg_TempPoint              = null
    unit                    udg_DummyCaster            = null
    real                    udg_TempY                  = 0
    real                    udg_TempX                  = 0

    // Generated
    rect                    gg_rct_TR_MonsterSpawn_1   = null
    rect                    gg_rct_TR_MonsterSpawn_2   = null
    rect                    gg_rct_BR_MonsterSpawn_1   = null
    rect                    gg_rct_BR_MonsterSpawn_2   = null
    rect                    gg_rct_B_Move              = null
    rect                    gg_rct_BL_MonsterSpawn_2   = null
    rect                    gg_rct_BL_MonsterSpawn_1   = null
    rect                    gg_rct_TL_MonsterSpawn_2   = null
    rect                    gg_rct_TL_MonsterSpawn     = null
    rect                    gg_rct_Region_012          = null
    rect                    gg_rct_Region_013          = null
    rect                    gg_rct_Region_013_Copy     = null
    rect                    gg_rct_Region_015          = null
    rect                    gg_rct_Region_016          = null
    rect                    gg_rct_Region_017          = null
    rect                    gg_rct_Region_018          = null
    rect                    gg_rct_Region_019          = null
    rect                    gg_rct_Tuxedo_Kamen        = null
    rect                    gg_rct_Sailor_Moon         = null
    rect                    gg_rct_Sailor_Mercury      = null
    rect                    gg_rct_Sailor_Mars         = null
    rect                    gg_rct_Sailor_Jupiter      = null
    rect                    gg_rct_Sailor_Uranus       = null
    rect                    gg_rct_Sailor_Neptune      = null
    rect                    gg_rct_Sailor_Pluto        = null
    rect                    gg_rct_Region_028          = null
    rect                    gg_rct_Shire               = null
    rect                    gg_rct_Sailor_Venus        = null
    rect                    gg_rct_R_Move              = null
    rect                    gg_rct_T_Move              = null
    rect                    gg_rct_L_Move              = null
    rect                    gg_rct_Region_012_Copy     = null
    rect                    gg_rct_Region_012_Copy_Copy = null
    rect                    gg_rct_Region_012_Copy_Copy_2 = null
    rect                    gg_rct_Sailor_Saturn       = null
    rect                    gg_rct_Region_047          = null
    rect                    gg_rct_Region_048          = null
    rect                    gg_rct_ShireCorner4        = null
    rect                    gg_rct_Shire_Corner_3      = null
    rect                    gg_rct_ShireCorner1        = null
    rect                    gg_rct_ShireCorner2        = null
    rect                    gg_rct_B2                  = null
    rect                    gg_rct_B3                  = null
    rect                    gg_rct_B4                  = null
    rect                    gg_rct_B1                  = null
    rect                    gg_rct_Castle              = null
    rect                    gg_rct_Region_040          = null
    rect                    gg_rct_Region_040_Copy     = null
    rect                    gg_rct_Region_045          = null
    rect                    gg_rct_Region_049          = null
    rect                    gg_rct_Region_050          = null
    rect                    gg_rct_Region_051          = null
    rect                    gg_rct_Region_015_Copy     = null
    rect                    gg_rct_Region_053          = null
    rect                    gg_rct_Region_054          = null
    rect                    gg_rct_Region_055          = null
    rect                    gg_rct_Region_056          = null
    rect                    gg_rct_TT                  = null
    rect                    gg_rct_RR                  = null
    rect                    gg_rct_BB                  = null
    rect                    gg_rct_LL                  = null
    rect                    gg_rct_The_Sailor_Scouts   = null
    rect                    gg_rct_Attack_Move_1       = null
    rect                    gg_rct_Attack_Move_2       = null
    rect                    gg_rct_Attack_Move_3       = null
    rect                    gg_rct_Attack_Move_4       = null
    rect                    gg_rct_Attack_Move_5       = null
    rect                    gg_rct_Attack_Move_6       = null
    rect                    gg_rct_Attack_Move_7       = null
    rect                    gg_rct_Attack_Move_8       = null
    rect                    gg_rct_Attack_Move_9       = null
    rect                    gg_rct_Attack_Move_10      = null
    rect                    gg_rct_Attack_Move_11      = null
    rect                    gg_rct_Attack_Move_12      = null
    camerasetup             gg_cam_Camera_001          = null
    camerasetup             gg_cam_Camera_002          = null
    camerasetup             gg_cam_Camera_003          = null
    camerasetup             gg_cam_Camera_004          = null
    camerasetup             gg_cam_Camera_005          = null
    camerasetup             gg_cam_Camera_006          = null
    camerasetup             gg_cam_Camera_007          = null
    camerasetup             gg_cam_Camera_008          = null
    camerasetup             gg_cam_Camera_010          = null
    camerasetup             gg_cam_Camera_011          = null
    sound                   gg_snd_ArcherWarcry1       = null
    sound                   gg_snd_BattleNetTick       = null
    sound                   gg_snd_CaptainWarcry1      = null
    string                  gg_snd_Comradeship
    string                  gg_snd_Credits01
    string                  gg_snd_DarkAgents
    string                  gg_snd_Doom
    sound                   gg_snd_DryadWarcry1        = null
    sound                   gg_snd_FootmanPissed2      = null
    sound                   gg_snd_FootmanWarcry1      = null
    sound                   gg_snd_FootmanYesAttack1   = null
    sound                   gg_snd_FootmanYesAttack3   = null
    sound                   gg_snd_GameFound           = null
    sound                   gg_snd_GoodJob             = null
    sound                   gg_snd_HorseLoop2          = null
    string                  gg_snd_Human1
    string                  gg_snd_Human2
    string                  gg_snd_Human3
    sound                   gg_snd_InGameChatWhat1     = null
    sound                   gg_snd_KnightPissed4       = null
    string                  gg_snd_NightElf2
    string                  gg_snd_Orc3
    sound                   gg_snd_QuestCompleted      = null
    sound                   gg_snd_QuestLog            = null
    sound                   gg_snd_SorceressPissed2    = null
    sound                   gg_snd_TheHornOfCenarius   = null
    string                  gg_snd_Undead1
    sound                   gg_snd_UpkeepRing          = null
    sound                   gg_snd_UtherReturns        = null
    sound                   gg_snd_WarlockAppears      = null
    sound                   gg_snd_JainaWhat3          = null
    sound                   gg_snd_sm                  = null
    sound                   gg_snd_sm2                 = null
    sound                   gg_snd_sm3                 = null
    sound                   gg_snd_sm4                 = null
    sound                   gg_snd_sm5                 = null
    sound                   gg_snd_sm6                 = null
    sound                   gg_snd_sm7                 = null
    sound                   gg_snd_sm8                 = null
    sound                   gg_snd_sm9                 = null
    sound                   gg_snd_Success             = null
    sound                   gg_snd_Crying              = null
    sound                   gg_snd_Punish_You          = null
    trigger                 gg_trg_Initialization      = null
    trigger                 gg_trg_Run_Abilities       = null
    trigger                 gg_trg_Jass_Script         = null
    trigger                 gg_trg_Commands            = null
    trigger                 gg_trg_Text                = null
    trigger                 gg_trg_Set_Test            = null
    trigger                 gg_trg_Set_Easy            = null
    trigger                 gg_trg_Set_Medium          = null
    trigger                 gg_trg_Set_Hard            = null
    trigger                 gg_trg_Set_TTest           = null
    trigger                 gg_trg_Set_10              = null
    trigger                 gg_trg_Set_20              = null
    trigger                 gg_trg_Set_30              = null
    trigger                 gg_trg_Set_40              = null
    trigger                 gg_trg_Boss                = null
    trigger                 gg_trg_Air                 = null
    trigger                 gg_trg_Siege               = null
    trigger                 gg_trg_Invis               = null
    trigger                 gg_trg_Hint1               = null
    trigger                 gg_trg_Hint2               = null
    trigger                 gg_trg_Hint3               = null
    trigger                 gg_trg_Hint4               = null
    trigger                 gg_trg_Hint5               = null
    trigger                 gg_trg_Hint6               = null
    trigger                 gg_trg_Hint7               = null
    trigger                 gg_trg_Hint8               = null
    trigger                 gg_trg_Hint9               = null
    trigger                 gg_trg_Hint10              = null
    trigger                 gg_trg_Hint11              = null
    trigger                 gg_trg_Hint12              = null
    trigger                 gg_trg_SetHints            = null
    trigger                 gg_trg_MonsterSet1         = null
    trigger                 gg_trg_MonsterSet2         = null
    trigger                 gg_trg_MonsterSet3         = null
    trigger                 gg_trg_MonsterSet4         = null
    trigger                 gg_trg_MonsterSet5         = null
    trigger                 gg_trg_MonsterSet6         = null
    trigger                 gg_trg_MonsterSet7         = null
    trigger                 gg_trg_MonsterSet8         = null
    trigger                 gg_trg_MonsterSet9         = null
    trigger                 gg_trg_MonsterSet10        = null
    trigger                 gg_trg_MonsterSet11        = null
    trigger                 gg_trg_MonsterSet12        = null
    trigger                 gg_trg_MonsterSet13        = null
    trigger                 gg_trg_MonsterSet14        = null
    trigger                 gg_trg_MonsterSet15        = null
    trigger                 gg_trg_MonsterSet16        = null
    trigger                 gg_trg_MonsterSet17        = null
    trigger                 gg_trg_MonsterSet18        = null
    trigger                 gg_trg_MonsterSet19        = null
    trigger                 gg_trg_MonsterSet20        = null
    trigger                 gg_trg_MonsterSet21        = null
    trigger                 gg_trg_MonsterSet22        = null
    trigger                 gg_trg_MonsterSet23        = null
    trigger                 gg_trg_MonsterSet24        = null
    trigger                 gg_trg_MonsterSet25        = null
    trigger                 gg_trg_MonsterSet26        = null
    trigger                 gg_trg_MonsterSet27        = null
    trigger                 gg_trg_MonsterSet28        = null
    trigger                 gg_trg_MonsterSet29        = null
    trigger                 gg_trg_MonsterSet30        = null
    trigger                 gg_trg_MonsterSet31        = null
    trigger                 gg_trg_MonsterSet32        = null
    trigger                 gg_trg_MonsterSet33        = null
    trigger                 gg_trg_MonsterSet34        = null
    trigger                 gg_trg_MonsterSet35        = null
    trigger                 gg_trg_MonsterSet36        = null
    trigger                 gg_trg_Ending              = null
    trigger                 gg_trg_MonsterTLBug        = null
    trigger                 gg_trg_MonsterTLBug2       = null
    trigger                 gg_trg_MonsterTRBug        = null
    trigger                 gg_trg_MonsterTRBug_Copy   = null
    trigger                 gg_trg_MonsterBRBug        = null
    trigger                 gg_trg_MonsterBRBug_Copy   = null
    trigger                 gg_trg_MonsterBLBug        = null
    trigger                 gg_trg_MonsterBLBug_Copy   = null
    trigger                 gg_trg_MonsterBLBug_Shire  = null
    trigger                 gg_trg_MonsterBLBug_Shire_Copy = null
    trigger                 gg_trg_MonsterBLBug_Shire_Copy_Copy = null
    trigger                 gg_trg_MonsterBLBug_Shire_Copy_2 = null
    trigger                 gg_trg_MonsterBLBug_Shire_Copy_2_Copy = null
    trigger                 gg_trg_MonsterBLBug_Shire_Copy_3 = null
    trigger                 gg_trg_MonsterYay          = null
    trigger                 gg_trg_MonsterLvlEnd       = null
    trigger                 gg_trg_MonsterMoveSecond_T = null
    trigger                 gg_trg_MonsterMoveSecond_R = null
    trigger                 gg_trg_MonsterMoveSecond_B = null
    trigger                 gg_trg_MonsterMoveSecond_L = null
    trigger                 gg_trg_Attack_Move_Order_1 = null
    trigger                 gg_trg_Attack_Move_Order_2 = null
    trigger                 gg_trg_Attack_Move_Order_3 = null
    trigger                 gg_trg_Attack_Move_Order_4 = null
    trigger                 gg_trg_Attack_Move_Order_5 = null
    trigger                 gg_trg_Attack_Move_Order_6 = null
    trigger                 gg_trg_Attack_Move_Order_7 = null
    trigger                 gg_trg_Attack_Move_Order_8 = null
    trigger                 gg_trg_MonsterStart        = null
    trigger                 gg_trg_MonsterTimer        = null
    trigger                 gg_trg_Deadbodes           = null
    trigger                 gg_trg_Leave_Ted_Alone     = null
    trigger                 gg_trg_Castle_Under_Attack = null
    trigger                 gg_trg_Castle_Under_Attack_TK = null
    trigger                 gg_trg_Castle_Destroyed    = null
    trigger                 gg_trg_Castle_Attack       = null
    trigger                 gg_trg_Dont_Leave_Castle   = null
    trigger                 gg_trg_Dont_Leave_Builder  = null
    trigger                 gg_trg_Lumber              = null
    trigger                 gg_trg_Allied_Gold         = null
    trigger                 gg_trg_Tuxedo_Kamen        = null
    trigger                 gg_trg_Usagi_Tsukino       = null
    trigger                 gg_trg_Sailor_Mercury      = null
    trigger                 gg_trg_Sailor_Mars         = null
    trigger                 gg_trg_Sailor_Jupiter      = null
    trigger                 gg_trg_Sailor_Uranus       = null
    trigger                 gg_trg_Sailor_Neptune      = null
    trigger                 gg_trg_Sailor_Pluto        = null
    trigger                 gg_trg_Sailor_Venus        = null
    trigger                 gg_trg_Sailor_Saturn       = null
    trigger                 gg_trg_North               = null
    trigger                 gg_trg_East                = null
    trigger                 gg_trg_South               = null
    trigger                 gg_trg_West                = null
    trigger                 gg_trg_Test                = null
    trigger                 gg_trg_Test_Copy           = null
    trigger                 gg_trg_Test_Copy_Copy      = null
    trigger                 gg_trg_Player_1            = null
    trigger                 gg_trg_Player_2            = null
    trigger                 gg_trg_Player_3            = null
    trigger                 gg_trg_Player_4            = null
    trigger                 gg_trg_Player_5            = null
    trigger                 gg_trg_Player_6            = null
    trigger                 gg_trg_Player_7            = null
    trigger                 gg_trg_Player_8            = null
    trigger                 gg_trg_Set_Up_Leaderboard  = null
    trigger                 gg_trg_Update_Leaderboard  = null
    trigger                 gg_trg_Change_Value        = null
    trigger                 gg_trg_Playergroup         = null
    trigger                 gg_trg_Antistuck           = null
    trigger                 gg_trg_UpgBuildin          = null
    trigger                 gg_trg_Debug               = null
    trigger                 gg_trg_Help                = null
    trigger                 gg_trg_Start               = null
    trigger                 gg_trg_Start_Skipped       = null
    trigger                 gg_trg_StartSkipPress      = null
    trigger                 gg_trg_Invulnerable        = null
    trigger                 gg_trg_ArchersHoldPosition = null
    trigger                 gg_trg_Melee_Initialization = null
    trigger                 gg_trg_Quests              = null
    trigger                 gg_trg_Submarine_Violon_Tide_Configuration = null
    trigger                 gg_trg_Submarine_Violon_Tide_Start = null
    trigger                 gg_trg_Submarine_Violon_Tide_Loop = null
    trigger                 gg_trg_Submarine_Violon_Tide_Loop2 = null
    trigger                 gg_trg_Dead_Scream_Init    = null
    trigger                 gg_trg_Dead_Scream_Cast    = null
    trigger                 gg_trg_Dead_Scream_Loop    = null
    trigger                 gg_trg_ini                 = null
    trigger                 gg_trg_Sphere_Of_Timelessness_ini = null
    trigger                 gg_trg_Sphere_Of_Timelessness_loop = null
    trigger                 gg_trg_hsCast              = null
    trigger                 gg_trg_hsInterval          = null
    trigger                 gg_trg_Moon_Healing_Escalation_1 = null
    trigger                 gg_trg_Moon_Healing_Escalation_2 = null
    trigger                 gg_trg_Moon_Healing_Escalation_3 = null
    trigger                 gg_trg_Pink_Sugar_Heart_Attack_1 = null
    trigger                 gg_trg_Pink_Sugar_Heart_Attack_2 = null
    trigger                 gg_trg_Shine_Aqua_Illusion_Cast = null
    trigger                 gg_trg_Shine_Aqua_Illusion_Effects = null
    trigger                 gg_trg_Cane_Attack         = null
    trigger                 gg_trg_VariableCreator     = null
    trigger                 gg_trg_GUI_SpellEvent      = null
    trigger                 gg_trg_Abilities           = null
    trigger                 gg_trg_Orb_Cast            = null
    trigger                 gg_trg_Orb_Missile         = null
    trigger                 gg_trg_Heart_Missile       = null
    trigger                 gg_trg_Moon_Tiara_Action_Variables = null
    trigger                 gg_trg_Moon_Tiara_Action_Cast = null
    trigger                 gg_trg_Moon_Tiara_Action_Loop = null
    trigger                 gg_trg_Deep_Submerge_Learn = null
    trigger                 gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2 = null
    trigger                 gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3 = null
    trigger                 gg_trg_Deep_Submerge_Function = null
    trigger                 gg_trg_Hide_SpellBook      = null
    trigger                 gg_trg_Settings            = null
    trigger                 gg_trg_Cast_Jupiter_Oak_Evolution = null
    trigger                 gg_trg_Loop_Jupiter_Oak_Evolution = null
    trigger                 gg_trg_Sparkling_Wide_Pressure = null
    trigger                 gg_trg_Preload             = null
    trigger                 gg_trg_Supreme_Thunder_Dragon_Cast = null
    trigger                 gg_trg_Supreme_Thunder_Dragon_Functions = null
    trigger                 gg_trg_Burning_Mandala     = null
    trigger                 gg_trg_Tuxedo_Frenzy       = null
    trigger                 gg_trg_Tuxedo_Frenzy_End   = null
    trigger                 gg_trg_Luna_P_Attack       = null
    trigger                 gg_trg_Venus_Love_and_Beauty_Shock = null
    trigger                 gg_trg_Rose_Attack         = null
    trigger                 gg_trg_Moon_Princess_Halation = null
    trigger                 gg_trg_Moon_Princess_Halation_Add_Loop = null
    trigger                 gg_trg_Moon_Princess_Halation_Lightning_Loop = null
    trigger                 gg_trg_SSIExecute          = null
    trigger                 gg_trg_SSILoop             = null
    trigger                 gg_trg_Silence_Wall_Cast   = null
    trigger                 gg_trg_Silence_Wall        = null
    trigger                 gg_trg_Silence_Buster_Bolt_Cast = null
    trigger                 gg_trg_Silence_Buster_Bolt_Loop = null
    trigger                 gg_trg_Hashtable_Variables = null
    trigger                 gg_trg_Star_Gentle_Uterus_Cast = null
    trigger                 gg_trg_Star_Gentle_Uterus_Loop = null
    trigger                 gg_trg_StarSeriousLaserIni = null
    trigger                 gg_trg_StarSeriousLaserCast = null
    trigger                 gg_trg_StarSeriousLaserLoop = null
    trigger                 gg_trg_Mars_Flame_Sniper_Cast = null
    trigger                 gg_trg_Mars_Flame_Sniper_Missile = null
    trigger                 gg_trg_Ignite_Effects      = null
    trigger                 gg_trg_Mercury_Aqua_Mirage_Initialization = null
    trigger                 gg_trg_Mercury_Aqua_Mirage_Execution = null
    trigger                 gg_trg_Mercury_Aqua_Mirage = null
    trigger                 gg_trg_DR_Setup            = null
    trigger                 gg_trg_DR_Cast             = null
    trigger                 gg_trg_DR_Loop             = null
    trigger                 gg_trg_Hide_SpellBook_Garnet_Ball_Damage_Aura = null
    trigger                 gg_trg_Garnet_Ball_Protection_Cast = null
    trigger                 gg_trg_Garnet_Ball_Protection_Finish = null
    trigger                 gg_trg_Garnet_Ball_Protection_Stops = null
    trigger                 gg_trg_Supreme_Thunder_Effect = null
    trigger                 gg_trg_Supreme_Thunder_Dragon_Effect = null
    trigger                 gg_trg_World_Shaking_Effect = null
    trigger                 gg_trg_Deep_Submerge_Effect = null
    trigger                 gg_trg_Moon_Gorgeous_Meditation_Effect = null
    trigger                 gg_trg_Moon_Princess_Halation_Effect = null
    trigger                 gg_trg_Silence_Glaive_Surprise_Effect = null
    trigger                 gg_trg_Chronos_Typhoon_Effect = null
    trigger                 gg_trg_Chronos_Typhoon_Effect_2 = null
    trigger                 gg_trg_Burning_Mandala_Effect = null
    trigger                 gg_trg_Burning_Mandala_Effect_2 = null
    trigger                 gg_trg_Crescent_Beam_Effect = null
    trigger                 gg_trg_Crescent_Beam_Effect_2 = null
    trigger                 gg_trg_Crescent_Beam_Shower_Effect = null
    trigger                 gg_trg_Crescent_Beam_Shower_Effect_2 = null
    trigger                 gg_trg_Venus_Love_Me_Chain_Effect = null
    trigger                 gg_trg_Venus_Love_Me_Chain_Effect_2 = null
    trigger                 gg_trg_Star_Spells_Effects = null
    trigger                 gg_trg_Star_Spells_Effects_2 = null
    trigger                 gg_trg_Floating_Text       = null
    unit                    gg_unit_n001_0028          = null
    unit                    gg_unit_ncp2_0117          = null
    unit                    gg_unit_ncp2_0118          = null
    unit                    gg_unit_ncp2_0119          = null
    unit                    gg_unit_ncp2_0120          = null
    unit                    gg_unit_ncp2_0121          = null
    unit                    gg_unit_ncp2_0122          = null
    unit                    gg_unit_ncp2_0123          = null
    unit                    gg_unit_ncp2_0124          = null
    unit                    gg_unit_H007_0125          = null
    unit                    gg_unit_H002_0126          = null
    unit                    gg_unit_H009_0127          = null
    unit                    gg_unit_H00A_0128          = null
    unit                    gg_unit_H001_0129          = null
    unit                    gg_unit_H008_0130          = null
    unit                    gg_unit_H003_0131          = null
    unit                    gg_unit_H006_0132          = null
    unit                    gg_unit_ncp2_0157          = null
    unit                    gg_unit_H005_0158          = null
    unit                    gg_unit_h00J_0197          = null
    unit                    gg_unit_ncp2_0205          = null
    unit                    gg_unit_H004_0206          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_MonsterAmount = 0
    set udg_MonsterTimer = CreateTimer()
    set udg_Level = ""
    set udg_MonsterTypeText = ""
    set udg_MonsterAmountText = ""
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Kills[i] = 0
        set i = i + 1
    endloop

    set udg_BountyRound = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RealHitPoints[i] = 0
        set i = i + 1
    endloop

    set udg_LevelTimer = 0
    set udg_Lumber = 0
    set udg_YAYWait = 0
    set udg_CinematicSkip = 0
    set udg_Five = 5
    set udg_VoteNeeded = 0
    set udg_Allies = CreateForce()
    set udg_OffsetRandom = 0
    set udg_MoonHealingHitCount = 0
    set udg_TempReal1 = 0
    set udg_TempGroup1 = CreateGroup()
    set udg_PR_CastCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PR_UnitGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_Angle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_Damage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_DamageCounter[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_DummyDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_DummySpeed[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_HitBox[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_Off[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_RemoveOnHit[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_CasterX[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_CasterY[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_Damage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_DummyDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_DummySpeed[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_HitBox[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_LightningCount[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_ModelEffect[i] = ""
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_Off[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_RemoveOnHit[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_Timer_NewLightning[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_Timer_NewLightning_Count[i] = 0
        set i = i + 1
    endloop

    set udg_SoE_UnitGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_EnableMovement[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_AimValue[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_MissileSpawnDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoE_HitEffect[i] = ""
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SoEL_HitEffect[i] = ""
        set i = i + 1
    endloop

    set udg_SpellBounceRange = 0
    set udg_SpellBounceSpeed = 0
    set udg_SpellNumberBounces = 0
    set udg_SpellMaximumNumberHits = 0
    set udg_PowerChainGroup = CreateGroup()
    set udg_TemporaryKeySpell = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TemporaryGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Real[i] = 0
        set i = i + 1
    endloop

    set udg_Shockwaves = CreateGroup()
    set udg_Enemies = CreateGroup()
    set udg_Damage = 0
    set udg_Bred = 0
    set udg_SpeedInc = 0
    set udg_Frequency = 0
    set udg_Caster_G = CreateGroup()
    set udg_RemaningTime = 0
    set udg_StartPoint1 = 0
    set udg_StartPoint2 = 0
    set udg_BOOM = 0
    set udg_Speed = 0
    set udg_Anglechange = 0
    set udg_Angle = 0
    set udg_SinAC = 0
    set udg_Degg = 0
    set udg_Speed2 = 0
    set udg_Bred2 = 0
    set udg_Dis = 0
    set udg_FS_Ability_Level = 0
    set udg_FS_Angle = 0
    set udg_FS_Speed = 0
    set udg_FS_Distance = 0
    set udg_FS_Nova_AoE = 0
    set udg_FS_Intervals = 0
    set udg_FS_Move_Group = CreateGroup()
    set udg_FS_Counter = 0
    set udg_FS_Shards = 0
    set udg_FS_Shard_Distance = 0
    set udg_FS_Shard_Speed = 0
    set udg_FS_Shard_Angle = 0
    set udg_FS_Dummy_Group = CreateGroup()
    set udg_FS_Dummy_Damage_Group = CreateGroup()
    set udg_FS_Damage_Group = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SupremeThunder_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SupremeThunderDragon_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CrescentBeam_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CrescentBeamShower_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_VenusLoveMeChain_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BurningMandala_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WorldShaking_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DeepSubmerge_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DeadScream_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MoonGorgeousMeditation_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MoonPrincessHalation_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SilenceGlaiveSurprise_Index[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ChronosTyphoon_Index[i] = 0
        set i = i + 1
    endloop

    set udg_SBIndex = 0
    set udg_SBLastRecycled = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBRecycledList[i] = 0
        set i = i + 1
    endloop

    set udg_SBMax = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBHas[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBLevel[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBMaxDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBAngle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBEffectDelayer[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBDummyGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBScale[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBChannelGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_SBCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SBTimer[i] = 0
        set i = i + 1
    endloop

    set udg_SBTempGroup = CreateGroup()
    set udg_r = 0
    set udg_Power_Slam_Ability_Level = 0
    set udg_Power_Slam_Strength = 0
    set udg_Power_Slam_Damage_Multiplier = 0
    set udg_Power_Slam_Damage = 0
    set udg_Power_Slam_Base_Chance = 0
    set udg_Power_Slam_Total_Chance = 0
    set udg_NBDamage = 0
    set udg_NBWide = 0
    set udg_NBSpeedIncreae = 0
    set udg_NBFrequency = 0
    set udg_NBIntCaster = 0
    set udg_NBGroup = CreateGroup()
    set udg_NBRemaningTime = 0
    set udg_NBCollisionIndicator = 0
    set udg_NBSpeed = 0
    set udg_NBAnglechange = 0
    set udg_NBAngle = 0
    set udg_NBSpellLevel = 0
    set udg_NBSinAC = 0
    set udg_NBDegree = 0
    set udg_NBSpeed2 = 0
    set udg_NBWide2 = 0
    set udg_NBDistance = 0
    set udg_WaveAnimationEB = 0
    set udg_aoeEB = 0
    set udg_DummyDistanceEB = 0
    set udg_DummySpeedEB = 0
    set udg_Interval = 0
    set udg_BlastAoeEB = 0
    set udg_DummyTimelifeEB = 0
    set udg_DummySpeedIntervalEB = 0
    set udg_SupportMultiLevelEB = false
    set udg_MultiplierPerLevelINT = 0
    set udg_MultiplierAoePerLevelINT = 0
    set udg_ShowDamageEB = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DummySFX_EB[i] = ""
        set i = i + 1
    endloop

    set udg_Key2EB = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KeyEB[i] = 0
        set i = i + 1
    endloop

    set udg_KeyMaxEB = 0
    set udg_ArrayEB = 0
    set udg_DummyAngleEB = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DamageEB[i] = 0
        set i = i + 1
    endloop

    set udg_CasterINT_EB = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DamageAoeEB[i] = 0
        set i = i + 1
    endloop

    set udg_AbilityLevelEB = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UnitGroupDamagedEB[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DeathRebornRevolution_Index[i] = 0
        set i = i + 1
    endloop

    set udg_Overpower = 0
    set udg_Overpowermax = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BYB_group[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_tempInteger0 = 0
    set udg_tempReal0 = 0
    set udg_sorOrbSpeed = 11.00
    set udg_sorOrbGroup = CreateGroup()
    set udg_sorCountOrb = 0
    set udg_tempInteger1 = 0
    set udg_tempReal1 = 0
    set udg_tempGroup = CreateGroup()
    set udg_sorOrbRadius = 250.00
    set udg_tempInteger2 = 0
    set udg_sorOrbSpin = 12.00
    set udg_sorOrbCollision = 60.00
    set udg_sorOrbShardGroup = CreateGroup()
    set udg_sorCountShard = 0
    set udg_sorOrbRange = 1000.00
    set udg_tempReal2 = 0
    set udg_tempReal3 = 0
    set udg_sorOrbDmgBase = 12.00
    set udg_sorOrbDmgLFactor = 1.00
    set udg_sorWitherCasters = CreateGroup()
    set udg_sorCountWither = 0
    set udg_sorWitherDamageBase = 30.00
    set udg_intervalAbilityProjectile = 0.03
    set udg_sorWitherRangeMax = 780.00
    set udg_sorWitherLightZ = 50.00
    set udg_SpinSpeed = 0
    set udg_MUIPhoenixFire = 0
    set udg_SM_DistanceTraveled = 0
    set udg_SM_HealFactor = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SM_InitialDamage[i] = 0
        set i = i + 1
    endloop

    set udg_SM_DamagePer20DBonus = 0
    set udg_LoopInterval = 0
    set udg_SM_Index = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SM_Level[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SM_Angle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SM_Damage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SM_HealAmount[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Acceleration[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Angle[i] = 0
        set i = i + 1
    endloop

    set udg_BB__BoundMaxX = 0
    set udg_BB__BoundMaxY = 0
    set udg_BB__BoundMinX = 0
    set udg_BB__BoundMinY = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__BrakePoint[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Count[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Damage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Deacceleration[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Duration[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Dc[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Dx[i] = 0
        set i = i + 1
    endloop

    set udg_BB__Group = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__Speed[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__SpeedMax[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__SpeedMin[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__State[i] = false
        set i = i + 1
    endloop

    set udg_BB__TAU = 0
    set udg_BB__Timer = CreateTimer()
    set udg_BB__Total = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__TurnRateMax[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BB__TurnRateMin[i] = 0
        set i = i + 1
    endloop

    set udg_sorFlameCollision = 60.00
    set udg_sorFlameMGroup = CreateGroup()
    set udg_sorCountFlame = 0
    set udg_sorFlameSpeedBase = 7.00
    set udg_sorFlameSpeedInc = 0.60
    set udg_sorFlameRadius = 240.00
    set udg_sorFlameScaleRange = 1600.00
    set udg_sorFlameDmgMinBase = 500.00
    set udg_sorFlameDmgMaxBase = 500.00
    set udg_sorFlameDmgMaxInc = 0.00
    set udg_sorIgniteFactor = 0.50
    set udg_intervalAbilityEffects = 0.20
    set udg_sorIgniteDuration = 5.00
    set udg_sorIgniteTargets = CreateGroup()
    set udg_sorIgniteGroup = CreateGroup()
    set udg_sorCountIgnite = 0
    set udg_sorFlameRange = 2000.00
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Cell_Angle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Integer[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Cell_Group[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_ESCounts = 0
    set udg_ESCountMax = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ESDamage[i] = 0
        set i = i + 1
    endloop

    set udg_ESAngle = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ESDuration[i] = 0
        set i = i + 1
    endloop

    set udg_ESStartGroup = CreateGroup()
    set udg_ESValue = 0
    set udg_ESGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivecount[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivesaoe[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivesdamageaoe[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivesdamage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivesduration[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_knivesspeed[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_flyingheight[i] = 0
        set i = i + 1
    endloop

    set udg_level = 0
    set udg_FanofKnivesGroup = CreateGroup()
    set udg_angle = 0
    set udg_timer = 0
    set udg_handle = 0
    set udg_ShockRifle_Max = 0
    set udg_a = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ShockRifle_Data[i] = 0
        set i = i + 1
    endloop

    set udg_ShockRifle_Orbs = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ShockRifle_Group[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_x = 0
    set udg_x2 = 0
    set udg_y = 0
    set udg_y2 = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PinkSugarHitCount[i] = 0
        set i = i + 1
    endloop

    set udg_PinkSugarIndex = 0
    set udg_LoopInteger = 0
    set udg_StarIndex = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_StarCount[i] = 0
        set i = i + 1
    endloop

    set udg_integer3 = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_real[i] = 0
        set i = i + 1
    endloop

    set udg_ReviveTimerValue = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Revtime2[i] = CreateTimer()
        set i = i + 1
    endloop

    set udg_integer = 0
    set udg_integer2 = 0
    set udg_Timertest = CreateTimer()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsIndex[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsDamage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsTurn[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsDetect[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsCollide[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsSpeedMax[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsTargPointIndex[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsTargPointCounter[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hsDartPointIndex[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_hstReal[i] = 0
        set i = i + 1
    endloop

    set udg_hstUGroup = CreateGroup()
    set udg_Config_CH_Duration = 0
    set udg_Config_CH_lvlDuration = 0
    set udg_Config_CH_AoE = 0
    set udg_Config_CH_lvlAoE = 0
    set udg_CH_Dex = 0
    set udg_CH_lvl = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CH_AoE[i] = 0
        set i = i + 1
    endloop

    set udg_CH_Group = CreateGroup()
    set udg_CH_Group2 = CreateGroup()
    set udg_Viv_cSpecialEffect = ""
    set udg_Viv_cTwistCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_cDamage[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_cInterval[i] = 0
        set i = i + 1
    endloop

    set udg_Viv_Count = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_Tw[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_L[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_Case[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_Viv_Timer[i] = 0
        set i = i + 1
    endloop

    set udg_WoS_Speed = 0
    set udg_WoS_SoulsAngle = 0
    set udg_WoS_AoE = 0
    set udg_WoS_BaseDamage = 0
    set udg_WoS_DamagePerLevel = 0
    set udg_WoS_RangeMax = 0
    set udg_WoS_RangeMin = 0
    set udg_WoS_Times = 0
    set udg_WoS_Skip = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS_SpellLvl[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS_Off[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS_Angle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS_Loop[i] = 0
        set i = i + 1
    endloop

    set udg_WoS2_Times = 0
    set udg_WoS2_Skip = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS2_Off[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS2_Distance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WoS2_SpellLvl[i] = 0
        set i = i + 1
    endloop

    set udg_TempY = 0
    set udg_TempX = 0
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************

//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_ArcherWarcry1 = CreateSound( "Units\\NightElf\\Archer\\ArcherWarcry1.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_ArcherWarcry1, 1854 )
    call SetSoundChannel( gg_snd_ArcherWarcry1, 0 )
    call SetSoundVolume( gg_snd_ArcherWarcry1, 100 )
    call SetSoundPitch( gg_snd_ArcherWarcry1, 1.0 )
    set gg_snd_BattleNetTick = CreateSound( "Sound\\Interface\\BattleNetTick.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_BattleNetTick, 657 )
    call SetSoundChannel( gg_snd_BattleNetTick, 0 )
    call SetSoundVolume( gg_snd_BattleNetTick, -1 )
    call SetSoundPitch( gg_snd_BattleNetTick, 1.0 )
    set gg_snd_CaptainWarcry1 = CreateSound( "Units\\Human\\TheCaptain\\CaptainWarcry1.wav", false, false, true, 10, 10, "HeroAcksEAX" )
    call SetSoundDuration( gg_snd_CaptainWarcry1, 1986 )
    call SetSoundChannel( gg_snd_CaptainWarcry1, 0 )
    call SetSoundVolume( gg_snd_CaptainWarcry1, 100 )
    call SetSoundPitch( gg_snd_CaptainWarcry1, 1.0 )
    set gg_snd_Comradeship = "Sound\\Music\\mp3Music\\Comradeship.mp3"
    set gg_snd_Credits01 = "Sound\\Music\\mp3Music\\Credits.mp3"
    set gg_snd_DarkAgents = "Sound\\Music\\mp3Music\\DarkAgents.mp3"
    set gg_snd_Doom = "Sound\\Music\\mp3Music\\Doom.mp3"
    set gg_snd_DryadWarcry1 = CreateSound( "Units\\NightElf\\Dryad\\DryadWarcry1.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_DryadWarcry1, 2018 )
    call SetSoundChannel( gg_snd_DryadWarcry1, 0 )
    call SetSoundVolume( gg_snd_DryadWarcry1, 100 )
    call SetSoundPitch( gg_snd_DryadWarcry1, 1.0 )
    set gg_snd_FootmanPissed2 = CreateSound( "Units\\Human\\Footman\\FootmanPissed2.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_FootmanPissed2, 2653 )
    call SetSoundChannel( gg_snd_FootmanPissed2, 0 )
    call SetSoundVolume( gg_snd_FootmanPissed2, 100 )
    call SetSoundPitch( gg_snd_FootmanPissed2, 1.0 )
    set gg_snd_FootmanWarcry1 = CreateSound( "Units\\Human\\Footman\\FootmanWarcry1.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_FootmanWarcry1, 2197 )
    call SetSoundChannel( gg_snd_FootmanWarcry1, 0 )
    call SetSoundVolume( gg_snd_FootmanWarcry1, 100 )
    call SetSoundPitch( gg_snd_FootmanWarcry1, 1.0 )
    set gg_snd_FootmanYesAttack1 = CreateSound( "Units\\Human\\Footman\\FootmanYesAttack1.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_FootmanYesAttack1, 1530 )
    call SetSoundChannel( gg_snd_FootmanYesAttack1, 0 )
    call SetSoundVolume( gg_snd_FootmanYesAttack1, 100 )
    call SetSoundPitch( gg_snd_FootmanYesAttack1, 1.0 )
    set gg_snd_FootmanYesAttack3 = CreateSound( "Units\\Human\\Footman\\FootmanYesAttack3.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_FootmanYesAttack3, 1652 )
    call SetSoundChannel( gg_snd_FootmanYesAttack3, 0 )
    call SetSoundVolume( gg_snd_FootmanYesAttack3, 100 )
    call SetSoundPitch( gg_snd_FootmanYesAttack3, 1.0 )
    set gg_snd_GameFound = CreateSound( "Sound\\Interface\\GameFound.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_GameFound, 7488 )
    call SetSoundChannel( gg_snd_GameFound, 0 )
    call SetSoundVolume( gg_snd_GameFound, 100 )
    call SetSoundPitch( gg_snd_GameFound, 1.1 )
    set gg_snd_GoodJob = CreateSound( "Sound\\Interface\\GoodJob.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_GoodJob, 2954 )
    call SetSoundChannel( gg_snd_GoodJob, 0 )
    call SetSoundVolume( gg_snd_GoodJob, -1 )
    call SetSoundPitch( gg_snd_GoodJob, 1.0 )
    set gg_snd_HorseLoop2 = CreateSound( "Units\\Human\\Knight\\HorseLoop2.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_HorseLoop2, 3227 )
    call SetSoundChannel( gg_snd_HorseLoop2, 6 )
    call SetSoundVolume( gg_snd_HorseLoop2, 50 )
    call SetSoundPitch( gg_snd_HorseLoop2, 1.0 )
    set gg_snd_Human1 = "Sound\\Music\\mp3Music\\Human1.mp3"
    set gg_snd_Human2 = "Sound\\Music\\mp3Music\\Human2.mp3"
    set gg_snd_Human3 = "Sound\\Music\\mp3Music\\Human3.mp3"
    set gg_snd_InGameChatWhat1 = CreateSound( "Sound\\Interface\\InGameChatWhat1.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_InGameChatWhat1, 289 )
    call SetSoundChannel( gg_snd_InGameChatWhat1, 0 )
    call SetSoundVolume( gg_snd_InGameChatWhat1, -1 )
    call SetSoundPitch( gg_snd_InGameChatWhat1, 1.0 )
    set gg_snd_KnightPissed4 = CreateSound( "Units\\Human\\Knight\\KnightPissed4.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_KnightPissed4, 3170 )
    call SetSoundChannel( gg_snd_KnightPissed4, 0 )
    call SetSoundVolume( gg_snd_KnightPissed4, -1 )
    call SetSoundPitch( gg_snd_KnightPissed4, 1.0 )
    set gg_snd_NightElf2 = "Sound\\Music\\mp3Music\\NightElf2.mp3"
    set gg_snd_Orc3 = "Sound\\Music\\mp3Music\\Orc3.mp3"
    set gg_snd_QuestCompleted = CreateSound( "Sound\\Interface\\QuestCompleted.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_QuestCompleted, 5154 )
    call SetSoundChannel( gg_snd_QuestCompleted, 0 )
    call SetSoundVolume( gg_snd_QuestCompleted, -1 )
    call SetSoundPitch( gg_snd_QuestCompleted, 1.1 )
    set gg_snd_QuestLog = CreateSound( "Sound\\Interface\\QuestLog.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_QuestLog, 2275 )
    call SetSoundChannel( gg_snd_QuestLog, 0 )
    call SetSoundVolume( gg_snd_QuestLog, -1 )
    call SetSoundPitch( gg_snd_QuestLog, 1.0 )
    set gg_snd_SorceressPissed2 = CreateSound( "Units\\Human\\Sorceress\\SorceressPissed2.wav", false, false, true, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_SorceressPissed2, 3309 )
    call SetSoundChannel( gg_snd_SorceressPissed2, 0 )
    call SetSoundVolume( gg_snd_SorceressPissed2, 120 )
    call SetSoundPitch( gg_snd_SorceressPissed2, 1.0 )
    set gg_snd_TheHornOfCenarius = CreateSound( "Sound\\Ambient\\DoodadEffects\\TheHornOfCenarius.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_TheHornOfCenarius, 12120 )
    call SetSoundChannel( gg_snd_TheHornOfCenarius, 0 )
    call SetSoundVolume( gg_snd_TheHornOfCenarius, -1 )
    call SetSoundPitch( gg_snd_TheHornOfCenarius, 1.0 )
    set gg_snd_Undead1 = "Sound\\Music\\mp3Music\\Undead1.mp3"
    set gg_snd_UpkeepRing = CreateSound( "Sound\\Interface\\UpkeepRing.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_UpkeepRing, 1578 )
    call SetSoundChannel( gg_snd_UpkeepRing, 0 )
    call SetSoundVolume( gg_snd_UpkeepRing, -1 )
    call SetSoundPitch( gg_snd_UpkeepRing, 1.0 )
    set gg_snd_UtherReturns = CreateSound( "Sound\\Ambient\\DoodadEffects\\UtherReturns.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_UtherReturns, 6710 )
    call SetSoundChannel( gg_snd_UtherReturns, 0 )
    call SetSoundVolume( gg_snd_UtherReturns, 50 )
    call SetSoundPitch( gg_snd_UtherReturns, 1.0 )
    set gg_snd_WarlockAppears = CreateSound( "Sound\\Ambient\\DoodadEffects\\WarlockAppears.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WarlockAppears, 7360 )
    call SetSoundChannel( gg_snd_WarlockAppears, 0 )
    call SetSoundVolume( gg_snd_WarlockAppears, -1 )
    call SetSoundPitch( gg_snd_WarlockAppears, 1.0 )
    set gg_snd_JainaWhat3 = CreateSound( "Units\\Human\\Jaina\\JainaWhat3.wav", false, false, false, 10, 10, "HeroAcksEAX" )
    call SetSoundDuration( gg_snd_JainaWhat3, 1962 )
    call SetSoundChannel( gg_snd_JainaWhat3, 0 )
    call SetSoundVolume( gg_snd_JainaWhat3, -1 )
    call SetSoundPitch( gg_snd_JainaWhat3, 1.0 )
    set gg_snd_sm = CreateSound( "war3mapImported\\sm.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm, 98411 )
    call SetSoundChannel( gg_snd_sm, 0 )
    call SetSoundVolume( gg_snd_sm, 100 )
    call SetSoundPitch( gg_snd_sm, 1.0 )
    set gg_snd_sm2 = CreateSound( "war3mapImported\\sm2.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm2, 94371 )
    call SetSoundChannel( gg_snd_sm2, 0 )
    call SetSoundVolume( gg_snd_sm2, 100 )
    call SetSoundPitch( gg_snd_sm2, 1.0 )
    set gg_snd_sm3 = CreateSound( "war3mapImported\\sm3.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm3, 60158 )
    call SetSoundChannel( gg_snd_sm3, 0 )
    call SetSoundVolume( gg_snd_sm3, 105 )
    call SetSoundPitch( gg_snd_sm3, 1.0 )
    set gg_snd_sm4 = CreateSound( "war3mapImported\\sm4.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm4, 89069 )
    call SetSoundChannel( gg_snd_sm4, 0 )
    call SetSoundVolume( gg_snd_sm4, 100 )
    call SetSoundPitch( gg_snd_sm4, 1.0 )
    set gg_snd_sm5 = CreateSound( "war3mapImported\\sm5.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm5, 125303 )
    call SetSoundChannel( gg_snd_sm5, 0 )
    call SetSoundVolume( gg_snd_sm5, 100 )
    call SetSoundPitch( gg_snd_sm5, 1.0 )
    set gg_snd_sm6 = CreateSound( "war3mapImported\\sm6.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm6, 56560 )
    call SetSoundChannel( gg_snd_sm6, 0 )
    call SetSoundVolume( gg_snd_sm6, 100 )
    call SetSoundPitch( gg_snd_sm6, 1.0 )
    set gg_snd_sm7 = CreateSound( "war3mapImported\\sm7.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm7, 65839 )
    call SetSoundChannel( gg_snd_sm7, 0 )
    call SetSoundVolume( gg_snd_sm7, 100 )
    call SetSoundPitch( gg_snd_sm7, 1.0 )
    set gg_snd_sm8 = CreateSound( "war3mapImported\\sm8.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm8, 85723 )
    call SetSoundChannel( gg_snd_sm8, 0 )
    call SetSoundVolume( gg_snd_sm8, 100 )
    call SetSoundPitch( gg_snd_sm8, 1.0 )
    set gg_snd_sm9 = CreateSound( "war3mapImported\\sm9.wav", true, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_sm9, 83830 )
    call SetSoundChannel( gg_snd_sm9, 0 )
    call SetSoundVolume( gg_snd_sm9, 100 )
    call SetSoundPitch( gg_snd_sm9, 1.0 )
    set gg_snd_Success = CreateSound( "war3mapImported\\Success.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_Success, 2052 )
    call SetSoundChannel( gg_snd_Success, 0 )
    call SetSoundVolume( gg_snd_Success, 127 )
    call SetSoundPitch( gg_snd_Success, 1.0 )
    set gg_snd_Crying = CreateSound( "war3mapImported\\Crying.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_Crying, 1260 )
    call SetSoundChannel( gg_snd_Crying, 0 )
    call SetSoundVolume( gg_snd_Crying, 127 )
    call SetSoundPitch( gg_snd_Crying, 1.0 )
    set gg_snd_Punish_You = CreateSound( "war3mapImported\\Punish You.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_Punish_You, 2376 )
    call SetSoundChannel( gg_snd_Punish_You, 0 )
    call SetSoundVolume( gg_snd_Punish_You, 127 )
    call SetSoundPitch( gg_snd_Punish_You, 1.0 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'e000', 5408.0, 6176.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h000', 5760.0, 6144.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 4032.0, 9472.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 4160.0, 9472.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 4288.0, 9472.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 4416.0, 9472.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 4032.0, 9344.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 4160.0, 9344.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 4288.0, 9344.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 4096.0, 9216.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 4224.0, 9216.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 4352.0, 9216.0, 270.000, 'ofrt' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 4160.0, 6848.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -1216.0, 192.0, 270.000, 'h00N' )
endfunction

//===========================================================================
function CreateUnitsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00B', 3803.7, 6592.7, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3799.7, 6480.7, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3802.8, 6363.8, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4019.0, 6403.7, 84.344, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4137.5, 6409.5, 90.759, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4260.3, 6407.1, 97.359, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n005', 4158.2, 7229.0, 129.220, 'n005' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 3714.4, 6475.0, 90.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 3715.4, 6593.2, 90.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 8408.3, 7172.5, 48.869, 'e00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h000', 6208.0, 1408.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'e000', 6240.0, 1760.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 6848.0, 3008.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -832.0, 192.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 4160.0, 8704.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 4288.0, 8704.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 4416.0, 8704.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 4544.0, 8704.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 4160.0, 8576.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 4288.0, 8576.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 4416.0, 8576.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 4224.0, 8448.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 4352.0, 8448.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 4480.0, 8448.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n002', 6392.2, 3143.5, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 6392.4, 3036.2, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 6395.9, 2941.0, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 6370.7, 3370.4, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 6459.5, 3361.6, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 6546.2, 3359.5, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 6507.5, 3469.1, 0.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 6384.0, 3475.9, 0.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 8710.1, 7181.9, 122.490, 'e00E' )
    set u = BlzCreateUnitWithSkin( p, 'n005', 7231.4, 2997.7, 48.410, 'n005' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer2 takes nothing returns nothing
    local player p = Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h000', 1408.0, 960.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'e000', 1760.0, 992.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 3008.0, 320.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -832.0, -576.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 4800.0, 9536.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 4928.0, 9536.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 5056.0, 9536.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 5184.0, 9536.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 4800.0, 9408.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 4928.0, 9408.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 5056.0, 9408.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 4864.0, 9280.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 4992.0, 9280.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 5120.0, 9280.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer2 takes nothing returns nothing
    local player p = Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n002', 2880.4, 782.9, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 2998.9, 788.7, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 3105.8, 794.3, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3382.0, 719.5, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3378.0, 607.5, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3381.1, 490.6, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 3485.7, 732.7, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 3494.1, 624.8, 270.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 9003.0, 7181.9, 9.550, 'e00E' )
    set u = BlzCreateUnitWithSkin( p, 'n005', 2999.3, -67.7, 319.964, 'n005' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h000', 1024.0, 1408.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'e000', 992.0, 1760.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 320.0, 3008.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -1216.0, -576.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 4992.0, 8704.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 5120.0, 8704.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 5248.0, 8704.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 5376.0, 8704.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 4992.0, 8576.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 5120.0, 8576.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 5248.0, 8576.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 5056.0, 8448.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 5184.0, 8448.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 5312.0, 8448.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00B', 567.2, 3359.1, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 750.9, 2969.3, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 747.4, 3072.5, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n005', -62.9, 3001.1, 132.302, 'n005' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 674.9, 3345.5, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 763.6, 3336.7, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 678.3, 3456.7, 180.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 793.7, 3455.5, 180.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 751.7, 2869.9, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 9319.4, 7178.8, 197.800, 'e00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'e000', 1760.0, 6176.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h000', 1408.0, 6144.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 3008.0, 6848.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -832.0, -192.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 5120.0, 8320.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 5248.0, 8320.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 5376.0, 8320.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 5504.0, 8320.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 5120.0, 8192.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 5248.0, 8192.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 5376.0, 8192.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 5184.0, 8064.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 5312.0, 8064.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 5440.0, 8064.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n005', 2996.9, 7223.0, 51.360, 'n005' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 2911.2, 6417.2, 90.759, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 3018.0, 6414.8, 97.359, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 3137.4, 6413.7, 87.553, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3370.8, 6592.2, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3366.8, 6480.2, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3369.9, 6363.3, 90.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 3462.9, 6476.8, 90.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 3463.9, 6595.0, 90.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 9293.9, 6748.5, 8.150, 'e00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer5 takes nothing returns nothing
    local player p = Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'e000', 6176.0, 5408.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h000', 6208.0, 5760.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 6848.0, 4160.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -448.0, -192.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 6016.0, 8320.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 6144.0, 8320.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 6272.0, 8320.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 6400.0, 8320.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 6016.0, 8192.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 6144.0, 8192.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 6272.0, 8192.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 6080.0, 8064.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 6208.0, 8064.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 6336.0, 8064.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer5 takes nothing returns nothing
    local player p = Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00B', 6369.2, 3819.1, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 6457.9, 3810.4, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 6544.6, 3808.3, 0.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 6410.6, 4264.7, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 6410.8, 4157.4, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 6414.2, 4062.2, 0.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 6386.3, 3685.3, 0.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 6509.8, 3678.6, 0.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'n005', 7222.4, 4150.3, 0.000, 'n005' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 8999.4, 6753.4, 329.070, 'e00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h000', 5760.0, 960.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'e000', 5408.0, 928.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 4160.0, 320.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -448.0, -576.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 5888.0, 8704.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 6016.0, 8704.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 6144.0, 8704.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 6272.0, 8704.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 5888.0, 8576.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 6016.0, 8576.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 6144.0, 8576.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 5952.0, 8448.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 6080.0, 8448.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 6208.0, 8448.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00B', 3798.9, 716.4, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3794.9, 604.4, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 3798.0, 487.5, 270.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4063.5, 796.9, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 3680.2, 730.8, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 3697.6, 619.4, 270.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4170.4, 794.5, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 4281.7, 793.4, 270.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 8706.0, 6758.3, 184.780, 'e00E' )
    set u = BlzCreateUnitWithSkin( p, 'n005', 4160.6, -61.6, 221.333, 'n005' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'e000', 992.0, 5408.0, 270.000, 'e000' )
    set u = BlzCreateUnitWithSkin( p, 'h000', 1024.0, 5760.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'h00L', 320.0, 4160.0, 270.000, 'h00L' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -1216.0, -192.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 5568.0, 9600.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'hkee', 5696.0, 9600.0, 270.000, 'hkee' )
    set u = BlzCreateUnitWithSkin( p, 'hcas', 5824.0, 9600.0, 270.000, 'hcas' )
    set u = BlzCreateUnitWithSkin( p, 'edob', 5952.0, 9600.0, 270.000, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'etol', 5568.0, 9472.0, 270.000, 'etol' )
    set u = BlzCreateUnitWithSkin( p, 'etoa', 5696.0, 9472.0, 270.000, 'etoa' )
    set u = BlzCreateUnitWithSkin( p, 'etoe', 5824.0, 9472.0, 270.000, 'etoe' )
    set u = BlzCreateUnitWithSkin( p, 'ogre', 5632.0, 9344.0, 270.000, 'ogre' )
    set u = BlzCreateUnitWithSkin( p, 'ostr', 5760.0, 9344.0, 270.000, 'ostr' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 5888.0, 9344.0, 270.000, 'ofrt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00B', 547.0, 3794.9, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'n005', -71.8, 4153.7, 226.221, 'n005' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 757.4, 4268.7, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 765.5, 4161.4, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', 761.0, 4066.2, 180.000, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 653.0, 3807.9, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00B', 741.7, 3799.2, 180.000, 'h00B' )
    set u = BlzCreateUnitWithSkin( p, 'h00H', 684.2, 3679.8, 180.000, 'h00H' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 791.6, 3678.7, 180.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'e00E', 8420.0, 6765.6, 77.970, 'e00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h00V', 1216.0, 4160.0, 270.000, 'h00V' )
    set gg_unit_n001_0028 = BlzCreateUnitWithSkin( p, 'n001', 3584.0, 3584.0, 270.000, 'n001' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 5952.0, 3008.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 4160.0, 1216.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 3008.0, 1216.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00R', -1664.0, -2304.0, 270.000, 'h00R' )
    set u = BlzCreateUnitWithSkin( p, 'h011', 3840.0, 3840.0, 270.000, 'h011' )
    set u = BlzCreateUnitWithSkin( p, 'h00R', -1920.0, 9728.0, 270.000, 'h00R' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 3840.0, 3328.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00R', 10048.0, -2112.0, 270.000, 'h00R' )
    set u = BlzCreateUnitWithSkin( p, 'h00S', 11328.0, 3648.0, 270.000, 'h00S' )
    set u = BlzCreateUnitWithSkin( p, 'h00S', 3584.0, -3328.0, 270.000, 'h00S' )
    set u = BlzCreateUnitWithSkin( p, 'h00R', 10048.0, 9856.0, 270.000, 'h00R' )
    set u = BlzCreateUnitWithSkin( p, 'h00S', 3584.0, 11008.0, 270.000, 'h00S' )
    set u = BlzCreateUnitWithSkin( p, 'h00S', -3008.0, 3584.0, 270.000, 'h00S' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 1216.0, 3008.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 5952.0, 4160.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 4160.0, 5952.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00V', 3008.0, 5952.0, 270.000, 'h00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00N', -448.0, 192.0, 270.000, 'h00N' )
    set u = BlzCreateUnitWithSkin( p, 'h00K', 3328.0, 3328.0, 270.000, 'h00K' )
    set u = BlzCreateUnitWithSkin( p, 'h011', 3328.0, 3840.0, 270.000, 'h011' )
endfunction

//===========================================================================
function CreateUnitsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n003', 2802.8, 4675.5, 142.486, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n00I', 3054.9, 3577.6, 161.840, 'n00I' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3967.6, 4686.8, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3215.0, 4677.7, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3969.4, 2489.4, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3200.5, 2490.7, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4674.2, 3964.2, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4685.3, 3192.4, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2488.6, 3969.5, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2486.9, 3205.0, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3086.3, 4683.9, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2949.6, 4683.6, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4090.1, 4694.0, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4216.7, 4696.4, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4673.6, 4085.9, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4670.2, 4210.9, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4681.8, 3064.5, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4687.2, 2937.1, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4096.9, 2496.5, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4222.2, 2484.7, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 3069.5, 2496.9, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2940.2, 2496.9, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2486.2, 3078.6, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2485.4, 2942.8, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2488.6, 4093.8, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2495.2, 4224.6, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'h00J', 8839.8, 6917.8, 90.000, 'h00J' )
    set u = BlzCreateUnitWithSkin( p, 'h019', 3870.4, 3594.0, 360.000, 'h019' )
    set u = BlzCreateUnitWithSkin( p, 'h019', 3596.3, 3323.8, 277.360, 'h019' )
    set u = BlzCreateUnitWithSkin( p, 'h019', 3332.6, 3596.7, 170.490, 'h019' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', 3587.2, 5760.7, 93.407, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', 5765.9, 3584.0, 351.727, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', 3589.1, 1536.9, 271.355, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', 1647.3, 3562.4, 172.620, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'h013', 1728.3, 5438.1, 0.000, 'h013' )
    set u = BlzCreateUnitWithSkin( p, 'h013', 5457.6, 5454.7, 0.000, 'h013' )
    set u = BlzCreateUnitWithSkin( p, 'h013', 5442.7, 1727.2, 0.000, 'h013' )
    set u = BlzCreateUnitWithSkin( p, 'h013', 1729.8, 1725.2, 0.000, 'h013' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2480.4, 4342.0, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n01B', 3203.5, 3966.8, 92.318, 'n01B' )
    set u = BlzCreateUnitWithSkin( p, 'n01B', 3976.0, 3971.7, 357.811, 'n01B' )
    set u = BlzCreateUnitWithSkin( p, 'n01B', 3971.1, 3217.8, 271.112, 'n01B' )
    set u = BlzCreateUnitWithSkin( p, 'n01B', 3179.3, 3202.8, 175.786, 'n01B' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2487.0, 4597.1, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2480.4, 4466.3, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2506.6, 2859.2, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2505.1, 2597.0, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2505.9, 2732.8, 180.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2841.7, 2504.3, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2710.6, 2510.5, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2581.4, 2510.5, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4608.6, 2479.5, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4477.5, 2485.7, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4348.3, 2485.7, 280.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4683.8, 2819.1, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4680.3, 2691.2, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4685.6, 2563.9, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4659.8, 4596.9, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4656.3, 4469.0, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4661.7, 4341.6, 0.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4308.0, 4689.4, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4430.5, 4696.6, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 4557.1, 4699.1, 90.000, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'h019', 3568.5, 3839.7, 93.470, 'h019' )
    set u = BlzCreateUnitWithSkin( p, 'n011', 3466.0, 3409.0, 244.640, 'n011' )
    set u = BlzCreateUnitWithSkin( p, 'n012', 3751.8, 3729.8, 1.428, 'n012' )
    set u = BlzCreateUnitWithSkin( p, 'n00X', 3423.5, 3734.3, 262.109, 'n00X' )
    set u = BlzCreateUnitWithSkin( p, 'n00X', 3760.2, 3425.0, 245.343, 'n00X' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2694.7, 4674.2, 118.766, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n003', 2576.2, 4666.0, 60.855, 'n003' )
    set u = BlzCreateUnitWithSkin( p, 'n00I', 3583.9, 4105.2, 68.850, 'n00I' )
    set u = BlzCreateUnitWithSkin( p, 'n00I', 3578.2, 3067.5, 302.080, 'n00I' )
    set u = BlzCreateUnitWithSkin( p, 'h01A', 3578.1, 2451.1, 283.080, 'h01A' )
    set u = BlzCreateUnitWithSkin( p, 'h01A', 3582.1, 4728.6, 66.550, 'h01A' )
    set u = BlzCreateUnitWithSkin( p, 'h01A', 4734.1, 3581.5, 332.560, 'h01A' )
    set u = BlzCreateUnitWithSkin( p, 'h01A', 2437.9, 3577.7, 182.220, 'h01A' )
    set u = BlzCreateUnitWithSkin( p, 'n00I', 4105.1, 3581.6, 26.621, 'n00I' )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n000', 1024.0, 1024.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 6144.0, 1024.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 6144.0, 6144.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 1024.0, 6144.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 10880.0, -2816.0, 270.000, 'ofrt' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', 10880.0, 10368.0, 270.000, 'ofrt' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', -2432.0, -2816.0, 270.000, 'ofrt' )
    set gg_unit_ncp2_0117 = BlzCreateUnitWithSkin( p, 'ncp2', 8192.0, 7744.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0118 = BlzCreateUnitWithSkin( p, 'ncp2', 8832.0, 7744.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0119 = BlzCreateUnitWithSkin( p, 'ncp2', 9472.0, 7744.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0120 = BlzCreateUnitWithSkin( p, 'ncp2', 9472.0, 6208.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0121 = BlzCreateUnitWithSkin( p, 'ncp2', 8832.0, 6208.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0122 = BlzCreateUnitWithSkin( p, 'ncp2', 8192.0, 6208.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0123 = BlzCreateUnitWithSkin( p, 'ncp2', 9920.0, 7296.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0124 = BlzCreateUnitWithSkin( p, 'ncp2', 7744.0, 7296.0, 270.000, 'ncp2' )
    set u = BlzCreateUnitWithSkin( p, 'ofrt', -2432.0, 10368.0, 270.000, 'ofrt' )
    set gg_unit_ncp2_0157 = BlzCreateUnitWithSkin( p, 'ncp2', 9920.0, 6656.0, 270.000, 'ncp2' )
    set gg_unit_ncp2_0205 = BlzCreateUnitWithSkin( p, 'ncp2', 7744.0, 6656.0, 270.000, 'ncp2' )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_H007_0125 = BlzCreateUnitWithSkin( p, 'H007', 8180.9, 7970.0, 275.418, 'H007' )
    call SetUnitColor( gg_unit_H007_0125, ConvertPlayerColor(7) )
    set gg_unit_H002_0126 = BlzCreateUnitWithSkin( p, 'H002', 8834.8, 7973.9, 271.551, 'H002' )
    call SetUnitColor( gg_unit_H002_0126, ConvertPlayerColor(1) )
    set gg_unit_H009_0127 = BlzCreateUnitWithSkin( p, 'H009', 7527.2, 7295.6, 0.000, 'H009' )
    call SetUnitColor( gg_unit_H009_0127, ConvertPlayerColor(12) )
    set gg_unit_H00A_0128 = BlzCreateUnitWithSkin( p, 'H00A', 10155.8, 7316.9, 180.000, 'H00A' )
    call SetUnitColor( gg_unit_H00A_0128, ConvertPlayerColor(10) )
    set gg_unit_H001_0129 = BlzCreateUnitWithSkin( p, 'H001', 9467.7, 5967.4, 90.000, 'H001' )
    call SetUnitColor( gg_unit_H001_0129, ConvertPlayerColor(11) )
    set gg_unit_H008_0130 = BlzCreateUnitWithSkin( p, 'H008', 8821.9, 5976.9, 90.000, 'H008' )
    call SetUnitColor( gg_unit_H008_0130, ConvertPlayerColor(2) )
    set gg_unit_H003_0131 = BlzCreateUnitWithSkin( p, 'H003', 9470.5, 7978.0, 270.000, 'H003' )
    call SetUnitColor( gg_unit_H003_0131, ConvertPlayerColor(0) )
    set gg_unit_H006_0132 = BlzCreateUnitWithSkin( p, 'H006', 8176.7, 5964.0, 90.000, 'H006' )
    call SetUnitColor( gg_unit_H006_0132, ConvertPlayerColor(0) )
    set gg_unit_H005_0158 = BlzCreateUnitWithSkin( p, 'H005', 10148.4, 6660.3, 178.250, 'H005' )
    call SetUnitColor( gg_unit_H005_0158, ConvertPlayerColor(5) )
    set u = BlzCreateUnitWithSkin( p, 'n00E', 5507.0, 5385.6, 50.920, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00F', 5381.6, 5504.8, 47.900, 'n00F' )
    set u = BlzCreateUnitWithSkin( p, 'n00F', 1782.2, 1660.5, 245.630, 'n00F' )
    set u = BlzCreateUnitWithSkin( p, 'n00F', 1654.9, 5384.3, 155.210, 'n00F' )
    set gg_unit_H004_0206 = BlzCreateUnitWithSkin( p, 'H004', 7514.8, 6655.6, 0.000, 'H004' )
    call SetUnitColor( gg_unit_H004_0206, ConvertPlayerColor(3) )
    set u = BlzCreateUnitWithSkin( p, 'n00W', 5515.7, 5512.9, 45.850, 'n00W' )
    set u = BlzCreateUnitWithSkin( p, 'n00W', 5499.8, 1660.2, 314.070, 'n00W' )
    set u = BlzCreateUnitWithSkin( p, 'n00W', 1662.6, 1658.3, 224.675, 'n00W' )
    set u = BlzCreateUnitWithSkin( p, 'n00W', 1664.7, 5508.1, 135.300, 'n00W' )
    set u = BlzCreateUnitWithSkin( p, 'nvul', -1180.5, 5875.9, 54.999, 'nvul' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', 1787.4, 5506.5, 124.650, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', 1662.0, 1775.4, 220.660, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00F', 5504.5, 1779.7, 300.180, 'n00F' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', 5385.1, 1670.0, 303.730, 'n00E' )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
    call CreateBuildingsForPlayer1(  )
    call CreateBuildingsForPlayer2(  )
    call CreateBuildingsForPlayer3(  )
    call CreateBuildingsForPlayer4(  )
    call CreateBuildingsForPlayer5(  )
    call CreateBuildingsForPlayer6(  )
    call CreateBuildingsForPlayer7(  )
    call CreateBuildingsForPlayer9(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer0(  )
    call CreateUnitsForPlayer1(  )
    call CreateUnitsForPlayer2(  )
    call CreateUnitsForPlayer3(  )
    call CreateUnitsForPlayer4(  )
    call CreateUnitsForPlayer5(  )
    call CreateUnitsForPlayer6(  )
    call CreateUnitsForPlayer7(  )
    call CreateUnitsForPlayer9(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_TR_MonsterSpawn_1 = Rect( 9408.0, 10176.0, 10176.0, 10976.0 )
    set gg_rct_TR_MonsterSpawn_2 = Rect( 10560.0, 9280.0, 11200.0, 9920.0 )
    set gg_rct_BR_MonsterSpawn_1 = Rect( 10432.0, -2240.0, 11200.0, -1440.0 )
    set gg_rct_BR_MonsterSpawn_2 = Rect( 9408.0, -3264.0, 10048.0, -2624.0 )
    set gg_rct_B_Move = Rect( 3424.0, -3104.0, 3744.0, -2784.0 )
    set gg_rct_BL_MonsterSpawn_2 = Rect( -1728.0, -3264.0, -1088.0, -2624.0 )
    set gg_rct_BL_MonsterSpawn_1 = Rect( -2880.0, -2272.0, -2048.0, -1472.0 )
    set gg_rct_TL_MonsterSpawn_2 = Rect( -1856.0, 10176.0, -1056.0, 10976.0 )
    set gg_rct_TL_MonsterSpawn = Rect( -2880.0, 9152.0, -2208.0, 9824.0 )
    set gg_rct_Region_012 = Rect( 3424.0, 3776.0, 3744.0, 3904.0 )
    set gg_rct_Region_013 = Rect( 3936.0, 6336.0, 4384.0, 6464.0 )
    set gg_rct_Region_013_Copy = Rect( 2784.0, 6336.0, 3232.0, 6464.0 )
    set gg_rct_Region_015 = Rect( 6304.0, 4000.0, 6432.0, 4384.0 )
    set gg_rct_Region_016 = Rect( 3520.0, 6208.0, 3648.0, 6336.0 )
    set gg_rct_Region_017 = Rect( 6208.0, 3520.0, 6336.0, 3648.0 )
    set gg_rct_Region_018 = Rect( 3520.0, 832.0, 3648.0, 960.0 )
    set gg_rct_Region_019 = Rect( 704.0, 3520.0, 832.0, 3648.0 )
    set gg_rct_Tuxedo_Kamen = Rect( 7616.0, 7168.0, 7872.0, 7424.0 )
    set gg_rct_Sailor_Moon = Rect( 8064.0, 7616.0, 8320.0, 7872.0 )
    set gg_rct_Sailor_Mercury = Rect( 8704.0, 7616.0, 8960.0, 7872.0 )
    set gg_rct_Sailor_Mars = Rect( 9344.0, 7616.0, 9600.0, 7872.0 )
    set gg_rct_Sailor_Jupiter = Rect( 9792.0, 7168.0, 10048.0, 7424.0 )
    set gg_rct_Sailor_Uranus = Rect( 9344.0, 6080.0, 9600.0, 6336.0 )
    set gg_rct_Sailor_Neptune = Rect( 8704.0, 6080.0, 8960.0, 6336.0 )
    set gg_rct_Sailor_Pluto = Rect( 8064.0, 6080.0, 8320.0, 6336.0 )
    set gg_rct_Region_028 = Rect( 8768.0, 6912.0, 8864.0, 7008.0 )
    set gg_rct_Shire = Rect( -1984.0, -2080.0, 10240.0, 10272.0 )
    set gg_rct_Sailor_Venus = Rect( 9792.0, 6528.0, 10048.0, 6784.0 )
    set gg_rct_R_Move = Rect( 10720.0, 3424.0, 11040.0, 3744.0 )
    set gg_rct_T_Move = Rect( 3392.0, 10432.0, 3744.0, 10784.0 )
    set gg_rct_L_Move = Rect( -2720.0, 3424.0, -2400.0, 3744.0 )
    set gg_rct_Region_012_Copy = Rect( 3424.0, 3200.0, 3744.0, 3328.0 )
    set gg_rct_Region_012_Copy_Copy = Rect( 3840.0, 3392.0, 3968.0, 3744.0 )
    set gg_rct_Region_012_Copy_Copy_2 = Rect( 3200.0, 3424.0, 3328.0, 3744.0 )
    set gg_rct_Sailor_Saturn = Rect( 7616.0, 6528.0, 7872.0, 6784.0 )
    set gg_rct_Region_047 = Rect( 3840.0, 7680.0, 6560.0, 10400.0 )
    set gg_rct_Region_048 = Rect( -864.0, -192.0, -832.0, -160.0 )
    set gg_rct_ShireCorner4 = Rect( 8128.0, -2304.0, 11296.0, -544.0 )
    set gg_rct_Shire_Corner_3 = Rect( -1984.0, -3584.0, -128.0, 1728.0 )
    set gg_rct_ShireCorner1 = Rect( -3168.0, 8224.0, -192.0, 10048.0 )
    set gg_rct_ShireCorner2 = Rect( 7968.0, 8192.0, 10208.0, 10976.0 )
    set gg_rct_B2 = Rect( 7552.0, 3264.0, 7648.0, 3872.0 )
    set gg_rct_B3 = Rect( 3264.0, -480.0, 3872.0, -384.0 )
    set gg_rct_B4 = Rect( -480.0, 3296.0, -384.0, 3872.0 )
    set gg_rct_B1 = Rect( 3296.0, 7520.0, 3872.0, 7648.0 )
    set gg_rct_Castle = Rect( -448.0, -512.0, 7424.0, 7616.0 )
    set gg_rct_Region_040 = Rect( 10240.0, 7552.0, 11680.0, 8064.0 )
    set gg_rct_Region_040_Copy = Rect( -3168.0, -544.0, -1728.0, -32.0 )
    set gg_rct_Region_045 = Rect( 3296.0, 6336.0, 3840.0, 6720.0 )
    set gg_rct_Region_049 = Rect( 6272.0, 3296.0, 6656.0, 3872.0 )
    set gg_rct_Region_050 = Rect( 3264.0, 416.0, 3872.0, 864.0 )
    set gg_rct_Region_051 = Rect( 480.0, 3296.0, 896.0, 3872.0 )
    set gg_rct_Region_015_Copy = Rect( 6336.0, 2848.0, 6464.0, 3232.0 )
    set gg_rct_Region_053 = Rect( 2816.0, 736.0, 3168.0, 864.0 )
    set gg_rct_Region_054 = Rect( 3936.0, 736.0, 4352.0, 832.0 )
    set gg_rct_Region_055 = Rect( 704.0, 2816.0, 800.0, 3136.0 )
    set gg_rct_Region_056 = Rect( 704.0, 3936.0, 800.0, 4352.0 )
    set gg_rct_TT = Rect( 3392.0, 9920.0, 3744.0, 10304.0 )
    set gg_rct_RR = Rect( 10080.0, 3392.0, 10432.0, 3776.0 )
    set gg_rct_BB = Rect( 3392.0, -2528.0, 3744.0, -2144.0 )
    set gg_rct_LL = Rect( -2208.0, 3424.0, -1856.0, 3808.0 )
    set gg_rct_The_Sailor_Scouts = Rect( 7328.0, 5728.0, 10368.0, 8224.0 )
    set gg_rct_Attack_Move_1 = Rect( -1056.0, 10144.0, 2912.0, 12288.0 )
    set gg_rct_Attack_Move_2 = Rect( 4256.0, 10144.0, 9408.0, 12288.0 )
    set gg_rct_Attack_Move_3 = Rect( 4256.0, -4096.0, 9408.0, -2368.0 )
    set gg_rct_Attack_Move_4 = Rect( -1088.0, -4096.0, 2912.0, -2368.0 )
    set gg_rct_Attack_Move_5 = Rect( -4096.0, -1472.0, -2112.0, 2944.0 )
    set gg_rct_Attack_Move_6 = Rect( -4096.0, 4160.0, -2112.0, 9152.0 )
    set gg_rct_Attack_Move_7 = Rect( 10240.0, 4224.0, 12288.0, 9280.0 )
    set gg_rct_Attack_Move_8 = Rect( 10272.0, -1440.0, 12288.0, 2912.0 )
    set gg_rct_Attack_Move_9 = Rect( 2304.0, 7744.0, 4736.0, 9920.0 )
    set gg_rct_Attack_Move_10 = Rect( 2112.0, -2144.0, 5280.0, -672.0 )
    set gg_rct_Attack_Move_11 = Rect( 7776.0, 2240.0, 10080.0, 5088.0 )
    set gg_rct_Attack_Move_12 = Rect( -1856.0, 2240.0, -576.0, 5440.0 )
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_Camera_001 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_ROTATION, 219.2, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_ANGLE_OF_ATTACK, 327.4, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_TARGET_DISTANCE, 1713.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_001, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_001, 3477.7, 6770.4, 0.0 )

    set gg_cam_Camera_002 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_ROTATION, 219.2, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_ANGLE_OF_ATTACK, 327.4, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_TARGET_DISTANCE, 1713.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_002, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_002, 6393.1, 2765.1, 0.0 )

    set gg_cam_Camera_003 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_ROTATION, 60.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_ANGLE_OF_ATTACK, 314.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_003, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_003, -819.5, -204.9, 0.0 )

    set gg_cam_Camera_004 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_ROTATION, 60.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_ANGLE_OF_ATTACK, 314.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_TARGET_DISTANCE, 1500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_004, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_004, 1392.4, 5703.1, 0.0 )

    set gg_cam_Camera_005 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ROTATION, 60.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ANGLE_OF_ATTACK, 314.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_TARGET_DISTANCE, 1500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_005, 8763.0, 6838.8, 0.0 )

    set gg_cam_Camera_006 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ROTATION, 57.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ANGLE_OF_ATTACK, 310.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_TARGET_DISTANCE, 1815.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_FARZ, 8052.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_006, 3944.9, 2658.1, 0.0 )

    set gg_cam_Camera_007 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ROTATION, 57.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ANGLE_OF_ATTACK, 310.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_TARGET_DISTANCE, 1815.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_FARZ, 8052.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_007, 2331.2, 3645.0, 0.0 )

    set gg_cam_Camera_008 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_ROTATION, 23.7, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_ANGLE_OF_ATTACK, 314.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_TARGET_DISTANCE, 1500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_FARZ, 8052.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_008, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_008, 3566.2, 6499.3, 0.0 )

    set gg_cam_Camera_010 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ROTATION, 45.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ANGLE_OF_ATTACK, 313.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_TARGET_DISTANCE, 1996.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_010, 8085.9, 6791.3, 0.0 )

    set gg_cam_Camera_011 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ROTATION, 45.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ANGLE_OF_ATTACK, 313.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_TARGET_DISTANCE, 1996.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_NEARZ, 100.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_011, 8873.5, 6955.0, 0.0 )

endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Initialization
//
// Default map setup for my custom spell maps.
// Default Variables:
// TemporaryAngle
// TemporaryTime
// TemporaryReal
// TemporaryPoint1 (Leak related)
// TemporaryPoint2 (Leak related)
// TemporaryGroup1 (Leak related)
// TemporaryGroup2 (Leak related)
//===========================================================================
function Trig_Initialization_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_PowerChainHash = GetLastCreatedHashtableBJ()
endfunction

//===========================================================================
function InitTrig_Initialization takes nothing returns nothing
    set gg_trg_Initialization = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Initialization, 0.00 )
    call TriggerAddAction( gg_trg_Initialization, function Trig_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Run Abilities
//===========================================================================
function Trig_Run_Abilities_Actions takes nothing returns nothing
    call TriggerExecute( gg_trg_Abilities )
    // -
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

//===========================================================================
function InitTrig_Run_Abilities takes nothing returns nothing
    set gg_trg_Run_Abilities = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Run_Abilities, function Trig_Run_Abilities_Actions )
endfunction

//===========================================================================
// Trigger: Commands
//===========================================================================
function Trig_Commands_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_421" )
endfunction

//===========================================================================
function InitTrig_Commands takes nothing returns nothing
    set gg_trg_Commands = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(0), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(1), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(2), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(3), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(4), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(5), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(6), "-commands", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Commands, Player(7), "-commands", true )
    call TriggerAddAction( gg_trg_Commands, function Trig_Commands_Actions )
endfunction

//===========================================================================
// Trigger: Text
//===========================================================================
function Trig_Text_Actions takes nothing returns nothing
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Moon)
    call CreateTextTagLocBJ( "TRIGSTR_715", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Mercury)
    call CreateTextTagLocBJ( "TRIGSTR_716", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Mars)
    call CreateTextTagLocBJ( "TRIGSTR_717", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Jupiter)
    call CreateTextTagLocBJ( "TRIGSTR_718", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Venus)
    call CreateTextTagLocBJ( "TRIGSTR_719", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Uranus)
    call CreateTextTagLocBJ( "TRIGSTR_720", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Neptune)
    call CreateTextTagLocBJ( "TRIGSTR_721", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Pluto)
    call CreateTextTagLocBJ( "TRIGSTR_722", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Sailor_Saturn)
    call CreateTextTagLocBJ( "TRIGSTR_723", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    set udg_Temp1 = GetRectCenter(gg_rct_Tuxedo_Kamen)
    call CreateTextTagLocBJ( "TRIGSTR_724", udg_Temp1, 0, 10.00, 100, 100, 100, 0 )
    call RemoveLocation(udg_Temp1)
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

//===========================================================================
function InitTrig_Text takes nothing returns nothing
    set gg_trg_Text = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Text, 0.01 )
    call TriggerAddAction( gg_trg_Text, function Trig_Text_Actions )
endfunction

//===========================================================================
// Trigger: Set Test
//===========================================================================
function Trig_Set_Test_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Game Difficulty to Easy" ) )
    call PlaySoundBJ( gg_snd_InGameChatWhat1 )
    call SetPlayerHandicapBJ( Player(10), 80.00 )
endfunction

//===========================================================================
function InitTrig_Set_Test takes nothing returns nothing
    set gg_trg_Set_Test = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Test, Player(0), "-set testtesttesttest", true )
    call TriggerAddAction( gg_trg_Set_Test, function Trig_Set_Test_Actions )
endfunction

//===========================================================================
// Trigger: Set Easy
//===========================================================================
function Trig_Set_Easy_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Game Difficulty to Easy" ) )
    call PlaySoundBJ( gg_snd_InGameChatWhat1 )
    call SetPlayerHandicapBJ( Player(10), 100.00 )
endfunction

//===========================================================================
function InitTrig_Set_Easy takes nothing returns nothing
    set gg_trg_Set_Easy = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(0), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(1), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(2), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(3), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(4), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(5), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(6), "-set easy", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Easy, Player(7), "-set easy", true )
    call TriggerAddAction( gg_trg_Set_Easy, function Trig_Set_Easy_Actions )
endfunction

//===========================================================================
// Trigger: Set Medium
//===========================================================================
function Trig_Set_Medium_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Game Difficulty to Medium" ) )
    call PlaySoundBJ( gg_snd_InGameChatWhat1 )
    call SetPlayerHandicapBJ( Player(10), 125.00 )
endfunction

//===========================================================================
function InitTrig_Set_Medium takes nothing returns nothing
    set gg_trg_Set_Medium = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(0), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(1), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(2), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(3), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(4), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(5), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(6), "-set med", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Medium, Player(7), "-set med", true )
    call TriggerAddAction( gg_trg_Set_Medium, function Trig_Set_Medium_Actions )
endfunction

//===========================================================================
// Trigger: Set Hard
//===========================================================================
function Trig_Set_Hard_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Game Difficulty to Hard" ) )
    call PlaySoundBJ( gg_snd_InGameChatWhat1 )
    call SetPlayerHandicapBJ( Player(10), 150.00 )
endfunction

//===========================================================================
function InitTrig_Set_Hard takes nothing returns nothing
    set gg_trg_Set_Hard = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(0), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(1), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(2), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(3), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(4), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(5), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(6), "-set hard", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_Hard, Player(7), "-set hard", true )
    call TriggerAddAction( gg_trg_Set_Hard, function Trig_Set_Hard_Actions )
endfunction

//===========================================================================
// Trigger: Set TTest
//===========================================================================
function Trig_Set_TTest_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Round Timer to 0 seconds" ) )
    set udg_LevelTimer = 0
    call PlaySoundBJ( gg_snd_BattleNetTick )
endfunction

//===========================================================================
function InitTrig_Set_TTest takes nothing returns nothing
    set gg_trg_Set_TTest = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_TTest, Player(0), "-timer testtesttesttest", true )
    call TriggerAddAction( gg_trg_Set_TTest, function Trig_Set_TTest_Actions )
endfunction

//===========================================================================
// Trigger: Set 10
//===========================================================================
function Trig_Set_10_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Round Timer to 10 seconds" ) )
    set udg_LevelTimer = 10
    call PlaySoundBJ( gg_snd_BattleNetTick )
endfunction

//===========================================================================
function InitTrig_Set_10 takes nothing returns nothing
    set gg_trg_Set_10 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(0), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(1), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(2), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(3), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(4), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(5), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(6), "-timer 10", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_10, Player(7), "-timer 10", true )
    call TriggerAddAction( gg_trg_Set_10, function Trig_Set_10_Actions )
endfunction

//===========================================================================
// Trigger: Set 20
//===========================================================================
function Trig_Set_20_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Round Timer to 20 seconds" ) )
    set udg_LevelTimer = 20
    call PlaySoundBJ( gg_snd_BattleNetTick )
endfunction

//===========================================================================
function InitTrig_Set_20 takes nothing returns nothing
    set gg_trg_Set_20 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(0), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(1), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(2), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(3), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(4), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(5), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(6), "-timer 20", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_20, Player(7), "-timer 20", true )
    call TriggerAddAction( gg_trg_Set_20, function Trig_Set_20_Actions )
endfunction

//===========================================================================
// Trigger: Set 30
//===========================================================================
function Trig_Set_30_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Round Timer to 30 seconds" ) )
    set udg_LevelTimer = 30
    call PlaySoundBJ( gg_snd_BattleNetTick )
endfunction

//===========================================================================
function InitTrig_Set_30 takes nothing returns nothing
    set gg_trg_Set_30 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(0), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(1), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(3), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(2), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(4), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(5), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(7), "-timer 30", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_30, Player(6), "-timer 30", true )
    call TriggerAddAction( gg_trg_Set_30, function Trig_Set_30_Actions )
endfunction

//===========================================================================
// Trigger: Set 40
//===========================================================================
function Trig_Set_40_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetTriggerPlayer()) + " has set the Round Timer to 40 seconds" ) )
    set udg_LevelTimer = 40
    call PlaySoundBJ( gg_snd_BattleNetTick )
endfunction

//===========================================================================
function InitTrig_Set_40 takes nothing returns nothing
    set gg_trg_Set_40 = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(0), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(1), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(2), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(3), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(4), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(5), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(6), "-timer 40", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Set_40, Player(7), "-timer 40", true )
    call TriggerAddAction( gg_trg_Set_40, function Trig_Set_40_Actions )
endfunction

//===========================================================================
// Trigger: Boss
//===========================================================================
function Trig_Boss_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_418" )
endfunction

//===========================================================================
function InitTrig_Boss takes nothing returns nothing
    set gg_trg_Boss = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(0), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(1), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(2), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(3), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(4), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(5), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(6), "-boss", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Boss, Player(7), "-boss", true )
    call TriggerAddAction( gg_trg_Boss, function Trig_Boss_Actions )
endfunction

//===========================================================================
// Trigger: Air
//===========================================================================
function Trig_Air_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_419" )
endfunction

//===========================================================================
function InitTrig_Air takes nothing returns nothing
    set gg_trg_Air = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(1), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(0), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(2), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(3), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(4), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(5), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(6), "-air", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Air, Player(7), "-air", true )
    call TriggerAddAction( gg_trg_Air, function Trig_Air_Actions )
endfunction

//===========================================================================
// Trigger: Siege
//===========================================================================
function Trig_Siege_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_528" )
endfunction

//===========================================================================
function InitTrig_Siege takes nothing returns nothing
    set gg_trg_Siege = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(0), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(1), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(2), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(3), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(4), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(5), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(6), "-siege", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Siege, Player(7), "-siege", true )
    call TriggerAddAction( gg_trg_Siege, function Trig_Siege_Actions )
endfunction

//===========================================================================
// Trigger: Invis
//===========================================================================
function Trig_Invis_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_420" )
endfunction

//===========================================================================
function InitTrig_Invis takes nothing returns nothing
    set gg_trg_Invis = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(1), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(0), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(2), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(3), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(4), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(5), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(6), "-invis", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Invis, Player(7), "-invis", true )
    call TriggerAddAction( gg_trg_Invis, function Trig_Invis_Actions )
endfunction

//===========================================================================
// Trigger: Hint1
//===========================================================================
function Trig_Hint1_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_377" )
endfunction

//===========================================================================
function InitTrig_Hint1 takes nothing returns nothing
    set gg_trg_Hint1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint1, function Trig_Hint1_Actions )
endfunction

//===========================================================================
// Trigger: Hint2
//===========================================================================
function Trig_Hint2_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_378" )
endfunction

//===========================================================================
function InitTrig_Hint2 takes nothing returns nothing
    set gg_trg_Hint2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint2, function Trig_Hint2_Actions )
endfunction

//===========================================================================
// Trigger: Hint3
//===========================================================================
function Trig_Hint3_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_379" )
endfunction

//===========================================================================
function InitTrig_Hint3 takes nothing returns nothing
    set gg_trg_Hint3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint3, function Trig_Hint3_Actions )
endfunction

//===========================================================================
// Trigger: Hint4
//===========================================================================
function Trig_Hint4_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_380" )
endfunction

//===========================================================================
function InitTrig_Hint4 takes nothing returns nothing
    set gg_trg_Hint4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint4, function Trig_Hint4_Actions )
endfunction

//===========================================================================
// Trigger: Hint5
//===========================================================================
function Trig_Hint5_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_381" )
endfunction

//===========================================================================
function InitTrig_Hint5 takes nothing returns nothing
    set gg_trg_Hint5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint5, function Trig_Hint5_Actions )
endfunction

//===========================================================================
// Trigger: Hint6
//===========================================================================
function Trig_Hint6_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_382" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_Region_048), 3.00 )
endfunction

//===========================================================================
function InitTrig_Hint6 takes nothing returns nothing
    set gg_trg_Hint6 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint6, function Trig_Hint6_Actions )
endfunction

//===========================================================================
// Trigger: Hint7
//===========================================================================
function Trig_Hint7_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_383" )
endfunction

//===========================================================================
function InitTrig_Hint7 takes nothing returns nothing
    set gg_trg_Hint7 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint7, function Trig_Hint7_Actions )
endfunction

//===========================================================================
// Trigger: Hint8
//===========================================================================
function Trig_Hint8_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_384" )
endfunction

//===========================================================================
function InitTrig_Hint8 takes nothing returns nothing
    set gg_trg_Hint8 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint8, function Trig_Hint8_Actions )
endfunction

//===========================================================================
// Trigger: Hint9
//===========================================================================
function Trig_Hint9_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_385" )
endfunction

//===========================================================================
function InitTrig_Hint9 takes nothing returns nothing
    set gg_trg_Hint9 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint9, function Trig_Hint9_Actions )
endfunction

//===========================================================================
// Trigger: Hint10
//===========================================================================
function Trig_Hint10_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_386" )
endfunction

//===========================================================================
function InitTrig_Hint10 takes nothing returns nothing
    set gg_trg_Hint10 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint10, function Trig_Hint10_Actions )
endfunction

//===========================================================================
// Trigger: Hint11
//===========================================================================
function Trig_Hint11_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_387" )
endfunction

//===========================================================================
function InitTrig_Hint11 takes nothing returns nothing
    set gg_trg_Hint11 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint11, function Trig_Hint11_Actions )
endfunction

//===========================================================================
// Trigger: Hint12
//===========================================================================
function Trig_Hint12_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_388" )
endfunction

//===========================================================================
function InitTrig_Hint12 takes nothing returns nothing
    set gg_trg_Hint12 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hint12, function Trig_Hint12_Actions )
endfunction

//===========================================================================
// Trigger: SetHints
//===========================================================================
function Trig_SetHints_Actions takes nothing returns nothing
    set udg_Hints[1] = gg_trg_Hint1
    set udg_Hints[2] = gg_trg_Hint2
    set udg_Hints[3] = gg_trg_Hint3
    set udg_Hints[4] = gg_trg_Hint4
    set udg_Hints[5] = gg_trg_Hint5
    set udg_Hints[6] = gg_trg_Hint6
    set udg_Hints[7] = gg_trg_Hint7
    set udg_Hints[8] = gg_trg_Hint8
    set udg_Hints[9] = gg_trg_Hint9
    set udg_Hints[10] = gg_trg_Hint10
    set udg_Hints[11] = gg_trg_Hint11
    set udg_Hints[12] = gg_trg_Hint12
endfunction

//===========================================================================
function InitTrig_SetHints takes nothing returns nothing
    set gg_trg_SetHints = CreateTrigger(  )
    call TriggerAddAction( gg_trg_SetHints, function Trig_SetHints_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet1
//===========================================================================
function Trig_MonsterSet1_Actions takes nothing returns nothing
    set udg_Level = "1"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'n008'
    set udg_MonsterTypeText = "Blue Goblin"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet2
    call StopMusicBJ( true )
    call PlaySoundBJ( gg_snd_Punish_You )
    call TriggerSleepAction( 3.00 )
    call PlaySoundBJ( gg_snd_sm6 )
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet1 takes nothing returns nothing
    set gg_trg_MonsterSet1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet1, function Trig_MonsterSet1_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet2
//===========================================================================
function Trig_MonsterSet2_Actions takes nothing returns nothing
    set udg_Level = "2"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'n009'
    set udg_MonsterTypeText = "Skeleton Archer"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet3
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet2 takes nothing returns nothing
    set gg_trg_MonsterSet2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet2, function Trig_MonsterSet2_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet3
//===========================================================================
function Trig_MonsterSet3_Actions takes nothing returns nothing
    set udg_Level = "3"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'n00B'
    set udg_MonsterTypeText = "Green Goblin"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet4
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet3 takes nothing returns nothing
    set gg_trg_MonsterSet3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet3, function Trig_MonsterSet3_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet4
//===========================================================================
function Trig_MonsterSet4_Actions takes nothing returns nothing
    set udg_Level = "4"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'o001'
    set udg_MonsterTypeText = "Goblin Spear Thrower"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet5
    call StopSoundBJ( gg_snd_sm6, false )
    call PlaySoundBJ( gg_snd_sm7 )
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet4 takes nothing returns nothing
    set gg_trg_MonsterSet4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet4, function Trig_MonsterSet4_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet5
//===========================================================================
function Trig_MonsterSet5_Actions takes nothing returns nothing
    set udg_Level = "5"
    set udg_MonsterAmount = 18
    set udg_MonsterAmountText = "18"
    set udg_MonsterType = 'n00D'
    set udg_MonsterTypeText = "Skeleton Soldier"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet6
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet5 takes nothing returns nothing
    set gg_trg_MonsterSet5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet5, function Trig_MonsterSet5_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet6
//===========================================================================
function Trig_MonsterSet6_Actions takes nothing returns nothing
    set udg_Level = "6"
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'H026'
    set udg_MonsterTypeText = "Boss - Jadeite"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet7
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm7, false )
    call PlaySoundBJ( gg_snd_sm4 )
endfunction

//===========================================================================
function InitTrig_MonsterSet6 takes nothing returns nothing
    set gg_trg_MonsterSet6 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet6, function Trig_MonsterSet6_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet7
//===========================================================================
function Trig_MonsterSet7_Actions takes nothing returns nothing
    set udg_Level = "7"
    set udg_MonsterAmount = 15
    set udg_MonsterAmountText = "15"
    set udg_MonsterType = 'o000'
    set udg_MonsterTypeText = "Spy from the Dark Kingdom"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet8
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm4, false )
    call PlaySoundBJ( gg_snd_sm6 )
endfunction

//===========================================================================
function InitTrig_MonsterSet7 takes nothing returns nothing
    set gg_trg_MonsterSet7 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet7, function Trig_MonsterSet7_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet8
//===========================================================================
function Trig_MonsterSet8_Actions takes nothing returns nothing
    set udg_Level = "8"
    set udg_MonsterAmount = 13
    set udg_MonsterAmountText = "13"
    set udg_MonsterType = 'n01A'
    set udg_MonsterTypeText = "Air - Batrider"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet9
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_427" )
endfunction

//===========================================================================
function InitTrig_MonsterSet8 takes nothing returns nothing
    set gg_trg_MonsterSet8 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet8, function Trig_MonsterSet8_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet9
//===========================================================================
function Trig_MonsterSet9_Actions takes nothing returns nothing
    set udg_Level = "9"
    set udg_MonsterAmount = 15
    set udg_MonsterAmountText = "15"
    set udg_MonsterType = 'o002'
    set udg_MonsterTypeText = "Youma Warrior"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet10
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm6, false )
    call PlaySoundBJ( gg_snd_sm9 )
endfunction

//===========================================================================
function InitTrig_MonsterSet9 takes nothing returns nothing
    set gg_trg_MonsterSet9 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet9, function Trig_MonsterSet9_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet10
//===========================================================================
function Trig_MonsterSet10_Actions takes nothing returns nothing
    set udg_Level = "10"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'o003'
    set udg_MonsterTypeText = "Youma Rider"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet11
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_389" )
endfunction

//===========================================================================
function InitTrig_MonsterSet10 takes nothing returns nothing
    set gg_trg_MonsterSet10 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet10, function Trig_MonsterSet10_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet11
//===========================================================================
function Trig_MonsterSet11_Actions takes nothing returns nothing
    set udg_Level = "11"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'n00H'
    set udg_MonsterTypeText = "Youma Berserker"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet12
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm9, false )
    call PlaySoundBJ( gg_snd_sm3 )
endfunction

//===========================================================================
function InitTrig_MonsterSet11 takes nothing returns nothing
    set gg_trg_MonsterSet11 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet11, function Trig_MonsterSet11_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet12
//===========================================================================
function Trig_MonsterSet12_Actions takes nothing returns nothing
    set udg_Level = "12"
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'H027'
    set udg_MonsterTypeText = "Boss - Kunzite"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet13
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm3, false )
    call PlaySoundBJ( gg_snd_sm8 )
endfunction

//===========================================================================
function InitTrig_MonsterSet12 takes nothing returns nothing
    set gg_trg_MonsterSet12 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet12, function Trig_MonsterSet12_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet13
//===========================================================================
function Trig_MonsterSet13_Actions takes nothing returns nothing
    set udg_Level = "13"
    set udg_MonsterAmount = 10
    set udg_MonsterAmountText = "10"
    set udg_MonsterType = 'o005'
    set udg_MonsterTypeText = "Catapult"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet14
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm8, false )
    call PlaySoundBJ( gg_snd_sm )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_1639" )
endfunction

//===========================================================================
function InitTrig_MonsterSet13 takes nothing returns nothing
    set gg_trg_MonsterSet13 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet13, function Trig_MonsterSet13_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet14
//===========================================================================
function Trig_MonsterSet14_Actions takes nothing returns nothing
    set udg_Level = "14"
    set udg_MonsterAmount = 14
    set udg_MonsterAmountText = "14"
    set udg_MonsterType = 'n00J'
    set udg_MonsterTypeText = "Youma Sprinter"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet15
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet14 takes nothing returns nothing
    set gg_trg_MonsterSet14 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet14, function Trig_MonsterSet14_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet15
//===========================================================================
function Trig_MonsterSet15_Actions takes nothing returns nothing
    set udg_Level = "15"
    set udg_MonsterAmount = 15
    set udg_MonsterAmountText = "15"
    set udg_MonsterType = 'n00L'
    set udg_MonsterTypeText = "Youma Mage"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet16
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet15 takes nothing returns nothing
    set gg_trg_MonsterSet15 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet15, function Trig_MonsterSet15_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet16
//===========================================================================
function Trig_MonsterSet16_Actions takes nothing returns nothing
    set udg_Level = "16"
    set udg_MonsterAmount = 8
    set udg_MonsterAmountText = "8"
    set udg_MonsterType = 'o004'
    set udg_MonsterTypeText = "Air - Windrider"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet17
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_1583" )
    call StopSoundBJ( gg_snd_sm, false )
    call PlaySoundBJ( gg_snd_sm7 )
endfunction

//===========================================================================
function InitTrig_MonsterSet16 takes nothing returns nothing
    set gg_trg_MonsterSet16 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet16, function Trig_MonsterSet16_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet17
//===========================================================================
function Trig_MonsterSet17_Actions takes nothing returns nothing
    set udg_Level = "17"
    set udg_MonsterAmount = 18
    set udg_MonsterAmountText = "18"
    set udg_MonsterType = 'n00N'
    set udg_MonsterTypeText = "Youma Elite"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet18
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet17 takes nothing returns nothing
    set gg_trg_MonsterSet17 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet17, function Trig_MonsterSet17_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet18
//===========================================================================
function Trig_MonsterSet18_Actions takes nothing returns nothing
    set udg_Level = "18"
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'H028'
    set udg_MonsterTypeText = "Boss - Queen Beryl"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet19
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm7, false )
    call PlaySoundBJ( gg_snd_sm5 )
endfunction

//===========================================================================
function InitTrig_MonsterSet18 takes nothing returns nothing
    set gg_trg_MonsterSet18 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet18, function Trig_MonsterSet18_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet19
//===========================================================================
function Trig_MonsterSet19_Actions takes nothing returns nothing
    set udg_Level = "19"
    set udg_MonsterAmount = 14
    set udg_MonsterAmountText = "14"
    set udg_MonsterType = 'n00P'
    set udg_MonsterTypeText = "Lion"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet20
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm5, false )
    call PlaySoundBJ( gg_snd_sm9 )
endfunction

//===========================================================================
function InitTrig_MonsterSet19 takes nothing returns nothing
    set gg_trg_MonsterSet19 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet19, function Trig_MonsterSet19_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet20
//===========================================================================
function Trig_MonsterSet20_Actions takes nothing returns nothing
    set udg_Level = "20"
    set udg_MonsterAmount = 11
    set udg_MonsterAmountText = "11"
    set udg_MonsterType = 'n00Q'
    set udg_MonsterTypeText = "Cardian Axe Thrower"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet21
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm9, false )
    call PlaySoundBJ( gg_snd_sm )
endfunction

//===========================================================================
function InitTrig_MonsterSet20 takes nothing returns nothing
    set gg_trg_MonsterSet20 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet20, function Trig_MonsterSet20_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet21
//===========================================================================
function Trig_MonsterSet21_Actions takes nothing returns nothing
    set udg_Level = "21"
    set udg_MonsterAmount = 6
    set udg_MonsterAmountText = "6"
    set udg_MonsterType = 'o006'
    set udg_MonsterTypeText = "Advanced Catapult"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet22
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_532" )
endfunction

//===========================================================================
function InitTrig_MonsterSet21 takes nothing returns nothing
    set gg_trg_MonsterSet21 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet21, function Trig_MonsterSet21_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet22
//===========================================================================
function Trig_MonsterSet22_Actions takes nothing returns nothing
    set udg_Level = "22"
    set udg_MonsterAmount = 11
    set udg_MonsterAmountText = "11"
    set udg_MonsterType = 'n00S'
    set udg_MonsterTypeText = "Savage Spider"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet23
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm, false )
    call PlaySoundBJ( gg_snd_sm6 )
endfunction

//===========================================================================
function InitTrig_MonsterSet22 takes nothing returns nothing
    set gg_trg_MonsterSet22 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet22, function Trig_MonsterSet22_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet23
//===========================================================================
function Trig_MonsterSet23_Actions takes nothing returns nothing
    set udg_Level = "23"
    set udg_MonsterAmount = 12
    set udg_MonsterAmountText = "12"
    set udg_MonsterType = 'n00T'
    set udg_MonsterTypeText = "Cardian Elite"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet24
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet23 takes nothing returns nothing
    set gg_trg_MonsterSet23 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet23, function Trig_MonsterSet23_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet24
//===========================================================================
function Trig_MonsterSet24_Actions takes nothing returns nothing
    set udg_Level = "24"
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'E00J'
    set udg_MonsterTypeText = "Boss - Ail"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet25
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm6, false )
    call PlaySoundBJ( gg_snd_sm4 )
endfunction

//===========================================================================
function InitTrig_MonsterSet24 takes nothing returns nothing
    set gg_trg_MonsterSet24 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet24, function Trig_MonsterSet24_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet25
//===========================================================================
function Trig_MonsterSet25_Actions takes nothing returns nothing
    set udg_Level = "25"
    set udg_MonsterAmount = 12
    set udg_MonsterAmountText = "12"
    set udg_MonsterType = 'u000'
    set udg_MonsterTypeText = "Crypt Beast"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet26
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm4, false )
    call PlaySoundBJ( gg_snd_sm2 )
endfunction

//===========================================================================
function InitTrig_MonsterSet25 takes nothing returns nothing
    set gg_trg_MonsterSet25 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet25, function Trig_MonsterSet25_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet26
//===========================================================================
function Trig_MonsterSet26_Actions takes nothing returns nothing
    set udg_Level = "26"
    set udg_MonsterAmount = 8
    set udg_MonsterAmountText = "8"
    set udg_MonsterType = 'u009'
    set udg_MonsterTypeText = "Air - Frost Wyrm"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet27
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_496" )
endfunction

//===========================================================================
function InitTrig_MonsterSet26 takes nothing returns nothing
    set gg_trg_MonsterSet26 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet26, function Trig_MonsterSet26_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet27
//===========================================================================
function Trig_MonsterSet27_Actions takes nothing returns nothing
    set udg_Level = "27"
    set udg_MonsterAmount = 12
    set udg_MonsterAmountText = "12"
    set udg_MonsterType = 'n016'
    set udg_MonsterTypeText = "Droid Warrior"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet28
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet27 takes nothing returns nothing
    set gg_trg_MonsterSet27 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet27, function Trig_MonsterSet27_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet28
//===========================================================================
function Trig_MonsterSet28_Actions takes nothing returns nothing
    set udg_Level = "28"
    set udg_MonsterAmount = 11
    set udg_MonsterAmountText = "11"
    set udg_MonsterType = 'u001'
    set udg_MonsterTypeText = "Droid Shadow Mage"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet29
    call TriggerExecute( gg_trg_MonsterTimer )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_411" )
endfunction

//===========================================================================
function InitTrig_MonsterSet28 takes nothing returns nothing
    set gg_trg_MonsterSet28 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet28, function Trig_MonsterSet28_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet29
//===========================================================================
function Trig_MonsterSet29_Actions takes nothing returns nothing
    set udg_Level = "29"
    set udg_MonsterAmount = 12
    set udg_MonsterAmountText = "12"
    set udg_MonsterType = 'u002'
    set udg_MonsterTypeText = "Abomination"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet30
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm2, false )
    call PlaySoundBJ( gg_snd_sm5 )
endfunction

//===========================================================================
function InitTrig_MonsterSet29 takes nothing returns nothing
    set gg_trg_MonsterSet29 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet29, function Trig_MonsterSet29_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet30
//===========================================================================
function Trig_MonsterSet30_Actions takes nothing returns nothing
    set udg_Level = "30"
    set udg_MonsterAmount = 11
    set udg_MonsterAmountText = "11"
    set udg_MonsterType = 'u003'
    set udg_MonsterTypeText = "Black Moon Wizard"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet31
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet30 takes nothing returns nothing
    set gg_trg_MonsterSet30 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet30, function Trig_MonsterSet30_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet31
//===========================================================================
function Trig_MonsterSet31_Actions takes nothing returns nothing
    set udg_Level = "31"
    set udg_MonsterAmount = 13
    set udg_MonsterAmountText = "13"
    set udg_MonsterType = 'n015'
    set udg_MonsterTypeText = "Droid Shredder"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet32
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet31 takes nothing returns nothing
    set gg_trg_MonsterSet31 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet31, function Trig_MonsterSet31_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet32
//===========================================================================
function Trig_MonsterSet32_Actions takes nothing returns nothing
    set udg_Level = "32"
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'U004'
    set udg_MonsterTypeText = "Boss - Rubeus"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet33
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm5, false )
    call PlaySoundBJ( gg_snd_sm7 )
endfunction

//===========================================================================
function InitTrig_MonsterSet32 takes nothing returns nothing
    set gg_trg_MonsterSet32 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet32, function Trig_MonsterSet32_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet33
//===========================================================================
function Trig_MonsterSet33_Actions takes nothing returns nothing
    set udg_Level = "33"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'u005'
    set udg_MonsterTypeText = "Droid Elite"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet34
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm7, false )
    call PlaySoundBJ( gg_snd_sm4 )
endfunction

//===========================================================================
function InitTrig_MonsterSet33 takes nothing returns nothing
    set gg_trg_MonsterSet33 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet33, function Trig_MonsterSet33_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet34
//===========================================================================
function Trig_MonsterSet34_Actions takes nothing returns nothing
    set udg_Level = "34"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'u006'
    set udg_MonsterTypeText = "Elite Warrior of the Black Moon"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet35
    call TriggerExecute( gg_trg_MonsterTimer )
endfunction

//===========================================================================
function InitTrig_MonsterSet34 takes nothing returns nothing
    set gg_trg_MonsterSet34 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet34, function Trig_MonsterSet34_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet35
//===========================================================================
function Trig_MonsterSet35_Actions takes nothing returns nothing
    set udg_Level = "35"
    set udg_MonsterAmount = 20
    set udg_MonsterAmountText = "20"
    set udg_MonsterType = 'u007'
    set udg_MonsterTypeText = "Knight of the Black Moon"
    set udg_MonsterLevelTrig = gg_trg_MonsterSet36
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm4, false )
    call PlaySoundBJ( gg_snd_sm3 )
endfunction

//===========================================================================
function InitTrig_MonsterSet35 takes nothing returns nothing
    set gg_trg_MonsterSet35 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet35, function Trig_MonsterSet35_Actions )
endfunction

//===========================================================================
// Trigger: MonsterSet36
//===========================================================================
function Trig_MonsterSet36_Actions takes nothing returns nothing
    set udg_Level = "36"
    set udg_YAYWait = 40
    set udg_MonsterAmount = 1
    set udg_MonsterAmountText = "1"
    set udg_MonsterType = 'U00A'
    set udg_MonsterTypeText = "Boss - Wiseman"
    set udg_MonsterLevelTrig = gg_trg_Ending
    call TriggerExecute( gg_trg_MonsterTimer )
    call StopSoundBJ( gg_snd_sm3, false )
    call PlaySoundBJ( gg_snd_sm5 )
endfunction

//===========================================================================
function InitTrig_MonsterSet36 takes nothing returns nothing
    set gg_trg_MonsterSet36 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterSet36, function Trig_MonsterSet36_Actions )
endfunction

//===========================================================================
// Trigger: Ending
//===========================================================================
function Trig_Ending_Func006002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_001, GetEnumPlayer(), 0 )
endfunction

function Trig_Ending_Func007002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_002, GetEnumPlayer(), 40.00 )
endfunction

function Trig_Ending_Func020002 takes nothing returns nothing
    call ResetToGameCameraForPlayer( GetEnumPlayer(), 3.00 )
endfunction

function Trig_Ending_Actions takes nothing returns nothing
    call StopSoundBJ( gg_snd_sm5, false )
    call PlaySoundBJ( gg_snd_Success )
    call CinematicModeBJ( true, GetPlayersAll() )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUTIN, 5.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.35 )
    call ForForce( GetPlayersAll(), function Trig_Ending_Func006002 )
    call ForForce( GetPlayersAll(), function Trig_Ending_Func007002 )
    call TriggerSleepAction( 4.00 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_390" )
    call TriggerSleepAction( 8.00 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_391" )
    call TriggerSleepAction( 8.00 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_392" )
    call TriggerSleepAction( 8.00 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_393" )
    call TriggerSleepAction( 8.00 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_394" )
    call TriggerSleepAction( 4.00 )
    call CinematicModeBJ( false, GetPlayersAll() )
    call ForForce( GetPlayersAll(), function Trig_Ending_Func020002 )
endfunction

//===========================================================================
function InitTrig_Ending takes nothing returns nothing
    set gg_trg_Ending = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Ending, function Trig_Ending_Actions )
endfunction

//===========================================================================
// Trigger: MonsterTLBug
//===========================================================================
function Trig_MonsterTLBug_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterTLBug_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_T_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterTLBug takes nothing returns nothing
    set gg_trg_MonsterTLBug = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterTLBug, gg_rct_TL_MonsterSpawn_2 )
    call TriggerAddCondition( gg_trg_MonsterTLBug, Condition( function Trig_MonsterTLBug_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterTLBug, function Trig_MonsterTLBug_Actions )
endfunction

//===========================================================================
// Trigger: MonsterTLBug2
//===========================================================================
function Trig_MonsterTLBug2_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterTLBug2_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_L_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterTLBug2 takes nothing returns nothing
    set gg_trg_MonsterTLBug2 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterTLBug2, gg_rct_TL_MonsterSpawn )
    call TriggerAddCondition( gg_trg_MonsterTLBug2, Condition( function Trig_MonsterTLBug2_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterTLBug2, function Trig_MonsterTLBug2_Actions )
endfunction

//===========================================================================
// Trigger: MonsterTRBug
//===========================================================================
function Trig_MonsterTRBug_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterTRBug_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_R_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterTRBug takes nothing returns nothing
    set gg_trg_MonsterTRBug = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterTRBug, gg_rct_TR_MonsterSpawn_2 )
    call TriggerAddCondition( gg_trg_MonsterTRBug, Condition( function Trig_MonsterTRBug_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterTRBug, function Trig_MonsterTRBug_Actions )
endfunction

//===========================================================================
// Trigger: MonsterTRBug Copy
//===========================================================================
function Trig_MonsterTRBug_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterTRBug_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_T_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterTRBug_Copy takes nothing returns nothing
    set gg_trg_MonsterTRBug_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterTRBug_Copy, gg_rct_TR_MonsterSpawn_1 )
    call TriggerAddCondition( gg_trg_MonsterTRBug_Copy, Condition( function Trig_MonsterTRBug_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterTRBug_Copy, function Trig_MonsterTRBug_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBRBug
//===========================================================================
function Trig_MonsterBRBug_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBRBug_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_B_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBRBug takes nothing returns nothing
    set gg_trg_MonsterBRBug = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBRBug, gg_rct_BR_MonsterSpawn_2 )
    call TriggerAddCondition( gg_trg_MonsterBRBug, Condition( function Trig_MonsterBRBug_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBRBug, function Trig_MonsterBRBug_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBRBug Copy
//===========================================================================
function Trig_MonsterBRBug_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBRBug_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_R_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBRBug_Copy takes nothing returns nothing
    set gg_trg_MonsterBRBug_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBRBug_Copy, gg_rct_BR_MonsterSpawn_1 )
    call TriggerAddCondition( gg_trg_MonsterBRBug_Copy, Condition( function Trig_MonsterBRBug_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBRBug_Copy, function Trig_MonsterBRBug_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug
//===========================================================================
function Trig_MonsterBLBug_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_L_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug takes nothing returns nothing
    set gg_trg_MonsterBLBug = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug, gg_rct_BL_MonsterSpawn_1 )
    call TriggerAddCondition( gg_trg_MonsterBLBug, Condition( function Trig_MonsterBLBug_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug, function Trig_MonsterBLBug_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Copy
//===========================================================================
function Trig_MonsterBLBug_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_B_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Copy takes nothing returns nothing
    set gg_trg_MonsterBLBug_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Copy, gg_rct_BL_MonsterSpawn_2 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Copy, Condition( function Trig_MonsterBLBug_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Copy, function Trig_MonsterBLBug_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire
//===========================================================================
function Trig_MonsterBLBug_Shire_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_T_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire, gg_rct_ShireCorner1 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire, Condition( function Trig_MonsterBLBug_Shire_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire, function Trig_MonsterBLBug_Shire_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire Copy
//===========================================================================
function Trig_MonsterBLBug_Shire_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_R_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire_Copy takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire_Copy, gg_rct_ShireCorner2 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire_Copy, Condition( function Trig_MonsterBLBug_Shire_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire_Copy, function Trig_MonsterBLBug_Shire_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire Copy Copy
//===========================================================================
function Trig_MonsterBLBug_Shire_Copy_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Copy_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_R_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire_Copy_Copy takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire_Copy_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire_Copy_Copy, gg_rct_Region_040 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire_Copy_Copy, Condition( function Trig_MonsterBLBug_Shire_Copy_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire_Copy_Copy, function Trig_MonsterBLBug_Shire_Copy_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire Copy 2
//===========================================================================
function Trig_MonsterBLBug_Shire_Copy_2_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Copy_2_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_L_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire_Copy_2 takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire_Copy_2 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire_Copy_2, gg_rct_Shire_Corner_3 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire_Copy_2, Condition( function Trig_MonsterBLBug_Shire_Copy_2_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire_Copy_2, function Trig_MonsterBLBug_Shire_Copy_2_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire Copy 2 Copy
//===========================================================================
function Trig_MonsterBLBug_Shire_Copy_2_Copy_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Copy_2_Copy_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_L_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire_Copy_2_Copy takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire_Copy_2_Copy = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire_Copy_2_Copy, gg_rct_Region_040_Copy )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire_Copy_2_Copy, Condition( function Trig_MonsterBLBug_Shire_Copy_2_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire_Copy_2_Copy, function Trig_MonsterBLBug_Shire_Copy_2_Copy_Actions )
endfunction

//===========================================================================
// Trigger: MonsterBLBug Shire Copy 3
//===========================================================================
function Trig_MonsterBLBug_Shire_Copy_3_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterBLBug_Shire_Copy_3_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_B_Move) )
endfunction

//===========================================================================
function InitTrig_MonsterBLBug_Shire_Copy_3 takes nothing returns nothing
    set gg_trg_MonsterBLBug_Shire_Copy_3 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterBLBug_Shire_Copy_3, gg_rct_ShireCorner4 )
    call TriggerAddCondition( gg_trg_MonsterBLBug_Shire_Copy_3, Condition( function Trig_MonsterBLBug_Shire_Copy_3_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterBLBug_Shire_Copy_3, function Trig_MonsterBLBug_Shire_Copy_3_Actions )
endfunction

//===========================================================================
// Trigger: MonsterYay
//===========================================================================
function Trig_MonsterYay_Func001002001 takes nothing returns boolean
    return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) > 0.00 )
endfunction

function Trig_MonsterYay_Func001002 takes nothing returns nothing
    if ( Trig_MonsterYay_Func001002001() ) then
        call SetUnitAnimation( GetEnumUnit(), "Stand Victory" )
    else
        call DoNothing(  )
    endif
endfunction

function Trig_MonsterYay_Func003002001 takes nothing returns boolean
    return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) > 0.00 )
endfunction

function Trig_MonsterYay_Func003002 takes nothing returns nothing
    if ( Trig_MonsterYay_Func003002001() ) then
        call ResetUnitAnimation( GetEnumUnit() )
    else
        call DoNothing(  )
    endif
endfunction

function Trig_MonsterYay_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_Castle), function Trig_MonsterYay_Func001002 )
    call TriggerSleepAction( I2R(udg_YAYWait) )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_Castle), function Trig_MonsterYay_Func003002 )
endfunction

//===========================================================================
function InitTrig_MonsterYay takes nothing returns nothing
    set gg_trg_MonsterYay = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterYay, function Trig_MonsterYay_Actions )
endfunction

//===========================================================================
// Trigger: MonsterLvlEnd
//===========================================================================
function Trig_MonsterLvlEnd_Func004002 takes nothing returns nothing
    call ExplodeUnitBJ( GetEnumUnit() )
endfunction

function Trig_MonsterLvlEnd_Func009002 takes nothing returns nothing
    call AdjustPlayerStateBJ( udg_BountyRound, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_MonsterLvlEnd_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_MonsterYay )
    set bj_wantDestroyGroup=true
    call ForGroupBJ( GetUnitsInRectOfPlayer(GetPlayableMapRect(), Player(10)), function Trig_MonsterLvlEnd_Func004002 )
    set udg_BountyRound = ( udg_BountyRound + ( udg_BountyRound / 25 ) )
    set udg_Lumber = ( udg_Lumber + ( udg_Lumber / 15 ) )
    call PlaySoundBJ( gg_snd_Success )
    call DisplayTextToForce( GetPlayersAll(), ( ( "You recieved " + ( I2S(udg_BountyRound) + ( " gold for completing " + ( "Level " + ( udg_Level + "!" ) ) ) ) ) + " " ) )
    call ForForce( GetPlayersAll(), function Trig_MonsterLvlEnd_Func009002 )
    call TriggerSleepAction( 1.50 )
    call ConditionalTriggerExecute( udg_MonsterLevelTrig )
    call TriggerSleepAction( 2 )
endfunction

//===========================================================================
function InitTrig_MonsterLvlEnd takes nothing returns nothing
    set gg_trg_MonsterLvlEnd = CreateTrigger(  )
    call TriggerRegisterPlayerStateEvent( gg_trg_MonsterLvlEnd, Player(10), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 1.00 )
    call TriggerAddAction( gg_trg_MonsterLvlEnd, function Trig_MonsterLvlEnd_Actions )
endfunction

//===========================================================================
// Trigger: MonsterMoveSecond T
//===========================================================================
function Trig_MonsterMoveSecond_T_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterMoveSecond_T_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012) )
endfunction

//===========================================================================
function InitTrig_MonsterMoveSecond_T takes nothing returns nothing
    set gg_trg_MonsterMoveSecond_T = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterMoveSecond_T, gg_rct_T_Move )
    call TriggerAddCondition( gg_trg_MonsterMoveSecond_T, Condition( function Trig_MonsterMoveSecond_T_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterMoveSecond_T, function Trig_MonsterMoveSecond_T_Actions )
endfunction

//===========================================================================
// Trigger: MonsterMoveSecond R
//===========================================================================
function Trig_MonsterMoveSecond_R_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterMoveSecond_R_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy_Copy) )
endfunction

//===========================================================================
function InitTrig_MonsterMoveSecond_R takes nothing returns nothing
    set gg_trg_MonsterMoveSecond_R = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterMoveSecond_R, gg_rct_R_Move )
    call TriggerAddCondition( gg_trg_MonsterMoveSecond_R, Condition( function Trig_MonsterMoveSecond_R_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterMoveSecond_R, function Trig_MonsterMoveSecond_R_Actions )
endfunction

//===========================================================================
// Trigger: MonsterMoveSecond B
//===========================================================================
function Trig_MonsterMoveSecond_B_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterMoveSecond_B_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy) )
endfunction

//===========================================================================
function InitTrig_MonsterMoveSecond_B takes nothing returns nothing
    set gg_trg_MonsterMoveSecond_B = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterMoveSecond_B, gg_rct_B_Move )
    call TriggerAddCondition( gg_trg_MonsterMoveSecond_B, Condition( function Trig_MonsterMoveSecond_B_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterMoveSecond_B, function Trig_MonsterMoveSecond_B_Actions )
endfunction

//===========================================================================
// Trigger: MonsterMoveSecond L
//===========================================================================
function Trig_MonsterMoveSecond_L_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_MonsterMoveSecond_L_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy_Copy_2) )
endfunction

//===========================================================================
function InitTrig_MonsterMoveSecond_L takes nothing returns nothing
    set gg_trg_MonsterMoveSecond_L = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_MonsterMoveSecond_L, gg_rct_L_Move )
    call TriggerAddCondition( gg_trg_MonsterMoveSecond_L, Condition( function Trig_MonsterMoveSecond_L_Conditions ) )
    call TriggerAddAction( gg_trg_MonsterMoveSecond_L, function Trig_MonsterMoveSecond_L_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 1
//===========================================================================
function Trig_Attack_Move_Order_1_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_1_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_T_Move) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_1 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_1 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_1, gg_rct_Attack_Move_1 )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_1, gg_rct_Attack_Move_2 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_1, Condition( function Trig_Attack_Move_Order_1_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_1, function Trig_Attack_Move_Order_1_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 2
//===========================================================================
function Trig_Attack_Move_Order_2_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_2_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_B_Move) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_2 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_2 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_2, gg_rct_Attack_Move_3 )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_2, gg_rct_Attack_Move_4 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_2, Condition( function Trig_Attack_Move_Order_2_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_2, function Trig_Attack_Move_Order_2_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 3
//===========================================================================
function Trig_Attack_Move_Order_3_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_3_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_L_Move) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_3 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_3 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_3, gg_rct_Attack_Move_5 )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_3, gg_rct_Attack_Move_6 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_3, Condition( function Trig_Attack_Move_Order_3_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_3, function Trig_Attack_Move_Order_3_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 4
//===========================================================================
function Trig_Attack_Move_Order_4_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_4_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_R_Move) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_4 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_4 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_4, gg_rct_Attack_Move_7 )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_4, gg_rct_Attack_Move_8 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_4, Condition( function Trig_Attack_Move_Order_4_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_4, function Trig_Attack_Move_Order_4_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 5
//===========================================================================
function Trig_Attack_Move_Order_5_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_5_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_5 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_5 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_5, gg_rct_Attack_Move_9 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_5, Condition( function Trig_Attack_Move_Order_5_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_5, function Trig_Attack_Move_Order_5_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 6
//===========================================================================
function Trig_Attack_Move_Order_6_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_6_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_6 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_6 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_6, gg_rct_Attack_Move_10 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_6, Condition( function Trig_Attack_Move_Order_6_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_6, function Trig_Attack_Move_Order_6_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 7
//===========================================================================
function Trig_Attack_Move_Order_7_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_7_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy_Copy) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_7 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_7 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_7, gg_rct_Attack_Move_11 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_7, Condition( function Trig_Attack_Move_Order_7_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_7, function Trig_Attack_Move_Order_7_Actions )
endfunction

//===========================================================================
// Trigger: Attack Move Order 8
//===========================================================================
function Trig_Attack_Move_Order_8_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_Move_Order_8_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnteringUnit(), "attack", GetRectCenter(gg_rct_Region_012_Copy_Copy_2) )
endfunction

//===========================================================================
function InitTrig_Attack_Move_Order_8 takes nothing returns nothing
    set gg_trg_Attack_Move_Order_8 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Attack_Move_Order_8, gg_rct_Attack_Move_12 )
    call TriggerAddCondition( gg_trg_Attack_Move_Order_8, Condition( function Trig_Attack_Move_Order_8_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_Move_Order_8, function Trig_Attack_Move_Order_8_Actions )
endfunction

//===========================================================================
// Trigger: MonsterStart
//===========================================================================
function Trig_MonsterStart_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( "Level " + ( udg_Level + ( " - " + ( ( udg_MonsterTypeText + "," ) + ( " " + ( udg_MonsterAmountText + " each corner" ) ) ) ) ) ) )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_TL_MonsterSpawn), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_TL_MonsterSpawn_2), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_TR_MonsterSpawn_1), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_TR_MonsterSpawn_2), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_BR_MonsterSpawn_1), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_BR_MonsterSpawn_2), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_BL_MonsterSpawn_1), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( udg_MonsterAmount, udg_MonsterType, Player(10), GetRectCenter(gg_rct_BL_MonsterSpawn_2), bj_UNIT_FACING )
endfunction

//===========================================================================
function InitTrig_MonsterStart takes nothing returns nothing
    set gg_trg_MonsterStart = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_MonsterStart, udg_MonsterTimer )
    call TriggerAddAction( gg_trg_MonsterStart, function Trig_MonsterStart_Actions )
endfunction

//===========================================================================
// Trigger: MonsterTimer
//===========================================================================
function Trig_MonsterTimer_Actions takes nothing returns nothing
    call DestroyTimerDialogBJ( GetLastCreatedTimerDialogBJ() )
    call TriggerSleepAction( 0.50 )
    call StartTimerBJ( udg_MonsterTimer, false, I2R(udg_LevelTimer) )
    call CreateTimerDialogBJ( GetLastCreatedTimerBJ(), ( "Level " + ( udg_Level + " in..." ) ) )
    call TriggerSleepAction( ( I2R(udg_LevelTimer) / 2.00 ) )
    call ConditionalTriggerExecute( udg_Hints[GetRandomInt(1, 12)] )
endfunction

//===========================================================================
function InitTrig_MonsterTimer takes nothing returns nothing
    set gg_trg_MonsterTimer = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MonsterTimer, function Trig_MonsterTimer_Actions )
endfunction

//===========================================================================
// Trigger: Deadbodes
//===========================================================================
function Trig_Deadbodes_Conditions takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) <= 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deadbodes_Actions takes nothing returns nothing
    call RemoveUnit( GetTriggerUnit() )
endfunction

//===========================================================================
function InitTrig_Deadbodes takes nothing returns nothing
    set gg_trg_Deadbodes = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Deadbodes, 200.00 )
    call TriggerAddCondition( gg_trg_Deadbodes, Condition( function Trig_Deadbodes_Conditions ) )
    call TriggerAddAction( gg_trg_Deadbodes, function Trig_Deadbodes_Actions )
endfunction

//===========================================================================
// Trigger: Leave Ted Alone
//===========================================================================
function Trig_Leave_Ted_Alone_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetAttacker()) != Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Leave_Ted_Alone_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( GetAttackedUnitBJ(), "attack", GetAttacker() )
    call TriggerSleepAction( 5.00 )
    call IssueImmediateOrderBJ( GetAttackedUnitBJ(), "stop" )
endfunction

//===========================================================================
function InitTrig_Leave_Ted_Alone takes nothing returns nothing
    set gg_trg_Leave_Ted_Alone = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Leave_Ted_Alone, Player(9), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Leave_Ted_Alone, Condition( function Trig_Leave_Ted_Alone_Conditions ) )
    call TriggerAddAction( gg_trg_Leave_Ted_Alone, function Trig_Leave_Ted_Alone_Actions )
endfunction

//===========================================================================
// Trigger: Castle Under Attack
//===========================================================================
function Trig_Castle_Under_Attack_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_395" )
    call TriggerSleepAction( 3.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Castle_Under_Attack takes nothing returns nothing
    set gg_trg_Castle_Under_Attack = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Castle_Under_Attack, gg_unit_n001_0028, EVENT_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg_Castle_Under_Attack, function Trig_Castle_Under_Attack_Actions )
endfunction

//===========================================================================
// Trigger: Castle Under Attack TK
//===========================================================================
function Trig_Castle_Under_Attack_TK_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetAttacker()) != Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Castle_Under_Attack_TK_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetOwningPlayer(GetAttacker())) + " tried to attack the Moon Castle!" ) )
    call IssueImmediateOrderBJ( GetAttacker(), "stop" )
endfunction

//===========================================================================
function InitTrig_Castle_Under_Attack_TK takes nothing returns nothing
    set gg_trg_Castle_Under_Attack_TK = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Castle_Under_Attack_TK, gg_unit_n001_0028, EVENT_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Castle_Under_Attack_TK, Condition( function Trig_Castle_Under_Attack_TK_Conditions ) )
    call TriggerAddAction( gg_trg_Castle_Under_Attack_TK, function Trig_Castle_Under_Attack_TK_Actions )
endfunction

//===========================================================================
// Trigger: Castle Destroyed
//===========================================================================
function Trig_Castle_Destroyed_Func005002 takes nothing returns nothing
    call CustomDefeatBJ( GetEnumPlayer(), "TRIGSTR_1793" )
endfunction

function Trig_Castle_Destroyed_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_396" )
    call TriggerSleepAction( 3.00 )
    call ForForce( GetPlayersAll(), function Trig_Castle_Destroyed_Func005002 )
endfunction

//===========================================================================
function InitTrig_Castle_Destroyed takes nothing returns nothing
    set gg_trg_Castle_Destroyed = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Castle_Destroyed, gg_unit_n001_0028, EVENT_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Castle_Destroyed, function Trig_Castle_Destroyed_Actions )
endfunction

//===========================================================================
// Trigger: Castle Attack
//===========================================================================
function Trig_Castle_Attack_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(10) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Castle_Attack_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( GetEnteringUnit(), "attack", gg_unit_n001_0028 )
endfunction

//===========================================================================
function InitTrig_Castle_Attack takes nothing returns nothing
    set gg_trg_Castle_Attack = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Castle_Attack, gg_rct_Region_012 )
    call TriggerRegisterEnterRectSimple( gg_trg_Castle_Attack, gg_rct_Region_012_Copy_Copy )
    call TriggerRegisterEnterRectSimple( gg_trg_Castle_Attack, gg_rct_Region_012_Copy )
    call TriggerRegisterEnterRectSimple( gg_trg_Castle_Attack, gg_rct_Region_012_Copy_Copy_2 )
    call TriggerAddCondition( gg_trg_Castle_Attack, Condition( function Trig_Castle_Attack_Conditions ) )
    call TriggerAddAction( gg_trg_Castle_Attack, function Trig_Castle_Attack_Actions )
endfunction

//===========================================================================
// Trigger: Dont Leave Castle
//===========================================================================
function Trig_Dont_Leave_Castle_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h02A' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h025' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h024' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h023' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h029' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00C' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00K' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00H' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00I' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01M' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01G' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01K' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01L' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01J' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01F' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01H' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00K' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01Z' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01I' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01N' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h02D' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01T' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01U' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01V' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00F' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01Y' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01O' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h01P' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h00N' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00D' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00B' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h022' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'u008' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00L' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'e00N' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != Player(10) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_PASSIVE) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dont_Leave_Castle_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + ", do not leave the Moon Kingdom!" ) )
    call SetUnitPositionLoc( GetTriggerUnit(), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
endfunction

//===========================================================================
function InitTrig_Dont_Leave_Castle takes nothing returns nothing
    set gg_trg_Dont_Leave_Castle = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Castle, gg_rct_ShireCorner2 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Castle, gg_rct_ShireCorner1 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Castle, gg_rct_ShireCorner4 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Castle, gg_rct_Shire_Corner_3 )
    call TriggerRegisterLeaveRectSimple( gg_trg_Dont_Leave_Castle, gg_rct_Shire )
    call TriggerAddCondition( gg_trg_Dont_Leave_Castle, Condition( function Trig_Dont_Leave_Castle_Conditions ) )
    call TriggerAddAction( gg_trg_Dont_Leave_Castle, function Trig_Dont_Leave_Castle_Actions )
endfunction

//===========================================================================
// Trigger: Dont Leave Builder
//===========================================================================
function Trig_Dont_Leave_Builder_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'h01D' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'h01C' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'h01B' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'h00T' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dont_Leave_Builder_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + ", builders cannot venture out onto the grass!" ) )
    call SetUnitPositionLoc( GetTriggerUnit(), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
endfunction

//===========================================================================
function InitTrig_Dont_Leave_Builder takes nothing returns nothing
    set gg_trg_Dont_Leave_Builder = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Builder, gg_rct_B1 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Builder, gg_rct_B4 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Builder, gg_rct_B3 )
    call TriggerRegisterEnterRectSimple( gg_trg_Dont_Leave_Builder, gg_rct_B2 )
    call TriggerAddCondition( gg_trg_Dont_Leave_Builder, Condition( function Trig_Dont_Leave_Builder_Conditions ) )
    call TriggerAddAction( gg_trg_Dont_Leave_Builder, function Trig_Dont_Leave_Builder_Actions )
endfunction

//===========================================================================
// Trigger: Lumber
//===========================================================================
function Trig_Lumber_Actions takes nothing returns nothing
    call AdjustPlayerStateBJ( udg_Lumber, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_LUMBER )
endfunction

//===========================================================================
function InitTrig_Lumber takes nothing returns nothing
    set gg_trg_Lumber = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Lumber, Player(10), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Lumber, function Trig_Lumber_Actions )
endfunction

//===========================================================================
// Trigger: Allied Gold
//===========================================================================
function Trig_Allied_Gold_Func009001 takes nothing returns boolean
    return ( IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Allied_Gold_Func009002002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 75, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Allied_Gold_Func010001 takes nothing returns boolean
    return ( IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Allied_Gold_Actions takes nothing returns nothing
    if ( Trig_Allied_Gold_Func009001() ) then
        call ForForce( GetPlayersAll(), function Trig_Allied_Gold_Func009002002 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Allied_Gold_Func010001() ) then
        call AdjustPlayerStateBJ( 75, GetOwningPlayer(GetDyingUnit()), PLAYER_STATE_RESOURCE_GOLD )
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Allied_Gold takes nothing returns nothing
    set gg_trg_Allied_Gold = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(0), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(1), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(2), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(3), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(4), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(5), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(6), EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Allied_Gold, Player(7), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Allied_Gold, function Trig_Allied_Gold_Actions )
endfunction

//===========================================================================
// Trigger: Tuxedo Kamen
//===========================================================================
function Trig_Tuxedo_Kamen_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tuxedo_Kamen_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H009_0127, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H009_0127, false )
    call SetUnitPositionLoc( gg_unit_H009_0127, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0124 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Tuxedo_Kamen takes nothing returns nothing
    set gg_trg_Tuxedo_Kamen = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Tuxedo_Kamen, gg_rct_Tuxedo_Kamen )
    call TriggerAddCondition( gg_trg_Tuxedo_Kamen, Condition( function Trig_Tuxedo_Kamen_Conditions ) )
    call TriggerAddAction( gg_trg_Tuxedo_Kamen, function Trig_Tuxedo_Kamen_Actions )
endfunction

//===========================================================================
// Trigger: Usagi Tsukino
//===========================================================================
function Trig_Usagi_Tsukino_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Usagi_Tsukino_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H007_0125, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H007_0125, false )
    call SetUnitPositionLoc( gg_unit_H007_0125, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0117 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Usagi_Tsukino takes nothing returns nothing
    set gg_trg_Usagi_Tsukino = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Usagi_Tsukino, gg_rct_Sailor_Moon )
    call TriggerAddCondition( gg_trg_Usagi_Tsukino, Condition( function Trig_Usagi_Tsukino_Conditions ) )
    call TriggerAddAction( gg_trg_Usagi_Tsukino, function Trig_Usagi_Tsukino_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Mercury
//===========================================================================
function Trig_Sailor_Mercury_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Mercury_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H002_0126, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H002_0126, false )
    call SetUnitPositionLoc( gg_unit_H002_0126, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0118 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Mercury takes nothing returns nothing
    set gg_trg_Sailor_Mercury = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Mercury, gg_rct_Sailor_Mercury )
    call TriggerAddCondition( gg_trg_Sailor_Mercury, Condition( function Trig_Sailor_Mercury_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Mercury, function Trig_Sailor_Mercury_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Mars
//===========================================================================
function Trig_Sailor_Mars_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Mars_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H003_0131, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H003_0131, false )
    call SetUnitPositionLoc( gg_unit_H003_0131, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0119 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Mars takes nothing returns nothing
    set gg_trg_Sailor_Mars = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Mars, gg_rct_Sailor_Mars )
    call TriggerAddCondition( gg_trg_Sailor_Mars, Condition( function Trig_Sailor_Mars_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Mars, function Trig_Sailor_Mars_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Jupiter
//===========================================================================
function Trig_Sailor_Jupiter_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Jupiter_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H00A_0128, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H00A_0128, false )
    call SetUnitPositionLoc( gg_unit_H00A_0128, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0123 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Jupiter takes nothing returns nothing
    set gg_trg_Sailor_Jupiter = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Jupiter, gg_rct_Sailor_Jupiter )
    call TriggerAddCondition( gg_trg_Sailor_Jupiter, Condition( function Trig_Sailor_Jupiter_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Jupiter, function Trig_Sailor_Jupiter_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Uranus
//===========================================================================
function Trig_Sailor_Uranus_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Uranus_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H001_0129, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H001_0129, false )
    call SetUnitPositionLoc( gg_unit_H001_0129, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0120 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Uranus takes nothing returns nothing
    set gg_trg_Sailor_Uranus = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Uranus, gg_rct_Sailor_Uranus )
    call TriggerAddCondition( gg_trg_Sailor_Uranus, Condition( function Trig_Sailor_Uranus_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Uranus, function Trig_Sailor_Uranus_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Neptune
//===========================================================================
function Trig_Sailor_Neptune_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Neptune_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H008_0130, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H008_0130, false )
    call SetUnitPositionLoc( gg_unit_H008_0130, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0121 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Neptune takes nothing returns nothing
    set gg_trg_Sailor_Neptune = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Neptune, gg_rct_Sailor_Neptune )
    call TriggerAddCondition( gg_trg_Sailor_Neptune, Condition( function Trig_Sailor_Neptune_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Neptune, function Trig_Sailor_Neptune_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Pluto
//===========================================================================
function Trig_Sailor_Pluto_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Pluto_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H006_0132, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H006_0132, false )
    call SetUnitPositionLoc( gg_unit_H006_0132, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0122 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Pluto takes nothing returns nothing
    set gg_trg_Sailor_Pluto = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Pluto, gg_rct_Sailor_Pluto )
    call TriggerAddCondition( gg_trg_Sailor_Pluto, Condition( function Trig_Sailor_Pluto_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Pluto, function Trig_Sailor_Pluto_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Venus
//===========================================================================
function Trig_Sailor_Venus_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Venus_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H005_0158, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H005_0158, false )
    call SetUnitPositionLoc( gg_unit_H005_0158, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0157 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Venus takes nothing returns nothing
    set gg_trg_Sailor_Venus = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Venus, gg_rct_Sailor_Venus )
    call TriggerAddCondition( gg_trg_Sailor_Venus, Condition( function Trig_Sailor_Venus_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Venus, function Trig_Sailor_Venus_Actions )
endfunction

//===========================================================================
// Trigger: Sailor Saturn
//===========================================================================
function Trig_Sailor_Saturn_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'e00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sailor_Saturn_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitOwner( gg_unit_H004_0206, GetOwningPlayer(GetTriggerUnit()), false )
    call SetUnitInvulnerable( gg_unit_H004_0206, false )
    call SetUnitPositionLoc( gg_unit_H004_0206, GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]) )
    call RemoveUnit( GetTriggerUnit() )
    call RemoveUnit( gg_unit_ncp2_0205 )
    call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetTriggerUnit()), GetRectCenter(udg_HeroStartRegion[GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))]), 2.00 )
endfunction

//===========================================================================
function InitTrig_Sailor_Saturn takes nothing returns nothing
    set gg_trg_Sailor_Saturn = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sailor_Saturn, gg_rct_Sailor_Saturn )
    call TriggerAddCondition( gg_trg_Sailor_Saturn, Condition( function Trig_Sailor_Saturn_Conditions ) )
    call TriggerAddAction( gg_trg_Sailor_Saturn, function Trig_Sailor_Saturn_Actions )
endfunction

//===========================================================================
// Trigger: North
//===========================================================================
function Trig_North_Func008002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_013) )
endfunction

function Trig_North_Func009002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_013_Copy) )
endfunction

function Trig_North_Func010002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_045) )
endfunction

function Trig_North_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(0), GetRectCenter(gg_rct_TT), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(4), GetRectCenter(gg_rct_TT), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(0), GetRectCenter(gg_rct_T_Move), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(4), GetRectCenter(gg_rct_T_Move), bj_UNIT_FACING )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_T_Move, Player(0)), function Trig_North_Func008002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_T_Move, Player(4)), function Trig_North_Func009002 )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_TT), function Trig_North_Func010002 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_579" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TT), 5.00 )
    call PlaySoundBJ( gg_snd_FootmanPissed2 )
    call TriggerSleepAction( 480.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_North takes nothing returns nothing
    set gg_trg_North = CreateTrigger(  )
    call TriggerRegisterPlayerStateEvent( gg_trg_North, Player(0), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerRegisterPlayerStateEvent( gg_trg_North, Player(4), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerAddAction( gg_trg_North, function Trig_North_Actions )
endfunction

//===========================================================================
// Trigger: East
//===========================================================================
function Trig_East_Func008002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_015_Copy) )
endfunction

function Trig_East_Func009002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_015) )
endfunction

function Trig_East_Func010002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_049) )
endfunction

function Trig_East_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(1), GetRectCenter(gg_rct_RR), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(5), GetRectCenter(gg_rct_RR), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(1), GetRectCenter(gg_rct_R_Move), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(5), GetRectCenter(gg_rct_R_Move), bj_UNIT_FACING )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_R_Move, Player(1)), function Trig_East_Func008002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_R_Move, Player(5)), function Trig_East_Func009002 )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_RR), function Trig_East_Func010002 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_578" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_RR), 5.00 )
    call PlaySoundBJ( gg_snd_FootmanYesAttack3 )
    call TriggerSleepAction( 480.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_East takes nothing returns nothing
    set gg_trg_East = CreateTrigger(  )
    call TriggerRegisterPlayerStateEvent( gg_trg_East, Player(1), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerRegisterPlayerStateEvent( gg_trg_East, Player(5), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerAddAction( gg_trg_East, function Trig_East_Actions )
endfunction

//===========================================================================
// Trigger: South
//===========================================================================
function Trig_South_Func008002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_053) )
endfunction

function Trig_South_Func009002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_054) )
endfunction

function Trig_South_Func010002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_050) )
endfunction

function Trig_South_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(2), GetRectCenter(gg_rct_BB), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(6), GetRectCenter(gg_rct_BB), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(2), GetRectCenter(gg_rct_B_Move), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(6), GetRectCenter(gg_rct_B_Move), bj_UNIT_FACING )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_B_Move, Player(2)), function Trig_South_Func008002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_B_Move, Player(6)), function Trig_South_Func009002 )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_BB), function Trig_South_Func010002 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_577" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_BB), 5.00 )
    call PlaySoundBJ( gg_snd_FootmanWarcry1 )
    call TriggerSleepAction( 480.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_South takes nothing returns nothing
    set gg_trg_South = CreateTrigger(  )
    call TriggerRegisterPlayerStateEvent( gg_trg_South, Player(2), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerRegisterPlayerStateEvent( gg_trg_South, Player(6), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerAddAction( gg_trg_South, function Trig_South_Actions )
endfunction

//===========================================================================
// Trigger: West
//===========================================================================
function Trig_West_Func008002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_055) )
endfunction

function Trig_West_Func009002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_056) )
endfunction

function Trig_West_Func010002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Region_051) )
endfunction

function Trig_West_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(3), GetRectCenter(gg_rct_LL), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'h00D', Player(7), GetRectCenter(gg_rct_LL), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(3), GetRectCenter(gg_rct_L_Move), bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'n003', Player(7), GetRectCenter(gg_rct_L_Move), bj_UNIT_FACING )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_L_Move, Player(3)), function Trig_West_Func008002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_L_Move, Player(7)), function Trig_West_Func009002 )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_LL), function Trig_West_Func010002 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_LL), 5.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_576" )
    call PlaySoundBJ( gg_snd_FootmanYesAttack1 )
    call TriggerSleepAction( 480.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_West takes nothing returns nothing
    set gg_trg_West = CreateTrigger(  )
    call TriggerRegisterPlayerStateEvent( gg_trg_West, Player(3), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerRegisterPlayerStateEvent( gg_trg_West, Player(7), PLAYER_STATE_RESOURCE_FOOD_USED, LESS_THAN, 5.00 )
    call TriggerAddAction( gg_trg_West, function Trig_West_Actions )
endfunction

//===========================================================================
// Trigger: Test
//===========================================================================
function Trig_Test_Actions takes nothing returns nothing
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_GOLD, 2500 )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_LUMBER, 500 )
endfunction

//===========================================================================
function InitTrig_Test takes nothing returns nothing
    set gg_trg_Test = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Test, Player(0), ".", true )
    call TriggerAddAction( gg_trg_Test, function Trig_Test_Actions )
endfunction

//===========================================================================
// Trigger: Test Copy
//===========================================================================
function Trig_Test_Copy_Actions takes nothing returns nothing
    set udg_MonsterLevelTrig = gg_trg_MonsterSet13
endfunction

//===========================================================================
function InitTrig_Test_Copy takes nothing returns nothing
    set gg_trg_Test_Copy = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Test_Copy, Player(0), "-13131313", true )
    call TriggerAddAction( gg_trg_Test_Copy, function Trig_Test_Copy_Actions )
endfunction

//===========================================================================
// Trigger: Test Copy Copy
//===========================================================================
function Trig_Test_Copy_Copy_Actions takes nothing returns nothing
    call CustomDefeatBJ( Player(1), "TRIGSTR_569" )
endfunction

//===========================================================================
function InitTrig_Test_Copy_Copy takes nothing returns nothing
    set gg_trg_Test_Copy_Copy = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Test_Copy_Copy, Player(0), "-kick blue", true )
    call TriggerAddAction( gg_trg_Test_Copy_Copy, function Trig_Test_Copy_Copy_Actions )
endfunction

//===========================================================================
// Trigger: Player 1
//===========================================================================
function Trig_Player_1_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(0)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_1_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_1_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(0)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(0), udg_TheLeaderBoard, "TRIGSTR_398" )
    call ForForce( GetPlayersAll(), function Trig_Player_1_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(0), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_1 takes nothing returns nothing
    set gg_trg_Player_1 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_1, 2 )
    call TriggerAddCondition( gg_trg_Player_1, Condition( function Trig_Player_1_Conditions ) )
    call TriggerAddAction( gg_trg_Player_1, function Trig_Player_1_Actions )
endfunction

//===========================================================================
// Trigger: Player 2
//===========================================================================
function Trig_Player_2_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(1)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_2_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_2_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(1)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(1), udg_TheLeaderBoard, "TRIGSTR_399" )
    call ForForce( GetPlayersAll(), function Trig_Player_2_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(1), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_2 takes nothing returns nothing
    set gg_trg_Player_2 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_2, 2 )
    call TriggerAddCondition( gg_trg_Player_2, Condition( function Trig_Player_2_Conditions ) )
    call TriggerAddAction( gg_trg_Player_2, function Trig_Player_2_Actions )
endfunction

//===========================================================================
// Trigger: Player 3
//===========================================================================
function Trig_Player_3_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(2)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_3_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_3_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(2)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(2), udg_TheLeaderBoard, "TRIGSTR_400" )
    call ForForce( GetPlayersAll(), function Trig_Player_3_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(2), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_3 takes nothing returns nothing
    set gg_trg_Player_3 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_3, 2 )
    call TriggerAddCondition( gg_trg_Player_3, Condition( function Trig_Player_3_Conditions ) )
    call TriggerAddAction( gg_trg_Player_3, function Trig_Player_3_Actions )
endfunction

//===========================================================================
// Trigger: Player 4
//===========================================================================
function Trig_Player_4_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(3)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_4_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_4_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(3)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(3), udg_TheLeaderBoard, "TRIGSTR_401" )
    call ForForce( GetPlayersAll(), function Trig_Player_4_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(3), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_4 takes nothing returns nothing
    set gg_trg_Player_4 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_4, 2 )
    call TriggerAddCondition( gg_trg_Player_4, Condition( function Trig_Player_4_Conditions ) )
    call TriggerAddAction( gg_trg_Player_4, function Trig_Player_4_Actions )
endfunction

//===========================================================================
// Trigger: Player 5
//===========================================================================
function Trig_Player_5_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(4)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_5_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_5_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(4)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(4), udg_TheLeaderBoard, "TRIGSTR_402" )
    call ForForce( GetPlayersAll(), function Trig_Player_5_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(4), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_5 takes nothing returns nothing
    set gg_trg_Player_5 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_5, 2 )
    call TriggerAddCondition( gg_trg_Player_5, Condition( function Trig_Player_5_Conditions ) )
    call TriggerAddAction( gg_trg_Player_5, function Trig_Player_5_Actions )
endfunction

//===========================================================================
// Trigger: Player 6
//===========================================================================
function Trig_Player_6_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(5)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_6_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_6_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(5)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(5), udg_TheLeaderBoard, "TRIGSTR_403" )
    call ForForce( GetPlayersAll(), function Trig_Player_6_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(5), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_6 takes nothing returns nothing
    set gg_trg_Player_6 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_6, 2 )
    call TriggerAddCondition( gg_trg_Player_6, Condition( function Trig_Player_6_Conditions ) )
    call TriggerAddAction( gg_trg_Player_6, function Trig_Player_6_Actions )
endfunction

//===========================================================================
// Trigger: Player 7
//===========================================================================
function Trig_Player_7_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(6)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_7_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_7_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(6)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(6), udg_TheLeaderBoard, "TRIGSTR_404" )
    call ForForce( GetPlayersAll(), function Trig_Player_7_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(6), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_7 takes nothing returns nothing
    set gg_trg_Player_7 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_7, 2 )
    call TriggerAddCondition( gg_trg_Player_7, Condition( function Trig_Player_7_Conditions ) )
    call TriggerAddAction( gg_trg_Player_7, function Trig_Player_7_Actions )
endfunction

//===========================================================================
// Trigger: Player 8
//===========================================================================
function Trig_Player_8_Conditions takes nothing returns boolean
    if ( not ( GetPlayerSlotState(Player(7)) == PLAYER_SLOT_STATE_LEFT ) ) then
        return false
    endif
    if ( not ( GetTriggerExecCount(GetTriggeringTrigger()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Player_8_Func006002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 500, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Player_8_Actions takes nothing returns nothing
    call DisplayTimedTextToForce( GetPlayersAll(), 25.00, ( GetPlayerName(Player(7)) + "|c0000cdf9 has left the game.|r" ) )
    call LeaderboardSetPlayerItemLabelBJ( Player(7), udg_TheLeaderBoard, "TRIGSTR_405" )
    call ForForce( GetPlayersAll(), function Trig_Player_8_Func006002 )
    call PlaySoundBJ( gg_snd_Crying )
    call ForceRemovePlayerSimple( Player(7), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Player_8 takes nothing returns nothing
    set gg_trg_Player_8 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Player_8, 2 )
    call TriggerAddCondition( gg_trg_Player_8, Condition( function Trig_Player_8_Conditions ) )
    call TriggerAddAction( gg_trg_Player_8, function Trig_Player_8_Actions )
endfunction

//===========================================================================
// Trigger: Set Up Leaderboard
//===========================================================================
function Trig_Set_Up_Leaderboard_Func005001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(0)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func006001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(1)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func007001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(2)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func008001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(3)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func009001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(4)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func010001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(5)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func011001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(6)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Func012001 takes nothing returns boolean
    return ( GetPlayerSlotState(Player(7)) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Set_Up_Leaderboard_Actions takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 14
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        set udg_Kills[GetForLoopIndexA()] = 0
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    call TriggerSleepAction( 1.00 )
    call CreateLeaderboardBJ( GetPlayersAll(), "TRIGSTR_406" )
    set udg_TheLeaderBoard = GetLastCreatedLeaderboard()
    if ( Trig_Set_Up_Leaderboard_Func005001() ) then
        call LeaderboardAddItemBJ( Player(0), GetLastCreatedLeaderboard(), GetPlayerName(Player(0)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func006001() ) then
        call LeaderboardAddItemBJ( Player(1), GetLastCreatedLeaderboard(), GetPlayerName(Player(1)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func007001() ) then
        call LeaderboardAddItemBJ( Player(2), GetLastCreatedLeaderboard(), GetPlayerName(Player(2)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func008001() ) then
        call LeaderboardAddItemBJ( Player(3), GetLastCreatedLeaderboard(), GetPlayerName(Player(3)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func009001() ) then
        call LeaderboardAddItemBJ( Player(4), GetLastCreatedLeaderboard(), GetPlayerName(Player(4)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func010001() ) then
        call LeaderboardAddItemBJ( Player(5), GetLastCreatedLeaderboard(), GetPlayerName(Player(5)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func011001() ) then
        call LeaderboardAddItemBJ( Player(6), GetLastCreatedLeaderboard(), GetPlayerName(Player(6)), 0 )
    else
        call DoNothing(  )
    endif
    if ( Trig_Set_Up_Leaderboard_Func012001() ) then
        call LeaderboardAddItemBJ( Player(7), GetLastCreatedLeaderboard(), GetPlayerName(Player(7)), 0 )
    else
        call DoNothing(  )
    endif
    call EnableTrigger( gg_trg_Update_Leaderboard )
endfunction

//===========================================================================
function InitTrig_Set_Up_Leaderboard takes nothing returns nothing
    set gg_trg_Set_Up_Leaderboard = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Set_Up_Leaderboard, function Trig_Set_Up_Leaderboard_Actions )
endfunction

//===========================================================================
// Trigger: Update Leaderboard
//===========================================================================
function Trig_Update_Leaderboard_Actions takes nothing returns nothing
    call LeaderboardSetPlayerItemValueBJ( Player(0), udg_TheLeaderBoard, udg_Kills[1] )
    call LeaderboardSetPlayerItemValueBJ( Player(1), udg_TheLeaderBoard, udg_Kills[2] )
    call LeaderboardSetPlayerItemValueBJ( Player(2), udg_TheLeaderBoard, udg_Kills[3] )
    call LeaderboardSetPlayerItemValueBJ( Player(3), udg_TheLeaderBoard, udg_Kills[4] )
    call LeaderboardSetPlayerItemValueBJ( Player(4), udg_TheLeaderBoard, udg_Kills[5] )
    call LeaderboardSetPlayerItemValueBJ( Player(5), udg_TheLeaderBoard, udg_Kills[6] )
    call LeaderboardSetPlayerItemValueBJ( Player(6), udg_TheLeaderBoard, udg_Kills[7] )
    call LeaderboardSetPlayerItemValueBJ( Player(7), udg_TheLeaderBoard, udg_Kills[8] )
endfunction

//===========================================================================
function InitTrig_Update_Leaderboard takes nothing returns nothing
    set gg_trg_Update_Leaderboard = CreateTrigger(  )
    call DisableTrigger( gg_trg_Update_Leaderboard )
    call TriggerAddAction( gg_trg_Update_Leaderboard, function Trig_Update_Leaderboard_Actions )
endfunction

//===========================================================================
// Trigger: Change Value
//===========================================================================
function Trig_Change_Value_Actions takes nothing returns nothing
    set udg_Kills[GetConvertedPlayerId(GetOwningPlayer(GetKillingUnitBJ()))] = ( udg_Kills[GetConvertedPlayerId(GetOwningPlayer(GetKillingUnitBJ()))] + 1 )
    call TriggerExecute( gg_trg_Update_Leaderboard )
endfunction

//===========================================================================
function InitTrig_Change_Value takes nothing returns nothing
    set gg_trg_Change_Value = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Change_Value, Player(10), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Change_Value, function Trig_Change_Value_Actions )
endfunction

//===========================================================================
// Trigger: Playergroup
//===========================================================================
function Trig_Playergroup_Actions takes nothing returns nothing
    call ForceAddPlayerSimple( Player(0), udg_Allies )
    call ForceAddPlayerSimple( Player(1), udg_Allies )
    call ForceAddPlayerSimple( Player(2), udg_Allies )
    call ForceAddPlayerSimple( Player(3), udg_Allies )
    call ForceAddPlayerSimple( Player(4), udg_Allies )
    call ForceAddPlayerSimple( Player(5), udg_Allies )
    call ForceAddPlayerSimple( Player(6), udg_Allies )
    call ForceAddPlayerSimple( Player(7), udg_Allies )
endfunction

//===========================================================================
function InitTrig_Playergroup takes nothing returns nothing
    set gg_trg_Playergroup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Playergroup, function Trig_Playergroup_Actions )
endfunction

//===========================================================================
// Trigger: Antistuck
//===========================================================================
function Trig_Antistuck_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'h00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Antistuck_Actions takes nothing returns nothing
    call TriggerSleepAction( 1.00 )
    call KillUnit( GetAttackedUnitBJ() )
endfunction

//===========================================================================
function InitTrig_Antistuck takes nothing returns nothing
    set gg_trg_Antistuck = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Antistuck, Player(10), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Antistuck, Condition( function Trig_Antistuck_Conditions ) )
    call TriggerAddAction( gg_trg_Antistuck, function Trig_Antistuck_Actions )
endfunction

//===========================================================================
// Trigger: UpgBuildin
//===========================================================================
function Trig_UpgBuildin_Func002002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_UpgBuildin_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_Region_047), function Trig_UpgBuildin_Func002002 )
endfunction

//===========================================================================
function InitTrig_UpgBuildin takes nothing returns nothing
    set gg_trg_UpgBuildin = CreateTrigger(  )
    call TriggerAddAction( gg_trg_UpgBuildin, function Trig_UpgBuildin_Actions )
endfunction

//===========================================================================
// Trigger: Debug
//===========================================================================
function Trig_Debug_Conditions takes nothing returns boolean
    if ( not ( GetPlayerState(Player(10), PLAYER_STATE_RESOURCE_FOOD_USED) < 5 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Debug_Func010002 takes nothing returns nothing
    call ExplodeUnitBJ( GetEnumUnit() )
endfunction

function Trig_Debug_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectOfPlayer(GetPlayableMapRect(), Player(10)), function Trig_Debug_Func010002 )
endfunction

//===========================================================================
function InitTrig_Debug takes nothing returns nothing
    set gg_trg_Debug = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(0), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(1), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(2), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(3), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(4), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(5), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(6), "-debug", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Debug, Player(7), "-debug", true )
    call TriggerAddCondition( gg_trg_Debug, Condition( function Trig_Debug_Conditions ) )
    call TriggerAddAction( gg_trg_Debug, function Trig_Debug_Actions )
endfunction

//===========================================================================
// Trigger: Help
//===========================================================================
function Trig_Help_Actions takes nothing returns nothing
    call TriggerExecute( gg_trg_Commands )
endfunction

//===========================================================================
function InitTrig_Help takes nothing returns nothing
    set gg_trg_Help = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(0), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(1), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(2), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(3), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(4), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(5), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(6), "-help", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Help, Player(7), "-help", true )
    call TriggerAddAction( gg_trg_Help, function Trig_Help_Actions )
endfunction

//===========================================================================
// Trigger: Start
//===========================================================================
function Trig_Start_Func002002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_006, GetEnumPlayer(), 0 )
endfunction

function Trig_Start_Func003002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_007, GetEnumPlayer(), 14.00 )
endfunction

function Trig_Start_Func010001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func011001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func016002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_004, GetEnumPlayer(), 0 )
endfunction

function Trig_Start_Func023001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func024001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func025002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_003, GetEnumPlayer(), 1.50 )
endfunction

function Trig_Start_Func030001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func031001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func032002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_008, GetEnumPlayer(), 1.50 )
endfunction

function Trig_Start_Func037001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func038001 takes nothing returns boolean
    return ( udg_CinematicSkip == 5 )
endfunction

function Trig_Start_Func044002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_010, GetEnumPlayer(), 0 )
endfunction

function Trig_Start_Func046002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_011, GetEnumPlayer(), 9.50 )
endfunction

function Trig_Start_Func051002 takes nothing returns nothing
    call ResetToGameCameraForPlayer( GetEnumPlayer(), 1.00 )
endfunction

function Trig_Start_Actions takes nothing returns nothing
    call ForForce( GetPlayersAll(), function Trig_Start_Func002002 )
    call ForForce( GetPlayersAll(), function Trig_Start_Func003002 )
    call CinematicModeBJ( true, GetPlayersAll() )
    call TriggerSleepAction( 1.00 )
    call StopMusicBJ( true )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 8.00, "TRIGSTR_507" )
    call TriggerSleepAction( 8.50 )
    if ( Trig_Start_Func010001() ) then
        call TriggerExecute( gg_trg_Start_Skipped )
    else
        call DoNothing(  )
    endif
    if ( Trig_Start_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 2.00, "TRIGSTR_508" )
    call ForForce( GetPlayersAll(), function Trig_Start_Func016002 )
    call TriggerSleepAction( 2.50 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 8.00, "TRIGSTR_509" )
    call TriggerSleepAction( 8.50 )
    if ( Trig_Start_Func023001() ) then
        call TriggerExecute( gg_trg_Start_Skipped )
    else
        call DoNothing(  )
    endif
    if ( Trig_Start_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ForForce( GetPlayersAll(), function Trig_Start_Func025002 )
    call TriggerSleepAction( 1.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 8.00, "TRIGSTR_510" )
    call TriggerSleepAction( 8.50 )
    if ( Trig_Start_Func030001() ) then
        call TriggerExecute( gg_trg_Start_Skipped )
    else
        call DoNothing(  )
    endif
    if ( Trig_Start_Func031001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ForForce( GetPlayersAll(), function Trig_Start_Func032002 )
    call TriggerSleepAction( 1.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 9.00, "TRIGSTR_511" )
    call TriggerSleepAction( 9.50 )
    if ( Trig_Start_Func037001() ) then
        call TriggerExecute( gg_trg_Start_Skipped )
    else
        call DoNothing(  )
    endif
    if ( Trig_Start_Func038001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 2.00, "TRIGSTR_512" )
    call TriggerSleepAction( 2.50 )
    call ForForce( GetPlayersAll(), function Trig_Start_Func044002 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call ForForce( GetPlayersAll(), function Trig_Start_Func046002 )
    call TriggerSleepAction( 1.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 10.00, "TRIGSTR_513" )
    call TriggerSleepAction( 7.50 )
    call ForForce( GetPlayersAll(), function Trig_Start_Func051002 )
    call CinematicModeBJ( false, GetPlayersAll() )
    call TriggerExecute( gg_trg_MonsterSet1 )
    call TriggerExecute( gg_trg_Set_Up_Leaderboard )
    call DisableTrigger( gg_trg_StartSkipPress )
endfunction

//===========================================================================
function InitTrig_Start takes nothing returns nothing
    set gg_trg_Start = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Start, function Trig_Start_Actions )
endfunction

//===========================================================================
// Trigger: Start Skipped
//===========================================================================
function Trig_Start_Skipped_Func006002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_010, GetEnumPlayer(), 0 )
endfunction

function Trig_Start_Skipped_Func008002 takes nothing returns nothing
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_011, GetEnumPlayer(), 9.50 )
endfunction

function Trig_Start_Skipped_Func013002 takes nothing returns nothing
    call ResetToGameCameraForPlayer( GetEnumPlayer(), 1.00 )
endfunction

function Trig_Start_Skipped_Actions takes nothing returns nothing
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 2.00, "TRIGSTR_544" )
    call TriggerSleepAction( 2.50 )
    call ForForce( GetPlayersAll(), function Trig_Start_Skipped_Func006002 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.50, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call ForForce( GetPlayersAll(), function Trig_Start_Skipped_Func008002 )
    call TriggerSleepAction( 1.50 )
    call PlaySoundBJ( gg_snd_QuestLog )
    call DisplayTimedTextToForce( GetPlayersAll(), 10.00, "TRIGSTR_543" )
    call TriggerSleepAction( 7.50 )
    call ForForce( GetPlayersAll(), function Trig_Start_Skipped_Func013002 )
    call CinematicModeBJ( false, GetPlayersAll() )
    call TriggerExecute( gg_trg_MonsterSet1 )
    call TriggerExecute( gg_trg_Set_Up_Leaderboard )
    call DisableTrigger( gg_trg_StartSkipPress )
endfunction

//===========================================================================
function InitTrig_Start_Skipped takes nothing returns nothing
    set gg_trg_Start_Skipped = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Start_Skipped, function Trig_Start_Skipped_Actions )
endfunction

//===========================================================================
// Trigger: StartSkipPress
//===========================================================================
function Trig_StartSkipPress_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_CinematicSkip = 5
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_H007_0125, "TRIGSTR_546", gg_snd_JainaWhat3, ( GetPlayerName(GetTriggerPlayer()) + " turned off the Tutorial" ), bj_TIMETYPE_ADD, 0.00, true )
endfunction

//===========================================================================
function InitTrig_StartSkipPress takes nothing returns nothing
    set gg_trg_StartSkipPress = CreateTrigger(  )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(0) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(1) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(2) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(3) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(4) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(5) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(6) )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_StartSkipPress, Player(7) )
    call TriggerAddAction( gg_trg_StartSkipPress, function Trig_StartSkipPress_Actions )
endfunction

//===========================================================================
// Trigger: Invulnerable
//===========================================================================
function Trig_Invulnerable_Func001A takes nothing returns nothing
    call SetUnitInvulnerable( GetEnumUnit(), true )
endfunction

function Trig_Invulnerable_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_The_Sailor_Scouts), function Trig_Invulnerable_Func001A )
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

//===========================================================================
function InitTrig_Invulnerable takes nothing returns nothing
    set gg_trg_Invulnerable = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Invulnerable, 0.01 )
    call TriggerAddAction( gg_trg_Invulnerable, function Trig_Invulnerable_Actions )
endfunction

//===========================================================================
// Trigger: ArchersHoldPosition
//===========================================================================
function Trig_ArchersHoldPosition_Func002002002 takes nothing returns nothing
    call IssueImmediateOrderBJ( GetEnumUnit(), "holdposition" )
endfunction

function Trig_ArchersHoldPosition_Func002002 takes nothing returns nothing
    call ForGroupBJ( GetUnitsOfPlayerAndTypeId(GetEnumPlayer(), 'n002'), function Trig_ArchersHoldPosition_Func002002002 )
endfunction

function Trig_ArchersHoldPosition_Func003002002 takes nothing returns nothing
    call IssueImmediateOrderBJ( GetEnumUnit(), "holdposition" )
endfunction

function Trig_ArchersHoldPosition_Func003002 takes nothing returns nothing
    call ForGroupBJ( GetUnitsOfPlayerAndTypeId(GetEnumPlayer(), 'n005'), function Trig_ArchersHoldPosition_Func003002002 )
endfunction

function Trig_ArchersHoldPosition_Func004002002 takes nothing returns nothing
    call IssueImmediateOrderBJ( GetEnumUnit(), "holdposition" )
endfunction

function Trig_ArchersHoldPosition_Func004002 takes nothing returns nothing
    call ForGroupBJ( GetUnitsOfPlayerAndTypeId(GetEnumPlayer(), 'n003'), function Trig_ArchersHoldPosition_Func004002002 )
endfunction

function Trig_ArchersHoldPosition_Actions takes nothing returns nothing
    call ForForce( GetPlayersAll(), function Trig_ArchersHoldPosition_Func002002 )
    call ForForce( GetPlayersAll(), function Trig_ArchersHoldPosition_Func003002 )
    call ForForce( GetPlayersAll(), function Trig_ArchersHoldPosition_Func004002 )
endfunction

//===========================================================================
function InitTrig_ArchersHoldPosition takes nothing returns nothing
    set gg_trg_ArchersHoldPosition = CreateTrigger(  )
    call TriggerAddAction( gg_trg_ArchersHoldPosition, function Trig_ArchersHoldPosition_Actions )
endfunction

//===========================================================================
// Trigger: Melee Initialization
//===========================================================================
function Trig_Melee_Initialization_Func013002 takes nothing returns nothing
    call SetPlayerHandicapXPBJ( GetEnumPlayer(), 80.00 )
endfunction

function Trig_Melee_Initialization_Func014002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 395, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Melee_Initialization_Func015002 takes nothing returns nothing
    call AdjustPlayerStateBJ( 285, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER )
endfunction

function Trig_Melee_Initialization_Func024002 takes nothing returns nothing
    call CreateFogModifierRadiusLocBJ( true, GetEnumPlayer(), FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 99999.00 )
endfunction

function Trig_Melee_Initialization_Actions takes nothing returns nothing
    call TriggerExecute( gg_trg_Playergroup )
    set udg_BountyRound = 50
    set udg_Lumber = 5
    set udg_YAYWait = ( 7 / 2 )
    set udg_LevelTimer = 30
    call AddWeatherEffectSaveLast( GetPlayableMapRect(), 'LRaa' )
    call EnableWeatherEffect( GetLastCreatedWeatherEffect(), true )
    call PlayMusicBJ( gg_snd_Human1 )
    call SetTimeOfDay( 12.00 )
    call SetPlayerFlagBJ( PLAYER_STATE_GIVES_BOUNTY, true, Player(10) )
    call StartCampaignAI( Player(9), "map.ai" )
    call ForForce( GetPlayersAll(), function Trig_Melee_Initialization_Func013002 )
    call ForForce( GetPlayersAll(), function Trig_Melee_Initialization_Func014002 )
    call ForForce( GetPlayersAll(), function Trig_Melee_Initialization_Func015002 )
    set udg_HeroStartRegion[1] = gg_rct_Region_016
    set udg_HeroStartRegion[2] = gg_rct_Region_017
    set udg_HeroStartRegion[3] = gg_rct_Region_018
    set udg_HeroStartRegion[4] = gg_rct_Region_019
    set udg_HeroStartRegion[5] = gg_rct_Region_016
    set udg_HeroStartRegion[6] = gg_rct_Region_017
    set udg_HeroStartRegion[7] = gg_rct_Region_018
    set udg_HeroStartRegion[8] = gg_rct_Region_019
    call ForForce( GetPlayersAll(), function Trig_Melee_Initialization_Func024002 )
    call EnableOcclusionBJ( false, GetPlayersAll() )
    call SetTimeOfDayScalePercentBJ( 50.00 )
    call FogEnableOff(  )
    call MeleeStartingHeroLimit(  )
    call SetPlayerHandicapBJ( Player(10), 125.00 )
endfunction

//===========================================================================
function InitTrig_Melee_Initialization takes nothing returns nothing
    set gg_trg_Melee_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Melee_Initialization, function Trig_Melee_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Quests
//===========================================================================
function Trig_Quests_Actions takes nothing returns nothing
    call CreateQuestBJ( bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_582", "TRIGSTR_583", "ReplaceableTextures\\\\CommandButtons\\\\BTNBansheeMaster.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_584", "TRIGSTR_585", "ReplaceableTextures\\\\CommandButtons\\\\BTNKeep.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_586", "TRIGSTR_587", "ReplaceableTextures\\\\CommandButtons\\\\BTNTomeBrown.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_588", "TRIGSTR_589", "ReplaceableTextures\\\\CommandButtons\\\\BTNTome.blp" )
endfunction

//===========================================================================
function InitTrig_Quests takes nothing returns nothing
    set gg_trg_Quests = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quests, function Trig_Quests_Actions )
endfunction

//===========================================================================
// Trigger: Submarine Violon Tide Configuration
//
// I recommend you to edit  this trigger only and other 3 leave untouched.
//===========================================================================
function Trig_Submarine_Violon_Tide_Configuration_Actions takes nothing returns nothing
    // Souls Speed:              To calculate their speed do it like this WoS_Speed x 33
    set udg_WoS_Speed = 10.00
    // Souls Split Angle(from 0 to 180):               0 is for straight line, and 180 is for full ring. I suggest you 40
    set udg_WoS_SoulsAngle = 40.00
    // AoE from what will souls get destroyed and damage enemy when he get in that AoE
    set udg_WoS_AoE = 50.00
    // Damage:         . For excample for level two damage will be 25 + 30 x 2(seconds level) = 85
    set udg_WoS_BaseDamage = 150.00
    set udg_WoS_DamagePerLevel = 30.00
    // Range of Souls: this number will shows the minimun and maximum possible distance what souls can get. Try to keep WoS_RangeMax bigger or at least equal to WoS_RangeMin
    set udg_WoS_RangeMax = 1000.00
    set udg_WoS_RangeMin = 350.00
endfunction

//===========================================================================
function InitTrig_Submarine_Violon_Tide_Configuration takes nothing returns nothing
    set gg_trg_Submarine_Violon_Tide_Configuration = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Submarine_Violon_Tide_Configuration, function Trig_Submarine_Violon_Tide_Configuration_Actions )
endfunction

//===========================================================================
// Trigger: Submarine Violon Tide Start
//
// Credits to maker for teaching me how to detect any kind of blockers(trees, pathing, pathing blockers etc)
//===========================================================================
function Trig_Submarine_Violon_Tide_Start_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Start_Func001C takes nothing returns boolean
    if ( not ( udg_WoS_Times == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Start_Actions takes nothing returns nothing
    if ( Trig_Submarine_Violon_Tide_Start_Func001C() ) then
        call EnableTrigger( gg_trg_Submarine_Violon_Tide_Loop )
    else
    endif
    set udg_WoS_Skip = ( udg_WoS_Skip + 1 )
    set udg_WoS_Times = ( udg_WoS_Times + 1 )
    set udg_WoS_Caster[udg_WoS_Times] = GetTriggerUnit()
    set udg_WoS_SpellLvl[udg_WoS_Times] = GetUnitAbilityLevelSwapped('A03C', udg_WoS_Caster[udg_WoS_Times])
    set udg_WoS_Point1 = GetUnitLoc(udg_WoS_Caster[udg_WoS_Times])
    set udg_WoS_Point2 = GetSpellTargetLoc()
    set udg_WoS_Off[udg_WoS_Times] = false
    set udg_WoS_Angle[udg_WoS_Times] = AngleBetweenPoints(udg_WoS_Point1, udg_WoS_Point2)
    set udg_WoS_Loop[udg_WoS_Times] = 4
    call RemoveLocation(udg_WoS_Point1)
    call RemoveLocation(udg_WoS_Point2)
    set udg_WoS_Point1= null
    set udg_WoS_Point2= null
endfunction

//===========================================================================
function InitTrig_Submarine_Violon_Tide_Start takes nothing returns nothing
    set gg_trg_Submarine_Violon_Tide_Start = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Submarine_Violon_Tide_Start, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Submarine_Violon_Tide_Start, Condition( function Trig_Submarine_Violon_Tide_Start_Conditions ) )
    call TriggerAddAction( gg_trg_Submarine_Violon_Tide_Start, function Trig_Submarine_Violon_Tide_Start_Actions )
endfunction

//===========================================================================
// Trigger: Submarine Violon Tide Loop
//===========================================================================
function Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func002Func002C takes nothing returns boolean
    if ( not ( udg_WoS2_Times == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func002C takes nothing returns boolean
    if ( not ( udg_WoS_Loop[udg_WoS] == 5 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func005C takes nothing returns boolean
    if ( not ( udg_WoS_Skip == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitCurrentOrder(udg_WoS_Caster[udg_WoS]) != String2OrderIdBJ("flamestrike") ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop_Func001Func001C takes nothing returns boolean
    if ( not ( udg_WoS_Off[udg_WoS] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop_Actions takes nothing returns nothing
    set udg_WoS = 1
    loop
        exitwhen udg_WoS > udg_WoS_Times
        if ( Trig_Submarine_Violon_Tide_Loop_Func001Func001C() ) then
            if ( Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001C() ) then
                set udg_WoS_Skip = ( udg_WoS_Skip - 1 )
                set udg_WoS_Off[udg_WoS] = true
                if ( Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func005C() ) then
                    call DisableTrigger( GetTriggeringTrigger() )
                    set udg_WoS_Times = 0
                else
                endif
            else
                set udg_WoS_Loop[udg_WoS] = ( udg_WoS_Loop[udg_WoS] + 1 )
                if ( Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func002C() ) then
                    set udg_WoS_Loop[udg_WoS] = 0
                    if ( Trig_Submarine_Violon_Tide_Loop_Func001Func001Func001Func002Func002C() ) then
                        call EnableTrigger( gg_trg_Submarine_Violon_Tide_Loop2 )
                    else
                    endif
                    set udg_WoS2_Times = ( udg_WoS2_Times + 1 )
                    set udg_WoS2_Skip = ( udg_WoS2_Skip + 1 )
                    set udg_WoS2_Caster[udg_WoS2_Times] = udg_WoS_Caster[udg_WoS]
                    set udg_WoS2_Off[udg_WoS2_Times] = false
                    set udg_WoS2_Distance[udg_WoS2_Times] = GetRandomReal(udg_WoS_RangeMin, udg_WoS_RangeMax)
                    set udg_WoS_Point1 = GetUnitLoc(udg_WoS_Caster[udg_WoS])
                    call CreateNUnitsAtLoc( 1, 'h01W', GetOwningPlayer(udg_WoS_Caster[udg_WoS]), udg_WoS_Point1, ( udg_WoS_Angle[udg_WoS] + GetRandomReal(( 0.00 - udg_WoS_SoulsAngle ), udg_WoS_SoulsAngle) ) )
                    set udg_WoS_Dummy[udg_WoS2_Times] = GetLastCreatedUnit()
                    set udg_WoS2_SpellLvl[udg_WoS2_Times] = udg_WoS_SpellLvl[udg_WoS]
                    call RemoveLocation(udg_WoS_Point1)
                    set udg_WoS_Point1= null
                else
                endif
            endif
        else
        endif
        set udg_WoS = udg_WoS + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Submarine_Violon_Tide_Loop takes nothing returns nothing
    set gg_trg_Submarine_Violon_Tide_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Submarine_Violon_Tide_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Submarine_Violon_Tide_Loop, 0.03 )
    call TriggerAddAction( gg_trg_Submarine_Violon_Tide_Loop, function Trig_Submarine_Violon_Tide_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Submarine Violon Tide Loop2
//===========================================================================
function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func004C takes nothing returns boolean
    if ( not ( udg_WoS2_Skip == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_WoS_Dummy[udg_WoS])) == true )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) != true )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MECHANICAL) != true )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002001(), Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002002() )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002001(), Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002002() )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003001(), Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003002() )
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011Func001C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(GetLastCreatedGroup()) > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011A takes nothing returns nothing
    if ( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011Func001C() ) then
        set udg_WoS2_Distance[udg_WoS] = 0.00
        call CreateNUnitsAtLoc( 1, 'h01W', GetOwningPlayer(udg_WoS_Dummy[udg_WoS]), udg_WoS_Point2, bj_UNIT_FACING )
        set udg_DummyCaster = GetLastCreatedUnit()
        call ShowUnitHide( udg_DummyCaster )
        call SetUnitAbilityLevelSwapped( 'A03D', udg_DummyCaster, udg_WoS2_SpellLvl[udg_WoS] )
        call IssueTargetOrderBJ( udg_DummyCaster, "frostnova", GetEnumUnit() )
        call UnitDamageTargetBJ( udg_WoS2_Caster[udg_WoS], GetEnumUnit(), ( udg_WoS_BaseDamage + ( 30.00 * I2R(udg_WoS2_SpellLvl[udg_WoS]) ) ), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL )
        call UnitApplyTimedLifeBJ( 0.20, 'BTLF', udg_DummyCaster )
    else
    endif
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func012C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_WoS_Point2, udg_TempPoint) > 0.50 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_WoS2_Distance[udg_WoS] <= 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Func001Func001C takes nothing returns boolean
    if ( not ( udg_WoS2_Off[udg_WoS] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Submarine_Violon_Tide_Loop2_Actions takes nothing returns nothing
    set udg_WoS = 1
    loop
        exitwhen udg_WoS > udg_WoS2_Times
        if ( Trig_Submarine_Violon_Tide_Loop2_Func001Func001C() ) then
            if ( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001C() ) then
                call KillUnit( udg_WoS_Dummy[udg_WoS] )
                set udg_WoS_Skip = ( udg_WoS2_Skip - 1 )
                set udg_WoS2_Off[udg_WoS] = true
                if ( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func004C() ) then
                    call DisableTrigger( GetTriggeringTrigger() )
                    set udg_WoS2_Times = 0
                else
                endif
            else
                set udg_WoS_Point1 = GetUnitLoc(udg_WoS_Dummy[udg_WoS])
                set udg_WoS_Point2 = PolarProjectionBJ(udg_WoS_Point1, udg_WoS_Speed, GetUnitFacing(udg_WoS_Dummy[udg_WoS]))
                call CreateItemLoc( 'modt', udg_WoS_Point2 )
                set udg_TempPoint = GetItemLoc(GetLastCreatedItem())
                call RemoveItem( GetLastCreatedItem() )
                set bj_wantDestroyGroup=true
                call ForGroupBJ( GetUnitsInRangeOfLocMatching(udg_WoS_AoE, udg_WoS_Point2, Condition(function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011001003)), function Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func011A )
                if ( Trig_Submarine_Violon_Tide_Loop2_Func001Func001Func001Func012C() ) then
                    set udg_WoS2_Distance[udg_WoS] = 0.00
                else
                    set udg_WoS2_Distance[udg_WoS] = ( udg_WoS2_Distance[udg_WoS] - udg_WoS_Speed )
                    set udg_TempX = GetLocationX(udg_WoS_Point2)
                    set udg_TempY = GetLocationY(udg_WoS_Point2)
                    call SetUnitX(udg_WoS_Dummy[udg_WoS], udg_TempX)
                    call SetUnitY(udg_WoS_Dummy[udg_WoS], udg_TempY)
                endif
                call RemoveLocation(udg_TempPoint)
                call RemoveLocation(udg_WoS_Point1)
                call RemoveLocation(udg_WoS_Point2)
                set udg_TempPoint= null
                set udg_WoS_Point1= null
                set udg_WoS_Point2= null
            endif
        else
        endif
        set udg_WoS = udg_WoS + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Submarine_Violon_Tide_Loop2 takes nothing returns nothing
    set gg_trg_Submarine_Violon_Tide_Loop2 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Submarine_Violon_Tide_Loop2 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Submarine_Violon_Tide_Loop2, 0.03 )
    call TriggerAddAction( gg_trg_Submarine_Violon_Tide_Loop2, function Trig_Submarine_Violon_Tide_Loop2_Actions )
endfunction

//===========================================================================
// Trigger: Dead Scream Init
//
// cAbility: The ability that fires the trigger
// cBuff: The dummy buff which is used to detect that the projectile arrived
// cSpecialEffect: Twist effect
// cAbilityDummy: Stun dummy
// cCasterDummy: [ Insert your dummy caster unit here ]
// cDamage[<level>]: Damage that is dealt each twist
// cInterval[<level>]: The amount of time in ms to start the next twist
//===========================================================================
function Trig_Dead_Scream_Init_Actions takes nothing returns nothing
    set udg_Viv_cAbility = 'A03A'
    set udg_Viv_cBuff = 'B012'
    set udg_Viv_cSpecialEffect = "Abilities\\Spells\\Other\\HowlOfTerror\\HowlCaster.mdl"
    set udg_Viv_cAbilityDummy = 'A03B'
    set udg_Viv_cCasterDummy = 'h01S'
    set udg_Viv_cTwistCount = 4
    set udg_Viv_cDamage[1] = 60.00
    set udg_Viv_cDamage[2] = 100.00
    set udg_Viv_cDamage[3] = 140.00
    set udg_Viv_cInterval[1] = 0.30
    set udg_Viv_cInterval[2] = 0.20
    set udg_Viv_cInterval[3] = 0.10
endfunction

//===========================================================================
function InitTrig_Dead_Scream_Init takes nothing returns nothing
    set gg_trg_Dead_Scream_Init = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Dead_Scream_Init, 0.01 )
    call TriggerAddAction( gg_trg_Dead_Scream_Init, function Trig_Dead_Scream_Init_Actions )
endfunction

//===========================================================================
// Trigger: Dead Scream Cast
//
// NOTE:  event is  "Starts the effect of an ability"  because the projectile will be already launched.
//===========================================================================
function Trig_Dead_Scream_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == udg_Viv_cAbility ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Cast_Func008C takes nothing returns boolean
    if ( not ( udg_Viv_Count == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Cast_Actions takes nothing returns nothing
    set udg_Viv_Count = ( udg_Viv_Count + 1 )
    set udg_Viv_Tw[udg_Viv_Count] = udg_Viv_cTwistCount
    set udg_Viv_Unit[( ( 2 * udg_Viv_Count ) - 1 )] = GetTriggerUnit()
    set udg_Viv_Unit[( 2 * udg_Viv_Count )] = GetSpellTargetUnit()
    set udg_Viv_L[udg_Viv_Count] = GetUnitAbilityLevelSwapped(udg_Viv_cAbility, udg_Viv_Unit[( ( 2 * udg_Viv_Count ) - 1 )])
    set udg_Viv_Case[udg_Viv_Count] = 0
    set udg_Viv_Timer[udg_Viv_Count] = 0.00
    if ( Trig_Dead_Scream_Cast_Func008C() ) then
        call EnableTrigger( gg_trg_Dead_Scream_Loop )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Dead_Scream_Cast takes nothing returns nothing
    set gg_trg_Dead_Scream_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Dead_Scream_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Dead_Scream_Cast, Condition( function Trig_Dead_Scream_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Dead_Scream_Cast, function Trig_Dead_Scream_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Dead Scream Loop
//
// If you change the periodic time, make changes manually to the variables
// Case 0:  Buff Wait
// Case 1:  First twist effect wait
// Case 2:  First twist freeze+interval
// Case 3:  Second twist effect wait
// Case 4:  Second twist freeze+interval
// Case 5:  Third twist effect wait
// Case 6:  Third twist freeze+interval
// Case 7:  Fourth twist effect wait
// Case 8:  Fourth twist freeze+interval
//===========================================================================
function Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001Func002Func015C takes nothing returns boolean
    if ( not ( udg_Viv_Count == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001Func002C takes nothing returns boolean
    if ( not ( udg_Viv_Tw[udg_Viv_Integer] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_Viv_Timer[udg_Viv_Integer] >= udg_Viv_cInterval[udg_Viv_L[udg_Viv_Integer]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func001Func001C takes nothing returns boolean
    if ( not ( udg_Viv_Case[udg_Viv_Integer] == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func001Func002C takes nothing returns boolean
    if ( not ( udg_Viv_Timer[udg_Viv_Integer] >= 1.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func001C takes nothing returns boolean
    if ( not ( udg_Viv_Case[udg_Viv_Integer] == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func002Func011C takes nothing returns boolean
    if ( not ( udg_Viv_Count == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func002C takes nothing returns boolean
    if ( not ( IsUnitType(udg_Viv_Unit[udg_Viv_Integer], UNIT_TYPE_MAGIC_IMMUNE) == false ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(udg_Viv_Unit[udg_Viv_Integer], 'Bvul') == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002Func003C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(udg_Viv_Unit[( 2 * udg_Viv_Integer )], udg_Viv_cBuff) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func002C takes nothing returns boolean
    if ( not ( udg_Viv_Case[udg_Viv_Integer] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func003Func011C takes nothing returns boolean
    if ( not ( udg_Viv_Count == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Func001Func003C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Viv_Unit[( 2 * udg_Viv_Integer )]) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Dead_Scream_Loop_Actions takes nothing returns nothing
    set udg_Viv_Integer = 1
    loop
        exitwhen udg_Viv_Integer > udg_Viv_Count
        set udg_Viv_Timer[udg_Viv_Integer] = ( udg_Viv_Timer[udg_Viv_Integer] + 0.05 )
        if ( Trig_Dead_Scream_Loop_Func001Func002C() ) then
            if ( Trig_Dead_Scream_Loop_Func001Func002Func002C() ) then
            else
                set udg_Viv_Unit[( ( 2 * udg_Viv_Integer ) - 1 )] = udg_Viv_Unit[( ( 2 * udg_Viv_Count ) - 1 )]
                set udg_Viv_Unit[( 2 * udg_Viv_Integer )] = udg_Viv_Unit[( 2 * udg_Viv_Count )]
                set udg_Viv_Case[udg_Viv_Integer] = udg_Viv_Case[udg_Viv_Count]
                set udg_Viv_Timer[udg_Viv_Integer] = udg_Viv_Timer[udg_Viv_Count]
                set udg_Viv_Tw[udg_Viv_Integer] = udg_Viv_Tw[udg_Viv_Count]
                set udg_Viv_L[udg_Viv_Integer] = udg_Viv_L[udg_Viv_Count]
                call DestroyEffectBJ( udg_Viv_SpecialEffect[udg_Viv_Integer] )
                set udg_Viv_SpecialEffect[udg_Viv_Integer] = udg_Viv_SpecialEffect[udg_Viv_Count]
                set udg_Viv_Integer = ( udg_Viv_Integer - 1 )
                set udg_Viv_Count = ( udg_Viv_Count - 1 )
                if ( Trig_Dead_Scream_Loop_Func001Func002Func002Func011C() ) then
                    call DisableTrigger( GetTriggeringTrigger() )
                else
                endif
                return
            endif
            if ( Trig_Dead_Scream_Loop_Func001Func002Func003C() ) then
                call UnitRemoveBuffBJ( 'B000', udg_Viv_Unit[( 2 * udg_Viv_Integer )] )
                call AddSpecialEffectTargetUnitBJ( "overhead", udg_Viv_Unit[( 2 * udg_Viv_Integer )], udg_Viv_cSpecialEffect )
                set udg_Viv_SpecialEffect[udg_Viv_Integer] = GetLastCreatedEffectBJ()
                set udg_Viv_Case[udg_Viv_Integer] = 1
                set udg_Viv_Timer[udg_Viv_Integer] = 0.00
            else
            endif
        else
            if ( Trig_Dead_Scream_Loop_Func001Func002Func001C() ) then
                if ( Trig_Dead_Scream_Loop_Func001Func002Func001Func002C() ) then
                    set udg_Viv_Timer[udg_Viv_Integer] = 0.00
                    call DestroyEffectBJ( udg_Viv_SpecialEffect[udg_Viv_Integer] )
                    call UnitDamageTargetBJ( udg_Viv_Unit[( ( 2 * udg_Viv_Integer ) - 1 )], udg_Viv_Unit[( 2 * udg_Viv_Integer )], udg_Viv_cDamage[udg_Viv_L[udg_Viv_Integer]], ATTACK_TYPE_MAGIC, DAMAGE_TYPE_NORMAL )
                    set udg_Viv_Point = GetUnitLoc(udg_Viv_Unit[( 2 * udg_Viv_Integer )])
                    call CreateNUnitsAtLoc( 1, udg_Viv_cCasterDummy, GetOwningPlayer(udg_Viv_Unit[( ( 2 * udg_Viv_Integer ) - 1 )]), udg_Viv_Point, 0.00 )
                    set udg_Viv_tmpUnit = GetLastCreatedUnit()
                    call UnitAddAbilityBJ( udg_Viv_cAbilityDummy, udg_Viv_tmpUnit )
                    call UnitApplyTimedLifeBJ( 1.00, 'BTLF', udg_Viv_tmpUnit )
                    call IssueTargetOrderBJ( udg_Viv_tmpUnit, "creepthunderbolt", udg_Viv_Unit[( 2 * udg_Viv_Integer )] )
                    call RemoveLocation(udg_Viv_Point)
                    set udg_Viv_Case[udg_Viv_Integer] = 2
                else
                endif
            else
                if ( Trig_Dead_Scream_Loop_Func001Func002Func001Func001C() ) then
                    if ( Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001C() ) then
                        set udg_Viv_Tw[udg_Viv_Integer] = ( udg_Viv_Tw[udg_Viv_Integer] - 1 )
                        if ( Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001Func002C() ) then
                            set udg_Viv_Unit[( ( 2 * udg_Viv_Integer ) - 1 )] = udg_Viv_Unit[( ( 2 * udg_Viv_Count ) - 1 )]
                            set udg_Viv_Unit[( 2 * udg_Viv_Integer )] = udg_Viv_Unit[( 2 * udg_Viv_Count )]
                            set udg_Viv_Case[udg_Viv_Integer] = udg_Viv_Case[udg_Viv_Count]
                            set udg_Viv_Timer[udg_Viv_Integer] = udg_Viv_Timer[udg_Viv_Count]
                            set udg_Viv_Tw[udg_Viv_Integer] = udg_Viv_Tw[udg_Viv_Count]
                            set udg_Viv_L[udg_Viv_Integer] = udg_Viv_L[udg_Viv_Count]
                            call DestroyEffectBJ( udg_Viv_SpecialEffect[udg_Viv_Integer] )
                            set udg_Viv_SpecialEffect[udg_Viv_Integer] = udg_Viv_SpecialEffect[udg_Viv_Count]
                            set udg_Viv_Integer = ( udg_Viv_Integer - 1 )
                            set udg_Viv_Count = ( udg_Viv_Count - 1 )
                            if ( Trig_Dead_Scream_Loop_Func001Func002Func001Func001Func001Func002Func015C() ) then
                                call DisableTrigger( GetTriggeringTrigger() )
                            else
                            endif
                            return
                        else
                            call AddSpecialEffectTargetUnitBJ( "overhead", udg_Viv_Unit[( 2 * udg_Viv_Integer )], udg_Viv_cSpecialEffect )
                            set udg_Viv_Case[udg_Viv_Integer] = 1
                            set udg_Viv_Timer[udg_Viv_Integer] = 0.00
                            set udg_Viv_SpecialEffect[udg_Viv_Integer] = GetLastCreatedEffectBJ()
                        endif
                    else
                    endif
                else
                endif
            endif
        endif
        if ( Trig_Dead_Scream_Loop_Func001Func003C() ) then
            set udg_Viv_Unit[( ( 2 * udg_Viv_Integer ) - 1 )] = udg_Viv_Unit[( ( 2 * udg_Viv_Count ) - 1 )]
            set udg_Viv_Unit[( 2 * udg_Viv_Integer )] = udg_Viv_Unit[( 2 * udg_Viv_Count )]
            set udg_Viv_Case[udg_Viv_Integer] = udg_Viv_Case[udg_Viv_Count]
            set udg_Viv_Timer[udg_Viv_Integer] = udg_Viv_Timer[udg_Viv_Count]
            set udg_Viv_Tw[udg_Viv_Integer] = udg_Viv_Tw[udg_Viv_Count]
            set udg_Viv_L[udg_Viv_Integer] = udg_Viv_L[udg_Viv_Count]
            call DestroyEffectBJ( udg_Viv_SpecialEffect[udg_Viv_Integer] )
            set udg_Viv_SpecialEffect[udg_Viv_Integer] = udg_Viv_SpecialEffect[udg_Viv_Count]
            set udg_Viv_Integer = ( udg_Viv_Integer - 1 )
            set udg_Viv_Count = ( udg_Viv_Count - 1 )
            if ( Trig_Dead_Scream_Loop_Func001Func003Func011C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
            return
        else
        endif
        set udg_Viv_Integer = udg_Viv_Integer + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Dead_Scream_Loop takes nothing returns nothing
    set gg_trg_Dead_Scream_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Dead_Scream_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Dead_Scream_Loop, 0.05 )
    call TriggerAddAction( gg_trg_Dead_Scream_Loop, function Trig_Dead_Scream_Loop_Actions )
endfunction

//===========================================================================
// Trigger: ini
//===========================================================================
function Trig_ini_Actions takes nothing returns nothing
    // This following spell can be used anywhere in your map as an alternative to pause
    set udg__Pause = 'A00U'
    // configurable
    set udg_Config_CH_Spell = 'A018'
    set udg_Config_CH_Unit = 'h01R'
    set udg_Config_CH_Duration = 3.00
    set udg_Config_CH_lvlDuration = 0.00
    set udg_Config_CH_AoE = 400.00
    set udg_Config_CH_lvlAoE = 0.00
    // Model causes lag on first cast.... Preloading.
    call RemoveUnit(CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), udg_Config_CH_Unit, 0, 0, 0))
endfunction

//===========================================================================
function InitTrig_ini takes nothing returns nothing
    set gg_trg_ini = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_ini, 0.01 )
    call TriggerAddAction( gg_trg_ini, function Trig_ini_Actions )
endfunction

//===========================================================================
// Trigger: Sphere Of Timelessness ini
//===========================================================================
function Trig_Sphere_Of_Timelessness_ini_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == udg_Config_CH_Spell ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_ini_Func003C takes nothing returns boolean
    if ( not ( udg_CH_Dex == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_ini_Actions takes nothing returns nothing
    if ( Trig_Sphere_Of_Timelessness_ini_Func003C() ) then
        call EnableTrigger( gg_trg_Sphere_Of_Timelessness_loop )
    else
    endif
    set udg_CH_Dex = ( udg_CH_Dex + 1 )
    set udg_CH_Caster[udg_CH_Dex] = GetTriggerUnit()
    set udg_CH_lvl = GetUnitAbilityLevelSwapped(udg_Config_CH_Spell, udg_CH_Caster[udg_CH_Dex])
    set udg_CH_p = GetSpellTargetLoc()
    // Chronosphere dummy must be owned by caster, otherwise true sight will not work
    call CreateNUnitsAtLoc( 1, udg_Config_CH_Unit, GetOwningPlayer(udg_CH_Caster[udg_CH_Dex]), udg_CH_p, bj_UNIT_FACING )
    call RemoveLocation(udg_CH_p)
    set udg_CH_Effect[udg_CH_Dex] = GetLastCreatedUnit()
    call UnitApplyTimedLifeBJ( ( udg_Config_CH_Duration + ( I2R(udg_CH_lvl) * 1.00 ) ), 'BTLF', udg_CH_Effect[udg_CH_Dex] )
    set udg_CH_AoE[udg_CH_Dex] = ( udg_Config_CH_AoE + ( I2R(udg_CH_lvl) * udg_Config_CH_lvlAoE ) )
    // Next function has no effect if AoE is 400
    // The chronosphere looks odd if it's size is not 100%. I'm not a modeler so I can't fix it. If that is a probelm, use a diffirent model or fix it yourself.
    call SetUnitScalePercent( udg_CH_Effect[udg_CH_Dex], ( udg_CH_AoE[udg_CH_Dex] / 4.00 ), 0.00, 0.00 )
endfunction

//===========================================================================
function InitTrig_Sphere_Of_Timelessness_ini takes nothing returns nothing
    set gg_trg_Sphere_Of_Timelessness_ini = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Sphere_Of_Timelessness_ini, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Sphere_Of_Timelessness_ini, Condition( function Trig_Sphere_Of_Timelessness_ini_Conditions ) )
    call TriggerAddAction( gg_trg_Sphere_Of_Timelessness_ini, function Trig_Sphere_Of_Timelessness_ini_Actions )
endfunction

//===========================================================================
// Trigger: Sphere Of Timelessness loop
//===========================================================================
function Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005Func002Func005C takes nothing returns boolean
    if ( not ( IsUnitInGroup(udg_CH_unit, udg_CH_Group2) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005Func002C takes nothing returns boolean
    if ( not ( udg_CH_unit != udg_CH_Caster[udg_CH_i] ) ) then
        return false
    endif
    if ( not ( IsUnitEnemy(udg_CH_unit, GetOwningPlayer(gg_unit_H006_0132)) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(udg_CH_unit) != 'h01R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005A takes nothing returns nothing
    set udg_CH_unit = GetEnumUnit()
    if ( Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005Func002C() ) then
        call GroupAddUnitSimple( udg_CH_unit, udg_CH_Group )
        if ( Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005Func002Func005C() ) then
            call UnitAddAbilityBJ( udg__Pause, udg_CH_unit )
            call IssueImmediateOrderBJ( udg_CH_unit, "defend" )
            call UnitPauseTimedLifeBJ( true, udg_CH_unit )
            call SetUnitTimeScalePercent( udg_CH_unit, 0.00 )
            call GroupAddUnitSimple( udg_CH_unit, udg_CH_Group2 )
        else
        endif
    else
    endif
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func002Func001Func012C takes nothing returns boolean
    if ( not ( udg_CH_Dex == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_CH_Effect[udg_CH_i]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func003Func002C takes nothing returns boolean
    if ( not ( IsUnitInGroup(udg_CH_unit, udg_CH_Group) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sphere_Of_Timelessness_loop_Func003A takes nothing returns nothing
    set udg_CH_unit = GetEnumUnit()
    if ( Trig_Sphere_Of_Timelessness_loop_Func003Func002C() ) then
        call UnitRemoveAbilityBJ( udg__Pause, udg_CH_unit )
        call UnitPauseTimedLifeBJ( false, udg_CH_unit )
        call SetUnitTimeScalePercent( udg_CH_unit, 100.00 )
        call GroupRemoveUnitSimple( udg_CH_unit, udg_CH_Group2 )
    else
    endif
endfunction

function Trig_Sphere_Of_Timelessness_loop_Actions takes nothing returns nothing
    set udg_CH_i = 1
    loop
        exitwhen udg_CH_i > udg_CH_Dex
        if ( Trig_Sphere_Of_Timelessness_loop_Func002Func001C() ) then
            set udg_CH_p = GetUnitLoc(udg_CH_Effect[udg_CH_i])
            set bj_wantDestroyGroup=true
            // I know I don't have to filter Chronosphere since it has locust and won't be picked, but for some reason - if I don't filter chronosphere - then the chronospheres can pause each other...
            call ForGroupBJ( GetUnitsInRangeOfLocAll(udg_CH_AoE[udg_CH_i], udg_CH_p), function Trig_Sphere_Of_Timelessness_loop_Func002Func001Func005A )
            call RemoveLocation(udg_CH_p)
        else
            set udg_CH_Caster[udg_CH_i] = udg_CH_Caster[udg_CH_Dex]
            set udg_CH_Effect[udg_CH_i] = udg_CH_Effect[udg_CH_Dex]
            set udg_CH_AoE[udg_CH_i] = udg_CH_AoE[udg_CH_Dex]
            set udg_CH_Dex = ( udg_CH_Dex - 1 )
            set udg_CH_i = ( udg_CH_i - 1 )
            if ( Trig_Sphere_Of_Timelessness_loop_Func002Func001Func012C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        endif
        set udg_CH_i = udg_CH_i + 1
    endloop
    call ForGroupBJ( udg_CH_Group2, function Trig_Sphere_Of_Timelessness_loop_Func003A )
    call GroupClear( udg_CH_Group )
endfunction

//===========================================================================
function InitTrig_Sphere_Of_Timelessness_loop takes nothing returns nothing
    set gg_trg_Sphere_Of_Timelessness_loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Sphere_Of_Timelessness_loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Sphere_Of_Timelessness_loop, 0.03 )
    call TriggerAddAction( gg_trg_Sphere_Of_Timelessness_loop, function Trig_Sphere_Of_Timelessness_loop_Actions )
endfunction

//===========================================================================
// Trigger: hsCast
//
// notes:
// hsIndex[0] = iterator
// hsIndex[1] = max number of active darts
// hsIndex[2] = usually for deciding array number for new darts
// hsIndex[3] = usually for determining max number of active darts
// hsIndex[4] = secondary iterator
// hsIndex[5] = # of darts to create
// hsIndex[6] = max array number for original target point
//  ** If you wish to change the duration darts last, go to the last function before the     L E A K S    A R E    F U N    section: Add a # second Generic expiration timer
//===========================================================================
function Trig_hsCast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A039' ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func024Func001Func003C takes nothing returns boolean
    if ( not ( udg_hsTargPointIndex[0] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func024Func001C takes nothing returns boolean
    if ( not ( udg_hsTargPointCounter[udg_hsIndex[0]] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func025Func001C takes nothing returns boolean
    if ( not ( udg_hsTargPointIndex[0] > udg_hsIndex[3] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func025C takes nothing returns boolean
    if ( not ( udg_hsTargPointIndex[0] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func027C takes nothing returns boolean
    if ( not ( GetSpellTargetUnit() == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func033Func006Func001Func003C takes nothing returns boolean
    if ( not ( udg_hsIndex[2] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func033Func006Func001C takes nothing returns boolean
    if ( not ( udg_hsDart[udg_hsIndex[0]] == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func033Func008Func001C takes nothing returns boolean
    if ( not ( udg_hsIndex[2] > udg_hsIndex[3] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Func033Func008C takes nothing returns boolean
    if ( not ( udg_hsIndex[2] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsCast_Actions takes nothing returns nothing
    //                                                                                                                                                                                      
    //      B O R I N G    S P E L L    D A T A    S E T U P
    //                                                                                                                                                                                      
    // Index[5] = how many darts you desire
    set udg_hsIndex[5] = ( 8 + 0 )
    set udg_hsDamage[0] = ( 30.00 + ( 1.00 * I2R(( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) - 0 )) ) )
    // Turn = the maximum angle difference darts may move
    set udg_hsTurn[0] = ( 6.00 + ( 0.00 * I2R(( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) - 1 )) ) )
    // Detect = radius at which darts encounter a unit to home into: WARNING: too high may lag the game
    set udg_hsDetect[0] = ( 240.00 + ( 0.00 * I2R(( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) - 1 )) ) )
    // Collide = radius at which darts reach the target. NOTE: Collide >= Detect will automatically hit the first unit, but too high won't make it look good
    set udg_hsCollide[0] = ( 50.00 + ( 0.00 * I2R(( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) - 1 )) ) )
    // SpeedMax = maximum speed a dart may reach. The minimum is half this value
    set udg_hsSpeedMax[0] = ( 20.00 + ( 0.00 * I2R(( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) - 1 )) ) )
    //                                                                                                                                                                                      
    //      S E T T I N G    U P    T E M P    T H I N G S
    //                                                                                                                                                                                      
    set udg_hstPoint[1] = GetUnitLoc(GetTriggerUnit())
    //  ( D e t e r m i n e    a n    i n d e x    n u m b e r     f o r     t a r g e t    p o i n t )
    // (used as the target point index number)
    set udg_hsTargPointIndex[0] = 0
    // (max active point array check)
    set udg_hsIndex[3] = 0
    set udg_hsIndex[0] = 1
    loop
        exitwhen udg_hsIndex[0] > udg_hsIndex[6]
        if ( Trig_hsCast_Func024Func001C() ) then
            if ( Trig_hsCast_Func024Func001Func003C() ) then
                // (first available unused index)
                set udg_hsTargPointIndex[0] = udg_hsIndex[0]
            else
            endif
        else
            // (last unavailable used index)
            set udg_hsIndex[3] = udg_hsIndex[0]
        endif
        set udg_hsIndex[0] = udg_hsIndex[0] + 1
    endloop
    if ( Trig_hsCast_Func025C() ) then
        // ( increase max active indexes and set to-be dart to that value )
        set udg_hsIndex[6] = ( udg_hsIndex[6] + 1 )
        set udg_hsTargPointIndex[0] = udg_hsIndex[6]
    else
        if ( Trig_hsCast_Func025Func001C() ) then
            // ( shorten max Index to last active index including the upcoming one )
            set udg_hsIndex[6] = udg_hsTargPointIndex[0]
        else
            // ( shorten max Index to last active index )
            set udg_hsIndex[6] = udg_hsIndex[3]
        endif
    endif
    // ( targeting ground or unit? )
    if ( Trig_hsCast_Func027C() ) then
        // ( no target )
        set udg_hsTargPoint[udg_hsTargPointIndex[0]] = GetSpellTargetLoc()
        set udg_hsTarg[0] = null
    else
        // ( unit )
        set udg_hsTargPoint[udg_hsTargPointIndex[0]] = GetUnitLoc(GetSpellTargetUnit())
        // Targ[0] = is used to make all darts target the targeted unit [3]
        set udg_hsTarg[0] = GetSpellTargetUnit()
    endif
    //                                                                                                                                                                                      
    //      N O W   T H E    F U N
    //                                                                                                                                                                                      
    // (keeps track of how many darts use the target point)
    set udg_hsTargPointCounter[udg_hsTargPointIndex[0]] = udg_hsIndex[5]
    set udg_hsIndex[4] = 1
    loop
        exitwhen udg_hsIndex[4] > udg_hsIndex[5]
        //                                                                                                                                                                         
        //      C H E C K    F O R    O P E N    I N D E X
        //                                                                                                                                                                         
        set udg_hsIndex[2] = 0
        set udg_hsIndex[3] = 0
        set udg_hsIndex[0] = 1
        loop
            exitwhen udg_hsIndex[0] > udg_hsIndex[1]
            if ( Trig_hsCast_Func033Func006Func001C() ) then
                // ( available slot! but do we already have one selected? )
                if ( Trig_hsCast_Func033Func006Func001Func003C() ) then
                    set udg_hsIndex[2] = udg_hsIndex[0]
                else
                endif
            else
                // ( active slot! )
                set udg_hsIndex[3] = udg_hsIndex[0]
            endif
            set udg_hsIndex[0] = udg_hsIndex[0] + 1
        endloop
        // ( if no open slots are available, make one )
        if ( Trig_hsCast_Func033Func008C() ) then
            // ( increase max active indexes and set to-be dart to that value )
            set udg_hsIndex[1] = ( udg_hsIndex[1] + 1 )
            set udg_hsIndex[2] = udg_hsIndex[1]
        else
            if ( Trig_hsCast_Func033Func008Func001C() ) then
                // ( shorten max Index to last active index including the upcoming one )
                set udg_hsIndex[1] = udg_hsIndex[2]
            else
                // ( shorten max Index to last active index )
                set udg_hsIndex[1] = udg_hsIndex[3]
            endif
        endif
        //                                                                                                                                                                         
        //      S P E L L    D A T A    F O R    E A C H    D A R T
        //                                                                                                                                                                         
        set udg_hsTarg[udg_hsIndex[2]] = udg_hsTarg[0]
        set udg_hsDamage[udg_hsIndex[2]] = udg_hsDamage[0]
        set udg_hsTurn[udg_hsIndex[2]] = udg_hsTurn[0]
        // (directs the target point index number for all darts)
        set udg_hsDartPointIndex[udg_hsIndex[2]] = udg_hsTargPointIndex[0]
        //                                                                                                                                                                         
        //      S P E L L    A C T I O N S
        //                                                                                                                                                                         
        // Real[1] = angle darts will be at initially; divide by how many darts you create.
        set udg_hstReal[3] = ( ( ( 360.00 / I2R(udg_hsIndex[5]) ) * I2R(udg_hsIndex[4]) ) + AngleBetweenPoints(udg_hstPoint[1], udg_hsTargPoint[udg_hsTargPointIndex[0]]) )
        set udg_hstPoint[2] = PolarProjectionBJ(udg_hstPoint[1], 10.00, udg_hstReal[3])
        set udg_hsTurn[udg_hsIndex[2]] = udg_hsTurn[0]
        set udg_hsDetect[udg_hsIndex[2]] = udg_hsDetect[0]
        set udg_hsCollide[udg_hsIndex[2]] = udg_hsCollide[0]
        set udg_hsSpeedMax[udg_hsIndex[2]] = udg_hsSpeedMax[0]
        call CreateNUnitsAtLoc( 1, 'u00B', GetOwningPlayer(GetTriggerUnit()), udg_hstPoint[2], udg_hstReal[3] )
        set udg_hsDart[udg_hsIndex[2]] = GetLastCreatedUnit()
        // This limits how long the dart moves for. If you want the dart to keep going until it hits its target, remove the expiration timer
        call UnitApplyTimedLifeBJ( 4.00, 'BTLF', udg_hsDart[udg_hsIndex[2]] )
        // L E A K
        call RemoveLocation(udg_hstPoint[2])
        set udg_hsIndex[4] = udg_hsIndex[4] + 1
    endloop
    //                                                                                                                                                                         
    //      L E A K S    A R E    F U N
    //                                                                                                                                                                         
    call RemoveLocation(udg_hstPoint[1])
    //                                                                                                                                                                         
    call EnableTrigger( gg_trg_hsInterval )
endfunction

//===========================================================================
function InitTrig_hsCast takes nothing returns nothing
    set gg_trg_hsCast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_hsCast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_hsCast, Condition( function Trig_hsCast_Conditions ) )
    call TriggerAddAction( gg_trg_hsCast, function Trig_hsCast_Actions )
endfunction

//===========================================================================
// Trigger: hsInterval
//===========================================================================
function Trig_hsInterval_Func002Func001Func006C takes nothing returns boolean
    if ( not ( udg_hsTarg[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func008Func001C takes nothing returns boolean
    if ( not ( ( udg_hstReal[2] - udg_hstReal[1] ) <= -180.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func008C takes nothing returns boolean
    if ( not ( ( udg_hstReal[2] - udg_hstReal[1] ) >= 180.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func010Func001C takes nothing returns boolean
    if ( not ( ( udg_hstReal[3] - udg_hstReal[1] ) < ( -1.00 * udg_hsTurn[udg_hsIndex[0]] ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func010C takes nothing returns boolean
    if ( not ( ( udg_hstReal[3] - udg_hstReal[1] ) > udg_hsTurn[udg_hsIndex[0]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func011C takes nothing returns boolean
    if ( not ( udg_hstReal[3] < 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func012C takes nothing returns boolean
    if ( not ( udg_hstReal[3] > 360.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func014Func001Func004C takes nothing returns boolean
    if ( not ( udg_hstReal[1] == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func014Func001C takes nothing returns boolean
    if ( not ( udg_hstReal[1] > udg_hstReal[3] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func014Func003C takes nothing returns boolean
    if ( not ( udg_hstReal[3] == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func014C takes nothing returns boolean
    if ( not ( udg_hstReal[1] < udg_hstReal[3] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func016C takes nothing returns boolean
    if ( not ( udg_hstReal[4] < 0.50 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func024002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_hsDart[udg_hsIndex[0]])) == true )
endfunction

function Trig_hsInterval_Func002Func001Func024002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_hsInterval_Func002Func001Func024002003002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) != true )
endfunction

function Trig_hsInterval_Func002Func001Func024002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_hsInterval_Func002Func001Func024002003002001(), Trig_hsInterval_Func002Func001Func024002003002002() )
endfunction

function Trig_hsInterval_Func002Func001Func024002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_hsInterval_Func002Func001Func024002003001(), Trig_hsInterval_Func002Func001Func024002003002() )
endfunction

function Trig_hsInterval_Func002Func001Func025Func003Func003C takes nothing returns boolean
    if ( not ( udg_hstReal[7] < udg_hstReal[6] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func025Func003A takes nothing returns nothing
    set udg_hstPoint[4] = GetUnitLoc(GetEnumUnit())
    set udg_hstReal[7] = DistanceBetweenPoints(udg_hstPoint[3], udg_hstPoint[4])
    if ( Trig_hsInterval_Func002Func001Func025Func003Func003C() ) then
        set udg_hstReal[6] = udg_hstReal[7]
        set udg_hsTarg[udg_hsIndex[0]] = GetEnumUnit()
    else
    endif
    //                                                                                                                                                                                      
    //      L E A K S    B E    G O N E
    //                                                                                                                                                                                      
    call RemoveLocation(udg_hstPoint[4])
endfunction

function Trig_hsInterval_Func002Func001Func025Func004Func001C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_hstUGroup) > 0 ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(udg_hsTarg[udg_hsIndex[0]], udg_hstUGroup) != true ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func025Func004Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_hstUGroup) > 1 ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(udg_hsTarg[udg_hsIndex[0]], udg_hstUGroup) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func025Func004C takes nothing returns boolean
    if ( Trig_hsInterval_Func002Func001Func025Func004Func001C() ) then
        return true
    endif
    if ( Trig_hsInterval_Func002Func001Func025Func004Func002C() ) then
        return true
    endif
    return false
endfunction

function Trig_hsInterval_Func002Func001Func025C takes nothing returns boolean
    if ( not Trig_hsInterval_Func002Func001Func025Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func027C takes nothing returns boolean
    if ( not ( udg_hsTarg[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    if ( not ( IsUnitDeadBJ(udg_hsTarg[udg_hsIndex[0]]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func028Func002Func004C takes nothing returns boolean
    if ( not ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func028Func002C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_hstPoint[3], udg_hsTargPoint[udg_hsDartPointIndex[udg_hsIndex[0]]]) <= udg_hsCollide[udg_hsIndex[0]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func028Func003Func009C takes nothing returns boolean
    if ( not ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func028Func003C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_hstPoint[3], udg_hstPoint[2]) <= udg_hsCollide[udg_hsIndex[0]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func028C takes nothing returns boolean
    if ( not ( udg_hsTarg[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func030Func002C takes nothing returns boolean
    if ( ( IsUnitDeadBJ(udg_hsDart[udg_hsIndex[0]]) == true ) ) then
        return true
    endif
    if ( ( RectContainsLoc(GetPlayableMapRect(), udg_hstPoint[3]) != true ) ) then
        return true
    endif
    return false
endfunction

function Trig_hsInterval_Func002Func001Func030Func006C takes nothing returns boolean
    if ( not ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func030C takes nothing returns boolean
    if ( not ( udg_hsDart[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    if ( not Trig_hsInterval_Func002Func001Func030Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001Func037C takes nothing returns boolean
    if ( not ( udg_hsDart[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func002Func001C takes nothing returns boolean
    if ( not ( udg_hsDart[udg_hsIndex[0]] != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Func007C takes nothing returns boolean
    if ( not ( udg_hsIndex[3] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_hsInterval_Actions takes nothing returns nothing
    set udg_hsIndex[3] = 0
    set udg_hsIndex[0] = 1
    loop
        exitwhen udg_hsIndex[0] > udg_hsIndex[1]
        if ( Trig_hsInterval_Func002Func001C() ) then
            //                                                                                                                                                                                      
            //      S E T    U P    D A T A    F O R    C A L C U L A T I O N S
            //                                                                                                                                                                                      
            set udg_hstReal[1] = GetUnitFacing(udg_hsDart[udg_hsIndex[0]])
            set udg_hstPoint[1] = GetUnitLoc(udg_hsDart[udg_hsIndex[0]])
            if ( Trig_hsInterval_Func002Func001Func006C() ) then
                // ( there is a target )
                set udg_hstPoint[2] = GetUnitLoc(udg_hsTarg[udg_hsIndex[0]])
                set udg_hstReal[2] = AngleBetweenPoints(udg_hstPoint[1], udg_hstPoint[2])
            else
                // ( no target )
                set udg_hstReal[2] = AngleBetweenPoints(udg_hstPoint[1], udg_hsTargPoint[udg_hsDartPointIndex[udg_hsIndex[0]]])
            endif
            // ( calculate new angle )
            if ( Trig_hsInterval_Func002Func001Func008C() ) then
                set udg_hstReal[1] = ( udg_hstReal[1] + 360.00 )
            else
                if ( Trig_hsInterval_Func002Func001Func008Func001C() ) then
                    set udg_hstReal[2] = ( udg_hstReal[2] + 360.00 )
                else
                endif
            endif
            set udg_hstReal[3] = ( ( udg_hstReal[1] + udg_hstReal[2] ) / 2.00 )
            if ( Trig_hsInterval_Func002Func001Func010C() ) then
                // ( turning too hard to left )
                set udg_hstReal[3] = ( udg_hstReal[1] + udg_hsTurn[udg_hsIndex[0]] )
            else
                if ( Trig_hsInterval_Func002Func001Func010Func001C() ) then
                    // ( turning too hard to right )
                    set udg_hstReal[3] = ( udg_hstReal[1] - udg_hsTurn[udg_hsIndex[0]] )
                else
                endif
            endif
            if ( Trig_hsInterval_Func002Func001Func011C() ) then
                set udg_hstReal[3] = ( udg_hstReal[3] + 360.00 )
            else
            endif
            if ( Trig_hsInterval_Func002Func001Func012C() ) then
                set udg_hstReal[3] = ( udg_hstReal[3] - 360.00 )
            else
            endif
            // ( movement of dart, etc. )
            if ( Trig_hsInterval_Func002Func001Func014C() ) then
                // [ DEBUGGING: not dividing by 0 ]
                if ( Trig_hsInterval_Func002Func001Func014Func003C() ) then
                    set udg_hstReal[3] = 0.01
                else
                endif
                set udg_hstReal[4] = ( udg_hstReal[1] / udg_hstReal[3] )
            else
                if ( Trig_hsInterval_Func002Func001Func014Func001C() ) then
                    // [ DEBUGGING: not dividing by 0 ]
                    if ( Trig_hsInterval_Func002Func001Func014Func001Func004C() ) then
                        set udg_hstReal[1] = 0.01
                    else
                    endif
                    set udg_hstReal[4] = ( udg_hstReal[3] / udg_hstReal[1] )
                else
                    // ( dart is not turning, goes max speed )
                    set udg_hstReal[4] = 1.00
                endif
            endif
            // ( limit speed factor to be above 0.50 )
            if ( Trig_hsInterval_Func002Func001Func016C() ) then
                set udg_hstReal[4] = 0.50
            else
            endif
            // ( speed: max speed * factor which is dependant on angle difference )
            set udg_hstReal[5] = ( udg_hsSpeedMax[udg_hsIndex[0]] * udg_hstReal[4] )
            set udg_hstPoint[3] = PolarProjectionBJ(udg_hstPoint[1], udg_hstReal[5], udg_hstReal[3])
            call SetUnitPositionLocFacingBJ( udg_hsDart[udg_hsIndex[0]], udg_hstPoint[3], udg_hstReal[3] )
            //                                                                                                                                                                                      
            //      D E T E C T    U N I T S    I N    R A N G E
            //                                                                                                                                                                                      
            set udg_hstUGroup = GetUnitsInRangeOfLocMatching(udg_hsDetect[udg_hsIndex[0]], udg_hstPoint[3], Condition(function Trig_hsInterval_Func002Func001Func024002003))
            if ( Trig_hsInterval_Func002Func001Func025C() ) then
                // ( find closest unit )
                set udg_hstReal[6] = ( udg_hsDetect[udg_hsIndex[0]] + 1 )
                call ForGroupBJ( udg_hstUGroup, function Trig_hsInterval_Func002Func001Func025Func003A )
            else
            endif
            // ( collision/reach target point )
            if ( Trig_hsInterval_Func002Func001Func027C() ) then
                set udg_hsTarg[udg_hsIndex[0]] = null
            else
            endif
            if ( Trig_hsInterval_Func002Func001Func028C() ) then
                if ( Trig_hsInterval_Func002Func001Func028Func003C() ) then
                    call UnitDamageTargetBJ( udg_hsDart[udg_hsIndex[0]], udg_hsTarg[udg_hsIndex[0]], udg_hsDamage[udg_hsIndex[0]], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
                    call AddSpecialEffectLocBJ( udg_hstPoint[2], "Abilities\\Weapons\\ProcMissile\\ProcMissile.mdl" )
                    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                    call AddSpecialEffectLocBJ( udg_hstPoint[2], "Abilities\\Spells\\Other\\HealingSpray\\HealBottleMissile.mdl" )
                    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                    call RemoveUnit( udg_hsDart[udg_hsIndex[0]] )
                    set udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] = ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] - 1 )
                    if ( Trig_hsInterval_Func002Func001Func028Func003Func009C() ) then
                        // (the target point is no longer used by any other dart)
                        call RemoveLocation(udg_hsTargPoint[udg_hsDartPointIndex[udg_hsIndex[0]]])
                    else
                    endif
                    set udg_hsDart[udg_hsIndex[0]] = null
                    set udg_hsTarg[udg_hsIndex[0]] = null
                else
                endif
                // L E A K
                call RemoveLocation(udg_hstPoint[2])
            else
                // ( reached original target position )
                if ( Trig_hsInterval_Func002Func001Func028Func002C() ) then
                    call AddSpecialEffectLocBJ( udg_hstPoint[3], "Abilities\\Weapons\\ProcMissile\\ProcMissile.mdl" )
                    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                    set udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] = ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] - 1 )
                    if ( Trig_hsInterval_Func002Func001Func028Func002Func004C() ) then
                        // (the target point is no longer used by any other dart)
                        call RemoveLocation(udg_hsTargPoint[udg_hsDartPointIndex[udg_hsIndex[0]]])
                    else
                    endif
                    call RemoveUnit( udg_hsDart[udg_hsIndex[0]] )
                    set udg_hsDart[udg_hsIndex[0]] = null
                else
                endif
            endif
            // ( dart went out of bounds )
            if ( Trig_hsInterval_Func002Func001Func030C() ) then
                call AddSpecialEffectLocBJ( udg_hstPoint[3], "Abilities\\Weapons\\ProcMissile\\ProcMissile.mdl" )
                call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                set udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] = ( udg_hsTargPointCounter[udg_hsDartPointIndex[udg_hsIndex[0]]] - 1 )
                if ( Trig_hsInterval_Func002Func001Func030Func006C() ) then
                    // (the target point is no longer used by any other dart)
                    call RemoveLocation(udg_hsTargPoint[udg_hsDartPointIndex[udg_hsIndex[0]]])
                else
                endif
                call RemoveUnit( udg_hsDart[udg_hsIndex[0]] )
                set udg_hsDart[udg_hsIndex[0]] = null
            else
            endif
            //                                                                                                                                                                                      
            //      L E A K S    B E    G O N E
            //                                                                                                                                                                                      
            call RemoveLocation(udg_hstPoint[1])
            call RemoveLocation(udg_hstPoint[3])
            call DestroyGroup(udg_hstUGroup)
            if ( Trig_hsInterval_Func002Func001Func037C() ) then
                // ( active slot! )
                set udg_hsIndex[3] = udg_hsIndex[0]
            else
            endif
        else
        endif
        set udg_hsIndex[0] = udg_hsIndex[0] + 1
    endloop
    //                                                                                                                                                                                      
    //      U P D A T E    A R R A Y    O F    A C T I V E    D A R T S
    // ( shorten max Index to last active index )
    set udg_hsIndex[1] = udg_hsIndex[3]
    if ( Trig_hsInterval_Func007C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

//===========================================================================
function InitTrig_hsInterval takes nothing returns nothing
    set gg_trg_hsInterval = CreateTrigger(  )
    call DisableTrigger( gg_trg_hsInterval )
    call TriggerRegisterTimerEventPeriodic( gg_trg_hsInterval, 0.03 )
    call TriggerAddAction( gg_trg_hsInterval, function Trig_hsInterval_Actions )
endfunction

//===========================================================================
// Trigger: Moon Healing Escalation 1
//===========================================================================
function Trig_Moon_Healing_Escalation_1_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01H' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Healing_Escalation_1_Actions takes nothing returns nothing
    set udg_MoonHealingCaster = GetSpellAbilityUnit()
    set udg_MoonHealingTarget = GetSpellTargetUnit()
    set udg_MoonHealingHitCount = 0
    call EnableTrigger( gg_trg_Moon_Healing_Escalation_2 )
endfunction

//===========================================================================
function InitTrig_Moon_Healing_Escalation_1 takes nothing returns nothing
    set gg_trg_Moon_Healing_Escalation_1 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Healing_Escalation_1, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Moon_Healing_Escalation_1, Condition( function Trig_Moon_Healing_Escalation_1_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Healing_Escalation_1, function Trig_Moon_Healing_Escalation_1_Actions )
endfunction

//===========================================================================
// Trigger: Moon Healing Escalation 2
//===========================================================================
function Trig_Moon_Healing_Escalation_2_Func001Func007Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_MoonHealingCaster) == GetUnitTypeId(udg_MoonHealingTarget) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Healing_Escalation_2_Func001Func007C takes nothing returns boolean
    if ( not ( IsUnitAlly(udg_MoonHealingTarget, GetOwningPlayer(udg_MoonHealingCaster)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Healing_Escalation_2_Func001C takes nothing returns boolean
    if ( not ( udg_MoonHealingHitCount <= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Healing_Escalation_2_Actions takes nothing returns nothing
    if ( Trig_Moon_Healing_Escalation_2_Func001C() ) then
        set udg_MoonHealingPoint = GetUnitLoc(udg_MoonHealingCaster)
        call CreateNUnitsAtLoc( 1, 'h01F', GetOwningPlayer(udg_MoonHealingCaster), udg_MoonHealingPoint, bj_UNIT_FACING )
        call UnitApplyTimedLifeBJ( 5.00, 'BTLF', GetLastCreatedUnit() )
        call RemoveLocation(udg_MoonHealingPoint)
        set udg_MoonHealingDummy = GetLastCreatedUnit()
        if ( Trig_Moon_Healing_Escalation_2_Func001Func007C() ) then
            if ( Trig_Moon_Healing_Escalation_2_Func001Func007Func001C() ) then
                call SetUnitLifeBJ( udg_MoonHealingCaster, ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_MoonHealingCaster) + ( I2R(GetUnitAbilityLevelSwapped('A01H', udg_MoonHealingCaster)) * 50.00 ) ) )
                call AddSpecialEffectTargetUnitBJ( "origin", udg_MoonHealingCaster, "Abilities\\Spells\\Orc\\HealingWave\\HealingWaveTarget.mdl" )
            else
                call UnitAddAbilityBJ( 'A002', udg_MoonHealingDummy )
                call SetUnitAbilityLevelSwapped( 'A002', udg_MoonHealingDummy, GetUnitAbilityLevelSwapped('A01H', udg_MoonHealingCaster) )
                call IssueTargetOrderBJ( udg_MoonHealingDummy, "thunderbolt", udg_MoonHealingTarget )
            endif
        else
            call UnitAddAbilityBJ( 'A001', udg_MoonHealingDummy )
            call SetUnitAbilityLevelSwapped( 'A001', udg_MoonHealingDummy, GetUnitAbilityLevelSwapped('A01H', udg_MoonHealingCaster) )
            call IssueTargetOrderBJ( udg_MoonHealingDummy, "thunderbolt", udg_MoonHealingTarget )
        endif
        set udg_MoonHealingHitCount = ( udg_MoonHealingHitCount + 1 )
    else
        call DisableTrigger( GetTriggeringTrigger() )
    endif
endfunction

//===========================================================================
function InitTrig_Moon_Healing_Escalation_2 takes nothing returns nothing
    set gg_trg_Moon_Healing_Escalation_2 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Moon_Healing_Escalation_2 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Moon_Healing_Escalation_2, 0.66 )
    call TriggerAddAction( gg_trg_Moon_Healing_Escalation_2, function Trig_Moon_Healing_Escalation_2_Actions )
endfunction

//===========================================================================
// Trigger: Moon Healing Escalation 3
//===========================================================================
function Trig_Moon_Healing_Escalation_3_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01H' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Healing_Escalation_3_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_Moon_Healing_Escalation_2 )
    call RemoveUnit( udg_MoonHealingDummy )
endfunction

//===========================================================================
function InitTrig_Moon_Healing_Escalation_3 takes nothing returns nothing
    set gg_trg_Moon_Healing_Escalation_3 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Healing_Escalation_3, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Moon_Healing_Escalation_3, Condition( function Trig_Moon_Healing_Escalation_3_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Healing_Escalation_3, function Trig_Moon_Healing_Escalation_3_Actions )
endfunction

//===========================================================================
// Trigger: Pink Sugar Heart Attack 1
//===========================================================================
function Trig_Pink_Sugar_Heart_Attack_1_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A037' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pink_Sugar_Heart_Attack_1_Func005C takes nothing returns boolean
    if ( not ( udg_PinkSugarIndex == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pink_Sugar_Heart_Attack_1_Actions takes nothing returns nothing
    set udg_PinkSugarIndex = ( udg_PinkSugarIndex + 1 )
    set udg_PinkSugarCaster[udg_PinkSugarIndex] = GetTriggerUnit()
    set udg_PinkSugarTarget[udg_PinkSugarIndex] = GetSpellTargetUnit()
    set udg_PinkSugarHitCount[udg_PinkSugarIndex] = 0
    if ( Trig_Pink_Sugar_Heart_Attack_1_Func005C() ) then
        call EnableTrigger( gg_trg_Pink_Sugar_Heart_Attack_2 )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Pink_Sugar_Heart_Attack_1 takes nothing returns nothing
    set gg_trg_Pink_Sugar_Heart_Attack_1 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Pink_Sugar_Heart_Attack_1, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Pink_Sugar_Heart_Attack_1, Condition( function Trig_Pink_Sugar_Heart_Attack_1_Conditions ) )
    call TriggerAddAction( gg_trg_Pink_Sugar_Heart_Attack_1, function Trig_Pink_Sugar_Heart_Attack_1_Actions )
endfunction

//===========================================================================
// Trigger: Pink Sugar Heart Attack 2
//===========================================================================
function Trig_Pink_Sugar_Heart_Attack_2_Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_LoopInteger != udg_PinkSugarIndex ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pink_Sugar_Heart_Attack_2_Func001Func001Func003C takes nothing returns boolean
    if ( not ( udg_PinkSugarIndex == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pink_Sugar_Heart_Attack_2_Func001Func001C takes nothing returns boolean
    if ( not ( udg_PinkSugarHitCount[udg_LoopInteger] <= 10 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pink_Sugar_Heart_Attack_2_Actions takes nothing returns nothing
    set udg_LoopInteger = 1
    loop
        exitwhen udg_LoopInteger > udg_PinkSugarIndex
        if ( Trig_Pink_Sugar_Heart_Attack_2_Func001Func001C() ) then
            set udg_PinkSugarPoint = GetUnitLoc(udg_PinkSugarCaster[udg_LoopInteger])
            call CreateNUnitsAtLoc( 1, 'h01F', GetOwningPlayer(udg_PinkSugarCaster[udg_LoopInteger]), udg_PinkSugarPoint, bj_UNIT_FACING )
            call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
            call RemoveLocation(udg_PinkSugarPoint)
            call UnitAddAbilityBJ( 'A01U', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A01U', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A037', udg_PinkSugarCaster[udg_LoopInteger]) )
            call IssueTargetOrderBJ( GetLastCreatedUnit(), "thunderbolt", udg_PinkSugarTarget[udg_LoopInteger] )
            set udg_PinkSugarHitCount[udg_LoopInteger] = ( udg_PinkSugarHitCount[udg_LoopInteger] + 1 )
        else
            if ( Trig_Pink_Sugar_Heart_Attack_2_Func001Func001Func001C() ) then
                set udg_PinkSugarCaster[udg_LoopInteger] = udg_PinkSugarCaster[udg_PinkSugarIndex]
                set udg_PinkSugarTarget[udg_LoopInteger] = udg_PinkSugarTarget[udg_PinkSugarIndex]
                set udg_PinkSugarHitCount[udg_LoopInteger] = udg_PinkSugarHitCount[udg_PinkSugarIndex]
                set udg_LoopInteger = ( udg_LoopInteger - 1 )
            else
            endif
            set udg_PinkSugarIndex = ( udg_PinkSugarIndex - 1 )
            if ( Trig_Pink_Sugar_Heart_Attack_2_Func001Func001Func003C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        endif
        set udg_LoopInteger = udg_LoopInteger + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Pink_Sugar_Heart_Attack_2 takes nothing returns nothing
    set gg_trg_Pink_Sugar_Heart_Attack_2 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Pink_Sugar_Heart_Attack_2 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Pink_Sugar_Heart_Attack_2, 0.35 )
    call TriggerAddAction( gg_trg_Pink_Sugar_Heart_Attack_2, function Trig_Pink_Sugar_Heart_Attack_2_Actions )
endfunction

//===========================================================================
// Trigger: Shine Aqua Illusion Cast
//===========================================================================
function Trig_Shine_Aqua_Illusion_Cast_Func032C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_Shine_Aqua_Illusion_Effects) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shine_Aqua_Illusion_Cast_Actions takes nothing returns nothing
    local unit c = GetSpellAbilityUnit()
    local unit t = GetSpellTargetUnit()
    local real x0 = GetUnitX(c)
    local real y0 = GetUnitY(c)
    local real x1 = GetUnitX(t)
    local real y1 = GetUnitY(t)
    local location l0 = GetUnitLoc(c)
    local location l1 = GetUnitLoc(t)
    local real z0 = GetLocationZ(l0) + GetUnitFlyHeight(c) + udg_sorWitherLightZ
    local real z1 = GetLocationZ(l1) + GetUnitFlyHeight(t) + udg_sorWitherLightZ
    call RemoveLocation(l1)
    set l1 = null
    set udg_tempUnit0 = c
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempUnit1 = t
    set udg_tempInteger1 = GetHandleId(udg_tempUnit1)
    set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
    call GroupAddUnitSimple( udg_tempUnit0, udg_sorWitherCasters )
    set udg_sorCountWither = ( udg_sorCountWither + 1 )
    call CreateNUnitsAtLoc(1, 'h025', udg_tempPlayer, l0, bj_UNIT_FACING)
    call RemoveLocation(l0)
    set l0 = null
    set udg_tempUnit2 = GetLastCreatedUnit()
    call SetUnitAbilityLevelSwapped( 'A024', udg_tempUnit2, GetUnitAbilityLevelSwapped('A00K', gg_unit_H002_0126) )
    call SaveUnitHandleBJ( udg_tempUnit2, StringHashBJ("buff0"), udg_tempInteger0, udg_sorHashWither )
    call SaveUnitHandleBJ( udg_tempUnit1, StringHashBJ("target"), udg_tempInteger0, udg_sorHashWither )
    call SaveRealBJ( ( udg_sorWitherDamageBase * ( udg_intervalAbilityProjectile * I2R(GetUnitAbilityLevelSwapped('A00K', gg_unit_H002_0126)) ) ), StringHashBJ("dpt"), udg_tempInteger0, udg_sorHashWither )
    set udg_tempLight = AddLightningEx("DRAM", true, x0, y0, z0, x1, y1, z1)
    call SaveLightningHandleBJ( udg_tempLight, StringHashBJ("light"), udg_tempInteger0, udg_sorHashWither )
    call SetLightningColorBJ( udg_tempLight, 0.40, 0.60, 1.00, 1 )
    call SaveIntegerBJ( 0, StringHashBJ("effecttimer"), udg_tempInteger0, udg_sorHashWither )
    if ( Trig_Shine_Aqua_Illusion_Cast_Func032C() ) then
        call EnableTrigger( gg_trg_Shine_Aqua_Illusion_Effects )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Shine_Aqua_Illusion_Cast takes nothing returns nothing
    set gg_trg_Shine_Aqua_Illusion_Cast = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Shine_Aqua_Illusion_Cast, function Trig_Shine_Aqua_Illusion_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Shine Aqua Illusion Effects
//===========================================================================
function Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func011C takes nothing returns boolean
    if ( not ( udg_tempInteger1 == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func012001 takes nothing returns boolean
    return ( IsUnitDeadBJ(udg_tempUnit2) == true )
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func012002 takes nothing returns boolean
    return ( DistanceBetweenPoints(udg_tempLoc0, udg_tempLoc1) > udg_sorWitherRangeMax )
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004C takes nothing returns boolean
    if ( not GetBooleanOr( Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func012001(), Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func012002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005C takes nothing returns boolean
    if ( not ( GetUnitCurrentOrder(udg_tempUnit0) != String2OrderIdBJ("drain") ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001Func001A takes nothing returns nothing
    set udg_tempUnit0 = GetEnumUnit()
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempLight = LoadLightningHandleBJ(StringHashBJ("light"), udg_tempInteger0, udg_sorHashWither)
    set udg_tempUnit1 = LoadUnitHandleBJ(StringHashBJ("buff0"), udg_tempInteger0, udg_sorHashWither)
    if ( Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005C() ) then
        call GroupRemoveUnitSimple( udg_tempUnit0, udg_sorWitherCasters )
        set udg_sorCountWither = ( udg_sorCountWither - 1 )
        call RemoveUnit( udg_tempUnit1 )
        call DestroyLightningBJ( udg_tempLight )
        call FlushChildHashtableBJ( udg_tempInteger0, udg_sorHashWither )
    else
        set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
        set udg_tempUnit2 = LoadUnitHandleBJ(StringHashBJ("target"), udg_tempInteger0, udg_sorHashWither)
        set udg_tempLoc1 = GetUnitLoc(udg_tempUnit2)
        if ( Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004C() ) then
            call IssueImmediateOrderBJ( udg_tempUnit0, "stop" )
        else
            set udg_tempReal0 = GetLocationZ(udg_tempLoc0) + GetUnitFlyHeight(udg_tempUnit0) + udg_sorWitherLightZ
            set udg_tempReal1 = GetLocationZ(udg_tempLoc1) + GetUnitFlyHeight(udg_tempUnit2) + udg_sorWitherLightZ
            call MoveLightningEx(udg_tempLight, true, GetLocationX(udg_tempLoc0), GetLocationY(udg_tempLoc0), udg_tempReal0, GetLocationX(udg_tempLoc1), GetLocationY(udg_tempLoc1), udg_tempReal1)
            call RemoveLocation(udg_tempLoc0)
            set udg_tempLoc0 = null
            call RemoveLocation(udg_tempLoc1)
            set udg_tempLoc1 = null
            set udg_tempReal0 = LoadRealBJ(StringHashBJ("dpt"), udg_tempInteger0, udg_sorHashWither)
            call UnitDamageTargetBJ( udg_tempUnit0, udg_tempUnit2, udg_tempReal0, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
            set udg_tempInteger1 = LoadIntegerBJ(StringHashBJ("effecttimer"), udg_tempInteger0, udg_sorHashWither)
            if ( Trig_Shine_Aqua_Illusion_Effects_Func001Func001Func005Func004Func011C() ) then
                call IssueTargetOrderBJ( udg_tempUnit1, "slow", udg_tempUnit2 )
                call SaveIntegerBJ( 5, StringHashBJ("effecttimer"), udg_tempInteger0, udg_sorHashWither )
            else
                call SaveIntegerBJ( ( udg_tempInteger1 - 1 ), StringHashBJ("effecttimer"), udg_tempInteger0, udg_sorHashWither )
            endif
        endif
    endif
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Func001C takes nothing returns boolean
    if ( not ( udg_sorCountWither == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shine_Aqua_Illusion_Effects_Actions takes nothing returns nothing
    if ( Trig_Shine_Aqua_Illusion_Effects_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
        call ForGroupBJ( udg_sorWitherCasters, function Trig_Shine_Aqua_Illusion_Effects_Func001Func001A )
    endif
endfunction

//===========================================================================
function InitTrig_Shine_Aqua_Illusion_Effects takes nothing returns nothing
    set gg_trg_Shine_Aqua_Illusion_Effects = CreateTrigger(  )
    call DisableTrigger( gg_trg_Shine_Aqua_Illusion_Effects )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Shine_Aqua_Illusion_Effects, 0.03 )
    call TriggerAddAction( gg_trg_Shine_Aqua_Illusion_Effects, function Trig_Shine_Aqua_Illusion_Effects_Actions )
endfunction

//===========================================================================
// Trigger: Cane Attack
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
    // **************************************************************************** //
    //                                                                              //
    //                              Bone Blade                                      //
    //                                      v1.6                                    //
    //                                 by: Dalvengyr                                //
    //                                                                              //
    // Description                                                                  //
    //      Launches a bone blade at targeted enemy unit. The bone blade will       //
    //      attack the target several times. Each successful landed attack deals    //
    //      pure damage.                                                            //
    //                                                                              //
    // Requirements                                                                 //
    //      -                                                                       //
    //                                                                              //
    // How to import                                                                //
    //      1. Import all models and icons at Import Manager to your map            //
    //      2. Copy both dummy unit and spell to your map                           //
    //      3. Copy this folder to your map                                         //
    //      4. Delete the variable creator trigger                                  //
    //                                                                              //
    // Credits                                                                      //
    //      1. BTNBonespear by Peekay                                               //
    //      2. BoneSpear.mdx by Peekay                                              //
    //      3. dummy.mdx by Vexorian                                                //
    //                                                                              //
    // Link                                                                         //
    //      hiveworkshop.com/forums/spells-569/bone-blade-v1-0-a-255874/            //
    //                                                                              //
    // **************************************************************************** //

    // **************************************************************************** //
    //                                                                              //
    //                              CONFIGURATION                                   //
    //                                                                              //
    
    // 1. Dummy unit's raw code at Object Editor                                    //
    constant function BB__DummyID takes nothing returns integer
        return 'h02A'
    endfunction
    
    // 2. Main spell raw code at Object Editor                                      //
    constant function BB__SpellID takes nothing returns integer
        return 'A003'
    endfunction
    
    // 3. Accuracy of the spell. Just leave it                                      //
    constant function BB__Accuracy takes nothing returns real
        return 0.0312500
    endfunction
    
    // 4. File path of the missile                                                  //
    constant function BB__MissileSfx takes nothing returns string
        return "war3mapImported\\CaneProd.mdx"
    endfunction
    
    // 5. Attached sfx upon hit                                                     //
    constant function BB__HitSfx takes nothing returns string
        return "Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl"
    endfunction
    
    // 6. Attachment point for hit sfx                                              //
    constant function BB__HitSfxPt takes nothing returns string
        return "origin"
    endfunction
    
    // 7. Normal height Z for missiles                                              //
    constant function BB__MissileZ takes nothing returns real
        return 40.0
    endfunction
    
    // 8. Higher toleration makes the missile become less precise                   //
    // Toleration is additional angle to tolerate the missiles when they are aiming //
    // for their target. So they can start dashing earlier even before they are     //
    // successfully facing at the target                                            //
    constant function BB__Toleration takes nothing returns real
        return 0.0
    endfunction
    
    // 9. Hit radius of each missile. Maximum radius for missiles to hit/attack     //
    // their targets                                                                //
    constant function BB__HitRadius takes nothing returns real
        return 100.0
    endfunction
    
    // 10. Turn rate of missiles when they are dashing at target (at high speed)    //
    constant function BB__MissileTurnRateMin takes integer level returns real
        return 1.0
    endfunction
    
    // 11. Turn rate of missiles when they are turning around (at low speed)        //
    // Logically, this one should have higher value than the other one (minimum)    //
    constant function BB__MissileTurnRateMax takes integer level returns real
        return 4.0
    endfunction
    
    // 12. Speed of missiles when they are turning (aiming) for the target          //
    constant function BB__MissileSpeedMin takes integer level returns real
        return 10.0
    endfunction
    
    // 13. Max speed of missiles when they are dashing at their targets             //
    constant function BB__MissileSpeedMax takes integer level returns real
        return 25.0
    endfunction
    
    // 14. Acceleration rate after missiles are turning (aiming)                    //
    constant function BB__MissileAcceleration takes integer level returns real
        return 2.5
    endfunction
    
    // 15. Deacceleration (braking) rate after missiles hit/miss their target       //
    constant function BB__MissileDeacceleration takes integer level returns real
        return 1.5
    endfunction
    
    // 16. Distance extension when missile starts to brake                          //
    constant function BB__MissileBrakePoint takes integer level returns real
        return 200.0
    endfunction
    
    // 17. Dealt damage on hit                                                      //
    constant function BB__DealtDamage takes integer level returns real
        return 500.0
    endfunction
    
    // 18. Lifespan duration for each missile                                       //
    constant function BB__Duration takes integer level returns real
        return 18.0
    endfunction
    
    // 19. Maximum number of attacks before missiles are expired                    //
    constant function BB__AttackCount takes integer level returns integer
        return 4
    endfunction
    
    // 20. Damage type of dealt damage                                              //
    constant function BB__DamageType takes nothing returns damagetype
        return DAMAGE_TYPE_NORMAL
    endfunction
    
    // 21. Attack type of dealt damage                                              //
    constant function BB__AttackType takes nothing returns attacktype
        return ATTACK_TYPE_CHAOS
    endfunction
    
    // 22. Weapon type of dealt damage                                              //
    constant function BB__WeaponType takes nothing returns weapontype
        return WEAPON_TYPE_WHOKNOWS
    endfunction
    
    // 23. Decay time for missiles when death                                       //
    constant function BB__DecayTime takes nothing returns real
        return 5.0
    endfunction
    
    // 24. Additional effect attached to the target on hit                          //
    function BB__AdditionalEffect takes unit target returns nothing
        // Put here //
    endfunction
    
    //                                                                              //
    //                              END OF CONFIGURATION                            //
    //                                                                              //
    // **************************************************************************** //
    
    // Furthermore, edit them by your own risk!
    
    // Function to get distance between given coordinates
    function BB__GetDistance takes real x, real y, real xt, real yt returns real
        return SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
    endfunction
    
    // Function to return facing angle between coordinates (in radian)
    function BB__GetAngle takes real x, real y, real xt, real yt returns real
        return Atan2(yt - y, xt - x)
    endfunction
    
    // Function to check whether a unit is alive or not
    function IsUnitAlive takes unit id returns boolean
        return not IsUnitType(id, UNIT_TYPE_DEAD) and GetUnitTypeId(id) != 0
    endfunction
    
    function BB__Deindex takes integer i returns nothing
    
        set udg_BB__Caster[i] = udg_BB__Caster[udg_BB__Total]
        set udg_BB__Player[i] = udg_BB__Player[udg_BB__Total]
        set udg_BB__Target[i] = udg_BB__Target[udg_BB__Total]
        set udg_BB__Angle[i] = udg_BB__Angle[udg_BB__Total]
        set udg_BB__Missile[i] = udg_BB__Missile[udg_BB__Total]
        set udg_BB__Sfx[i] = udg_BB__Sfx[udg_BB__Total]
        set udg_BB__Dx[i] = udg_BB__Dx[udg_BB__Total]
        set udg_BB__Dc[i] = udg_BB__Dc[udg_BB__Total]
        set udg_BB__State[i] = udg_BB__State[udg_BB__Total]
        set udg_BB__SpeedMin[i] = udg_BB__SpeedMin[udg_BB__Total]
        set udg_BB__SpeedMax[i] = udg_BB__SpeedMax[udg_BB__Total]
        set udg_BB__Acceleration[i] = udg_BB__Acceleration[udg_BB__Total]
        set udg_BB__Deacceleration[i] = udg_BB__Deacceleration[udg_BB__Total]
        set udg_BB__BrakePoint[i] = udg_BB__BrakePoint[udg_BB__Total]
        set udg_BB__TurnRateMax[i] = udg_BB__TurnRateMax[udg_BB__Total]
        set udg_BB__TurnRateMin[i] = udg_BB__TurnRateMin[udg_BB__Total]
        set udg_BB__Speed[i] = udg_BB__Speed[udg_BB__Total]
        set udg_BB__Damage[i] = udg_BB__Damage[udg_BB__Total]
        set udg_BB__Count[i] = udg_BB__Count[udg_BB__Total]
        set udg_BB__Duration[i] = udg_BB__Duration[udg_BB__Total]
        
    endfunction

    function BB__onPeriodic takes nothing returns nothing
        
        local integer i = 1
        local real a
        local real x
        local real y
        local real x2
        local real y2
        local unit f
        
        loop
            exitwhen i > udg_BB__Total

            set x  = GetUnitX(udg_BB__Missile[i])
            set y  = GetUnitY(udg_BB__Missile[i])
            set x2 = GetUnitX(udg_BB__Target[i])
            set y2 = GetUnitY(udg_BB__Target[i])
            set a  = BB__GetAngle(x, y, x2, y2)
            set udg_BB__Duration[i] = udg_BB__Duration[i] - BB__Accuracy()
            
            if udg_BB__State[i] then
                if udg_BB__Count[i] > 0 then
                    // Detect the target as long as missile is still in dashing state
                    call GroupEnumUnitsInRange(udg_BB__Group, x, y, BB__HitRadius(), null)
                    loop
                        set f = FirstOfGroup(udg_BB__Group)
                        exitwhen f == null
                        if f == udg_BB__Target[i] and IsUnitAlive(udg_BB__Target[i]) then
                            set udg_BB__Count[i] = udg_BB__Count[i] - 1
                            call UnitDamageTarget(udg_BB__Caster[i], udg_BB__Target[i], udg_BB__Damage[i], false, false, BB__AttackType(), BB__DamageType(), BB__WeaponType())
                            call DestroyEffect(AddSpecialEffectTarget(BB__HitSfx(), udg_BB__Target[i], BB__HitSfxPt()))
                            call BB__AdditionalEffect(udg_BB__Target[i])
                            if udg_BB__Count[i] > 0 then
                                set udg_BB__State[i] = false
                            endif
                        endif
                        call GroupRemoveUnit(udg_BB__Group, f)
                    endloop
                else
                    set udg_BB__Duration[i] = 0.0
                endif
                
                if udg_BB__Dc[i] < udg_BB__Dx[i] then
                
                    set udg_BB__Speed[i] = udg_BB__Speed[i] + udg_BB__Acceleration[i]
                    set udg_BB__Dc[i] = udg_BB__Dc[i] + udg_BB__Speed[i]
                    if udg_BB__Speed[i] > udg_BB__SpeedMax[i] then
                        set udg_BB__Speed[i] = udg_BB__SpeedMax[i]
                    endif
                    
                    // Adjust missile's facing
                    if udg_BB__TurnRateMin[i] > 0 and Cos(udg_BB__Angle[i]-a) < Cos(udg_BB__TurnRateMin[i]) then
                        if Sin(a-udg_BB__Angle[i]) >= 0 then
                            set udg_BB__Angle[i] = udg_BB__Angle[i] + udg_BB__TurnRateMin[i]
                        else
                            set udg_BB__Angle[i] = udg_BB__Angle[i] - udg_BB__TurnRateMin[i]
                        endif
                    else
                        set udg_BB__Angle[i] = a
                    endif
                else
                    set udg_BB__State[i] = false
                endif
            else
                if udg_BB__Speed[i] > udg_BB__SpeedMin[i] then
                    set udg_BB__Speed[i] = udg_BB__Speed[i] - udg_BB__Deacceleration[i]
                    if udg_BB__Speed[i] < udg_BB__SpeedMin[i] then
                        set udg_BB__Speed[i] = udg_BB__SpeedMin[i]
                    endif
                else
                    if udg_BB__TurnRateMax[i] > 0 and Cos(udg_BB__Angle[i]-a) < Cos(udg_BB__TurnRateMax[i]) then
                        if Sin(a-udg_BB__Angle[i]) >= 0 then
                            set udg_BB__Angle[i] = udg_BB__Angle[i] + udg_BB__TurnRateMax[i]
                        else
                            set udg_BB__Angle[i] = udg_BB__Angle[i] - udg_BB__TurnRateMax[i]
                        endif
                    else
                        set udg_BB__Angle[i] = a
                        set udg_BB__Dc[i] = 0.0
                        set udg_BB__Dx[i] = BB__GetDistance(x, y, x2, y2) + udg_BB__BrakePoint[i]
                        set udg_BB__State[i] = true
                    endif
                endif
            endif
            
            set x = x + udg_BB__Speed[i] * Cos(udg_BB__Angle[i])
            set y = y + udg_BB__Speed[i] * Sin(udg_BB__Angle[i])
            call SetUnitFacing(udg_BB__Missile[i], udg_BB__Angle[i] * bj_RADTODEG)
            
            if x < udg_BB__BoundMaxX and x > udg_BB__BoundMinX and y < udg_BB__BoundMaxY and y > udg_BB__BoundMinY then
                call SetUnitX(udg_BB__Missile[i], x)
                call SetUnitY(udg_BB__Missile[i], y)
            else
                // Kill the missile if not in map boudaries
                set udg_BB__Duration[i] = 0.0
            endif
            
            if udg_BB__Duration[i] <= 0.0 then
                call DestroyEffect(udg_BB__Sfx[i])
                call UnitApplyTimedLife(udg_BB__Missile[i], 'BTLF', BB__DecayTime())
                
                if i != udg_BB__Total then
                    call BB__Deindex(i)
                endif
                
                set udg_BB__Total = udg_BB__Total - 1
                if udg_BB__Total == 0 then
                    call PauseTimer(udg_BB__Timer)
                else
                    set i = i - 1
                endif
            endif
            set i = i + 1
        endloop
        
    endfunction

    function BB__onCast takes nothing returns boolean
    
        local real x
        local real y
        local integer l
        
        if GetSpellAbilityId() == BB__SpellID() then
        
            set udg_BB__Total = udg_BB__Total + 1
            set udg_BB__Caster[udg_BB__Total] = GetTriggerUnit()
            set udg_BB__Player[udg_BB__Total] = GetTriggerPlayer()
            
            set x = GetUnitX(udg_BB__Caster[udg_BB__Total])
            set y = GetUnitY(udg_BB__Caster[udg_BB__Total])
            set l = GetUnitAbilityLevel(udg_BB__Caster[udg_BB__Total], BB__SpellID())
            
            set udg_BB__Target[udg_BB__Total] = GetSpellTargetUnit()
            set udg_BB__Angle[udg_BB__Total] = GetUnitFacing(udg_BB__Caster[udg_BB__Total]) * bj_DEGTORAD
            set udg_BB__Missile[udg_BB__Total] = CreateUnit(udg_BB__Player[udg_BB__Total], BB__DummyID(), x, y, udg_BB__Angle[udg_BB__Total] * bj_RADTODEG)
            set udg_BB__Sfx[udg_BB__Total] = AddSpecialEffectTarget(BB__MissileSfx(), udg_BB__Missile[udg_BB__Total], "origin")
            set udg_BB__Dx[udg_BB__Total] = 0.0
            set udg_BB__Dc[udg_BB__Total] = 0.0
            
            set udg_BB__State[udg_BB__Total] = false
            set udg_BB__SpeedMin[udg_BB__Total] = BB__MissileSpeedMin(l)
            set udg_BB__SpeedMax[udg_BB__Total] = BB__MissileSpeedMax(l)
            set udg_BB__Acceleration[udg_BB__Total] = BB__MissileAcceleration(l)
            set udg_BB__Deacceleration[udg_BB__Total] = BB__MissileDeacceleration(l)
            set udg_BB__BrakePoint[udg_BB__Total] = BB__MissileBrakePoint(l)
            
            set udg_BB__TurnRateMax[udg_BB__Total] = BB__MissileTurnRateMax(l) * bj_DEGTORAD
            set udg_BB__TurnRateMin[udg_BB__Total] = BB__MissileTurnRateMin(l) * bj_DEGTORAD
            set udg_BB__Speed[udg_BB__Total] = udg_BB__SpeedMin[udg_BB__Total]
            set udg_BB__Damage[udg_BB__Total] = BB__DealtDamage(l)
            set udg_BB__Count[udg_BB__Total] = BB__AttackCount(l)
            set udg_BB__Duration[udg_BB__Total] = BB__Duration(l)
            
            if UnitAddAbility(udg_BB__Missile[udg_BB__Total], 'Amrf') and UnitRemoveAbility(udg_BB__Missile[udg_BB__Total], 'Amrf') then
            endif
            call SetUnitFlyHeight(udg_BB__Missile[udg_BB__Total], BB__MissileZ(), 0.0)
            
            if udg_BB__Total == 1 then
                call TimerStart(udg_BB__Timer, BB__Accuracy(), true, function BB__onPeriodic)
            endif
        endif
        
        return false
    endfunction

    function InitTrig_Cane_Attack takes nothing returns nothing

        set gg_trg_Cane_Attack = CreateTrigger()
        set udg_BB__Timer = CreateTimer()
        set udg_BB__Group = CreateGroup()
        set udg_BB__TAU = 2.0 * bj_PI
        
        // Set the map bound for later use
        set udg_BB__BoundMaxX = GetRectMaxX(bj_mapInitialPlayableArea)
        set udg_BB__BoundMinX = GetRectMinX(bj_mapInitialPlayableArea)
        set udg_BB__BoundMaxY = GetRectMaxY(bj_mapInitialPlayableArea)
        set udg_BB__BoundMinY = GetRectMinY(bj_mapInitialPlayableArea)
        
        call TriggerRegisterAnyUnitEventBJ(gg_trg_Cane_Attack, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        call TriggerAddCondition(gg_trg_Cane_Attack, Condition(function BB__onCast))
        
    endfunction
//===========================================================================
// Trigger: GUI SpellEvent
//===========================================================================
function Trig_GUI_SpellEvent_Actions takes nothing returns nothing
    local integer i = 0
    // -
    call ExecuteFunc("InitSpellEvent")
    // -
    call InitHashtableBJ(  )
    set udg_SpellEventHash = GetLastCreatedHashtableBJ()
    // -
    loop
    exitwhen udg_SpellEventAbility[i] == 0
    call SaveTriggerHandle(udg_SpellEventHash, udg_SpellEventAbility[i], 0, udg_SpellEventTrigger[i])
    set i = i + 1
    endloop
    endfunction
    // -
    function OnSpell takes nothing returns boolean
    local trigger t = LoadTriggerHandle(udg_SpellEventHash, GetSpellAbilityId(), 0)
    // -
    call TriggerExecute(t)
    // -
    set t = null
    return false
    endfunction
    // -
    function InitSpellEvent takes nothing returns nothing
        local trigger t = CreateTrigger()
        call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
        call TriggerAddCondition(t, Condition(function OnSpell))
        set t = null
endfunction

//===========================================================================
function InitTrig_GUI_SpellEvent takes nothing returns nothing
    set gg_trg_GUI_SpellEvent = CreateTrigger(  )
    call TriggerAddAction( gg_trg_GUI_SpellEvent, function Trig_GUI_SpellEvent_Actions )
endfunction

//===========================================================================
// Trigger: Abilities
//===========================================================================
function Trig_Abilities_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_sorHashOrb = GetLastCreatedHashtableBJ()
    set udg_SpellEventAbility[0] = 'A00F'
    set udg_SpellEventTrigger[0] = gg_trg_Orb_Cast
    call InitHashtableBJ(  )
    set udg_sorHashWither = GetLastCreatedHashtableBJ()
    set udg_SpellEventAbility[1] = 'A00K'
    set udg_SpellEventTrigger[1] = gg_trg_Shine_Aqua_Illusion_Cast
    call InitHashtableBJ(  )
    set udg_sorHashFlame = GetLastCreatedHashtableBJ()
    set udg_SpellEventAbility[2] = 'A01K'
    set udg_SpellEventTrigger[2] = gg_trg_Mars_Flame_Sniper_Cast
    call InitHashtableBJ(  )
    set udg_sorHashIgnite = GetLastCreatedHashtableBJ()
    // -
    call TriggerExecute( gg_trg_GUI_SpellEvent )
    // -
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

//===========================================================================
function InitTrig_Abilities takes nothing returns nothing
    set gg_trg_Abilities = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Abilities, function Trig_Abilities_Actions )
endfunction

//===========================================================================
// Trigger: Orb Cast
//===========================================================================
function Trig_Orb_Cast_Func025C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_Orb_Missile) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Cast_Actions takes nothing returns nothing
    set udg_tempUnit0 = GetSpellAbilityUnit()
    set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
    set udg_tempInteger0 = GetHeroLevel(udg_tempUnit0)
    set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
    set udg_tempLoc1 = GetSpellTargetLoc()
    set udg_tempReal0 = AngleBetweenPoints(udg_tempLoc0, udg_tempLoc1)
    call RemoveLocation(udg_tempLoc1)
    set udg_tempLoc1 = null
    set udg_tempLoc2 = PolarProjectionBJ(udg_tempLoc0, udg_sorOrbSpeed, udg_tempReal0)
    call RemoveLocation(udg_tempLoc0)
    set udg_tempLoc0 = null
    call CreateNUnitsAtLoc( 1, 'h023', udg_tempPlayer, udg_tempLoc2, udg_tempReal0 )
    call RemoveLocation(udg_tempLoc2)
    set udg_tempLoc2 = null
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_sorOrbGroup )
    set udg_sorCountOrb = ( udg_sorCountOrb + 1 )
    set udg_tempInteger1 = GetHandleIdBJ(GetLastCreatedUnit())
    call SaveUnitHandleBJ( udg_tempUnit0, StringHashBJ("source"), udg_tempInteger1, udg_sorHashOrb )
    call SaveIntegerBJ( udg_tempInteger0, StringHashBJ("level"), udg_tempInteger1, udg_sorHashOrb )
    call SaveRealBJ( udg_tempReal0, StringHashBJ("angle"), udg_tempInteger1, udg_sorHashOrb )
    call SaveRealBJ( udg_tempReal0, StringHashBJ("spin"), udg_tempInteger1, udg_sorHashOrb )
    call SaveRealBJ( 0.00, StringHashBJ("distance"), udg_tempInteger1, udg_sorHashOrb )
    call SaveIntegerBJ( 0, StringHashBJ("shardtimer"), udg_tempInteger1, udg_sorHashOrb )
    call SaveBooleanBJ( false, StringHashBJ("exp"), udg_tempInteger1, udg_sorHashOrb )
    if ( Trig_Orb_Cast_Func025C() ) then
        call EnableTrigger( gg_trg_Orb_Missile )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Orb_Cast takes nothing returns nothing
    set gg_trg_Orb_Cast = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Orb_Cast, function Trig_Orb_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Orb Missile
//===========================================================================
function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_tempPlayer) == true )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002001(), Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002002() )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002001(), Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002002() )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Orb_Missile_Func002Func001Func006Func003Func001002003001(), Trig_Orb_Missile_Func002Func001Func006Func003Func001002003002() )
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003Func002C takes nothing returns boolean
    if ( not ( IsUnitGroupEmptyBJ(udg_tempGroup) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func003C takes nothing returns boolean
    if ( not ( LoadBooleanBJ(StringHashBJ("exp"), udg_tempInteger0, udg_sorHashOrb) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func009Func006Func013C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_Heart_Missile) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Func002Func001Func006Func009C takes nothing returns boolean
    if ( not ( udg_tempInteger2 == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Func002Func001Func006C takes nothing returns boolean
    if ( not ( udg_tempReal0 >= udg_sorOrbRange ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Func002Func001A takes nothing returns nothing
    set udg_tempUnit0 = GetEnumUnit()
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempReal0 = LoadRealBJ(StringHashBJ("distance"), udg_tempInteger0, udg_sorHashOrb)
    set udg_tempReal1 = LoadRealBJ(StringHashBJ("angle"), udg_tempInteger0, udg_sorHashOrb)
    set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
    if ( Trig_Orb_Missile_Func002Func001Func006C() ) then
        call GroupRemoveUnitSimple( udg_tempUnit0, udg_sorOrbGroup )
        call KillUnit( udg_tempUnit0 )
        set udg_sorCountOrb = ( udg_sorCountOrb - 1 )
        // -
        // -
        call FlushChildHashtableBJ( udg_tempInteger0, udg_sorHashOrb )
    else
        set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
        set udg_tempLoc1 = PolarProjectionBJ(udg_tempLoc0, udg_sorOrbSpeed, udg_tempReal1)
        if ( Trig_Orb_Missile_Func002Func001Func006Func003C() ) then
            set udg_tempGroup = GetUnitsInRangeOfLocMatching(udg_sorOrbRadius, udg_tempLoc0, Condition(function Trig_Orb_Missile_Func002Func001Func006Func003Func001002003))
            if ( Trig_Orb_Missile_Func002Func001Func006Func003Func002C() ) then
                call SaveBooleanBJ( true, StringHashBJ("exp"), udg_tempInteger0, udg_sorHashOrb )
            else
            endif
            call GroupClear( udg_tempGroup )
            call DestroyGroup(udg_tempGroup)
        else
        endif
        call SetUnitPositionLoc( udg_tempUnit0, udg_tempLoc1 )
        call RemoveLocation(udg_tempLoc1)
        set udg_tempLoc1 = null
        // -
        set udg_tempInteger2 = LoadIntegerBJ(StringHashBJ("shardtimer"), udg_tempInteger0, udg_sorHashOrb)
        if ( Trig_Orb_Missile_Func002Func001Func006Func009C() ) then
            set udg_tempUnit1 = LoadUnitHandleBJ(StringHashBJ("source"), udg_tempInteger0, udg_sorHashOrb)
            call SaveIntegerBJ( 2, StringHashBJ("shardtimer"), udg_tempInteger0, udg_sorHashOrb )
            set udg_tempReal1 = LoadRealBJ(StringHashBJ("spin"), udg_tempInteger0, udg_sorHashOrb)
            call SaveRealBJ( ( udg_tempReal1 + udg_sorOrbSpin ), StringHashBJ("spin"), udg_tempInteger0, udg_sorHashOrb )
            set bj_forLoopAIndex = 0
            set bj_forLoopAIndexEnd = 3
            loop
                exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
                set udg_tempReal1 = ( udg_tempReal1 + ( 90.00 * I2R(GetForLoopIndexA()) ) )
                set udg_tempLoc1 = PolarProjectionBJ(udg_tempLoc0, ( 0.50 * udg_sorOrbCollision ), udg_tempReal1)
                call CreateNUnitsAtLoc( 1, 'h024', udg_tempPlayer, udg_tempLoc1, udg_tempReal1 )
                call RemoveLocation(udg_tempLoc1)
                set udg_tempLoc1 = null
                call GroupAddUnitSimple( GetLastCreatedUnit(), udg_sorOrbShardGroup )
                set udg_sorCountShard = ( udg_sorCountShard + 1 )
                set udg_tempInteger1 = GetHandleIdBJ(GetLastCreatedUnit())
                call SaveUnitHandleBJ( udg_tempUnit1, StringHashBJ("source"), udg_tempInteger1, udg_sorHashOrb )
                call SaveIntegerBJ( LoadIntegerBJ(StringHashBJ("level"), udg_tempInteger0, udg_sorHashOrb), StringHashBJ("level"), udg_tempInteger1, udg_sorHashOrb )
                call SaveRealBJ( udg_tempReal1, StringHashBJ("angle"), udg_tempInteger1, udg_sorHashOrb )
                call SaveRealBJ( 0.00, StringHashBJ("distance"), udg_tempInteger1, udg_sorHashOrb )
                if ( Trig_Orb_Missile_Func002Func001Func006Func009Func006Func013C() ) then
                    call EnableTrigger( gg_trg_Heart_Missile )
                else
                endif
                set bj_forLoopAIndex = bj_forLoopAIndex + 1
            endloop
        else
            call SaveIntegerBJ( ( udg_tempInteger2 - 1 ), StringHashBJ("shardtimer"), udg_tempInteger0, udg_sorHashOrb )
        endif
        // -
        call SaveRealBJ( ( udg_tempReal0 + udg_sorOrbSpeed ), StringHashBJ("distance"), udg_tempInteger0, udg_sorHashOrb )
    endif
    call RemoveLocation(udg_tempLoc0)
    set udg_tempLoc0 = null
endfunction

function Trig_Orb_Missile_Func002C takes nothing returns boolean
    if ( not ( udg_sorCountOrb == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Orb_Missile_Actions takes nothing returns nothing
    if ( Trig_Orb_Missile_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
        call ForGroupBJ( udg_sorOrbGroup, function Trig_Orb_Missile_Func002Func001A )
    endif
endfunction

//===========================================================================
function InitTrig_Orb_Missile takes nothing returns nothing
    set gg_trg_Orb_Missile = CreateTrigger(  )
    call DisableTrigger( gg_trg_Orb_Missile )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Orb_Missile, 0.03 )
    call TriggerAddAction( gg_trg_Orb_Missile, function Trig_Orb_Missile_Actions )
endfunction

//===========================================================================
// Trigger: Heart Missile
//===========================================================================
function Trig_Heart_Missile_Func002Func001Func006002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_tempPlayer) == true )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Heart_Missile_Func002Func001Func006002003002002001(), Trig_Heart_Missile_Func002Func001Func006002003002002002() )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Heart_Missile_Func002Func001Func006002003002001(), Trig_Heart_Missile_Func002Func001Func006002003002002() )
endfunction

function Trig_Heart_Missile_Func002Func001Func006002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Heart_Missile_Func002Func001Func006002003001(), Trig_Heart_Missile_Func002Func001Func006002003002() )
endfunction

function Trig_Heart_Missile_Func002Func001Func007Func001C takes nothing returns boolean
    if ( ( IsUnitGroupEmptyBJ(udg_tempGroup) == false ) ) then
        return true
    endif
    if ( ( udg_tempReal0 >= udg_sorOrbRadius ) ) then
        return true
    endif
    return false
endfunction

function Trig_Heart_Missile_Func002Func001Func007Func012Func003Func004C takes nothing returns boolean
    if ( not ( udg_tempReal2 < udg_tempReal1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Heart_Missile_Func002Func001Func007Func012Func003A takes nothing returns nothing
    set udg_tempUnit1 = GetEnumUnit()
    set udg_tempLoc1 = GetUnitLoc(udg_tempUnit1)
    set udg_tempReal2 = DistanceBetweenPoints(udg_tempLoc0, udg_tempLoc1)
    if ( Trig_Heart_Missile_Func002Func001Func007Func012Func003Func004C() ) then
        set udg_tempReal1 = udg_tempReal2
        set udg_tempUnit2 = udg_tempUnit1
    else
    endif
    call GroupRemoveUnitSimple( udg_tempUnit1, udg_tempGroup )
endfunction

function Trig_Heart_Missile_Func002Func001Func007Func012C takes nothing returns boolean
    if ( not ( IsUnitGroupEmptyBJ(udg_tempGroup) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Heart_Missile_Func002Func001Func007C takes nothing returns boolean
    if ( not Trig_Heart_Missile_Func002Func001Func007Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Heart_Missile_Func002Func001A takes nothing returns nothing
    set udg_tempUnit0 = GetEnumUnit()
    set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempReal0 = LoadRealBJ(StringHashBJ("distance"), udg_tempInteger0, udg_sorHashOrb)
    set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
    set udg_tempGroup = GetUnitsInRangeOfLocMatching(udg_sorOrbCollision, udg_tempLoc0, Condition(function Trig_Heart_Missile_Func002Func001Func006002003))
    if ( Trig_Heart_Missile_Func002Func001Func007C() ) then
        call GroupRemoveUnitSimple( udg_tempUnit0, udg_sorOrbShardGroup )
        call KillUnit( udg_tempUnit0 )
        set udg_sorCountShard = ( udg_sorCountShard - 1 )
        // -
        if ( Trig_Heart_Missile_Func002Func001Func007Func012C() ) then
            set udg_tempReal1 = udg_sorOrbCollision
            call ForGroupBJ( udg_tempGroup, function Trig_Heart_Missile_Func002Func001Func007Func012Func003A )
            call DestroyGroup(udg_tempGroup)
            set udg_tempUnit3 = LoadUnitHandleBJ(StringHashBJ("source"), udg_tempInteger0, udg_sorHashOrb)
            set udg_tempReal3 = ( udg_sorOrbDmgBase * ( 1.00 * I2R(GetUnitAbilityLevelSwapped('A00F', gg_unit_H007_0125)) ) )
            call UnitDamageTargetBJ( udg_tempUnit3, udg_tempUnit2, udg_tempReal3, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
            call AddSpecialEffectTargetUnitBJ( "origin", udg_tempUnit2, "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl" )
            call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        else
        endif
        // -
        call FlushChildHashtableBJ( udg_tempInteger0, udg_sorHashOrb )
    else
        set udg_tempReal1 = LoadRealBJ(StringHashBJ("angle"), udg_tempInteger0, udg_sorHashOrb)
        set udg_tempLoc1 = PolarProjectionBJ(udg_tempLoc0, ( 0.50 * udg_sorOrbCollision ), udg_tempReal1)
        call SetUnitPositionLoc( udg_tempUnit0, udg_tempLoc1 )
        call RemoveLocation(udg_tempLoc1)
        set udg_tempLoc1 = null
        call SaveRealBJ( ( udg_tempReal0 + ( 0.50 * udg_sorOrbCollision ) ), StringHashBJ("distance"), udg_tempInteger0, udg_sorHashOrb )
    endif
    call RemoveLocation(udg_tempLoc0)
    set udg_tempLoc0 = null
endfunction

function Trig_Heart_Missile_Func002C takes nothing returns boolean
    if ( not ( udg_sorCountShard == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Heart_Missile_Actions takes nothing returns nothing
    if ( Trig_Heart_Missile_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
        call ForGroupBJ( udg_sorOrbShardGroup, function Trig_Heart_Missile_Func002Func001A )
    endif
endfunction

//===========================================================================
function InitTrig_Heart_Missile takes nothing returns nothing
    set gg_trg_Heart_Missile = CreateTrigger(  )
    call DisableTrigger( gg_trg_Heart_Missile )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Heart_Missile, 0.03 )
    call TriggerAddAction( gg_trg_Heart_Missile, function Trig_Heart_Missile_Actions )
endfunction

//===========================================================================
// Trigger: Moon Tiara Action Variables
//===========================================================================
function Trig_Moon_Tiara_Action_Variables_Actions takes nothing returns nothing
    set udg_SM_Ability = 'A02B'
    set udg_SM_SM_Type = 'h029'
    set udg_SM_DistanceTraveled = 20.00
    set udg_SM_HealFactor = 0.25
    set udg_SM_InitialDamage[1] = 50.00
    set udg_SM_DamagePer20DBonus = 5.00
    set udg_LoopInterval = 0.05
    call TriggerRegisterTimerEventPeriodic( gg_trg_Moon_Tiara_Action_Loop, udg_LoopInterval )
endfunction

//===========================================================================
function InitTrig_Moon_Tiara_Action_Variables takes nothing returns nothing
    set gg_trg_Moon_Tiara_Action_Variables = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Moon_Tiara_Action_Variables, function Trig_Moon_Tiara_Action_Variables_Actions )
endfunction

//===========================================================================
// Trigger: Moon Tiara Action Cast
//
// 
//===========================================================================
function Trig_Moon_Tiara_Action_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == udg_SM_Ability ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Cast_Func014C takes nothing returns boolean
    if ( not ( udg_SM_Index == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Cast_Actions takes nothing returns nothing
    set udg_SM_Index = ( udg_SM_Index + 1 )
    set udg_SM_Caster[udg_SM_Index] = GetTriggerUnit()
    set udg_SM_Target[udg_SM_Index] = GetSpellTargetUnit()
    set udg_SM_Level[udg_SM_Index] = GetUnitAbilityLevelSwapped(udg_SM_Ability, udg_SM_Caster[udg_SM_Index])
    set udg_tempPoints[1] = GetUnitLoc(udg_SM_Caster[udg_SM_Index])
    set udg_tempPoints[2] = GetUnitLoc(udg_SM_Target[udg_SM_Index])
    set udg_SM_Angle[udg_SM_Index] = AngleBetweenPoints(udg_tempPoints[1], udg_tempPoints[2])
    set udg_SM_OwnerofUnit = GetTriggerPlayer()
    set udg_SM_Damage[udg_SM_Index] = udg_SM_InitialDamage[udg_SM_Level[udg_SM_Index]]
    call CreateNUnitsAtLoc( 1, udg_SM_SM_Type, udg_SM_OwnerofUnit, udg_tempPoints[1], udg_SM_Angle[udg_SM_Index] )
    set udg_SM_SM[udg_SM_Index] = GetLastCreatedUnit()
    call RemoveLocation (udg_tempPoints[1])
    call RemoveLocation (udg_tempPoints[2])
    if ( Trig_Moon_Tiara_Action_Cast_Func014C() ) then
        call EnableTrigger( gg_trg_Moon_Tiara_Action_Loop )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Moon_Tiara_Action_Cast takes nothing returns nothing
    set gg_trg_Moon_Tiara_Action_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Tiara_Action_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Moon_Tiara_Action_Cast, Condition( function Trig_Moon_Tiara_Action_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Tiara_Action_Cast, function Trig_Moon_Tiara_Action_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Moon Tiara Action Loop
//===========================================================================
function Trig_Moon_Tiara_Action_Loop_Func001Func001Func013C takes nothing returns boolean
    if ( not ( udg_SM_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Loop_Func001Func001Func016Func021C takes nothing returns boolean
    if ( not ( udg_SM_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Loop_Func001Func001Func016C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_tempPoints[1], udg_tempPoints[2]) > udg_SM_DistanceTraveled ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Loop_Func001Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_SM_Target[udg_tempInt]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Tiara_Action_Loop_Actions takes nothing returns nothing
    set udg_tempInt = 1
    loop
        exitwhen udg_tempInt > udg_SM_Index
        if ( Trig_Moon_Tiara_Action_Loop_Func001Func001C() ) then
            set udg_tempPoints[1] = GetUnitLoc(udg_SM_SM[udg_tempInt])
            set udg_tempPoints[2] = GetUnitLoc(udg_SM_Target[udg_tempInt])
            if ( Trig_Moon_Tiara_Action_Loop_Func001Func001Func016C() ) then
                set udg_SM_Angle[udg_tempInt] = AngleBetweenPoints(udg_tempPoints[1], udg_tempPoints[2])
                set udg_tempPoints[3] = PolarProjectionBJ(udg_tempPoints[1], udg_SM_DistanceTraveled, udg_SM_Angle[udg_tempInt])
                call SetUnitPositionLocFacingBJ( udg_SM_SM[udg_tempInt], udg_tempPoints[3], udg_SM_Angle[udg_tempInt] )
                set udg_SM_Damage[udg_tempInt] = ( udg_SM_Damage[udg_tempInt] + udg_SM_DamagePer20DBonus )
                set udg_SM_HealAmount[udg_tempInt] = ( udg_SM_Damage[udg_tempInt] * udg_SM_HealFactor )
                call RemoveLocation (udg_tempPoints[3])
            else
                call KillUnit( udg_SM_SM[udg_tempInt] )
                call UnitDamageTargetBJ( udg_SM_Caster[udg_tempInt], udg_SM_Target[udg_tempInt], udg_SM_Damage[udg_tempInt], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
                call SetUnitLifeBJ( udg_SM_Caster[udg_tempInt], ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_SM_Caster[udg_tempInt]) + udg_SM_HealAmount[udg_tempInt] ) )
                set udg_SM_Caster[udg_tempInt] = udg_SM_Caster[udg_SM_Index]
                set udg_SM_Damage[udg_tempInt] = udg_SM_Damage[udg_SM_Index]
                set udg_SM_HealAmount[udg_tempInt] = udg_SM_HealAmount[udg_SM_Index]
                set udg_SM_SM[udg_tempInt] = udg_SM_SM[udg_SM_Index]
                set udg_SM_Target[udg_tempInt] = udg_SM_Target[udg_SM_Index]
                set udg_SM_Angle[udg_tempInt] = udg_SM_Angle[udg_SM_Index]
                set udg_SM_Caster[udg_SM_Index] = null
                set udg_SM_SM[udg_SM_Index] = null
                set udg_SM_Target[udg_SM_Index] = null
                set udg_SM_Index = ( udg_SM_Index - 1 )
                set udg_tempInt = ( udg_tempInt - 1 )
                if ( Trig_Moon_Tiara_Action_Loop_Func001Func001Func016Func021C() ) then
                    call DisableTrigger( GetTriggeringTrigger() )
                else
                endif
            endif
            call RemoveLocation (udg_tempPoints[1])
            call RemoveLocation (udg_tempPoints[2])
        else
            call KillUnit( udg_SM_SM[udg_tempInt] )
            set udg_SM_Caster[udg_tempInt] = udg_SM_Caster[udg_SM_Index]
            set udg_SM_Damage[udg_tempInt] = udg_SM_Damage[udg_SM_Index]
            set udg_SM_HealAmount[udg_tempInt] = udg_SM_HealAmount[udg_SM_Index]
            set udg_SM_SM[udg_tempInt] = udg_SM_SM[udg_SM_Index]
            set udg_SM_Target[udg_tempInt] = udg_SM_Target[udg_SM_Index]
            set udg_SM_Angle[udg_tempInt] = udg_SM_Angle[udg_SM_Index]
            set udg_SM_Caster[udg_SM_Index] = null
            set udg_SM_SM[udg_SM_Index] = null
            set udg_SM_Target[udg_SM_Index] = null
            set udg_SM_Index = ( udg_SM_Index - 1 )
            set udg_tempInt = ( udg_tempInt - 1 )
            if ( Trig_Moon_Tiara_Action_Loop_Func001Func001Func013C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        endif
        set udg_tempInt = udg_tempInt + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Moon_Tiara_Action_Loop takes nothing returns nothing
    set gg_trg_Moon_Tiara_Action_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Moon_Tiara_Action_Loop )
    call TriggerAddAction( gg_trg_Moon_Tiara_Action_Loop, function Trig_Moon_Tiara_Action_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Deep Submerge Learn
//===========================================================================
function Trig_Deep_Submerge_Learn_Conditions takes nothing returns boolean
    if ( not ( GetLearnedSkillBJ() == 'A01Y' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Learn_Actions takes nothing returns nothing
    call EnableTrigger( gg_trg_Deep_Submerge_Function )
    call EnableTrigger( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2 )
    call DisableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Deep_Submerge_Learn takes nothing returns nothing
    set gg_trg_Deep_Submerge_Learn = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Deep_Submerge_Learn, gg_unit_H008_0130, EVENT_UNIT_HERO_SKILL )
    call TriggerAddCondition( gg_trg_Deep_Submerge_Learn, Condition( function Trig_Deep_Submerge_Learn_Conditions ) )
    call TriggerAddAction( gg_trg_Deep_Submerge_Learn, function Trig_Deep_Submerge_Learn_Actions )
endfunction

//===========================================================================
// Trigger: Deep Submerge Refresh Buffs for lvl2
//===========================================================================
function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func003001 takes nothing returns boolean
    return ( GetLearnedSkillBJ() == 'A01Y' )
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func003002 takes nothing returns boolean
    return ( GetUnitAbilityLevelSwapped('A01Y', GetTriggerUnit()) == 2 )
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Conditions takes nothing returns boolean
    if ( not GetBooleanAnd( Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func003001(), Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func003002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func002Func001C takes nothing returns boolean
    return true
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func002A takes nothing returns nothing
    if ( Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func002Func001C() ) then
        call UnitRemoveAbilityBJ( 'A01Z', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B007', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B00H', GetEnumUnit() )
        call EnableTrigger( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3 )
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Actions takes nothing returns nothing
    set bj_wantDestroyGroup = true
    call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Func002A )
endfunction

//===========================================================================
function InitTrig_Deep_Submerge_Refresh_Buffs_for_lvl2 takes nothing returns nothing
    set gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2 )
    call TriggerRegisterUnitEvent( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2, gg_unit_H008_0130, EVENT_UNIT_HERO_SKILL )
    call TriggerAddCondition( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2, Condition( function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Conditions ) )
    call TriggerAddAction( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl2, function Trig_Deep_Submerge_Refresh_Buffs_for_lvl2_Actions )
endfunction

//===========================================================================
// Trigger: Deep Submerge Refresh Buffs for lvl3
//===========================================================================
function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func003001 takes nothing returns boolean
    return ( GetLearnedSkillBJ() == 'A01Y' )
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func003002 takes nothing returns boolean
    return ( GetUnitAbilityLevelSwapped('A01Y', GetTriggerUnit()) == 3 )
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Conditions takes nothing returns boolean
    if ( not GetBooleanAnd( Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func003001(), Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func003002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func002Func001C takes nothing returns boolean
    return true
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func002A takes nothing returns nothing
    if ( Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func002Func001C() ) then
        call UnitRemoveAbilityBJ( 'A022', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B007', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B00H', GetEnumUnit() )
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Actions takes nothing returns nothing
    set bj_wantDestroyGroup = true
    call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Func002A )
endfunction

//===========================================================================
function InitTrig_Deep_Submerge_Refresh_Buffs_for_lvl3 takes nothing returns nothing
    set gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3 )
    call TriggerRegisterUnitEvent( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3, gg_unit_H008_0130, EVENT_UNIT_HERO_SKILL )
    call TriggerAddCondition( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3, Condition( function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Conditions ) )
    call TriggerAddAction( gg_trg_Deep_Submerge_Refresh_Buffs_for_lvl3, function Trig_Deep_Submerge_Refresh_Buffs_for_lvl3_Actions )
endfunction

//===========================================================================
// Trigger: Deep Submerge Function
//===========================================================================
function Trig_Deep_Submerge_Function_Func001Func002Func001C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), 'B007') == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Func001Func002A takes nothing returns nothing
    if ( Trig_Deep_Submerge_Function_Func001Func002Func001C() ) then
        call UnitAddAbilityBJ( 'A01Z', GetEnumUnit() )
    else
        call UnitRemoveAbilityBJ( 'A01Z', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B00H', GetEnumUnit() )
    endif
endfunction

function Trig_Deep_Submerge_Function_Func001C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A01Y', gg_unit_H008_0130) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Func002Func002Func001C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), 'B007') == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Func002Func002A takes nothing returns nothing
    if ( Trig_Deep_Submerge_Function_Func002Func002Func001C() ) then
        call UnitAddAbilityBJ( 'A022', GetEnumUnit() )
    else
        call UnitRemoveAbilityBJ( 'A022', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B00H', GetEnumUnit() )
    endif
endfunction

function Trig_Deep_Submerge_Function_Func002C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A01Y', gg_unit_H008_0130) == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Func003Func002Func001C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), 'B007') == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Func003Func002A takes nothing returns nothing
    if ( Trig_Deep_Submerge_Function_Func003Func002Func001C() ) then
        call UnitAddAbilityBJ( 'A020', GetEnumUnit() )
    else
        call UnitRemoveAbilityBJ( 'A020', GetEnumUnit() )
        call UnitRemoveBuffBJ( 'B00H', GetEnumUnit() )
    endif
endfunction

function Trig_Deep_Submerge_Function_Func003C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A01Y', gg_unit_H008_0130) == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Function_Actions takes nothing returns nothing
    if ( Trig_Deep_Submerge_Function_Func001C() ) then
        set bj_wantDestroyGroup = true
        call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Deep_Submerge_Function_Func001Func002A )
    else
    endif
    if ( Trig_Deep_Submerge_Function_Func002C() ) then
        set bj_wantDestroyGroup = true
        call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Deep_Submerge_Function_Func002Func002A )
    else
    endif
    if ( Trig_Deep_Submerge_Function_Func003C() ) then
        set bj_wantDestroyGroup = true
        call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Deep_Submerge_Function_Func003Func002A )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Deep_Submerge_Function takes nothing returns nothing
    set gg_trg_Deep_Submerge_Function = CreateTrigger(  )
    call DisableTrigger( gg_trg_Deep_Submerge_Function )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Deep_Submerge_Function, 1.00 )
    call TriggerAddAction( gg_trg_Deep_Submerge_Function, function Trig_Deep_Submerge_Function_Actions )
endfunction

//===========================================================================
// Trigger: Hide SpellBook
//===========================================================================
function Trig_Hide_SpellBook_Func001A takes nothing returns nothing
    call SetPlayerAbilityAvailableBJ( false, 'A00H', GetEnumPlayer() )
endfunction

function Trig_Hide_SpellBook_Actions takes nothing returns nothing
    call ForForce( GetPlayersAll(), function Trig_Hide_SpellBook_Func001A )
endfunction

//===========================================================================
function InitTrig_Hide_SpellBook takes nothing returns nothing
    set gg_trg_Hide_SpellBook = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hide_SpellBook, function Trig_Hide_SpellBook_Actions )
endfunction

//===========================================================================
// Trigger: Settings
//===========================================================================
function Trig_Settings_Actions takes nothing returns nothing
    set udg_AbilityPhoenixFire = 'A00H'
    set udg_AddAbility = 'A027'
    set udg_Buff_PhoenixFire = 'B006'
    set udg_SpinSpeed = 100.00
endfunction

//===========================================================================
function InitTrig_Settings takes nothing returns nothing
    set gg_trg_Settings = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Settings, function Trig_Settings_Actions )
endfunction

//===========================================================================
// Trigger: Cast Jupiter Oak Evolution
//===========================================================================
function Trig_Cast_Jupiter_Oak_Evolution_Func003C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Caster_PhoenixFire[udg_MUIPhoenixFire]) == true ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(udg_Caster_PhoenixFire[udg_MUIPhoenixFire], udg_Buff_PhoenixFire) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Cast_Jupiter_Oak_Evolution_Func004C takes nothing returns boolean
    if ( not ( udg_MUIPhoenixFire == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Cast_Jupiter_Oak_Evolution_Actions takes nothing returns nothing
    set udg_MUIPhoenixFire = ( udg_MUIPhoenixFire + 1 )
    set udg_Caster_PhoenixFire[udg_MUIPhoenixFire] = GetTriggerUnit()
    if ( Trig_Cast_Jupiter_Oak_Evolution_Func003C() ) then
        call UnitAddAbilityBJ( 'A00H', udg_Caster_PhoenixFire[udg_MUIPhoenixFire] )
    else
    endif
    if ( Trig_Cast_Jupiter_Oak_Evolution_Func004C() ) then
        call EnableTrigger( gg_trg_Loop_Jupiter_Oak_Evolution )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Cast_Jupiter_Oak_Evolution takes nothing returns nothing
    set gg_trg_Cast_Jupiter_Oak_Evolution = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Cast_Jupiter_Oak_Evolution, EVENT_PLAYER_UNIT_SPELL_FINISH )
    call TriggerAddAction( gg_trg_Cast_Jupiter_Oak_Evolution, function Trig_Cast_Jupiter_Oak_Evolution_Actions )
endfunction

//===========================================================================
// Trigger: Loop Jupiter Oak Evolution
//===========================================================================
function Trig_Loop_Jupiter_Oak_Evolution_Func001Func001C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(udg_Caster_PhoenixFire[udg_Loop_Interger], udg_Buff_PhoenixFire) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Loop_Jupiter_Oak_Evolution_Func002C takes nothing returns boolean
    if ( not ( udg_MUIPhoenixFire <= 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Loop_Jupiter_Oak_Evolution_Actions takes nothing returns nothing
    set udg_Loop_Interger = 1
    loop
        exitwhen udg_Loop_Interger > udg_MUIPhoenixFire
        if ( Trig_Loop_Jupiter_Oak_Evolution_Func001Func001C() ) then
            set udg_PointPhoenix = GetUnitLoc(udg_Caster_PhoenixFire[udg_Loop_Interger])
            call SetUnitPositionLocFacingBJ( udg_Caster_PhoenixFire[udg_Loop_Interger], udg_PointPhoenix, ( GetUnitFacing(udg_Caster_PhoenixFire[udg_Loop_Interger]) + udg_SpinSpeed ) )
            call RemoveLocation (udg_PointPhoenix)
        else
            call UnitRemoveAbilityBJ( 'A00H', udg_Caster_PhoenixFire[udg_Loop_Interger] )
            set udg_Caster_PhoenixFire[udg_Loop_Interger] = udg_Caster_PhoenixFire[udg_MUIPhoenixFire]
            set udg_MUIPhoenixFire = ( udg_MUIPhoenixFire - 1 )
        endif
        set udg_Loop_Interger = udg_Loop_Interger + 1
    endloop
    if ( Trig_Loop_Jupiter_Oak_Evolution_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Loop_Jupiter_Oak_Evolution takes nothing returns nothing
    set gg_trg_Loop_Jupiter_Oak_Evolution = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Loop_Jupiter_Oak_Evolution, 0.03 )
    call TriggerAddAction( gg_trg_Loop_Jupiter_Oak_Evolution, function Trig_Loop_Jupiter_Oak_Evolution_Actions )
endfunction

//===========================================================================
// Trigger: Sparkling Wide Pressure
//
// Default melee game initialization for all players
//===========================================================================
function Trig_Sparkling_Wide_Pressure_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00E' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sparkling_Wide_Pressure_Actions takes nothing returns nothing
    local unit udg_TempUnit1 = GetTriggerUnit()
    local unit udg_TempUnit2 = GetSpellTargetUnit()
    local real x1 = GetUnitX(udg_TempUnit1)
    local real y1 = GetUnitX(udg_TempUnit1)
    local real x2 = GetUnitX(udg_TempUnit2)
    local real y2 = GetUnitX(udg_TempUnit2)
    local integer h = GetHandleId(udg_TempUnit2)
    set udg_TempReal1 = (SquareRoot((x2-x1)*(x2-x1) + (y1-y1)*(y2-y1))/1000.) - 0.15
    call TriggerSleepAction( udg_TempReal1 )
    set udg_TempLoc1 = GetUnitLoc(udg_TempUnit2)
    call CreateNUnitsAtLoc( 1, 'e00F', GetOwningPlayer(udg_TempUnit1), udg_TempLoc1, 0.00 )
    call UnitAddAbilityBJ( 'A00D', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'A00D', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A00E', udg_TempUnit1) )
    set udg_TempGroup1 = GetUnitsInRangeOfLocAll(250.00, udg_TempLoc1)
    loop
    set udg_TempUnit3 = FirstOfGroup(udg_TempGroup1)
    exitwhen udg_TempUnit3 == null
    if IsUnitEnemy(udg_TempUnit3, GetOwningPlayer(udg_TempUnit1)) and IsUnitType(udg_TempUnit3, UNIT_TYPE_MAGIC_IMMUNE) == false and udg_TempUnit3 != udg_TempUnit2 then
    call IssueTargetOrderBJ( GetLastCreatedUnit(), "thunderbolt", udg_TempUnit3 )
    call UnitApplyTimedLifeBJ( 5.00, 'BTLF', GetLastCreatedUnit() )
    endif
    call GroupRemoveUnit(udg_TempGroup1, udg_TempUnit3)
    endloop
    call RemoveLocation(udg_TempLoc1)
    call DestroyGroup(udg_TempGroup1)
    set udg_TempUnit1 = null
    set udg_TempUnit2 = null
endfunction

//===========================================================================
function InitTrig_Sparkling_Wide_Pressure takes nothing returns nothing
    set gg_trg_Sparkling_Wide_Pressure = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Sparkling_Wide_Pressure, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Sparkling_Wide_Pressure, Condition( function Trig_Sparkling_Wide_Pressure_Conditions ) )
    call TriggerAddAction( gg_trg_Sparkling_Wide_Pressure, function Trig_Sparkling_Wide_Pressure_Actions )
endfunction

//===========================================================================
// Trigger: Preload
//===========================================================================
function Trig_Preload_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_BYB_HASH = GetLastCreatedHashtableBJ()
endfunction

//===========================================================================
function InitTrig_Preload takes nothing returns nothing
    set gg_trg_Preload = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Preload, function Trig_Preload_Actions )
endfunction

//===========================================================================
// Trigger: Supreme Thunder Dragon Cast
//===========================================================================
function Trig_Supreme_Thunder_Dragon_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A023' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Dragon_Cast_Func001C takes nothing returns boolean
    if ( not ( IsUnitGroupEmptyBJ(udg_BYB_group[0]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Dragon_Cast_Actions takes nothing returns nothing
    if ( Trig_Supreme_Thunder_Dragon_Cast_Func001C() ) then
        call EnableTrigger( gg_trg_Supreme_Thunder_Dragon_Functions )
    else
    endif
    set udg_BYB_POINT[0] = GetUnitLoc(GetTriggerUnit())
    set udg_BYB_POINT[1] = GetSpellTargetLoc()
    call CreateNUnitsAtLoc( 1, 'e00H', GetOwningPlayer(GetTriggerUnit()), udg_BYB_POINT[0], AngleBetweenPoints(udg_BYB_POINT[0], udg_BYB_POINT[1]) )
    call SetUnitPathing( GetLastCreatedUnit(), false )
    call SaveLocationHandleBJ( udg_BYB_POINT[1], 0, GetHandleIdBJ(GetLastCreatedUnit()), udg_BYB_HASH )
    call RemoveLocation(udg_BYB_POINT[0])
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_BYB_group[0] )
endfunction

//===========================================================================
function InitTrig_Supreme_Thunder_Dragon_Cast takes nothing returns nothing
    set gg_trg_Supreme_Thunder_Dragon_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Supreme_Thunder_Dragon_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Supreme_Thunder_Dragon_Cast, Condition( function Trig_Supreme_Thunder_Dragon_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Supreme_Thunder_Dragon_Cast, function Trig_Supreme_Thunder_Dragon_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Supreme Thunder Dragon Functions
//===========================================================================
function Trig_Supreme_Thunder_Dragon_Functions_Func001C takes nothing returns boolean
    if ( not ( IsUnitGroupEmptyBJ(udg_BYB_group[0]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002001(), Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002002() )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001001(), Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001002() )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003002 takes nothing returns boolean
    return ( UnitHasBuffBJ(GetFilterUnit(), 'B00Q') == false )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003001(), Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003002() )
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func011A takes nothing returns nothing
    set udg_BYB_POINT[0] = GetUnitLoc(GetEnumUnit())
    call CreateNUnitsAtLocFacingLocBJ( 1, 'e00I', GetOwningPlayer(udg_BYB_unit), udg_BYB_POINT[0], udg_BYB_POINT[0] )
    call SetUnitAbilityLevelSwapped( 'A01E', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A023', gg_unit_H00A_0128) )
    call IssueTargetOrderBJ( GetLastCreatedUnit(), "slow", GetEnumUnit() )
    call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'e00I', GetOwningPlayer(udg_BYB_unit), udg_BYB_POINT[0], udg_BYB_POINT[0] )
    call SetUnitAbilityLevelSwapped( 'A021', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A023', gg_unit_H00A_0128) )
    call IssueTargetOrderBJ( GetLastCreatedUnit(), "firebolt", GetEnumUnit() )
    call RemoveLocation(udg_BYB_POINT[0])
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_BYB_POINT[0], udg_BYB_POINT[1]) >= 10.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Func002A takes nothing returns nothing
    set udg_BYB_POINT[0] = GetUnitLoc(GetEnumUnit())
    set udg_BYB_POINT[1] = LoadLocationHandleBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_BYB_HASH)
    if ( Trig_Supreme_Thunder_Dragon_Functions_Func002Func003C() ) then
        set udg_BYB_unit = GetEnumUnit()
        set udg_BYB_POINT[2] = PolarProjectionBJ(udg_BYB_POINT[0], 10.00, AngleBetweenPoints(udg_BYB_POINT[0], udg_BYB_POINT[1]))
        call SetUnitPositionLocFacingLocBJ( GetEnumUnit(), udg_BYB_POINT[2], udg_BYB_POINT[1] )
        set udg_BYB_group[1] = GetUnitsInRangeOfLocMatching(150.00, udg_BYB_POINT[0], Condition(function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func009002003))
        call RemoveLocation(udg_BYB_POINT[0])
        call ForGroupBJ( udg_BYB_group[1], function Trig_Supreme_Thunder_Dragon_Functions_Func002Func003Func011A )
        call RemoveLocation(udg_BYB_POINT[2])
        call DestroyGroup(udg_BYB_group[1])
    else
        call RemoveLocation(udg_BYB_POINT[2])
        call RemoveLocation(udg_BYB_POINT[0])
        call RemoveLocation(udg_BYB_POINT[1])
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_BYB_group[0] )
        call KillUnit( GetEnumUnit() )
    endif
endfunction

function Trig_Supreme_Thunder_Dragon_Functions_Actions takes nothing returns nothing
    if ( Trig_Supreme_Thunder_Dragon_Functions_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
    call ForGroupBJ( udg_BYB_group[0], function Trig_Supreme_Thunder_Dragon_Functions_Func002A )
endfunction

//===========================================================================
function InitTrig_Supreme_Thunder_Dragon_Functions takes nothing returns nothing
    set gg_trg_Supreme_Thunder_Dragon_Functions = CreateTrigger(  )
    call DisableTrigger( gg_trg_Supreme_Thunder_Dragon_Functions )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Supreme_Thunder_Dragon_Functions, 0.04 )
    call TriggerAddAction( gg_trg_Supreme_Thunder_Dragon_Functions, function Trig_Supreme_Thunder_Dragon_Functions_Actions )
endfunction

//===========================================================================
// Trigger: Burning Mandala
//===========================================================================
function Trig_Burning_Mandala_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00M' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Burning_Mandala_Actions takes nothing returns nothing
    set udg_TempLoc1 = GetSpellTargetLoc()
    call CreateNUnitsAtLoc( 1, 'h01F', GetTriggerPlayer(), udg_TempLoc1, 0.00 )
    call UnitAddAbilityBJ( 'A00N', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'A00N', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A00M', GetTriggerUnit()) )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "rainoffire", udg_TempLoc1 )
    call UnitApplyTimedLifeBJ( 2.00, 'BTLF', GetLastCreatedUnit() )
    call RemoveLocation(udg_TempLoc1)
endfunction

//===========================================================================
function InitTrig_Burning_Mandala takes nothing returns nothing
    set gg_trg_Burning_Mandala = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Burning_Mandala, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Burning_Mandala, Condition( function Trig_Burning_Mandala_Conditions ) )
    call TriggerAddAction( gg_trg_Burning_Mandala, function Trig_Burning_Mandala_Actions )
endfunction

//===========================================================================
// Trigger: Tuxedo Frenzy
//===========================================================================
function Trig_Tuxedo_Frenzy_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A005' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tuxedo_Frenzy_Actions takes nothing returns nothing
    set udg_Overpower = 1
    set udg_Overpowermax = ( GetUnitAbilityLevelSwapped('A005', GetTriggerUnit()) * 3 )
endfunction

//===========================================================================
function InitTrig_Tuxedo_Frenzy takes nothing returns nothing
    set gg_trg_Tuxedo_Frenzy = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Tuxedo_Frenzy, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Tuxedo_Frenzy, Condition( function Trig_Tuxedo_Frenzy_Conditions ) )
    call TriggerAddAction( gg_trg_Tuxedo_Frenzy, function Trig_Tuxedo_Frenzy_Actions )
endfunction

//===========================================================================
// Trigger: Tuxedo Frenzy End
//===========================================================================
function Trig_Tuxedo_Frenzy_End_Conditions takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetAttacker(), 'B00N') == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tuxedo_Frenzy_End_Func001C takes nothing returns boolean
    if ( not ( udg_Overpower == udg_Overpowermax ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tuxedo_Frenzy_End_Actions takes nothing returns nothing
    if ( Trig_Tuxedo_Frenzy_End_Func001C() ) then
        call UnitRemoveBuffBJ( 'B00N', GetAttacker() )
    else
        set udg_Overpower = ( udg_Overpower + 1 )
    endif
endfunction

//===========================================================================
function InitTrig_Tuxedo_Frenzy_End takes nothing returns nothing
    set gg_trg_Tuxedo_Frenzy_End = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Tuxedo_Frenzy_End, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Tuxedo_Frenzy_End, Condition( function Trig_Tuxedo_Frenzy_End_Conditions ) )
    call TriggerAddAction( gg_trg_Tuxedo_Frenzy_End, function Trig_Tuxedo_Frenzy_End_Actions )
endfunction

//===========================================================================
// Trigger: Luna P Attack
//===========================================================================
function Trig_Luna_P_Attack_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01V' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Luna_P_Attack_Func031C takes nothing returns boolean
    if ( not ( GetRandomReal(1.00, 100.00) <= udg_Power_Slam_Total_Chance ) ) then
        return false
    endif
    return true
endfunction

function Trig_Luna_P_Attack_Actions takes nothing returns nothing
    // -------------------------------------------------------------------------------------------------
    // Getting the Spell constants
    // -------------------------------------------------------------------------------------------------
    set udg_Power_Slam_Caster = GetTriggerUnit()
    set udg_Power_Slam_Target = GetSpellTargetUnit()
    set udg_Power_Slam_Location = GetUnitLoc(udg_Power_Slam_Target)
    set udg_Power_Slam_Owner = GetOwningPlayer(udg_Power_Slam_Caster)
    set udg_Power_Slam_Ability_Level = GetUnitAbilityLevelSwapped(GetSpellAbilityId(), udg_Power_Slam_Caster)
    // -------------------------------------------------------------------------------------------------
    // Setting the Spell values
    // -------------------------------------------------------------------------------------------------
    set udg_Power_Slam_Damage_Multiplier = ( 1.00 * I2R(GetUnitAbilityLevelSwapped('A01V', udg_Power_Slam_Caster)) )
    set udg_Power_Slam_Damage = ( I2R(GetHeroStatBJ(bj_HEROSTAT_STR, udg_Power_Slam_Caster, true)) + ( udg_Power_Slam_Damage_Multiplier * 80.00 ) )
    set udg_Power_Slam_Base_Chance = 15.00
    set udg_Power_Slam_Total_Chance = ( udg_Power_Slam_Base_Chance * I2R(udg_Power_Slam_Ability_Level) )
    set udg_Power_Slam_Dummy_Ability = 'A01W'
    // -------------------------------------------------------------------------------------------------
    // Damaging the Target
    // -------------------------------------------------------------------------------------------------
    call UnitDamageTargetBJ( udg_Power_Slam_Caster, udg_Power_Slam_Target, udg_Power_Slam_Damage, ATTACK_TYPE_HERO, DAMAGE_TYPE_NORMAL )
    // -------------------------------------------------------------------------------------------------
    // Creating nice special effect
    // -------------------------------------------------------------------------------------------------
    call AddSpecialEffectLocBJ( udg_Power_Slam_Location, "Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call AddSpecialEffectLocBJ( udg_Power_Slam_Location, "Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    // -------------------------------------------------------------------------------------------------
    // Giving a chance to trigger the bonus actions
    // -------------------------------------------------------------------------------------------------
    if ( Trig_Luna_P_Attack_Func031C() ) then
        // -------------------------------------------------------------------------------------------------
        // Setting the Dummy, ordering it to cast a spell
        // -------------------------------------------------------------------------------------------------
        call CreateNUnitsAtLoc( 1, 'h01Y', udg_Power_Slam_Owner, udg_Power_Slam_Location, bj_UNIT_FACING )
        call UnitApplyTimedLifeBJ( 1.50, 'BTLF', GetLastCreatedUnit() )
        call UnitAddAbilityBJ( udg_Power_Slam_Dummy_Ability, GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( udg_Power_Slam_Dummy_Ability, GetLastCreatedUnit(), udg_Power_Slam_Ability_Level )
        call IssueTargetOrderBJ( GetLastCreatedUnit(), "thunderbolt", udg_Power_Slam_Target )
        // -------------------------------------------------------------------------------------------------
        // Creating nice special effect
        // -------------------------------------------------------------------------------------------------
        call AddSpecialEffectLocBJ( udg_Power_Slam_Location, "Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl" )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        // -------------------------------------------------------------------------------------------------
    else
    endif
    // -------------------------------------------------------------------------------------------------
    // Creating and setting floating text
    // -------------------------------------------------------------------------------------------------
    call CreateTextTagUnitBJ( ( I2S(R2I(udg_Power_Slam_Damage)) + "!" ), udg_Power_Slam_Target, 0, 10, 0.00, 40.00, 100.00, 0 )
    call SetTextTagPermanentBJ( GetLastCreatedTextTag(), false )
    call SetTextTagVelocityBJ( GetLastCreatedTextTag(), 64, 90 )
    call SetTextTagFadepointBJ( GetLastCreatedTextTag(), 3.00 )
    call SetTextTagLifespanBJ( GetLastCreatedTextTag(), 5.00 )
    // -------------------------------------------------------------------------------------------------
    // Clearing Leaks
    // -------------------------------------------------------------------------------------------------
    call RemoveLocation(udg_Power_Slam_Location)
endfunction

//===========================================================================
function InitTrig_Luna_P_Attack takes nothing returns nothing
    set gg_trg_Luna_P_Attack = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Luna_P_Attack, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Luna_P_Attack, Condition( function Trig_Luna_P_Attack_Conditions ) )
    call TriggerAddAction( gg_trg_Luna_P_Attack, function Trig_Luna_P_Attack_Actions )
endfunction

//===========================================================================
// Trigger: Venus Love and Beauty Shock
//===========================================================================
function Trig_Venus_Love_and_Beauty_Shock_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00W' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Venus_Love_and_Beauty_Shock_Actions takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, 'h01H', GetOwningPlayer(GetTriggerUnit()), GetUnitLoc(GetSpellTargetUnit()), bj_UNIT_FACING )
    call UnitAddAbilityBJ( 'A00X', GetLastCreatedUnit() )
    call IssueImmediateOrderBJ( GetLastCreatedUnit(), "creepthunderclap" )
    call UnitApplyTimedLifeBJ( 2.00, 'BTLF', GetLastCreatedUnit() )
endfunction

//===========================================================================
function InitTrig_Venus_Love_and_Beauty_Shock takes nothing returns nothing
    set gg_trg_Venus_Love_and_Beauty_Shock = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Venus_Love_and_Beauty_Shock, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Venus_Love_and_Beauty_Shock, Condition( function Trig_Venus_Love_and_Beauty_Shock_Conditions ) )
    call TriggerAddAction( gg_trg_Venus_Love_and_Beauty_Shock, function Trig_Venus_Love_and_Beauty_Shock_Actions )
endfunction

//===========================================================================
// Trigger: Rose Attack
//===========================================================================
function Trig_Rose_Attack_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rose_Attack_Actions takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, 'h01F', GetOwningPlayer(GetTriggerUnit()), GetUnitLoc(GetTriggerUnit()), bj_UNIT_FACING )
    call UnitAddAbilityBJ( 'A01C', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'A01C', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A01B', GetTriggerUnit()) )
    call IssueTargetOrderBJ( GetLastCreatedUnit(), "entanglingroots", GetSpellTargetUnit() )
    call UnitApplyTimedLifeBJ( 4.00, 'BTLF', GetLastCreatedUnit() )
endfunction

//===========================================================================
function InitTrig_Rose_Attack takes nothing returns nothing
    set gg_trg_Rose_Attack = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Rose_Attack, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Rose_Attack, Condition( function Trig_Rose_Attack_Conditions ) )
    call TriggerAddAction( gg_trg_Rose_Attack, function Trig_Rose_Attack_Actions )
endfunction

//===========================================================================
// Trigger: Moon Princess Halation
//===========================================================================
function Trig_Moon_Princess_Halation_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01F' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Func003C takes nothing returns boolean
    if ( not ( udg_SoE_Index[1] <= 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Actions takes nothing returns nothing
    // BELOW IS THE VARIABLES THAT IS REQUIRED FOR THIS SPELL TO WORK PROPERLY, AND SHOULD NOT BE CHANGED
    // ---
    if ( Trig_Moon_Princess_Halation_Func003C() ) then
        call EnableTrigger( gg_trg_Moon_Princess_Halation_Add_Loop )
    else
    endif
    set udg_SoE_Index[0] = udg_SoE_Index[0] + 1
    set udg_SoE_Index[1] = udg_SoE_Index[1] + 1
    set udg_SoE_Off[udg_SoE_Index[0]] = false
    set udg_SoE_Caster[udg_SoE_Index[0]] = GetTriggerUnit()
    set udg_SoE_CasterX[udg_SoE_Index[0]] = GetUnitX(GetTriggerUnit())
    set udg_SoE_CasterY[udg_SoE_Index[0]] = GetUnitY(GetTriggerUnit())
    set udg_SoE_Timer_NewLightning_Count[udg_SoE_Index[0]] = 0.0
    // ---
    // THE VARIABLES BELOW IS THE VARIABLES THAT YOU CAN EDIT AND MODIFY THIS SPELL WITH
    // ---
    // This is how many lightnings that will be created.
    set udg_SoE_LightningCount[udg_SoE_Index[0]] = ( 25 + ( 25 * GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) ) )
    // This is the amount of damage EACH lightning will do.
    set udg_SoE_Damage[udg_SoE_Index[0]] = ( 0.00 + ( 15.00 * I2R(GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit())) ) )
    // This is the amount of time it must take before a new lightning is created.
    set udg_SoE_Timer_NewLightning[udg_SoE_Index[0]] = 0.03
    // This is the amount of speed the lightning will have.
    set udg_SoE_DummySpeed[udg_SoE_Index[0]] = 27.50
    // This is the amount of distance the lightnings will travel.
    set udg_SoE_DummyDistance[udg_SoE_Index[0]] = 1000.00
    // This is the "hitbox", the detection range the lightning will have to detect a unit.
    set udg_SoE_HitBox[udg_SoE_Index[0]] = 100.00
    // If this is set to "false", the lightning can go through units and damage others behind. If its set to "true", the lightning
    // will be removed when it hits a unit.
    set udg_SoE_RemoveOnHit[udg_SoE_Index[0]] = false
    // This is the model of the lightning.
    set udg_SoE_ModelEffect[udg_SoE_Index[0]] = "Abilities\\Spells\\Items\\WandOfNeutralization\\NeutralizationMissile.mdl"
    // If you want the hero be able to move around while casting the spell, set this to true.
    set udg_SoE_EnableMovement[udg_SoE_Index[0]] = false
    // If you want the hero be able to move around while casting the spell, set this to true.
    set udg_SoE_MissileSpawnDistance[udg_SoE_Index[0]] = 30.00
    // This is how "straight" the missiles will go. If it's set to 0.00, the missiles will always go straight.
    // But if it's set to (as an example) 15.00, the missile may change their direction a little and won't go 100% straight.
    set udg_SoE_AimValue[udg_SoE_Index[0]] = 10.00
    // This is the effect that will appear when an enemy unit is hit. Leave it empty to have no effect.
    set udg_SoE_HitEffect[udg_SoE_Index[0]] = ""
    // ---
    // BELOW IS THE ATTACHMENT EFFECTS, CHANGE THEM TO THE ONES YOU WANT
    // ---
    call AddSpecialEffectTargetUnitBJ( "hand, left", udg_SoE_Caster[udg_SoE_Index[0]], "Abilities\\Spells\\Items\\WandOfNeutralization\\NeutralizationMissile.mdl" )
    set udg_SoE_AttachmentEffect1[udg_SoE_Index[0]] = GetLastCreatedEffectBJ()
    call AddSpecialEffectTargetUnitBJ( "hand, right", udg_SoE_Caster[udg_SoE_Index[0]], "Abilities\\Spells\\Items\\WandOfNeutralization\\NeutralizationMissile.mdl" )
    set udg_SoE_AttachmentEffect2[udg_SoE_Index[0]] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Moon_Princess_Halation takes nothing returns nothing
    set gg_trg_Moon_Princess_Halation = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Princess_Halation, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Moon_Princess_Halation, Condition( function Trig_Moon_Princess_Halation_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Princess_Halation, function Trig_Moon_Princess_Halation_Actions )
endfunction

//===========================================================================
// Trigger: Moon Princess Halation Add Loop
//===========================================================================
function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_SoE_EnableMovement[udg_SoE_Index[2]] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func004Func007C takes nothing returns boolean
    if ( not ( udg_SoEL_Index[1] <= 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func004C takes nothing returns boolean
    if ( not ( udg_SoE_Timer_NewLightning_Count[udg_SoE_Index[2]] >= udg_SoE_Timer_NewLightning[udg_SoE_Index[2]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func010C takes nothing returns boolean
    if ( not ( udg_SoE_Index[1] <= 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func011C takes nothing returns boolean
    if ( ( IsUnitAliveBJ(udg_SoE_Caster[udg_SoE_Index[2]]) == false ) ) then
        return true
    endif
    if ( ( udg_SoE_LightningCount[udg_SoE_Index[2]] <= 0 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001C takes nothing returns boolean
    if ( not Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func011C() ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Func003Func001C takes nothing returns boolean
    if ( not ( udg_SoE_Off[udg_SoE_Index[2]] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Add_Loop_Actions takes nothing returns nothing
    // DONT EDIT ANYTHING IN THIS TRIGGER UNLESS YOU DON'T KNOW WHAT YOU'RE DOING! :)
    // ---
    set udg_SoE_Index[2] = 1
    loop
        exitwhen udg_SoE_Index[2] > udg_SoE_Index[0]
        if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001C() ) then
            if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001C() ) then
                call DestroyEffectBJ( udg_SoE_AttachmentEffect1[udg_SoE_Index[2]] )
                call DestroyEffectBJ( udg_SoE_AttachmentEffect2[udg_SoE_Index[2]] )
                // ---
                set udg_SoE_Off[udg_SoE_Index[2]] = true
                set udg_SoE_Index[1] = ( udg_SoE_Index[1] - 1 )
                if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func010C() ) then
                    set udg_SoE_Index[0] = 0
                    call DisableTrigger( gg_trg_Moon_Princess_Halation_Add_Loop )
                else
                endif
            else
                if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func001C() ) then
                    call SetUnitX(udg_SoE_Caster[udg_SoE_Index[2]], udg_SoE_CasterX[udg_SoE_Index[2]])
                    call SetUnitY(udg_SoE_Caster[udg_SoE_Index[2]], udg_SoE_CasterY[udg_SoE_Index[2]])
                    call ResetUnitAnimation( udg_SoE_Caster[udg_SoE_Index[2]] )
                else
                endif
                // ---
                set udg_SoE_Timer_NewLightning_Count[udg_SoE_Index[2]] = udg_SoE_Timer_NewLightning_Count[udg_SoE_Index[2]] + 0.03
                if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func004C() ) then
                    set udg_SoE_Timer_NewLightning_Count[udg_SoE_Index[2]] = 0.0
                    set udg_SoE_LightningCount[udg_SoE_Index[2]] =  udg_SoE_LightningCount[udg_SoE_Index[2]]  - 1
                    // ---
                    set udg_SoE_Point[0] = GetUnitLoc(udg_SoE_Caster[udg_SoE_Index[2]])
                    set udg_SoE_Point[1] = PolarProjectionBJ(udg_SoE_Point[0], udg_SoE_MissileSpawnDistance[udg_SoE_Index[2]], ( GetUnitFacing(udg_SoE_Caster[udg_SoE_Index[2]]) + GetRandomReal(( 0.00 - udg_SoE_AimValue[udg_SoE_Index[2]] ), udg_SoE_AimValue[udg_SoE_Index[2]]) ))
                    // ---
                    if ( Trig_Moon_Princess_Halation_Add_Loop_Func003Func001Func001Func004Func007C() ) then
                        call EnableTrigger( gg_trg_Moon_Princess_Halation_Lightning_Loop )
                    else
                    endif
                    set udg_SoEL_Index[0] = udg_SoEL_Index[0] + 1
                    set udg_SoEL_Index[1] = udg_SoEL_Index[1] + 1
                    set udg_SoEL_Off[udg_SoEL_Index[0]] = false
                    // ---
                    call CreateNUnitsAtLoc( 1, 'h01I', GetOwningPlayer(udg_SoE_Caster[udg_SoE_Index[2]]), udg_SoE_Point[1], GetUnitFacing(udg_SoE_Caster[udg_SoE_Index[2]]) )
                    set udg_SoEL_DummyUnit[udg_SoEL_Index[0]] = GetLastCreatedUnit()
                    call AddSpecialEffectTargetUnitBJ( "chest", udg_SoEL_DummyUnit[udg_SoEL_Index[0]], udg_SoE_ModelEffect[udg_SoE_Index[2]] )
                    set udg_SoEL_SpecialEffect[udg_SoEL_Index[0]] = GetLastCreatedEffectBJ()
                    set udg_SoEL_DummySpeed[udg_SoEL_Index[0]] = udg_SoE_DummySpeed[udg_SoE_Index[2]]
                    set udg_SoEL_Angle[udg_SoEL_Index[0]] = AngleBetweenPoints(udg_SoE_Point[0], udg_SoE_Point[1])
                    set udg_SoEL_DummyDistance[udg_SoEL_Index[0]] = udg_SoE_DummyDistance[udg_SoE_Index[2]]
                    set udg_SoEL_Damage[udg_SoEL_Index[0]] = udg_SoE_Damage[udg_SoE_Index[2]]
                    set udg_SoEL_HitBox[udg_SoEL_Index[0]] = udg_SoE_HitBox[udg_SoE_Index[2]]
                    set udg_SoEL_RemoveOnHit[udg_SoEL_Index[0]] = udg_SoE_RemoveOnHit[udg_SoE_Index[2]]
                    set udg_SoEL_HitEffect[udg_SoEL_Index[0]] = udg_SoE_HitEffect[udg_SoE_Index[2]]
                    // ---
                    call RemoveLocation(udg_SoE_Point[0])
                    call RemoveLocation(udg_SoE_Point[1])
                else
                endif
            endif
        else
        endif
        set udg_SoE_Index[2] = udg_SoE_Index[2] + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Moon_Princess_Halation_Add_Loop takes nothing returns nothing
    set gg_trg_Moon_Princess_Halation_Add_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Moon_Princess_Halation_Add_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Moon_Princess_Halation_Add_Loop, 0.03 )
    call TriggerAddAction( gg_trg_Moon_Princess_Halation_Add_Loop, function Trig_Moon_Princess_Halation_Add_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Moon Princess Halation Lightning Loop
//===========================================================================
function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func009C takes nothing returns boolean
    if ( not ( udg_SoEL_Index[1] <= 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_SoEL_DummyUnit[udg_SoEL_Index[2]])) == true )
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003001(), Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003002() )
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004Func001Func005C takes nothing returns boolean
    if ( not ( udg_SoEL_RemoveOnHit[udg_SoEL_Index[2]] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( udg_SoEL_Index[3] > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004A takes nothing returns nothing
    if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004Func001C() ) then
        set udg_SoEL_Index[3] = ( udg_SoEL_Index[3] - 1 )
        call UnitDamageTargetBJ( udg_SoEL_DummyUnit[udg_SoEL_Index[2]], GetEnumUnit(), udg_SoEL_Damage[udg_SoEL_Index[2]], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL )
        call AddSpecialEffectTargetUnitBJ( "origin", GetEnumUnit(), udg_SoEL_HitEffect[udg_SoEL_Index[2]] )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004Func001Func005C() ) then
            set udg_SoEL_DummyDistance[udg_SoEL_Index[2]] = 0.00
        else
        endif
    else
    endif
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016C takes nothing returns boolean
    if ( not ( udg_SoEL_DamageCounter[udg_SoEL_Index[2]] >= 0.15 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001C takes nothing returns boolean
    if ( not ( udg_SoEL_DummyDistance[udg_SoEL_Index[2]] <= 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001C takes nothing returns boolean
    if ( not ( udg_SoEL_Off[udg_SoEL_Index[2]] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Lightning_Loop_Actions takes nothing returns nothing
    // DONT EDIT ANYTHING IN THIS TRIGGER UNLESS YOU DON'T KNOW WHAT YOU'RE DOING! :)
    // ---
    set udg_SoEL_Index[2] = 1
    loop
        exitwhen udg_SoEL_Index[2] > udg_SoEL_Index[0]
        if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001C() ) then
            if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001C() ) then
                call DestroyEffectBJ( udg_SoEL_SpecialEffect[udg_SoEL_Index[2]] )
                call KillUnit( udg_SoEL_DummyUnit[udg_SoEL_Index[2]] )
                // ---
                set udg_SoEL_Off[udg_SoEL_Index[2]] = true
                set udg_SoEL_Index[1] = ( udg_SoEL_Index[1] - 1 )
                if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func009C() ) then
                    set udg_SoEL_Index[0] = 0
                    call DisableTrigger( gg_trg_Moon_Princess_Halation_Lightning_Loop )
                else
                endif
            else
                set udg_SoEL_DummyDistance[udg_SoEL_Index[2]] = udg_SoEL_DummyDistance[udg_SoEL_Index[2]] - udg_SoEL_DummySpeed[udg_SoEL_Index[2]]
                // ---
                set udg_SoE_Point[0] = GetUnitLoc(udg_SoEL_DummyUnit[udg_SoEL_Index[2]])
                set udg_SoE_Point[1] = PolarProjectionBJ(udg_SoE_Point[0], udg_SoEL_DummySpeed[udg_SoEL_Index[2]], udg_SoEL_Angle[udg_SoEL_Index[2]])
                // ---
                call SetUnitPositionLoc( udg_SoEL_DummyUnit[udg_SoEL_Index[2]], udg_SoE_Point[1] )
                // ---
                set udg_SoEL_DamageCounter[udg_SoEL_Index[2]] = ( udg_SoEL_DamageCounter[udg_SoEL_Index[2]] + 0.03 )
                if ( Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016C() ) then
                    set udg_SoEL_DamageCounter[udg_SoEL_Index[2]] = 0.00
                    set udg_SoEL_Index[3] = 1
                    set udg_SoE_UnitGroup = GetUnitsInRangeOfLocMatching(udg_SoEL_HitBox[udg_SoEL_Index[2]], udg_SoE_Point[1], Condition(function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func003002003))
                    call ForGroupBJ( udg_SoE_UnitGroup, function Trig_Moon_Princess_Halation_Lightning_Loop_Func003Func001Func001Func016Func004A )
                    call DestroyGroup(udg_SoE_UnitGroup)
                else
                endif
                // ---
                call RemoveLocation(udg_SoE_Point[0])
                call RemoveLocation(udg_SoE_Point[1])
            endif
        else
        endif
        set udg_SoEL_Index[2] = udg_SoEL_Index[2] + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Moon_Princess_Halation_Lightning_Loop takes nothing returns nothing
    set gg_trg_Moon_Princess_Halation_Lightning_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Moon_Princess_Halation_Lightning_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Moon_Princess_Halation_Lightning_Loop, 0.03 )
    call TriggerAddAction( gg_trg_Moon_Princess_Halation_Lightning_Loop, function Trig_Moon_Princess_Halation_Lightning_Loop_Actions )
endfunction

//===========================================================================
// Trigger: SSIExecute
//
// set ability being cast to elune's servant
//===========================================================================
function Trig_SSIExecute_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A02T' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SSIExecute_Func005C takes nothing returns boolean
    if ( not ( udg_ESCounts > udg_ESCountMax ) ) then
        return false
    endif
    return true
endfunction

function Trig_SSIExecute_Actions takes nothing returns nothing
    // Making sure your servant is special, the only one.
    set udg_ESCounts = ( udg_ESCounts + 1 )
    // The maximum amount of servants allowed in-game at the same time.
    set udg_ESCountMax = 696969
    if ( Trig_SSIExecute_Func005C() ) then
        set udg_ESCounts = 1
    else
    endif
    // The unit variables
    set udg_ESCaster[udg_ESCounts] = GetSpellAbilityUnit()
    // The damage multiplier
    set udg_ESDamage[udg_ESCounts] = ( 0 + ( 100 * GetUnitAbilityLevelSwapped('A02T', udg_ESCaster[udg_ESCounts]) ) )
    set udg_ESTargetedArea = GetSpellTargetLoc()
    set udg_ESAngle = AngleBetweenPoints(udg_ESCastersLocation, udg_ESTargetedArea)
    set udg_ESCastersLocation = GetUnitLoc(udg_ESCaster[udg_ESCounts])
    // The duration of the servant, how long it will be on the air.
    set udg_ESDuration[udg_ESCounts] = 3
    // Creating the unit, make sure u change this to the deadly precision unit
    call CreateNUnitsAtLoc( 1, 'e00L', GetOwningPlayer(udg_ESCaster[udg_ESCounts]), udg_ESCastersLocation, GetUnitFacing(udg_ESCaster[udg_ESCounts]) )
    call UnitApplyTimedLifeBJ( 2.50, 'BTLF', GetLastCreatedUnit() )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_ESStartGroup )
    call SetUnitUserData( GetLastCreatedUnit(), udg_ESCounts )
    call EnableTrigger( gg_trg_SSILoop )
    call RemoveLocation (udg_ESCastersLocation)
    call RemoveLocation (udg_ESTargetedArea)
endfunction

//===========================================================================
function InitTrig_SSIExecute takes nothing returns nothing
    set gg_trg_SSIExecute = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_SSIExecute, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_SSIExecute, Condition( function Trig_SSIExecute_Conditions ) )
    call TriggerAddAction( gg_trg_SSIExecute, function Trig_SSIExecute_Actions )
endfunction

//===========================================================================
// Trigger: SSILoop
//===========================================================================
function Trig_SSILoop_Func001Func006002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) != true )
endfunction

function Trig_SSILoop_Func001Func006002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_SSILoop_Func001Func006002003002002 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_ESCaster[udg_ESValue])) == true )
endfunction

function Trig_SSILoop_Func001Func006002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_SSILoop_Func001Func006002003002001(), Trig_SSILoop_Func001Func006002003002002() )
endfunction

function Trig_SSILoop_Func001Func006002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_SSILoop_Func001Func006002003001(), Trig_SSILoop_Func001Func006002003002() )
endfunction

function Trig_SSILoop_Func001Func007A takes nothing returns nothing
    // The SFX when it hits
    call AddSpecialEffectLocBJ( GetUnitLoc(GetEnumUnit()), "Abilities\\Weapons\\Bolt\\BoltImpact.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call UnitDamageTargetBJ( udg_ESCaster[udg_ESCounts], GetEnumUnit(), I2R(udg_ESDamage[udg_ESCounts]), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
    // Down here set up the dummy to cast the slow
    set udg_ESTargetLoc[udg_ESCounts] = GetUnitLoc(GetEnumUnit())
    // set the dummy unit here
    call CreateNUnitsAtLoc( 1, 'e00M', GetOwningPlayer(udg_ESCaster[udg_ESCounts]), udg_ESTargetLoc[udg_ESCounts], bj_UNIT_FACING )
    // set DS Clap here
    call UnitAddAbilityBJ( 'A02U', GetLastCreatedUnit() )
    call UnitApplyTimedLifeBJ( I2R(udg_ESDuration[udg_ESCounts]), 'BTLF', GetLastCreatedUnit() )
    call IssueImmediateOrderBJ( GetLastCreatedUnit(), "thunderclap" )
endfunction

function Trig_SSILoop_Func001Func008Func002C takes nothing returns boolean
    if ( ( CountUnitsInGroup(udg_ESGroup) > 0 ) ) then
        return true
    endif
    return false
endfunction

function Trig_SSILoop_Func001Func008C takes nothing returns boolean
    if ( not Trig_SSILoop_Func001Func008Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_SSILoop_Func001A takes nothing returns nothing
    set udg_ESValue = GetUnitUserData(GetEnumUnit())
    set udg_ESDummy = GetUnitLoc(GetEnumUnit())
    // On this next action you can change the speed, i recomend you leave it as it is, because it might get sloppy
    set udg_ESMov = PolarProjectionBJ(udg_ESDummy, 20.00, GetUnitFacing(udg_ESCaster[udg_ESCounts]))
    call SetUnitPositionLocFacingBJ( GetEnumUnit(), udg_ESMov, GetUnitFacing(udg_ESCaster[udg_ESCounts]) )
    set udg_ESGroup = GetUnitsInRangeOfLocMatching(150.00, udg_ESMov, Condition(function Trig_SSILoop_Func001Func006002003))
    call ForGroupBJ( udg_ESGroup, function Trig_SSILoop_Func001Func007A )
    if ( Trig_SSILoop_Func001Func008C() ) then
        call AddSpecialEffectLocBJ( GetUnitLoc(GetEnumUnit()), "Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl" )
        call KillUnit( GetEnumUnit() )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_ESStartGroup )
    else
    endif
    // Cleaning some leaks
    call RemoveLocation (udg_ESTargetLoc[udg_ESCounts])
    call RemoveLocation (udg_ESDummy)
    call RemoveLocation (udg_ESMov)
    call DestroyGroup (udg_ESGroup)
endfunction

function Trig_SSILoop_Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_ESStartGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_SSILoop_Actions takes nothing returns nothing
    call ForGroupBJ( udg_ESStartGroup, function Trig_SSILoop_Func001A )
    if ( Trig_SSILoop_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

//===========================================================================
function InitTrig_SSILoop takes nothing returns nothing
    set gg_trg_SSILoop = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_SSILoop, 0.03 )
    call TriggerAddAction( gg_trg_SSILoop, function Trig_SSILoop_Actions )
endfunction

//===========================================================================
// Trigger: Silence Wall Cast
//===========================================================================
function Trig_Silence_Wall_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A025' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Wall_Cast_Actions takes nothing returns nothing
    call EnableTrigger( gg_trg_Silence_Wall )
endfunction

//===========================================================================
function InitTrig_Silence_Wall_Cast takes nothing returns nothing
    set gg_trg_Silence_Wall_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Silence_Wall_Cast, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Silence_Wall_Cast, Condition( function Trig_Silence_Wall_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Silence_Wall_Cast, function Trig_Silence_Wall_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Silence Wall
//===========================================================================
function Trig_Silence_Wall_Func001Func001001 takes nothing returns boolean
    return ( UnitHasBuffBJ(GetEnumUnit(), 'B00K') == true )
endfunction

function Trig_Silence_Wall_Func001A takes nothing returns nothing
    if ( Trig_Silence_Wall_Func001Func001001() ) then
        call UnitAddAbilityBJ( 'A00I', GetEnumUnit() )
    else
        call UnitRemoveAbilityBJ( 'A00I', GetEnumUnit() )
    endif
endfunction

function Trig_Silence_Wall_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Silence_Wall_Func001A )
endfunction

//===========================================================================
function InitTrig_Silence_Wall takes nothing returns nothing
    set gg_trg_Silence_Wall = CreateTrigger(  )
    call DisableTrigger( gg_trg_Silence_Wall )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Silence_Wall, 1.00 )
    call TriggerAddAction( gg_trg_Silence_Wall, function Trig_Silence_Wall_Actions )
endfunction

//===========================================================================
// Trigger: Silence Buster Bolt Cast
//
// Variables that are changed here:
//  - Missile Speed
//  - Bounce Range (the maximum range that the missile will search a new target to bounce to)
//  - Number of Bounces
//  - Maximum Hits (how much times a unit may be hit by the same bounce spell, warcraft default is 1)
//  - Missile Type (a unit that is created in the Object Editor)
// Note:
//  - Dont forget to make the turn on trigger action to refer to the right trigger.
//===========================================================================
function Trig_Silence_Buster_Bolt_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01G' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Buster_Bolt_Cast_Func015001 takes nothing returns boolean
    return ( IsUnitGroupEmptyBJ(udg_PowerChainGroup) == true )
endfunction

function Trig_Silence_Buster_Bolt_Cast_Actions takes nothing returns nothing
    // Setup Variables
    // ----------------------------------------------------------------------------------------------------EDIT UNDER [Missile Speed, Bounce Range, Number of Bounces and how many times the same unit may be hit during one chain.]
    set udg_SpellBounceRange = 400.00
    set udg_SpellBounceSpeed = 800.00
    set udg_SpellNumberBounces = ( 0 + ( 2 * GetUnitAbilityLevelSwapped('A01G', GetSpellAbilityUnit()) ) )
    set udg_SpellMaximumNumberHits = 1
    // ----------------------------------------------------------------------------------------------------EDIT ABOVE [Missile Speed, Bounce Range, Number of Bounces and how many times the same unit may be hit during one chain.]
    // Spell Effect Create Dummy Unit With Model
    set udg_TemporaryPoint[1] = GetUnitLoc(GetSpellAbilityUnit())
    set udg_TemporaryPoint[2] = GetUnitLoc(GetSpellTargetUnit())
    // ----------------------------------------------------------------------------------------------------EDIT UNDER [The Missile Type, which is a unit.]
    call CreateNUnitsAtLocFacingLocBJ( 1, 'h01J', GetOwningPlayer(GetSpellAbilityUnit()), udg_TemporaryPoint[1], udg_TemporaryPoint[2] )
    // ----------------------------------------------------------------------------------------------------EDIT ABOVE [The Missile Type, which is a unit.]
    // ----------------------------------------------------------------------------------------------------EDIT UNDER [Select the right Loop Trigger.]
    if ( Trig_Silence_Buster_Bolt_Cast_Func015001() ) then
        call EnableTrigger( gg_trg_Silence_Buster_Bolt_Loop )
    else
        call DoNothing(  )
    endif
    // ----------------------------------------------------------------------------------------------------EDIT ABOVE [Select the right Loop Trigger.]
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PowerChainGroup )
    // Save Variables
    call SaveRealBJ( udg_SpellBounceRange, 0, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveRealBJ( udg_SpellBounceSpeed, 1, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveIntegerBJ( udg_SpellNumberBounces, 2, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveUnitHandleBJ( GetSpellTargetUnit(), 3, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveIntegerBJ( GetUnitAbilityLevelSwapped('A01G', GetSpellAbilityUnit()), 4, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveIntegerBJ( udg_SpellMaximumNumberHits, 5, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    call SaveIntegerBJ( GetHandleIdBJ(GetLastCreatedUnit()), 6, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
    // Clean up
    call RemoveLocation (udg_TemporaryPoint[2])
    call RemoveLocation (udg_TemporaryPoint[1])
endfunction

//===========================================================================
function InitTrig_Silence_Buster_Bolt_Cast takes nothing returns nothing
    set gg_trg_Silence_Buster_Bolt_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Silence_Buster_Bolt_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Silence_Buster_Bolt_Cast, Condition( function Trig_Silence_Buster_Bolt_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Silence_Buster_Bolt_Cast, function Trig_Silence_Buster_Bolt_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Silence Buster Bolt Loop
//
// Variables that are changed here:
//  - Ability type (the one that is casted every time the bounce hits)
//  - The conditions that a unit must meet to be aquired as the next target (example: currently it only picks enemy units)
// Note:
//  - When a new ability is added, make sure you put the right unit order in place (order (Last created unit) to [your ability's base order ID] Target)
//===========================================================================
function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func002002002 takes nothing returns boolean
    return ( LoadIntegerBJ(udg_TemporaryKeySpell, GetHandleIdBJ(GetFilterUnit()), udg_PowerChainHash) != 0 )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func003A takes nothing returns nothing
    call SaveIntegerBJ( 0, udg_TemporaryKeySpell, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002002 takes nothing returns boolean
    return ( udg_SpellMaximumNumberHits > LoadIntegerBJ(udg_TemporaryKeySpell, GetHandleIdBJ(GetFilterUnit()), udg_PowerChainHash) )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002001(), Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002002() )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001001(), Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001002() )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002002 takes nothing returns boolean
    return ( GetFilterUnit() != udg_TemporaryTarget )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002001(), Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002002() )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003001(), Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003002() )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func004002002 takes nothing returns boolean
    return ( LoadIntegerBJ(udg_TemporaryKeySpell, GetHandleIdBJ(GetFilterUnit()), udg_PowerChainHash) != 0 )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func005A takes nothing returns nothing
    call SaveIntegerBJ( 0, udg_TemporaryKeySpell, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash )
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func008A takes nothing returns nothing
    set udg_TemporaryTarget = GetEnumUnit()
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TemporaryGroup[2]) > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020C takes nothing returns boolean
    if ( not ( udg_SpellNumberBounces > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_TemporaryPoint[1], udg_TemporaryPoint[2]) <= ( udg_SpellBounceSpeed / 70.00 ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001Func003A takes nothing returns nothing
    // Load Variables
    set udg_SpellBounceSpeed = LoadRealBJ(1, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
    set udg_SpellNumberBounces = LoadIntegerBJ(2, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
    set udg_TemporaryTarget = LoadUnitHandleBJ(3, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
    set udg_TemporaryKeyTarget = LoadUnitHandleBJ(3, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
    set udg_TemporaryKeySpell = LoadIntegerBJ(6, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
    // Spell Effect Move Bouncing Missile
    set udg_TemporaryPoint[1] = GetUnitLoc(GetEnumUnit())
    set udg_TemporaryPoint[2] = GetUnitLoc(udg_TemporaryTarget)
    set udg_TemporaryPoint[3] = PolarProjectionBJ(udg_TemporaryPoint[1], ( 0.02 * udg_SpellBounceSpeed ), AngleBetweenPoints(udg_TemporaryPoint[1], udg_TemporaryPoint[2]))
    call SetUnitPositionLocFacingLocBJ( GetEnumUnit(), udg_TemporaryPoint[3], udg_TemporaryPoint[2] )
    call RemoveLocation (udg_TemporaryPoint[3])
    call RemoveLocation (udg_TemporaryPoint[1])
    set udg_TemporaryPoint[1] = GetUnitLoc(GetEnumUnit())
    // Collision Of Unit And Bouncing Missile
    if ( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016C() ) then
        call RemoveLocation (udg_TemporaryPoint[1])
        call RemoveLocation (udg_TemporaryPoint[2])
        // Spell Hit
        set udg_TemporaryPoint[1] = GetUnitLoc(udg_TemporaryTarget)
        call CreateNUnitsAtLocFacingLocBJ( 1, 'h01K', GetOwningPlayer(GetEnumUnit()), udg_TemporaryPoint[1], udg_TemporaryPoint[1] )
        call UnitAddAbilityBJ( 'A012', GetLastCreatedUnit() )
        // ----------------------------------------------------------------------------------------------------EDIT UNDER [Ability casted against every unit in the chain, and the right cast order.]
        call SetUnitAbilityLevelSwapped( 'A012', GetLastCreatedUnit(), LoadIntegerBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash) )
        call IssueTargetOrderBJ( GetLastCreatedUnit(), "firebolt", udg_TemporaryTarget )
        // ----------------------------------------------------------------------------------------------------EDIT ABOVE [Ability casted against every unit in the chain, and the right cast order.]
        call UnitApplyTimedLifeBJ( 0.10, 'BTLF', GetLastCreatedUnit() )
        call RemoveLocation (udg_TemporaryPoint[1])
        // Save Variables On Target Unit
        call SaveIntegerBJ( ( LoadIntegerBJ(udg_TemporaryKeySpell, GetHandleIdBJ(udg_TemporaryKeyTarget), udg_PowerChainHash) + 1 ), udg_TemporaryKeySpell, GetHandleIdBJ(udg_TemporaryKeyTarget), udg_PowerChainHash )
        // Decrease Bounces
        set udg_SpellNumberBounces = ( udg_SpellNumberBounces - 1 )
        // Bounce On When More Units Can Be Hit
        if ( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020C() ) then
            // Load Variables
            set udg_SpellMaximumNumberHits = LoadIntegerBJ(5, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
            set udg_SpellBounceRange = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash)
            // Spell Effect
            // ----------------------------------------------------------------------------------------------------EDIT UNDER [The conditions that a unit must meet to be aquired as the next target]
            set udg_TemporaryGroup[1] = GetUnitsInRangeOfLocMatching(udg_SpellBounceRange, GetUnitLoc(GetEnumUnit()), Condition(function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func010002003))
            // ----------------------------------------------------------------------------------------------------EDIT ABOVE [The conditions that a unit must meet to be aquired as the next target]
            set udg_TemporaryGroup[2] = GetRandomSubGroup(1, udg_TemporaryGroup[1])
            // New Unit To Bounce To Found
            if ( Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014C() ) then
                // Make This Unit The New Target
                call ForGroupBJ( udg_TemporaryGroup[2], function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func008A )
                call DestroyGroup (udg_TemporaryGroup[2])
                call DestroyGroup (udg_TemporaryGroup[1])
                set udg_TemporaryPoint[1] = GetUnitLoc(GetEnumUnit())
                set udg_TemporaryPoint[2] = GetUnitLoc(udg_TemporaryTarget)
                // New Dummy Unit
                // ----------------------------------------------------------------------------------------------------EDIT UNDER [The Missile Type, which is a unit.]
                call CreateNUnitsAtLocFacingLocBJ( 1, 'h01J', GetOwningPlayer(GetEnumUnit()), udg_TemporaryPoint[1], udg_TemporaryPoint[2] )
                // ----------------------------------------------------------------------------------------------------EDIT ABOVE [The Missile Type, which is a unit.]
                call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PowerChainGroup )
                // Save Variables
                call SaveRealBJ( udg_SpellBounceRange, 0, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveRealBJ( udg_SpellBounceSpeed, 1, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveIntegerBJ( udg_SpellNumberBounces, 2, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveUnitHandleBJ( udg_TemporaryTarget, 3, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveIntegerBJ( LoadIntegerBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash), 4, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveIntegerBJ( udg_SpellMaximumNumberHits, 5, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                call SaveIntegerBJ( LoadIntegerBJ(6, GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash), 6, GetHandleIdBJ(GetLastCreatedUnit()), udg_PowerChainHash )
                // Clean up
                call RemoveLocation (udg_TemporaryPoint[2])
                call RemoveLocation (udg_TemporaryPoint[1])
            else
                call DestroyGroup (udg_TemporaryGroup[2])
                call DestroyGroup (udg_TemporaryGroup[1])
                // Clean Up Units That Were Hit
                set udg_TemporaryGroup[1] = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func004002002))
                call ForGroupBJ( udg_TemporaryGroup[1], function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func014Func005A )
                call DestroyGroup (udg_TemporaryGroup[1])
            endif
        else
            // Clean Up Units That Were Hit
            set udg_TemporaryGroup[1] = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func002002002))
            call ForGroupBJ( udg_TemporaryGroup[1], function Trig_Silence_Buster_Bolt_Loop_Func001Func003Func016Func020Func003A )
            call DestroyGroup (udg_TemporaryGroup[1])
        endif
        // Remove Old Dummy Unit
        call KillUnit( GetEnumUnit() )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_PowerChainGroup )
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_PowerChainHash )
    else
        call RemoveLocation (udg_TemporaryPoint[1])
        call RemoveLocation (udg_TemporaryPoint[2])
    endif
endfunction

function Trig_Silence_Buster_Bolt_Loop_Func001C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_PowerChainGroup) > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Buster_Bolt_Loop_Actions takes nothing returns nothing
    if ( Trig_Silence_Buster_Bolt_Loop_Func001C() ) then
        call ForGroupBJ( udg_PowerChainGroup, function Trig_Silence_Buster_Bolt_Loop_Func001Func003A )
    else
        call DisableTrigger( GetTriggeringTrigger() )
    endif
endfunction

//===========================================================================
function InitTrig_Silence_Buster_Bolt_Loop takes nothing returns nothing
    set gg_trg_Silence_Buster_Bolt_Loop = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Silence_Buster_Bolt_Loop, 0.03 )
    call TriggerAddAction( gg_trg_Silence_Buster_Bolt_Loop, function Trig_Silence_Buster_Bolt_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Hashtable Variables
//===========================================================================
function Trig_Hashtable_Variables_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_FoK_hashtable = GetLastCreatedHashtableBJ()
    // -------------
    // -------------
    // To use this ability past level 4 you must extend these arrays so they have values
    // If you change the aoe here you should probably also change it on the OE skill, so they match
    // -------------
    // -------------
    // Edit the number of knives spawned
    set udg_knivecount[1] = 15
    set udg_knivecount[2] = 15
    set udg_knivecount[3] = 15
    // Edit the area of effect
    set udg_knivesaoe[1] = 160.00
    set udg_knivesaoe[2] = 160.00
    set udg_knivesaoe[3] = 160.00
    // Edit the area of effect of the damage
    // This value is used to pick a random unit within its range.
    //  If it's too large the knives will do their damage and be destroyed before they "reach" their target
    set udg_knivesdamageaoe[1] = 80.00
    set udg_knivesdamageaoe[2] = 80.00
    set udg_knivesdamageaoe[3] = 80.00
    // Edit the damage per knife
    set udg_knivesdamage[1] = 20.00
    set udg_knivesdamage[2] = 40.00
    set udg_knivesdamage[3] = 60.00
    // Edit the duration of the knives
    set udg_knivesduration[1] = 1.20
    set udg_knivesduration[2] = 1.20
    set udg_knivesduration[3] = 1.20
    // Edit the projectile speed of the knives
    set udg_knivesspeed[1] = 30.00
    set udg_knivesspeed[2] = 30.00
    set udg_knivesspeed[3] = 30.00
    // Edit the random height of the projectiles. The first value is the minimum, the second is the maximum.
    set udg_flyingheight[1] = 20.00
    set udg_flyingheight[2] = 200.00
endfunction

//===========================================================================
function InitTrig_Hashtable_Variables takes nothing returns nothing
    set gg_trg_Hashtable_Variables = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hashtable_Variables, function Trig_Hashtable_Variables_Actions )
endfunction

//===========================================================================
// Trigger: Star Gentle Uterus Cast
//===========================================================================
function Trig_Star_Gentle_Uterus_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A02V' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Gentle_Uterus_Cast_Actions takes nothing returns nothing
    // Setting variables
    set udg_caster = GetTriggerUnit()
    set udg_level = GetUnitAbilityLevelSwapped('A02V', udg_caster)
    set udg_point1 = GetSpellTargetLoc()
    set udg_point2 = GetUnitLoc(udg_caster)
    // Creates the knives
    set udg_i = 1
    loop
        exitwhen udg_i > udg_knivecount[udg_level]
        call CreateNUnitsAtLoc( 1, 'u008', GetOwningPlayer(udg_caster), udg_point2, bj_UNIT_FACING )
        set udg_target = GetLastCreatedUnit()
        call SetUnitFlyHeightBJ( udg_target, GetRandomReal(udg_flyingheight[1], udg_flyingheight[2]), 0.00 )
        call GroupAddUnitSimple( udg_target, udg_FanofKnivesGroup )
        set udg_handle = GetHandleId(udg_target)
        set udg_point3 = PolarProjectionBJ(udg_point1, GetRandomReal(0, udg_knivesaoe[udg_level]), GetRandomDirectionDeg())
        set udg_angle = AngleBetweenPoints(udg_point2, udg_point3)
        set udg_timer = udg_knivesduration[udg_level]
        call SaveRealBJ( udg_angle, 1, udg_handle, udg_FoK_hashtable )
        call SaveRealBJ( udg_timer, 2, udg_handle, udg_FoK_hashtable )
        call SaveUnitHandleBJ( udg_caster, 3, udg_handle, udg_FoK_hashtable )
        call RemoveLocation(udg_point3)
        set udg_i = udg_i + 1
    endloop
    // Clearing point leaks
    call RemoveLocation(udg_point1)
    call RemoveLocation(udg_point2)
    call EnableTrigger( gg_trg_Star_Gentle_Uterus_Loop )
endfunction

//===========================================================================
function InitTrig_Star_Gentle_Uterus_Cast takes nothing returns nothing
    set gg_trg_Star_Gentle_Uterus_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Star_Gentle_Uterus_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Star_Gentle_Uterus_Cast, Condition( function Trig_Star_Gentle_Uterus_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Star_Gentle_Uterus_Cast, function Trig_Star_Gentle_Uterus_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Star Gentle Uterus Loop
//===========================================================================
function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func004C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_FanofKnivesGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002002 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_ownerplayer) == true )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002001(), Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002002() )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003001(), Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003002() )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func008C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_FanofKnivesGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_ownerplayer) == true )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002001(), Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002002() )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003001(), Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003002() )
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(GetUnitsInRangeOfLocMatching(udg_knivesdamageaoe[udg_level], udg_point2, Condition(function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func009001001003))) > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001Func005C takes nothing returns boolean
    if ( not ( udg_timer > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Gentle_Uterus_Loop_Func001A takes nothing returns nothing
    // Setting variables
    set udg_target = GetEnumUnit()
    set udg_handle = GetHandleId(udg_target)
    set udg_timer = LoadRealBJ(2, udg_handle, udg_FoK_hashtable)
    if ( Trig_Star_Gentle_Uterus_Loop_Func001Func005C() ) then
        set udg_caster = LoadUnitHandleBJ(3, udg_handle, udg_FoK_hashtable)
        set udg_ownerplayer = GetOwningPlayer(udg_caster)
        set udg_level = GetUnitAbilityLevelSwapped('A02V', udg_caster)
        set udg_point1 = GetUnitLoc(udg_target)
        set udg_angle = LoadRealBJ(1, udg_handle, udg_FoK_hashtable)
        set udg_point2 = PolarProjectionBJ(udg_point1, udg_knivesspeed[udg_level], udg_angle)
        call SetUnitPositionLocFacingBJ( udg_target, udg_point2, udg_angle )
        // Checking to see if the knife should deal its damage
        set bj_wantDestroyGroup = true
        if ( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014C() ) then
            // Deal the damage
            set bj_wantDestroyGroup = true
            call UnitDamageTargetBJ( udg_caster, GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(udg_knivesdamageaoe[udg_level], udg_point2, Condition(function Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func004002001003))), udg_knivesdamage[udg_level], ATTACK_TYPE_PIERCE, DAMAGE_TYPE_NORMAL )
            // Clear leaks
            call KillUnit( udg_target )
            call FlushChildHashtableBJ( udg_handle, udg_FoK_hashtable )
            if ( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func014Func008C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        else
            call SaveRealBJ( ( udg_timer - 0.03 ), 2, udg_handle, udg_FoK_hashtable )
        endif
    else
        // Clear leaks
        call KillUnit( udg_target )
        call FlushChildHashtableBJ( udg_handle, udg_FoK_hashtable )
        if ( Trig_Star_Gentle_Uterus_Loop_Func001Func005Func004C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
        else
        endif
    endif
endfunction

function Trig_Star_Gentle_Uterus_Loop_Actions takes nothing returns nothing
    call ForGroupBJ( udg_FanofKnivesGroup, function Trig_Star_Gentle_Uterus_Loop_Func001A )
endfunction

//===========================================================================
function InitTrig_Star_Gentle_Uterus_Loop takes nothing returns nothing
    set gg_trg_Star_Gentle_Uterus_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Star_Gentle_Uterus_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Star_Gentle_Uterus_Loop, 0.03 )
    call TriggerAddAction( gg_trg_Star_Gentle_Uterus_Loop, function Trig_Star_Gentle_Uterus_Loop_Actions )
endfunction

//===========================================================================
// Trigger: StarSeriousLaserIni
//===========================================================================
function Trig_StarSeriousLaserIni_Actions takes nothing returns nothing
    set udg_zLoc = Location(0, 0)
endfunction

//===========================================================================
function InitTrig_StarSeriousLaserIni takes nothing returns nothing
    set gg_trg_StarSeriousLaserIni = CreateTrigger(  )
    call TriggerAddAction( gg_trg_StarSeriousLaserIni, function Trig_StarSeriousLaserIni_Actions )
endfunction

//===========================================================================
// Trigger: StarSeriousLaserCast
//===========================================================================
function Trig_StarSeriousLaserCast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A02W' ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserCast_Func009C takes nothing returns boolean
    if ( not ( udg_u == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserCast_Actions takes nothing returns nothing
    // It is not recommended to change any values which are not marked with big letters
    set udg_ShockRifle_Max = ( udg_ShockRifle_Max + 1 )
    set udg_ShockRifle_Unit[( udg_ShockRifle_Max * 3 )] = GetTriggerUnit()
    set udg_u = GetSpellTargetUnit()
    call MoveLocation(udg_zLoc, GetSpellTargetX(), GetSpellTargetY())
    set udg_loc = GetUnitLoc(GetTriggerUnit())
    set udg_a = AngleBetweenPoints(udg_loc, udg_zLoc)
    // Decide if it was point- or unittarget
    if ( Trig_StarSeriousLaserCast_Func009C() ) then
        // If it was pointtarget create a laser and set all data
        call CreateNUnitsAtLoc( 1, 'e00N', GetOwningPlayer(GetTriggerUnit()), udg_loc, udg_a )
        call UnitApplyTimedLifeBJ( 5.00, 'BTLF', GetLastCreatedUnit() )
        // SET LASER RAY SPEED HERE
        set udg_ShockRifle_Data[( udg_ShockRifle_Max * 5 )] = 50.00
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 1 )] = ( udg_ShockRifle_Data[( udg_ShockRifle_Max * 5 )] * CosBJ(udg_a) )
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 2 )] = ( udg_ShockRifle_Data[( udg_ShockRifle_Max * 5 )] * SinBJ(udg_a) )
        // SET LASER RAY DAMAGE HERE
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 3 )] = I2R(( ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) * 100 ) + 0 ))
        // SET LASER RAY AOE HERE
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 4 )] = 150.00
        set udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 1 )] = null
        set udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 2 )] = GetLastCreatedUnit()
        if udg_ShockRifle_Group[udg_ShockRifle_Max] == null then
        set udg_ShockRifle_Group[udg_ShockRifle_Max] = CreateGroup()
        endif
    else
        // If it was unit target create an orb and set data
        // SET ORB SPEED HERE
        set udg_ShockRifle_Data[( udg_ShockRifle_Max * 5 )] = 50.00
        // SET ORB DAMAGE HERE
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 3 )] = I2R(( ( GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetTriggerUnit()) * 100 ) + 0 ))
        // SET ORB AOE HERE
        set udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 4 )] = 150.00
        call CreateNUnitsAtLoc( 1, 'e00N', GetOwningPlayer(GetTriggerUnit()), udg_loc, udg_a )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_ShockRifle_Orbs )
        set udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 1 )] = udg_u
        set udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 2 )] = GetLastCreatedUnit()
    endif
    call SetUnitFlyHeightBJ( GetLastCreatedUnit(), 60.00, 0.00 )
    call RemoveLocation(udg_loc)
    call EnableTrigger( gg_trg_StarSeriousLaserLoop )
endfunction

//===========================================================================
function InitTrig_StarSeriousLaserCast takes nothing returns nothing
    set gg_trg_StarSeriousLaserCast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_StarSeriousLaserCast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_StarSeriousLaserCast, Condition( function Trig_StarSeriousLaserCast_Conditions ) )
    call TriggerAddAction( gg_trg_StarSeriousLaserCast, function Trig_StarSeriousLaserCast_Actions )
endfunction

//===========================================================================
// Trigger: StarSeriousLaserLoop
//
// Data:
// 0 speed
// 1 x speed
// 2 y speed
// 3 damage
// 4 aoe
//===========================================================================
function Trig_StarSeriousLaserLoop_Func001Func001Func016C takes nothing returns boolean
    if ( not ( udg_ShockRifle_Max < 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_u)) == true )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002002 takes nothing returns boolean
    return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) > 0.00 )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003A takes nothing returns nothing
    call UnitDamageTargetBJ( udg_ShockRifle_Unit[( udg_i * 3 )], GetEnumUnit(), udg_ShockRifle_Data[( ( udg_i * 5 ) + 3 )], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL )
    call AddSpecialEffectTargetUnitBJ( "chest", GetEnumUnit(), "Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019C takes nothing returns boolean
    if ( not ( ( ( ( udg_x - udg_x2 ) * ( udg_x - udg_x2 ) ) + ( ( udg_y - udg_y2 ) * ( udg_y - udg_y2 ) ) ) < ( udg_r * udg_r ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func021C takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_u) == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_u)) == true )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002002 takes nothing returns boolean
    return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) > 0.00 )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007A takes nothing returns nothing
    // AND HERE
    call UnitDamageTargetBJ( udg_ShockRifle_Unit[( udg_i * 3 )], GetEnumUnit(), ( udg_ShockRifle_Data[( ( udg_i * 5 ) + 3 )] + 0.00 ), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
    call AddSpecialEffectTargetUnitBJ( "chest", GetEnumUnit(), "Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004C takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) > 0.00 ) ) then
        return false
    endif
    if ( not ( ( ( ( udg_x - udg_x2 ) * ( udg_x - udg_x2 ) ) + ( ( udg_y - udg_y2 ) * ( udg_y - udg_y2 ) ) ) < ( udg_r * udg_r ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033A takes nothing returns nothing
    set udg_x2 = GetUnitX(GetEnumUnit())
    set udg_y2 = GetUnitY(GetEnumUnit())
    // If there is an orb within laser aoe destroy it
    if ( Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004C() ) then
        call KillUnit( GetEnumUnit() )
        set bj_wantDestroyGroup = true
        call MoveLocation(udg_zLoc, udg_x2, udg_y2)
        // Damage all units hit by exploding orb
        // CHANGE DOUBLE DAMAGE/AOE ON ORB HIT HERE
        call ForGroupBJ( GetUnitsInRangeOfLocMatching(150.00, udg_zLoc, Condition(function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007001003)), function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033Func004Func007A )
    else
    endif
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001002 takes nothing returns boolean
    return ( IsUnitInGroup(GetFilterUnit(), udg_ShockRifle_Group[udg_i]) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_u)) == true )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002002 takes nothing returns boolean
    return ( GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) > 0.00 )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003001(), Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003002() )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037A takes nothing returns nothing
    call UnitDamageTargetBJ( udg_ShockRifle_Unit[( udg_i * 3 )], GetEnumUnit(), udg_ShockRifle_Data[( ( udg_i * 5 ) + 3 )], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
    call AddSpecialEffectTargetUnitBJ( "chest", GetEnumUnit(), "Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    // And add them to a debug group so they wont be hit again
    call GroupAddUnitSimple( GetEnumUnit(), udg_ShockRifle_Group[udg_i] )
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001Func017C takes nothing returns boolean
    if ( not ( udg_ShockRifle_Unit[( ( udg_i * 3 ) + 1 )] == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Func001Func001C takes nothing returns boolean
    if ( not ( udg_ShockRifle_Unit[( udg_i * 3 )] != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_StarSeriousLaserLoop_Actions takes nothing returns nothing
    set udg_i = 1
    loop
        exitwhen udg_i > udg_ShockRifle_Max
        if ( Trig_StarSeriousLaserLoop_Func001Func001C() ) then
            // Decide if it is a laser ray or orb to be moved
            if ( Trig_StarSeriousLaserLoop_Func001Func001Func017C() ) then
                // Move the laser ray forward
                // XXXXXXXXXX
                set udg_u = udg_ShockRifle_Unit[( ( udg_i * 3 ) + 2 )]
                set udg_x = GetUnitX(udg_u)
                set udg_y = GetUnitY(udg_u)
                set udg_x = ( udg_x + udg_ShockRifle_Data[( ( udg_i * 5 ) + 1 )] )
                set udg_y = ( udg_y + udg_ShockRifle_Data[( ( udg_i * 5 ) + 2 )] )
                // If the laser ray is within map bounds and alive move it forward
                if RectContainsCoords(bj_mapInitialPlayableArea, udg_x, udg_y) and GetWidgetLife(udg_u) > 0.405  then
                call SetUnitX(udg_u, udg_x)
                call SetUnitY(udg_u, udg_y)
                // XXXXXXXXXX
                set udg_r = udg_ShockRifle_Data[( ( udg_i * 5 ) + 4 )]
                call ForGroupBJ( udg_ShockRifle_Orbs, function Trig_StarSeriousLaserLoop_Func001Func001Func017Func033A )
                set bj_wantDestroyGroup = true
                call MoveLocation(udg_zLoc, udg_x, udg_y)
                // Damage all units hit by the laser
                call ForGroupBJ( GetUnitsInRangeOfLocMatching(150.00, udg_zLoc, Condition(function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037001003)), function Trig_StarSeriousLaserLoop_Func001Func001Func017Func037A )
                else
                // If the laser ray reached the map bounds it will be destroyed
                set udg_ShockRifle_Unit[( udg_i * 3 )] = null
                call KillUnit( udg_u )
                endif
            else
                // Move the orb to the target
                // XXXXXXXXXX
                set udg_r = udg_ShockRifle_Data[( udg_i * 5 )]
                set udg_u = udg_ShockRifle_Unit[( ( udg_i * 3 ) + 1 )]
                set udg_x2 = GetUnitX(udg_u)
                set udg_y2 = GetUnitY(udg_u)
                set udg_u = udg_ShockRifle_Unit[( ( udg_i * 3 ) + 2 )]
                set udg_x = GetUnitX(udg_u)
                set udg_y = GetUnitY(udg_u)
                set udg_a = Atan2(udg_y2-udg_y, udg_x2-udg_x)
                set udg_x = udg_x + udg_r * Cos(udg_a)
                set udg_y = udg_y + udg_r * Sin(udg_a)
                call SetUnitX(udg_u, udg_x)
                call SetUnitY(udg_u, udg_y)
                // XXXXXXXXXX
                // If the laser arrived its target it will explode dealing damage to all sorounding enemys
                if ( Trig_StarSeriousLaserLoop_Func001Func001Func017Func019C() ) then
                    call MoveLocation(udg_zLoc, udg_x, udg_y)
                    set bj_wantDestroyGroup = true
                    call ForGroupBJ( GetUnitsInRangeOfLocMatching(150.00, udg_zLoc, Condition(function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003001003)), function Trig_StarSeriousLaserLoop_Func001Func001Func017Func019Func003A )
                    // Remove and kill the orb
                    call KillUnit( udg_u )
                    call GroupRemoveUnitSimple( udg_u, udg_ShockRifle_Orbs )
                else
                endif
                // If the orb is dead (either killed by a laser or just by exploding itself) this will end
                if ( Trig_StarSeriousLaserLoop_Func001Func001Func017Func021C() ) then
                    set udg_ShockRifle_Unit[( udg_i * 3 )] = null
                else
                endif
            endif
        else
            // Shift data
            call GroupClear( udg_ShockRifle_Group[udg_i] )
            call GroupAddGroup( udg_ShockRifle_Group[udg_ShockRifle_Max], udg_ShockRifle_Group[udg_i] )
            call GroupClear( udg_ShockRifle_Group[udg_ShockRifle_Max] )
            set udg_ShockRifle_Unit[( udg_i * 3 )] = udg_ShockRifle_Unit[( udg_ShockRifle_Max * 3 )]
            set udg_ShockRifle_Unit[( ( udg_i * 3 ) + 1 )] = udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 1 )]
            set udg_ShockRifle_Unit[( ( udg_i * 3 ) + 2 )] = udg_ShockRifle_Unit[( ( udg_ShockRifle_Max * 3 ) + 2 )]
            set udg_ShockRifle_Data[( udg_i * 5 )] = udg_ShockRifle_Data[( udg_ShockRifle_Max * 5 )]
            set udg_ShockRifle_Data[( ( udg_i * 5 ) + 1 )] = udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 1 )]
            set udg_ShockRifle_Data[( ( udg_i * 5 ) + 2 )] = udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 2 )]
            set udg_ShockRifle_Data[( ( udg_i * 5 ) + 3 )] = udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 3 )]
            set udg_ShockRifle_Data[( ( udg_i * 5 ) + 4 )] = udg_ShockRifle_Data[( ( udg_ShockRifle_Max * 5 ) + 4 )]
            set udg_ShockRifle_Max = ( udg_ShockRifle_Max - 1 )
            set udg_i = ( udg_i - 1 )
            if ( Trig_StarSeriousLaserLoop_Func001Func001Func016C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        endif
        set udg_i = udg_i + 1
    endloop
endfunction

//===========================================================================
function InitTrig_StarSeriousLaserLoop takes nothing returns nothing
    set gg_trg_StarSeriousLaserLoop = CreateTrigger(  )
    call DisableTrigger( gg_trg_StarSeriousLaserLoop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_StarSeriousLaserLoop, 0.03 )
    call TriggerAddAction( gg_trg_StarSeriousLaserLoop, function Trig_StarSeriousLaserLoop_Actions )
endfunction

//===========================================================================
// Trigger: Mars Flame Sniper Cast
//===========================================================================
function Trig_Mars_Flame_Sniper_Cast_Func023C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_Mars_Flame_Sniper_Missile) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Cast_Actions takes nothing returns nothing
    set udg_tempUnit0 = GetSpellAbilityUnit()
    set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
    set udg_tempInteger0 = GetHeroLevel(udg_tempUnit0)
    set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
    set udg_tempLoc1 = GetSpellTargetLoc()
    set udg_tempReal0 = AngleBetweenPoints(udg_tempLoc0, udg_tempLoc1)
    call RemoveLocation(udg_tempLoc1)
    set udg_tempLoc1 = null
    set udg_tempLoc2 = PolarProjectionBJ(udg_tempLoc0, udg_sorFlameCollision, udg_tempReal0)
    call RemoveLocation(udg_tempLoc0)
    set udg_tempLoc0 = null
    call CreateNUnitsAtLoc( 1, 'h01M', udg_tempPlayer, udg_tempLoc2, udg_tempReal0 )
    call RemoveLocation(udg_tempLoc2)
    set udg_tempLoc2 = null
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_sorFlameMGroup )
    set udg_sorCountFlame = ( udg_sorCountFlame + 1 )
    set udg_tempInteger1 = GetHandleIdBJ(GetLastCreatedUnit())
    call SaveUnitHandleBJ( udg_tempUnit0, StringHashBJ("source"), udg_tempInteger1, udg_sorHashFlame )
    call SaveIntegerBJ( udg_tempInteger0, StringHashBJ("level"), udg_tempInteger1, udg_sorHashFlame )
    call SaveRealBJ( udg_tempReal0, StringHashBJ("angle"), udg_tempInteger1, udg_sorHashFlame )
    call SaveRealBJ( udg_sorFlameSpeedBase, StringHashBJ("speed"), udg_tempInteger1, udg_sorHashFlame )
    call SaveRealBJ( 0.00, StringHashBJ("distance"), udg_tempInteger1, udg_sorHashFlame )
    if ( Trig_Mars_Flame_Sniper_Cast_Func023C() ) then
        call EnableTrigger( gg_trg_Mars_Flame_Sniper_Missile )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Mars_Flame_Sniper_Cast takes nothing returns nothing
    set gg_trg_Mars_Flame_Sniper_Cast = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Mars_Flame_Sniper_Cast, function Trig_Mars_Flame_Sniper_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Mars Flame Sniper Missile
//===========================================================================
function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_tempPlayer) == true )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), udg_tempPlayer) == true )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003001(), Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003002() )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func001C takes nothing returns boolean
    if ( not ( udg_tempReal0 > udg_sorFlameScaleRange ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func016Func007C takes nothing returns boolean
    if ( not ( IsUnitInGroup(udg_tempUnit1, udg_sorIgniteTargets) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func016A takes nothing returns nothing
    set udg_tempUnit1 = GetEnumUnit()
    set udg_tempInteger1 = GetHandleId(udg_tempUnit1)
    call UnitDamageTargetBJ( udg_tempUnit0, udg_tempUnit1, udg_tempReal1, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
    call AddSpecialEffectTargetUnitBJ( "chest", udg_tempUnit1, "Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    // -
    if ( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func016Func007C() ) then
        call SaveRealBJ( ( udg_tempReal2 + LoadRealBJ(StringHashBJ("totaldamage"), udg_tempInteger1, udg_sorHashIgnite) ), StringHashBJ("totaldamage"), udg_tempInteger1, udg_sorHashIgnite )
    else
        call GroupAddUnitSimple( udg_tempUnit1, udg_sorIgniteTargets )
        call SaveRealBJ( udg_tempReal2, StringHashBJ("totaldamage"), udg_tempInteger1, udg_sorHashIgnite )
    endif
    // -
    call CreateNUnitsAtLoc( 1, 'h02B', udg_tempPlayer, udg_tempLoc0, bj_UNIT_FACING )
    set udg_tempInteger2 = GetHandleIdBJ(GetLastCreatedUnit())
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_sorIgniteGroup )
    set udg_sorCountIgnite = ( udg_sorCountIgnite + 1 )
    call SaveUnitHandleBJ( udg_tempUnit0, StringHashBJ("source"), udg_tempInteger2, udg_sorHashIgnite )
    call SaveUnitHandleBJ( udg_tempUnit1, StringHashBJ("target"), udg_tempInteger2, udg_sorHashIgnite )
    call SaveRealBJ( udg_tempReal2, StringHashBJ("damage"), udg_tempInteger2, udg_sorHashIgnite )
    call SaveRealBJ( udg_tempReal3, StringHashBJ("dpt"), udg_tempInteger2, udg_sorHashIgnite )
    call SaveRealBJ( udg_sorIgniteDuration, StringHashBJ("duration"), udg_tempInteger2, udg_sorHashIgnite )
    call AddSpecialEffectTargetUnitBJ( "chest", udg_tempUnit1, "Abilities\\Spells\\Other\\Incinerate\\IncinerateBuff.mdl" )
    call SaveEffectHandleBJ( GetLastCreatedEffectBJ(), StringHashBJ("effect0"), udg_tempInteger2, udg_sorHashIgnite )
    // -
    call GroupRemoveUnitSimple( udg_tempUnit1, udg_tempGroup )
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func019C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_Ignite_Effects) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020C takes nothing returns boolean
    if ( not ( IsUnitGroupEmptyBJ(udg_tempGroup) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func023C takes nothing returns boolean
    if ( ( udg_tempReal0 >= udg_sorFlameRange ) ) then
        return true
    endif
    if ( ( IsUnitGroupEmptyBJ(udg_tempGroup) == false ) ) then
        return true
    endif
    return false
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007C takes nothing returns boolean
    if ( not Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func023C() ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002Func001A takes nothing returns nothing
    set udg_tempUnit0 = GetEnumUnit()
    set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempReal0 = LoadRealBJ(StringHashBJ("distance"), udg_tempInteger0, udg_sorHashFlame)
    set udg_tempLoc0 = GetUnitLoc(udg_tempUnit0)
    set udg_tempGroup = GetUnitsInRangeOfLocMatching(udg_sorFlameCollision, udg_tempLoc0, Condition(function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func006002003))
    if ( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007C() ) then
        call GroupClear( udg_tempGroup )
        call DestroyGroup(udg_tempGroup)
        set udg_tempGroup = null
        // -
        call GroupRemoveUnitSimple( udg_tempUnit0, udg_sorFlameMGroup )
        call KillUnit( udg_tempUnit0 )
        set udg_sorCountFlame = ( udg_sorCountFlame - 1 )
        // -
        set udg_tempGroup = GetUnitsInRangeOfLocMatching(udg_sorFlameRadius, udg_tempLoc0, Condition(function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func019002003))
        if ( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020C() ) then
            call DestroyGroup(udg_tempGroup)
            set udg_tempGroup = null
        else
            if ( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func001C() ) then
                set udg_tempReal0 = udg_sorFlameScaleRange
            else
            endif
            set udg_tempReal1 = ( udg_sorFlameDmgMinBase + ( ( ( udg_sorFlameDmgMaxBase + ( udg_sorFlameDmgMaxInc * I2R(( LoadIntegerBJ(StringHashBJ("level"), udg_tempInteger0, udg_sorHashFlame) - 1 )) ) ) - udg_sorFlameDmgMinBase ) * ( udg_tempReal0 / udg_sorFlameScaleRange ) ) )
            set udg_tempReal2 = ( udg_sorIgniteFactor * udg_tempReal1 )
            set udg_tempReal3 = ( udg_intervalAbilityEffects * ( udg_tempReal2 / udg_sorIgniteDuration ) )
            set udg_tempUnit0 = LoadUnitHandleBJ(StringHashBJ("source"), udg_tempInteger0, udg_sorHashFlame)
            set udg_tempPlayer = GetOwningPlayer(udg_tempUnit0)
            // -
            call FlushChildHashtableBJ( udg_tempInteger0, udg_sorHashFlame )
            // -
            call CreateTextTagLocBJ( ( I2S(R2I(udg_tempReal1)) + "!" ), udg_tempLoc0, 64.00, 22.00, 100.00, 40.00, 0.00, 0 )
            call SetTextTagPermanentBJ( GetLastCreatedTextTag(), false )
            call SetTextTagVelocityBJ( GetLastCreatedTextTag(), 64, 90 )
            call SetTextTagLifespanBJ( GetLastCreatedTextTag(), 1.60 )
            call SetTextTagFadepointBJ( GetLastCreatedTextTag(), 1.20 )
            // -
            call ForGroupBJ( udg_tempGroup, function Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func016A )
            call DestroyGroup(udg_tempGroup)
            set udg_tempGroup = null
            if ( Trig_Mars_Flame_Sniper_Missile_Func002Func001Func007Func020Func019C() ) then
                call EnableTrigger( gg_trg_Ignite_Effects )
            else
            endif
        endif
        call RemoveLocation(udg_tempLoc0)
        set udg_tempLoc0 = null
    else
        set udg_tempReal1 = LoadRealBJ(StringHashBJ("speed"), udg_tempInteger0, udg_sorHashFlame)
        set udg_tempReal2 = LoadRealBJ(StringHashBJ("angle"), udg_tempInteger0, udg_sorHashFlame)
        set udg_tempLoc1 = PolarProjectionBJ(udg_tempLoc0, udg_tempReal1, udg_tempReal2)
        call RemoveLocation(udg_tempLoc0)
        set udg_tempLoc0 = null
        call SetUnitPositionLoc( udg_tempUnit0, udg_tempLoc1 )
        call RemoveLocation(udg_tempLoc1)
        set udg_tempLoc1 = null
        call SaveRealBJ( ( udg_tempReal0 + udg_tempReal1 ), StringHashBJ("distance"), udg_tempInteger0, udg_sorHashFlame )
        call SaveRealBJ( ( udg_tempReal1 + udg_sorFlameSpeedInc ), StringHashBJ("speed"), udg_tempInteger0, udg_sorHashFlame )
    endif
endfunction

function Trig_Mars_Flame_Sniper_Missile_Func002C takes nothing returns boolean
    if ( not ( udg_sorCountFlame == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mars_Flame_Sniper_Missile_Actions takes nothing returns nothing
    if ( Trig_Mars_Flame_Sniper_Missile_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
        call ForGroupBJ( udg_sorFlameMGroup, function Trig_Mars_Flame_Sniper_Missile_Func002Func001A )
    endif
endfunction

//===========================================================================
function InitTrig_Mars_Flame_Sniper_Missile takes nothing returns nothing
    set gg_trg_Mars_Flame_Sniper_Missile = CreateTrigger(  )
    call DisableTrigger( gg_trg_Mars_Flame_Sniper_Missile )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Mars_Flame_Sniper_Missile, 0.03 )
    call TriggerAddAction( gg_trg_Mars_Flame_Sniper_Missile, function Trig_Mars_Flame_Sniper_Missile_Actions )
endfunction

//===========================================================================
// Trigger: Ignite Effects
//===========================================================================
function Trig_Ignite_Effects_Func001Func001Func005Func010C takes nothing returns boolean
    if ( not ( udg_tempReal1 <= 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Ignite_Effects_Func001Func001Func005Func013C takes nothing returns boolean
    if ( ( udg_tempReal0 <= 0.00 ) ) then
        return true
    endif
    if ( ( IsUnitDeadBJ(udg_tempUnit1) == true ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(udg_tempUnit1, udg_sorIgniteTargets) == false ) ) then
        return true
    endif
    return false
endfunction

function Trig_Ignite_Effects_Func001Func001Func005C takes nothing returns boolean
    if ( not Trig_Ignite_Effects_Func001Func001Func005Func013C() ) then
        return false
    endif
    return true
endfunction

function Trig_Ignite_Effects_Func001Func001A takes nothing returns nothing
    set udg_tempUnit0 = GetEnumUnit()
    set udg_tempInteger0 = GetHandleId(udg_tempUnit0)
    set udg_tempUnit1 = LoadUnitHandleBJ(StringHashBJ("target"), udg_tempInteger0, udg_sorHashIgnite)
    set udg_tempReal0 = LoadRealBJ(StringHashBJ("duration"), udg_tempInteger0, udg_sorHashIgnite)
    if ( Trig_Ignite_Effects_Func001Func001Func005C() ) then
        call GroupRemoveUnitSimple( udg_tempUnit0, udg_sorIgniteGroup )
        set udg_sorCountIgnite = ( udg_sorCountIgnite - 1 )
        call DestroyEffectBJ( LoadEffectHandleBJ(StringHashBJ("effect0"), udg_tempInteger0, udg_sorHashIgnite) )
        // -
        set udg_tempInteger1 = GetHandleId(udg_tempUnit1)
        set udg_tempReal1 = ( LoadRealBJ(StringHashBJ("totaldamage"), udg_tempInteger1, udg_sorHashIgnite) - LoadRealBJ(StringHashBJ("damage"), udg_tempInteger0, udg_sorHashIgnite) )
        if ( Trig_Ignite_Effects_Func001Func001Func005Func010C() ) then
            call GroupRemoveUnitSimple( udg_tempUnit1, udg_sorIgniteTargets )
            call FlushChildHashtableBJ( udg_tempInteger1, udg_sorHashIgnite )
        else
            call SaveRealBJ( udg_tempReal1, StringHashBJ("totaldamage"), udg_tempInteger1, udg_sorHashIgnite )
        endif
        call FlushChildHashtableBJ( udg_tempInteger0, udg_sorHashIgnite )
        call RemoveUnit( udg_tempUnit0 )
    else
        set udg_tempUnit0 = LoadUnitHandleBJ(StringHashBJ("source"), udg_tempInteger0, udg_sorHashIgnite)
        call UnitDamageTargetBJ( udg_tempUnit0, udg_tempUnit1, LoadRealBJ(StringHashBJ("dpt"), udg_tempInteger0, udg_sorHashIgnite), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
        call SaveRealBJ( ( udg_tempReal0 - udg_intervalAbilityEffects ), StringHashBJ("duration"), udg_tempInteger0, udg_sorHashIgnite )
    endif
endfunction

function Trig_Ignite_Effects_Func001C takes nothing returns boolean
    if ( not ( udg_sorCountIgnite == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Ignite_Effects_Actions takes nothing returns nothing
    if ( Trig_Ignite_Effects_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
        call ForGroupBJ( udg_sorIgniteGroup, function Trig_Ignite_Effects_Func001Func001A )
    endif
endfunction

//===========================================================================
function InitTrig_Ignite_Effects takes nothing returns nothing
    set gg_trg_Ignite_Effects = CreateTrigger(  )
    call DisableTrigger( gg_trg_Ignite_Effects )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Ignite_Effects, 0.20 )
    call TriggerAddAction( gg_trg_Ignite_Effects, function Trig_Ignite_Effects_Actions )
endfunction

//===========================================================================
// Trigger: Mercury Aqua Mirage Initialization
//===========================================================================
function Trig_Mercury_Aqua_Mirage_Initialization_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_FrostTable = GetLastCreatedHashtableBJ()
    call InitHashtableBJ(  )
    set udg_DummyTable = GetLastCreatedHashtableBJ()
endfunction

//===========================================================================
function InitTrig_Mercury_Aqua_Mirage_Initialization takes nothing returns nothing
    set gg_trg_Mercury_Aqua_Mirage_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Mercury_Aqua_Mirage_Initialization, function Trig_Mercury_Aqua_Mirage_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Mercury Aqua Mirage Execution
//===========================================================================
function Trig_Mercury_Aqua_Mirage_Execution_Func006Func009Func022C takes nothing returns boolean
    if ( not ( udg_FS_Shards == udg_FS_Intervals ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func006Func009C takes nothing returns boolean
    if ( not ( udg_FS_Distance > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func006A takes nothing returns nothing
    // -------------------------------------------------------------------------------------------------
    // Loading the orb settings
    // -------------------------------------------------------------------------------------------------
    set udg_FS_Angle = LoadRealBJ(StringHashBJ("angle"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    set udg_FS_Distance = LoadRealBJ(StringHashBJ("distance"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    set udg_FS_Speed = LoadRealBJ(StringHashBJ("speed"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    set udg_FS_Counter = LoadRealBJ(StringHashBJ("counter"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    set udg_FS_Shards = LoadIntegerBJ(StringHashBJ("shards"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    if ( Trig_Mercury_Aqua_Mirage_Execution_Func006Func009C() ) then
        // -------------------------------------------------------------------------------------------------
        // Setting locations, counters and moving the unit
        // -------------------------------------------------------------------------------------------------
        set udg_FS_Move_Loc_I = GetUnitLoc(GetEnumUnit())
        set udg_FS_Move_Loc_II = PolarProjectionBJ(udg_FS_Move_Loc_I, udg_FS_Speed, udg_FS_Angle)
        call SaveRealBJ( ( udg_FS_Distance - udg_FS_Speed ), StringHashBJ("distance"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable )
        set udg_FS_Shards = ( udg_FS_Shards + 1 )
        set udg_FS_Counter = ( udg_FS_Counter + 10.00 )
        call SaveIntegerBJ( udg_FS_Shards, StringHashBJ("shards"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable )
        call SaveRealBJ( udg_FS_Counter, StringHashBJ("counter"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable )
        call SetUnitPositionLoc( GetEnumUnit(), udg_FS_Move_Loc_II )
        // -------------------------------------------------------------------------------------------------
        // Creating shards and setting their settings
        // -------------------------------------------------------------------------------------------------
        if ( Trig_Mercury_Aqua_Mirage_Execution_Func006Func009Func022C() ) then
            // -------------------------------------------------------------------------------------------------
            // Setting the shard settings
            // -------------------------------------------------------------------------------------------------
            set udg_FS_Shards = 0
            call SaveIntegerBJ( udg_FS_Shards, StringHashBJ("shards"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable )
            set udg_FS_Dummy_Cast_Point = GetUnitLoc(GetLastCreatedUnit())
            set udg_FS_Dummy_Cast_Point2 = PolarProjectionBJ(udg_FS_Dummy_Cast_Point, 50.00, udg_FS_Counter)
            // *
            set udg_FS_Shard_Distance = 600.00
            set udg_FS_Shard_Speed = 15.00
            // *
            // -------------------------------------------------------------------------------------------------
            // Further shard settings
            // -------------------------------------------------------------------------------------------------
            set udg_FS_Shard_Angle = AngleBetweenPoints(udg_FS_Dummy_Cast_Point, udg_FS_Dummy_Cast_Point2)
            call CreateNUnitsAtLoc( 1, 'h01O', GetOwningPlayer(GetEnumUnit()), udg_FS_Move_Loc_II, bj_UNIT_FACING )
            set udg_FS_Dummy_Missile = GetLastCreatedUnit()
            call SetUnitFacingTimed( udg_FS_Dummy_Missile, udg_FS_Shard_Angle, 0 )
            call GroupAddUnitSimple( udg_FS_Dummy_Missile, udg_FS_Dummy_Group )
            // -------------------------------------------------------------------------------------------------
            // Saving values into a hashtable
            // -------------------------------------------------------------------------------------------------
            call SaveRealBJ( udg_FS_Shard_Angle, StringHashBJ("angle"), GetHandleIdBJ(GetLastCreatedUnit()), udg_DummyTable )
            call SaveRealBJ( udg_FS_Shard_Speed, StringHashBJ("speed"), GetHandleIdBJ(GetLastCreatedUnit()), udg_DummyTable )
            call SaveRealBJ( udg_FS_Shard_Distance, StringHashBJ("distance"), GetHandleIdBJ(GetLastCreatedUnit()), udg_DummyTable )
            // -------------------------------------------------------------------------------------------------
            // Removing used locations
            // -------------------------------------------------------------------------------------------------
            call RemoveLocation(udg_FS_Dummy_Cast_Point)
            call RemoveLocation(udg_FS_Dummy_Cast_Point2)
        else
        endif
        // -------------------------------------------------------------------------------------------------
        // Removing used locations
        // -------------------------------------------------------------------------------------------------
        call RemoveLocation(udg_FS_Move_Loc_I)
        call RemoveLocation(udg_FS_Move_Loc_II)
    else
        // -------------------------------------------------------------------------------------------------
        // Clearing hashtable and removing the orb as the orb reaches its finnal distance
        // -------------------------------------------------------------------------------------------------
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_FrostTable )
        call KillUnit( GetEnumUnit() )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_FS_Move_Group )
        // -------------------------------------------------------------------------------------------------
    endif
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001002 takes nothing returns boolean
    return ( UnitHasBuffBJ(GetFilterUnit(), 'Bfro') != true )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002002 takes nothing returns boolean
    return ( IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func019C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_FS_Dummy_Damage_Group) >= 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001002 takes nothing returns boolean
    return ( UnitHasBuffBJ(GetFilterUnit(), udg_FS_Buff) == false )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002002 takes nothing returns boolean
    return ( IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003001(), Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003002() )
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func023Func001C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), udg_FS_Buff) != true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func023A takes nothing returns nothing
    if ( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func023Func001C() ) then
        // -------------------------------------------------------------------------------------------------
        // *
        // Change the order here if you give any other ability to the dummy
        // -------------------------------------------------------------------------------------------------
        call IssueTargetOrderBJ( udg_FS_Dummy, "frostnova", GetEnumUnit() )
    else
    endif
    // -------------------------------------------------------------------------------------------------
    // *
    call AddSpecialEffectLocBJ( udg_FS_Location, "Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathMissile.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call AddSpecialEffectLocBJ( udg_FS_Location, "Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    // *
    // -------------------------------------------------------------------------------------------------
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025C takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) < 10 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010C takes nothing returns boolean
    if ( not ( udg_FS_Shard_Distance > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Func010A takes nothing returns nothing
    // -------------------------------------------------------------------------------------------------
    // Loading the values needed for further actions
    // -------------------------------------------------------------------------------------------------
    set udg_FS_Caster = LoadUnitHandleBJ(StringHashBJ("caster"), GetHandleIdBJ(GetEnumUnit()), udg_FrostTable)
    set udg_FS_Ability_Level = LoadIntegerBJ(StringHashBJ("level"), GetHandleIdBJ(udg_FS_Unit_Handle), udg_DummyTable)
    set udg_FS_Shard_Angle = LoadRealBJ(StringHashBJ("angle"), GetHandleIdBJ(GetEnumUnit()), udg_DummyTable)
    set udg_FS_Shard_Speed = LoadRealBJ(StringHashBJ("speed"), GetHandleIdBJ(GetEnumUnit()), udg_DummyTable)
    set udg_FS_Shard_Distance = LoadRealBJ(StringHashBJ("distance"), GetHandleIdBJ(GetEnumUnit()), udg_DummyTable)
    // -------------------------------------------------------------------------------------------------
    if ( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010C() ) then
        // -------------------------------------------------------------------------------------------------
        // Setting the shard settings and moving them
        // -------------------------------------------------------------------------------------------------
        set udg_FS_DummyLocI = GetUnitLoc(GetEnumUnit())
        set udg_FS_DummyLocII = PolarProjectionBJ(udg_FS_DummyLocI, udg_FS_Shard_Speed, udg_FS_Shard_Angle)
        set udg_FS_Dummy_Damage_Group = GetUnitsInRangeOfLocMatching(100.00, udg_FS_DummyLocII, Condition(function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func013002003))
        call SaveRealBJ( ( udg_FS_Shard_Distance - udg_FS_Shard_Speed ), StringHashBJ("distance"), GetHandleIdBJ(GetEnumUnit()), udg_DummyTable )
        call SetUnitPositionLoc( GetEnumUnit(), udg_FS_DummyLocII )
        // -------------------------------------------------------------------------------------------------
        // Exploding the shards
        // -------------------------------------------------------------------------------------------------
        if ( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func019C() ) then
            call SetUnitLifeBJ( GetEnumUnit(), 5.00 )
        else
        endif
        // -------------------------------------------------------------------------------------------------
        // Destroying the used unit group
        // -------------------------------------------------------------------------------------------------
        call DestroyGroup(udg_FS_Dummy_Damage_Group)
        // -------------------------------------------------------------------------------------------------
        if ( Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025C() ) then
            // -------------------------------------------------------------------------------------------------
            // Removing the exploded shard from the game
            // -------------------------------------------------------------------------------------------------
            call KillUnit( GetEnumUnit() )
            call RemoveUnit( GetEnumUnit() )
            call GroupRemoveUnitSimple( GetEnumUnit(), udg_FS_Dummy_Group )
            // -------------------------------------------------------------------------------------------------
            // Setting the settings for the dummy
            // -------------------------------------------------------------------------------------------------
            set udg_FS_Location = GetUnitLoc(GetEnumUnit())
            set udg_FS_Damage_Group = GetUnitsInRangeOfLocMatching(udg_FS_Nova_AoE, udg_FS_Location, Condition(function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func011002003))
            // -------------------------------------------------------------------------------------------------
            // Creating and setting the dummy that will cast a spell
            // -------------------------------------------------------------------------------------------------
            call CreateNUnitsAtLoc( 1, 'h01N', GetOwningPlayer(GetEnumUnit()), udg_FS_Location, bj_UNIT_FACING )
            set udg_FS_Dummy = GetLastCreatedUnit()
            call UnitApplyTimedLifeBJ( 1.00, 'BTLF', udg_FS_Dummy )
            call UnitAddAbilityBJ( udg_FS_Dummy_Ability, udg_FS_Dummy )
            call SetUnitAbilityLevelSwapped( udg_FS_Dummy_Ability, udg_FS_Dummy, udg_FS_Ability_Level )
            // -------------------------------------------------------------------------------------------------
            // ordering dummy to cast a spell if any unit is nearby
            // -------------------------------------------------------------------------------------------------
            call ForGroupBJ( udg_FS_Damage_Group, function Trig_Mercury_Aqua_Mirage_Execution_Func010Func010Func025Func023A )
            // -------------------------------------------------------------------------------------------------
            // Removing and destroying used location and unit group
            // -------------------------------------------------------------------------------------------------
            call RemoveLocation(udg_FS_Location)
            call DestroyGroup(udg_FS_Damage_Group)
            // -------------------------------------------------------------------------------------------------
        else
        endif
        // -------------------------------------------------------------------------------------------------
        // Removing used locations
        // -------------------------------------------------------------------------------------------------
        call RemoveLocation(udg_FS_DummyLocI)
        call RemoveLocation(udg_FS_DummyLocII)
        // -------------------------------------------------------------------------------------------------
    else
        // -------------------------------------------------------------------------------------------------
        // Clearing the hashtable
        // -------------------------------------------------------------------------------------------------
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_DummyTable )
        call FlushChildHashtableBJ( GetHandleIdBJ(udg_FS_Unit_Handle), udg_DummyTable )
        call RemoveUnit( GetEnumUnit() )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_FS_Dummy_Group )
    endif
endfunction

function Trig_Mercury_Aqua_Mirage_Execution_Actions takes nothing returns nothing
    // -------------------------------------------------------------------------------------------------
    // ##### Do not hange anything in this trigger, the things you can change will be marked with a star [ * ] #####
    // -------------------------------------------------------------------------------------------------
    // Executing the orb actions
    // -------------------------------------------------------------------------------------------------
    call ForGroupBJ( udg_FS_Move_Group, function Trig_Mercury_Aqua_Mirage_Execution_Func006A )
    // -------------------------------------------------------------------------------------------------
    // Executing the shard actions
    // -------------------------------------------------------------------------------------------------
    call ForGroupBJ( udg_FS_Dummy_Group, function Trig_Mercury_Aqua_Mirage_Execution_Func010A )
endfunction

//===========================================================================
function InitTrig_Mercury_Aqua_Mirage_Execution takes nothing returns nothing
    set gg_trg_Mercury_Aqua_Mirage_Execution = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Mercury_Aqua_Mirage_Execution, 0.03 )
    call TriggerAddAction( gg_trg_Mercury_Aqua_Mirage_Execution, function Trig_Mercury_Aqua_Mirage_Execution_Actions )
endfunction

//===========================================================================
// Trigger: Mercury Aqua Mirage
//===========================================================================
function Trig_Mercury_Aqua_Mirage_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01S' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mercury_Aqua_Mirage_Actions takes nothing returns nothing
    // -------------------------------------------------------------------------------------------------
    // Getting the main settings for the spell
    // -------------------------------------------------------------------------------------------------
    set udg_FS_Caster = GetTriggerUnit()
    set udg_FS_Location_I = GetUnitLoc(udg_FS_Caster)
    set udg_FS_Location_II = GetSpellTargetLoc()
    set udg_FS_Ability_Level = GetUnitAbilityLevelSwapped(GetSpellAbilityId(), udg_FS_Caster)
    call SaveIntegerBJ( udg_FS_Ability_Level, StringHashBJ("level"), GetHandleIdBJ(udg_FS_Unit_Handle), udg_DummyTable )
    call SaveUnitHandleBJ( udg_FS_Caster, StringHashBJ("caster"), GetHandleIdBJ(udg_FS_Unit_Handle), udg_FrostTable )
    // -------------------------------------------------------------------------------------------------
    // Setting the orb
    // -------------------------------------------------------------------------------------------------
    set udg_FS_Angle = AngleBetweenPoints(udg_FS_Location_I, udg_FS_Location_II)
    set udg_FS_Speed = 8.00
    set udg_FS_Distance = 1000.00
    // -------------------------------------------------------------------------------------------------
    // Setting some base optimatizations
    // -------------------------------------------------------------------------------------------------
    set udg_FS_Buff = 'B00U'
    set udg_FS_Nova_AoE = 100.00
    set udg_FS_Intervals = 4
    set udg_FS_Dummy_Ability = 'A01R'
    // -------------------------------------------------------------------------------------------------
    // Creating the orb and and setting its settings
    // -------------------------------------------------------------------------------------------------
    call CreateNUnitsAtLoc( 1, 'h01P', GetOwningPlayer(udg_FS_Caster), udg_FS_Location_I, bj_UNIT_FACING )
    call PauseUnitBJ( true, GetLastCreatedUnit() )
    call SetUnitPathing( GetLastCreatedUnit(), false )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_FS_Move_Group )
    // -------------------------------------------------------------------------------------------------
    // Saving reals into hashtable
    // -------------------------------------------------------------------------------------------------
    call SaveRealBJ( udg_FS_Angle, StringHashBJ("angle"), GetHandleIdBJ(GetLastCreatedUnit()), udg_FrostTable )
    call SaveRealBJ( udg_FS_Speed, StringHashBJ("speed"), GetHandleIdBJ(GetLastCreatedUnit()), udg_FrostTable )
    call SaveRealBJ( udg_FS_Distance, StringHashBJ("distance"), GetHandleIdBJ(GetLastCreatedUnit()), udg_FrostTable )
    // -------------------------------------------------------------------------------------------------
    // Removing used locations
    // -------------------------------------------------------------------------------------------------
    call RemoveLocation(udg_FS_Location_I)
    call RemoveLocation(udg_FS_Location_II)
endfunction

//===========================================================================
function InitTrig_Mercury_Aqua_Mirage takes nothing returns nothing
    set gg_trg_Mercury_Aqua_Mirage = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Mercury_Aqua_Mirage, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Mercury_Aqua_Mirage, Condition( function Trig_Mercury_Aqua_Mirage_Conditions ) )
    call TriggerAddAction( gg_trg_Mercury_Aqua_Mirage, function Trig_Mercury_Aqua_Mirage_Actions )
endfunction

//===========================================================================
// Trigger: DR Setup
//===========================================================================
function Trig_DR_Setup_Actions takes nothing returns nothing
    set udg_WaveAnimationEB = 200.00
    set udg_aoeEB = 200.00
    set udg_DummyDistanceEB = 1200.00
    set udg_DummySpeedEB = 500.00
    set udg_DummyDistanceEB = 1200.00
    set udg_Interval = 0.03
    set udg_BlastAoeEB = 400.00
    set udg_AbilityEB = 'A00J'
    set udg_DummyTypeEB = 'h022'
    set udg_DummyTimelifeEB = ( udg_DummyDistanceEB / udg_DummySpeedEB )
    set udg_DummySpeedIntervalEB = ( udg_DummySpeedEB * udg_Interval )
    set udg_SupportMultiLevelEB = true
    set udg_MultiplierPerLevelINT = 2
    set udg_MultiplierAoePerLevelINT = 3
    set udg_ShowDamageEB = true
    set udg_DummySFX_EB[1] = "war3mapImported\\Desecrate.mdx"
    set udg_DummySFX_EB[2] = "Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayTarget.mdl"
    set udg_DummySFX_EB[3] = "Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl"
endfunction

//===========================================================================
function InitTrig_DR_Setup takes nothing returns nothing
    set gg_trg_DR_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_DR_Setup, function Trig_DR_Setup_Actions )
endfunction

//===========================================================================
// Trigger: DR Cast
//===========================================================================
function Trig_DR_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == udg_AbilityEB ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Cast_Func002C takes nothing returns boolean
    if ( not ( udg_Key2EB == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Cast_Func004C takes nothing returns boolean
    if ( not ( udg_Key2EB > udg_KeyMaxEB ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Cast_Func010C takes nothing returns boolean
    if ( not ( udg_SupportMultiLevelEB == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Cast_Actions takes nothing returns nothing
    if ( Trig_DR_Cast_Func002C() ) then
        call EnableTrigger( gg_trg_DR_Loop )
    else
    endif
    set udg_Key2EB = ( udg_Key2EB + 1 )
    if ( Trig_DR_Cast_Func004C() ) then
        set udg_KeyEB[udg_Key2EB] = udg_Key2EB
        set udg_KeyMaxEB = udg_Key2EB
    else
    endif
    set udg_ArrayEB = udg_KeyEB[udg_Key2EB]
    set udg_CasterEB[udg_ArrayEB] = GetTriggerUnit()
    set udg_CasterLocEB = GetUnitLoc(udg_CasterEB[udg_ArrayEB])
    set udg_TargetLocEB = GetSpellTargetLoc()
    set udg_DummyAngleEB = AngleBetweenPoints(udg_CasterLocEB, udg_TargetLocEB)
    if ( Trig_DR_Cast_Func010C() ) then
        set udg_AbilityLevelEB = GetUnitAbilityLevelSwapped(udg_AbilityEB, udg_CasterEB[udg_ArrayEB])
        set udg_CasterINT_EB = GetHeroStatBJ(bj_HEROSTAT_INT, udg_CasterEB[udg_ArrayEB], true)
        set udg_DamageEB[udg_ArrayEB] = ( ( 120.00 * I2R(udg_AbilityLevelEB) ) + 0.00 )
        set udg_DamageAoeEB[udg_ArrayEB] = ( ( 60.00 * I2R(udg_AbilityLevelEB) ) + 0.00 )
    else
        set udg_DamageEB[udg_ArrayEB] = ( ( 120.00 * I2R(udg_AbilityLevelEB) ) + 0.00 )
        set udg_DamageAoeEB[udg_ArrayEB] = ( ( 60.00 * I2R(udg_AbilityLevelEB) ) + 0.00 )
    endif
    call CreateNUnitsAtLoc( 1, udg_DummyTypeEB, GetTriggerPlayer(), udg_CasterLocEB, udg_DummyAngleEB )
    set udg_DummyEB[udg_ArrayEB] = GetLastCreatedUnit()
    call UnitApplyTimedLifeBJ( udg_DummyTimelifeEB, 'BTLF', udg_DummyEB[udg_ArrayEB] )
    call SetUnitTimeScalePercent( udg_DummyEB[udg_ArrayEB], udg_WaveAnimationEB )
    set udg_UnitGroupDamagedEB[udg_ArrayEB] = CreateGroup()
    call RemoveLocation(udg_CasterLocEB)
    call RemoveLocation(udg_TargetLocEB)
endfunction

//===========================================================================
function InitTrig_DR_Cast takes nothing returns nothing
    set gg_trg_DR_Cast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_DR_Cast, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_DR_Cast, Condition( function Trig_DR_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_DR_Cast, function Trig_DR_Cast_Actions )
endfunction

//===========================================================================
// Trigger: DR Loop
//===========================================================================
function Trig_DR_Loop_Func001Func005Func004Func001Func001C takes nothing returns boolean
    if ( not ( udg_ShowDamageEB == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Func001Func005Func004Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetEnumUnit(), udg_UnitGroupDamagedEB[udg_ArrayEB]) == false ) ) then
        return false
    endif
    if ( not ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(udg_DummyEB[udg_ArrayEB])) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Func001Func005Func004A takes nothing returns nothing
    if ( Trig_DR_Loop_Func001Func005Func004Func001C() ) then
        if ( Trig_DR_Loop_Func001Func005Func004Func001Func001C() ) then
            call CreateTextTagUnitBJ( I2S(R2I(udg_DamageEB[udg_ArrayEB])), GetEnumUnit(), 0, 10, 100, 0.00, 0.00, 0 )
            call SetTextTagVelocityBJ( GetLastCreatedTextTag(), 150.00, 90 )
            call SetTextTagPermanentBJ( GetLastCreatedTextTag(), false )
            call SetTextTagLifespanBJ( GetLastCreatedTextTag(), 1.50 )
            call SetTextTagFadepointBJ( GetLastCreatedTextTag(), 0.75 )
        else
        endif
        call AddSpecialEffectTargetUnitBJ( "origin", GetEnumUnit(), udg_DummySFX_EB[2] )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        call UnitDamageTargetBJ( udg_CasterEB[udg_ArrayEB], GetEnumUnit(), udg_DamageEB[udg_ArrayEB], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
        call GroupAddUnitSimple( GetEnumUnit(), udg_UnitGroupDamagedEB[udg_ArrayEB] )
    else
    endif
endfunction

function Trig_DR_Loop_Func001Func005C takes nothing returns boolean
    if ( not ( RectContainsLoc(GetPlayableMapRect(), udg_DummyMoveEB) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Func001Func006Func004001003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003002002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003002002002 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_CasterEB[udg_ArrayEB])) == true )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_DR_Loop_Func001Func006Func004001003002002001(), Trig_DR_Loop_Func001Func006Func004001003002002002() )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_DR_Loop_Func001Func006Func004001003002001(), Trig_DR_Loop_Func001Func006Func004001003002002() )
endfunction

function Trig_DR_Loop_Func001Func006Func004001003 takes nothing returns boolean
    return GetBooleanAnd( Trig_DR_Loop_Func001Func006Func004001003001(), Trig_DR_Loop_Func001Func006Func004001003002() )
endfunction

function Trig_DR_Loop_Func001Func006Func004Func001C takes nothing returns boolean
    if ( not ( udg_ShowDamageEB == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Func001Func006Func004A takes nothing returns nothing
    if ( Trig_DR_Loop_Func001Func006Func004Func001C() ) then
        call CreateTextTagUnitBJ( I2S(R2I(udg_DamageAoeEB[udg_ArrayEB])), GetEnumUnit(), 0, 10, 100, 0.00, 0.00, 0 )
        call SetTextTagVelocityBJ( GetLastCreatedTextTag(), 150.00, 90 )
        call SetTextTagPermanentBJ( GetLastCreatedTextTag(), false )
        call SetTextTagLifespanBJ( GetLastCreatedTextTag(), 1.50 )
        call SetTextTagFadepointBJ( GetLastCreatedTextTag(), 0.75 )
    else
    endif
    call AddSpecialEffectTargetUnitBJ( "origin", GetEnumUnit(), udg_DummySFX_EB[3] )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call UnitDamageTargetBJ( udg_CasterEB[udg_ArrayEB], GetEnumUnit(), udg_DamageAoeEB[udg_ArrayEB], ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
endfunction

function Trig_DR_Loop_Func001Func006C takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_DummyEB[udg_ArrayEB]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Func001Func007C takes nothing returns boolean
    if ( not ( udg_Key2EB == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_DR_Loop_Actions takes nothing returns nothing
    set udg_LoopingIntegerEB = 1
    loop
        exitwhen udg_LoopingIntegerEB > udg_Key2EB
        set udg_ArrayEB = udg_KeyEB[udg_LoopingIntegerEB]
        set udg_DummyAngleEB = GetUnitFacing(udg_DummyEB[udg_ArrayEB])
        set udg_DummyLocEB = GetUnitLoc(udg_DummyEB[udg_ArrayEB])
        set udg_DummyMoveEB = PolarProjectionBJ(udg_DummyLocEB, udg_DummySpeedIntervalEB, udg_DummyAngleEB)
        if ( Trig_DR_Loop_Func001Func005C() ) then
            call SetUnitX(udg_DummyEB[udg_ArrayEB], GetLocationX(udg_DummyMoveEB))
            call SetUnitY(udg_DummyEB[udg_ArrayEB], GetLocationY(udg_DummyMoveEB))
            set bj_wantDestroyGroup = true
            call ForGroupBJ( GetUnitsInRangeOfLocAll(udg_aoeEB, udg_DummyLocEB), function Trig_DR_Loop_Func001Func005Func004A )
        else
            call KillUnit( udg_DummyEB[udg_ArrayEB] )
        endif
        if ( Trig_DR_Loop_Func001Func006C() ) then
            call AddSpecialEffectLocBJ( udg_DummyLocEB, udg_DummySFX_EB[1] )
            call DestroyEffectBJ( GetLastCreatedEffectBJ() )
            set bj_wantDestroyGroup = true
            call ForGroupBJ( GetUnitsInRangeOfLocMatching(udg_BlastAoeEB, udg_DummyLocEB, Condition(function Trig_DR_Loop_Func001Func006Func004001003)), function Trig_DR_Loop_Func001Func006Func004A )
            call DestroyGroup(udg_UnitGroupDamagedEB[udg_ArrayEB])
            set udg_KeyEB[udg_LoopingIntegerEB] = udg_KeyEB[udg_Key2EB]
            set udg_KeyEB[udg_Key2EB] = udg_ArrayEB
            set udg_Key2EB = ( udg_Key2EB - 1 )
            set udg_LoopingIntegerEB = ( udg_LoopingIntegerEB - 1 )
        else
        endif
        if ( Trig_DR_Loop_Func001Func007C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
        else
        endif
        call RemoveLocation(udg_DummyLocEB)
        call RemoveLocation(udg_DummyMoveEB)
        set udg_LoopingIntegerEB = udg_LoopingIntegerEB + 1
    endloop
endfunction

//===========================================================================
function InitTrig_DR_Loop takes nothing returns nothing
    set gg_trg_DR_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_DR_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_DR_Loop, 0.03 )
    call TriggerAddAction( gg_trg_DR_Loop, function Trig_DR_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Hide SpellBook Garnet Ball Damage Aura
//===========================================================================
function Trig_Hide_SpellBook_Garnet_Ball_Damage_Aura_Func001A takes nothing returns nothing
    call SetPlayerAbilityAvailableBJ( false, 'A038', GetEnumPlayer() )
endfunction

function Trig_Hide_SpellBook_Garnet_Ball_Damage_Aura_Actions takes nothing returns nothing
    call ForForce( GetPlayersAll(), function Trig_Hide_SpellBook_Garnet_Ball_Damage_Aura_Func001A )
endfunction

//===========================================================================
function InitTrig_Hide_SpellBook_Garnet_Ball_Damage_Aura takes nothing returns nothing
    set gg_trg_Hide_SpellBook_Garnet_Ball_Damage_Aura = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hide_SpellBook_Garnet_Ball_Damage_Aura, function Trig_Hide_SpellBook_Garnet_Ball_Damage_Aura_Actions )
endfunction

//===========================================================================
// Trigger: Garnet Ball Protection Cast
//===========================================================================
function Trig_Garnet_Ball_Protection_Cast_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A013' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garnet_Ball_Protection_Cast_Actions takes nothing returns nothing
    call UnitAddAbilityBJ( 'A038', gg_unit_H006_0132 )
endfunction

//===========================================================================
function InitTrig_Garnet_Ball_Protection_Cast takes nothing returns nothing
    set gg_trg_Garnet_Ball_Protection_Cast = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Garnet_Ball_Protection_Cast, gg_unit_H006_0132, EVENT_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Garnet_Ball_Protection_Cast, Condition( function Trig_Garnet_Ball_Protection_Cast_Conditions ) )
    call TriggerAddAction( gg_trg_Garnet_Ball_Protection_Cast, function Trig_Garnet_Ball_Protection_Cast_Actions )
endfunction

//===========================================================================
// Trigger: Garnet Ball Protection Finish
//===========================================================================
function Trig_Garnet_Ball_Protection_Finish_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A013' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garnet_Ball_Protection_Finish_Actions takes nothing returns nothing
    call UnitRemoveAbilityBJ( 'A038', gg_unit_H006_0132 )
endfunction

//===========================================================================
function InitTrig_Garnet_Ball_Protection_Finish takes nothing returns nothing
    set gg_trg_Garnet_Ball_Protection_Finish = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Garnet_Ball_Protection_Finish, gg_unit_H006_0132, EVENT_UNIT_SPELL_FINISH )
    call TriggerAddCondition( gg_trg_Garnet_Ball_Protection_Finish, Condition( function Trig_Garnet_Ball_Protection_Finish_Conditions ) )
    call TriggerAddAction( gg_trg_Garnet_Ball_Protection_Finish, function Trig_Garnet_Ball_Protection_Finish_Actions )
endfunction

//===========================================================================
// Trigger: Garnet Ball Protection Stops
//===========================================================================
function Trig_Garnet_Ball_Protection_Stops_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A013' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garnet_Ball_Protection_Stops_Actions takes nothing returns nothing
    call UnitRemoveAbilityBJ( 'A038', gg_unit_H006_0132 )
endfunction

//===========================================================================
function InitTrig_Garnet_Ball_Protection_Stops takes nothing returns nothing
    set gg_trg_Garnet_Ball_Protection_Stops = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_Garnet_Ball_Protection_Stops, gg_unit_H006_0132, EVENT_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Garnet_Ball_Protection_Stops, Condition( function Trig_Garnet_Ball_Protection_Stops_Conditions ) )
    call TriggerAddAction( gg_trg_Garnet_Ball_Protection_Stops, function Trig_Garnet_Ball_Protection_Stops_Actions )
endfunction

//===========================================================================
// Trigger: Supreme Thunder Effect
//===========================================================================
function Trig_Supreme_Thunder_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A006' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl" )
    set udg_SupremeThunderEffect[udg_SupremeThunder_Index[0]] = GetLastCreatedEffectBJ()
    call DestroyEffectBJ( udg_SupremeThunderEffect[udg_SupremeThunder_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Supreme_Thunder_Effect takes nothing returns nothing
    set gg_trg_Supreme_Thunder_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Supreme_Thunder_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Supreme_Thunder_Effect, Condition( function Trig_Supreme_Thunder_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Supreme_Thunder_Effect, function Trig_Supreme_Thunder_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Supreme Thunder Dragon Effect
//===========================================================================
function Trig_Supreme_Thunder_Dragon_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A023' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Supreme_Thunder_Dragon_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl" )
    set udg_SupremeThunderDragonEffect[udg_SupremeThunderDragon_Index[0]] = GetLastCreatedEffectBJ()
    call DestroyEffectBJ( udg_SupremeThunderDragonEffect[udg_SupremeThunderDragon_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Supreme_Thunder_Dragon_Effect takes nothing returns nothing
    set gg_trg_Supreme_Thunder_Dragon_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Supreme_Thunder_Dragon_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Supreme_Thunder_Dragon_Effect, Condition( function Trig_Supreme_Thunder_Dragon_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Supreme_Thunder_Dragon_Effect, function Trig_Supreme_Thunder_Dragon_Effect_Actions )
endfunction

//===========================================================================
// Trigger: World Shaking Effect
//===========================================================================
function Trig_World_Shaking_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A004' ) ) then
        return false
    endif
    return true
endfunction

function Trig_World_Shaking_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "hand", GetTriggerUnit(), "Abilities\\Spells\\Orc\\Disenchant\\DisenchantSpecialArt.mdl" )
    set udg_WorldShakingEffect[udg_WorldShaking_Index[0]] = GetLastCreatedEffectBJ()
    call TriggerSleepAction( 0.50 )
    call DestroyEffectBJ( udg_WorldShakingEffect[udg_WorldShaking_Index[0]] )
endfunction

//===========================================================================
function InitTrig_World_Shaking_Effect takes nothing returns nothing
    set gg_trg_World_Shaking_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_World_Shaking_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_World_Shaking_Effect, Condition( function Trig_World_Shaking_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_World_Shaking_Effect, function Trig_World_Shaking_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Deep Submerge Effect
//===========================================================================
function Trig_Deep_Submerge_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01Y' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Deep_Submerge_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "hand", GetTriggerUnit(), "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl" )
    set udg_DeepSubmergeEffect[udg_DeepSubmerge_Index[0]] = GetLastCreatedEffectBJ()
    call TriggerSleepAction( 0.50 )
    call DestroyEffectBJ( udg_DeepSubmergeEffect[udg_DeepSubmerge_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Deep_Submerge_Effect takes nothing returns nothing
    set gg_trg_Deep_Submerge_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Deep_Submerge_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Deep_Submerge_Effect, Condition( function Trig_Deep_Submerge_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Deep_Submerge_Effect, function Trig_Deep_Submerge_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Moon Gorgeous Meditation Effect
//===========================================================================
function Trig_Moon_Gorgeous_Meditation_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Gorgeous_Meditation_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl" )
    set udg_MoonGorgeousMeditationEffect[udg_MoonGorgeousMeditation_Index[0]] = GetLastCreatedEffectBJ()
    call TriggerSleepAction( 0.50 )
    call DestroyEffectBJ( udg_MoonGorgeousMeditationEffect[udg_MoonGorgeousMeditation_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Moon_Gorgeous_Meditation_Effect takes nothing returns nothing
    set gg_trg_Moon_Gorgeous_Meditation_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Gorgeous_Meditation_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Moon_Gorgeous_Meditation_Effect, Condition( function Trig_Moon_Gorgeous_Meditation_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Gorgeous_Meditation_Effect, function Trig_Moon_Gorgeous_Meditation_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Moon Princess Halation Effect
//===========================================================================
function Trig_Moon_Princess_Halation_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01F' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Moon_Princess_Halation_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "weapon", GetTriggerUnit(), "Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl" )
    set udg_MoonPrincessHalationEffect[udg_MoonPrincessHalation_Index[0]] = GetLastCreatedEffectBJ()
    call TriggerSleepAction( 0.50 )
    call DestroyEffectBJ( udg_MoonPrincessHalationEffect[udg_MoonPrincessHalation_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Moon_Princess_Halation_Effect takes nothing returns nothing
    set gg_trg_Moon_Princess_Halation_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Moon_Princess_Halation_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Moon_Princess_Halation_Effect, Condition( function Trig_Moon_Princess_Halation_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Moon_Princess_Halation_Effect, function Trig_Moon_Princess_Halation_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Silence Glaive Surprise Effect
//===========================================================================
function Trig_Silence_Glaive_Surprise_Effect_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00O' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Silence_Glaive_Surprise_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl" )
    set udg_SilenceGlaiveSurpriseEffect[udg_SilenceGlaiveSurprise_Index[0]] = GetLastCreatedEffectBJ()
    call TriggerSleepAction( 1.00 )
    call DestroyEffectBJ( udg_SilenceGlaiveSurpriseEffect[udg_SilenceGlaiveSurprise_Index[0]] )
endfunction

//===========================================================================
function InitTrig_Silence_Glaive_Surprise_Effect takes nothing returns nothing
    set gg_trg_Silence_Glaive_Surprise_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Silence_Glaive_Surprise_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Silence_Glaive_Surprise_Effect, Condition( function Trig_Silence_Glaive_Surprise_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Silence_Glaive_Surprise_Effect, function Trig_Silence_Glaive_Surprise_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Chronos Typhoon Effect
//===========================================================================
function Trig_Chronos_Typhoon_Effect_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00Y' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Chronos_Typhoon_Effect_Conditions takes nothing returns boolean
    if ( not Trig_Chronos_Typhoon_Effect_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Chronos_Typhoon_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\NightElf\\Cyclone\\CycloneTarget.mdl" )
    set udg_ChronosTyphoonEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Chronos_Typhoon_Effect takes nothing returns nothing
    set gg_trg_Chronos_Typhoon_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Chronos_Typhoon_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Chronos_Typhoon_Effect, Condition( function Trig_Chronos_Typhoon_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Chronos_Typhoon_Effect, function Trig_Chronos_Typhoon_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Chronos Typhoon Effect 2
//===========================================================================
function Trig_Chronos_Typhoon_Effect_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00Y' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Chronos_Typhoon_Effect_2_Conditions takes nothing returns boolean
    if ( not Trig_Chronos_Typhoon_Effect_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Chronos_Typhoon_Effect_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_ChronosTyphoonEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Chronos_Typhoon_Effect_2 takes nothing returns nothing
    set gg_trg_Chronos_Typhoon_Effect_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Chronos_Typhoon_Effect_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Chronos_Typhoon_Effect_2, Condition( function Trig_Chronos_Typhoon_Effect_2_Conditions ) )
    call TriggerAddAction( gg_trg_Chronos_Typhoon_Effect_2, function Trig_Chronos_Typhoon_Effect_2_Actions )
endfunction

//===========================================================================
// Trigger: Burning Mandala Effect
//===========================================================================
function Trig_Burning_Mandala_Effect_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00M' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Burning_Mandala_Effect_Conditions takes nothing returns boolean
    if ( not Trig_Burning_Mandala_Effect_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Burning_Mandala_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "hand", GetTriggerUnit(), "war3mapImported\\BurningMandala.mdx" )
    set udg_BurningMandalaEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Burning_Mandala_Effect takes nothing returns nothing
    set gg_trg_Burning_Mandala_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Burning_Mandala_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Burning_Mandala_Effect, Condition( function Trig_Burning_Mandala_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Burning_Mandala_Effect, function Trig_Burning_Mandala_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Burning Mandala Effect 2
//===========================================================================
function Trig_Burning_Mandala_Effect_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00M' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Burning_Mandala_Effect_2_Conditions takes nothing returns boolean
    if ( not Trig_Burning_Mandala_Effect_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Burning_Mandala_Effect_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_BurningMandalaEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Burning_Mandala_Effect_2 takes nothing returns nothing
    set gg_trg_Burning_Mandala_Effect_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Burning_Mandala_Effect_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Burning_Mandala_Effect_2, Condition( function Trig_Burning_Mandala_Effect_2_Conditions ) )
    call TriggerAddAction( gg_trg_Burning_Mandala_Effect_2, function Trig_Burning_Mandala_Effect_2_Actions )
endfunction

//===========================================================================
// Trigger: Crescent Beam Effect
//===========================================================================
function Trig_Crescent_Beam_Effect_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A007' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Crescent_Beam_Effect_Conditions takes nothing returns boolean
    if ( not Trig_Crescent_Beam_Effect_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Crescent_Beam_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdl" )
    set udg_CrescentBeamEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Crescent_Beam_Effect takes nothing returns nothing
    set gg_trg_Crescent_Beam_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Crescent_Beam_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Crescent_Beam_Effect, Condition( function Trig_Crescent_Beam_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Crescent_Beam_Effect, function Trig_Crescent_Beam_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Crescent Beam Effect 2
//===========================================================================
function Trig_Crescent_Beam_Effect_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A007' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Crescent_Beam_Effect_2_Conditions takes nothing returns boolean
    if ( not Trig_Crescent_Beam_Effect_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Crescent_Beam_Effect_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_CrescentBeamEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Crescent_Beam_Effect_2 takes nothing returns nothing
    set gg_trg_Crescent_Beam_Effect_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Crescent_Beam_Effect_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Crescent_Beam_Effect_2, Condition( function Trig_Crescent_Beam_Effect_2_Conditions ) )
    call TriggerAddAction( gg_trg_Crescent_Beam_Effect_2, function Trig_Crescent_Beam_Effect_2_Actions )
endfunction

//===========================================================================
// Trigger: Crescent Beam Shower Effect
//===========================================================================
function Trig_Crescent_Beam_Shower_Effect_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A039' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Crescent_Beam_Shower_Effect_Conditions takes nothing returns boolean
    if ( not Trig_Crescent_Beam_Shower_Effect_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Crescent_Beam_Shower_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "origin", GetTriggerUnit(), "Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdl" )
    set udg_CrescentBeamShowerEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Crescent_Beam_Shower_Effect takes nothing returns nothing
    set gg_trg_Crescent_Beam_Shower_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Crescent_Beam_Shower_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Crescent_Beam_Shower_Effect, Condition( function Trig_Crescent_Beam_Shower_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Crescent_Beam_Shower_Effect, function Trig_Crescent_Beam_Shower_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Crescent Beam Shower Effect 2
//===========================================================================
function Trig_Crescent_Beam_Shower_Effect_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A039' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Crescent_Beam_Shower_Effect_2_Conditions takes nothing returns boolean
    if ( not Trig_Crescent_Beam_Shower_Effect_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Crescent_Beam_Shower_Effect_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_CrescentBeamShowerEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Crescent_Beam_Shower_Effect_2 takes nothing returns nothing
    set gg_trg_Crescent_Beam_Shower_Effect_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Crescent_Beam_Shower_Effect_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Crescent_Beam_Shower_Effect_2, Condition( function Trig_Crescent_Beam_Shower_Effect_2_Conditions ) )
    call TriggerAddAction( gg_trg_Crescent_Beam_Shower_Effect_2, function Trig_Crescent_Beam_Shower_Effect_2_Actions )
endfunction

//===========================================================================
// Trigger: Venus Love Me Chain Effect
//===========================================================================
function Trig_Venus_Love_Me_Chain_Effect_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00G' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Venus_Love_Me_Chain_Effect_Conditions takes nothing returns boolean
    if ( not Trig_Venus_Love_Me_Chain_Effect_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Venus_Love_Me_Chain_Effect_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "hand", GetTriggerUnit(), "Abilities\\Spells\\Orc\\SpiritLink\\SpiritLinkTarget.mdl" )
    set udg_VenusLoveMeChainEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Venus_Love_Me_Chain_Effect takes nothing returns nothing
    set gg_trg_Venus_Love_Me_Chain_Effect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Venus_Love_Me_Chain_Effect, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Venus_Love_Me_Chain_Effect, Condition( function Trig_Venus_Love_Me_Chain_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Venus_Love_Me_Chain_Effect, function Trig_Venus_Love_Me_Chain_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Venus Love Me Chain Effect 2
//===========================================================================
function Trig_Venus_Love_Me_Chain_Effect_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A00G' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Venus_Love_Me_Chain_Effect_2_Conditions takes nothing returns boolean
    if ( not Trig_Venus_Love_Me_Chain_Effect_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Venus_Love_Me_Chain_Effect_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_VenusLoveMeChainEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Venus_Love_Me_Chain_Effect_2 takes nothing returns nothing
    set gg_trg_Venus_Love_Me_Chain_Effect_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Venus_Love_Me_Chain_Effect_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Venus_Love_Me_Chain_Effect_2, Condition( function Trig_Venus_Love_Me_Chain_Effect_2_Conditions ) )
    call TriggerAddAction( gg_trg_Venus_Love_Me_Chain_Effect_2, function Trig_Venus_Love_Me_Chain_Effect_2_Actions )
endfunction

//===========================================================================
// Trigger: Star Spells Effects
//===========================================================================
function Trig_Star_Spells_Effects_Func003C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A02W' ) ) then
        return true
    endif
    if ( ( GetSpellAbilityId() == 'A02T' ) ) then
        return true
    endif
    if ( ( GetSpellAbilityId() == 'A02V' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Star_Spells_Effects_Conditions takes nothing returns boolean
    if ( not Trig_Star_Spells_Effects_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Spells_Effects_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "left hand", GetTriggerUnit(), "war3mapImported\\WaterAurora.mdx" )
    set udg_StarEffect[GetUnitUserData(GetTriggerUnit())] = GetLastCreatedEffectBJ()
endfunction

//===========================================================================
function InitTrig_Star_Spells_Effects takes nothing returns nothing
    set gg_trg_Star_Spells_Effects = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Star_Spells_Effects, EVENT_PLAYER_UNIT_SPELL_CHANNEL )
    call TriggerAddCondition( gg_trg_Star_Spells_Effects, Condition( function Trig_Star_Spells_Effects_Conditions ) )
    call TriggerAddAction( gg_trg_Star_Spells_Effects, function Trig_Star_Spells_Effects_Actions )
endfunction

//===========================================================================
// Trigger: Star Spells Effects 2
//===========================================================================
function Trig_Star_Spells_Effects_2_Func002C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A02W' ) ) then
        return true
    endif
    if ( ( GetSpellAbilityId() == 'A02T' ) ) then
        return true
    endif
    if ( ( GetSpellAbilityId() == 'A02V' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Star_Spells_Effects_2_Conditions takes nothing returns boolean
    if ( not Trig_Star_Spells_Effects_2_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Star_Spells_Effects_2_Actions takes nothing returns nothing
    call DestroyEffectBJ( udg_StarEffect[GetUnitUserData(GetTriggerUnit())] )
endfunction

//===========================================================================
function InitTrig_Star_Spells_Effects_2 takes nothing returns nothing
    set gg_trg_Star_Spells_Effects_2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Star_Spells_Effects_2, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerAddCondition( gg_trg_Star_Spells_Effects_2, Condition( function Trig_Star_Spells_Effects_2_Conditions ) )
    call TriggerAddAction( gg_trg_Star_Spells_Effects_2, function Trig_Star_Spells_Effects_2_Actions )
endfunction

//===========================================================================
// Trigger: Floating Text
//===========================================================================
function Trig_Floating_Text_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Floating_Text_Actions takes nothing returns nothing
    call CreateTextTagLocBJ( ( GetAbilityName(GetSpellAbilityId()) + "!" ), GetUnitLoc(GetTriggerUnit()), 0, 9.00, 100, 100, 100, 0 )
    call SetTextTagPermanentBJ( GetLastCreatedTextTag(), false )
    call SetTextTagVelocityBJ( GetLastCreatedTextTag(), 52.00, 90 )
    call SetTextTagLifespanBJ( GetLastCreatedTextTag(), 3.00 )
    call SetTextTagFadepointBJ( GetLastCreatedTextTag(), 2.00 )
endfunction

//===========================================================================
function InitTrig_Floating_Text takes nothing returns nothing
    set gg_trg_Floating_Text = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Floating_Text, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Floating_Text, Condition( function Trig_Floating_Text_Conditions ) )
    call TriggerAddAction( gg_trg_Floating_Text, function Trig_Floating_Text_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Initialization(  )
    call InitTrig_Run_Abilities(  )
    call InitTrig_Commands(  )
    call InitTrig_Text(  )
    call InitTrig_Set_Test(  )
    call InitTrig_Set_Easy(  )
    call InitTrig_Set_Medium(  )
    call InitTrig_Set_Hard(  )
    call InitTrig_Set_TTest(  )
    call InitTrig_Set_10(  )
    call InitTrig_Set_20(  )
    call InitTrig_Set_30(  )
    call InitTrig_Set_40(  )
    call InitTrig_Boss(  )
    call InitTrig_Air(  )
    call InitTrig_Siege(  )
    call InitTrig_Invis(  )
    call InitTrig_Hint1(  )
    call InitTrig_Hint2(  )
    call InitTrig_Hint3(  )
    call InitTrig_Hint4(  )
    call InitTrig_Hint5(  )
    call InitTrig_Hint6(  )
    call InitTrig_Hint7(  )
    call InitTrig_Hint8(  )
    call InitTrig_Hint9(  )
    call InitTrig_Hint10(  )
    call InitTrig_Hint11(  )
    call InitTrig_Hint12(  )
    call InitTrig_SetHints(  )
    call InitTrig_MonsterSet1(  )
    call InitTrig_MonsterSet2(  )
    call InitTrig_MonsterSet3(  )
    call InitTrig_MonsterSet4(  )
    call InitTrig_MonsterSet5(  )
    call InitTrig_MonsterSet6(  )
    call InitTrig_MonsterSet7(  )
    call InitTrig_MonsterSet8(  )
    call InitTrig_MonsterSet9(  )
    call InitTrig_MonsterSet10(  )
    call InitTrig_MonsterSet11(  )
    call InitTrig_MonsterSet12(  )
    call InitTrig_MonsterSet13(  )
    call InitTrig_MonsterSet14(  )
    call InitTrig_MonsterSet15(  )
    call InitTrig_MonsterSet16(  )
    call InitTrig_MonsterSet17(  )
    call InitTrig_MonsterSet18(  )
    call InitTrig_MonsterSet19(  )
    call InitTrig_MonsterSet20(  )
    call InitTrig_MonsterSet21(  )
    call InitTrig_MonsterSet22(  )
    call InitTrig_MonsterSet23(  )
    call InitTrig_MonsterSet24(  )
    call InitTrig_MonsterSet25(  )
    call InitTrig_MonsterSet26(  )
    call InitTrig_MonsterSet27(  )
    call InitTrig_MonsterSet28(  )
    call InitTrig_MonsterSet29(  )
    call InitTrig_MonsterSet30(  )
    call InitTrig_MonsterSet31(  )
    call InitTrig_MonsterSet32(  )
    call InitTrig_MonsterSet33(  )
    call InitTrig_MonsterSet34(  )
    call InitTrig_MonsterSet35(  )
    call InitTrig_MonsterSet36(  )
    call InitTrig_Ending(  )
    call InitTrig_MonsterTLBug(  )
    call InitTrig_MonsterTLBug2(  )
    call InitTrig_MonsterTRBug(  )
    call InitTrig_MonsterTRBug_Copy(  )
    call InitTrig_MonsterBRBug(  )
    call InitTrig_MonsterBRBug_Copy(  )
    call InitTrig_MonsterBLBug(  )
    call InitTrig_MonsterBLBug_Copy(  )
    call InitTrig_MonsterBLBug_Shire(  )
    call InitTrig_MonsterBLBug_Shire_Copy(  )
    call InitTrig_MonsterBLBug_Shire_Copy_Copy(  )
    call InitTrig_MonsterBLBug_Shire_Copy_2(  )
    call InitTrig_MonsterBLBug_Shire_Copy_2_Copy(  )
    call InitTrig_MonsterBLBug_Shire_Copy_3(  )
    call InitTrig_MonsterYay(  )
    call InitTrig_MonsterLvlEnd(  )
    call InitTrig_MonsterMoveSecond_T(  )
    call InitTrig_MonsterMoveSecond_R(  )
    call InitTrig_MonsterMoveSecond_B(  )
    call InitTrig_MonsterMoveSecond_L(  )
    call InitTrig_Attack_Move_Order_1(  )
    call InitTrig_Attack_Move_Order_2(  )
    call InitTrig_Attack_Move_Order_3(  )
    call InitTrig_Attack_Move_Order_4(  )
    call InitTrig_Attack_Move_Order_5(  )
    call InitTrig_Attack_Move_Order_6(  )
    call InitTrig_Attack_Move_Order_7(  )
    call InitTrig_Attack_Move_Order_8(  )
    call InitTrig_MonsterStart(  )
    call InitTrig_MonsterTimer(  )
    call InitTrig_Deadbodes(  )
    call InitTrig_Leave_Ted_Alone(  )
    call InitTrig_Castle_Under_Attack(  )
    call InitTrig_Castle_Under_Attack_TK(  )
    call InitTrig_Castle_Destroyed(  )
    call InitTrig_Castle_Attack(  )
    call InitTrig_Dont_Leave_Castle(  )
    call InitTrig_Dont_Leave_Builder(  )
    call InitTrig_Lumber(  )
    call InitTrig_Allied_Gold(  )
    call InitTrig_Tuxedo_Kamen(  )
    call InitTrig_Usagi_Tsukino(  )
    call InitTrig_Sailor_Mercury(  )
    call InitTrig_Sailor_Mars(  )
    call InitTrig_Sailor_Jupiter(  )
    call InitTrig_Sailor_Uranus(  )
    call InitTrig_Sailor_Neptune(  )
    call InitTrig_Sailor_Pluto(  )
    call InitTrig_Sailor_Venus(  )
    call InitTrig_Sailor_Saturn(  )
    call InitTrig_North(  )
    call InitTrig_East(  )
    call InitTrig_South(  )
    call InitTrig_West(  )
    call InitTrig_Test(  )
    call InitTrig_Test_Copy(  )
    call InitTrig_Test_Copy_Copy(  )
    call InitTrig_Player_1(  )
    call InitTrig_Player_2(  )
    call InitTrig_Player_3(  )
    call InitTrig_Player_4(  )
    call InitTrig_Player_5(  )
    call InitTrig_Player_6(  )
    call InitTrig_Player_7(  )
    call InitTrig_Player_8(  )
    call InitTrig_Set_Up_Leaderboard(  )
    call InitTrig_Update_Leaderboard(  )
    call InitTrig_Change_Value(  )
    call InitTrig_Playergroup(  )
    call InitTrig_Antistuck(  )
    call InitTrig_UpgBuildin(  )
    call InitTrig_Debug(  )
    call InitTrig_Help(  )
    call InitTrig_Start(  )
    call InitTrig_Start_Skipped(  )
    call InitTrig_StartSkipPress(  )
    call InitTrig_Invulnerable(  )
    call InitTrig_ArchersHoldPosition(  )
    call InitTrig_Melee_Initialization(  )
    call InitTrig_Quests(  )
    call InitTrig_Submarine_Violon_Tide_Configuration(  )
    call InitTrig_Submarine_Violon_Tide_Start(  )
    call InitTrig_Submarine_Violon_Tide_Loop(  )
    call InitTrig_Submarine_Violon_Tide_Loop2(  )
    call InitTrig_Dead_Scream_Init(  )
    call InitTrig_Dead_Scream_Cast(  )
    call InitTrig_Dead_Scream_Loop(  )
    call InitTrig_ini(  )
    call InitTrig_Sphere_Of_Timelessness_ini(  )
    call InitTrig_Sphere_Of_Timelessness_loop(  )
    call InitTrig_hsCast(  )
    call InitTrig_hsInterval(  )
    call InitTrig_Moon_Healing_Escalation_1(  )
    call InitTrig_Moon_Healing_Escalation_2(  )
    call InitTrig_Moon_Healing_Escalation_3(  )
    call InitTrig_Pink_Sugar_Heart_Attack_1(  )
    call InitTrig_Pink_Sugar_Heart_Attack_2(  )
    call InitTrig_Shine_Aqua_Illusion_Cast(  )
    call InitTrig_Shine_Aqua_Illusion_Effects(  )
    call InitTrig_Cane_Attack(  )
    call InitTrig_GUI_SpellEvent(  )
    call InitTrig_Abilities(  )
    call InitTrig_Orb_Cast(  )
    call InitTrig_Orb_Missile(  )
    call InitTrig_Heart_Missile(  )
    call InitTrig_Moon_Tiara_Action_Variables(  )
    call InitTrig_Moon_Tiara_Action_Cast(  )
    call InitTrig_Moon_Tiara_Action_Loop(  )
    call InitTrig_Deep_Submerge_Learn(  )
    call InitTrig_Deep_Submerge_Refresh_Buffs_for_lvl2(  )
    call InitTrig_Deep_Submerge_Refresh_Buffs_for_lvl3(  )
    call InitTrig_Deep_Submerge_Function(  )
    call InitTrig_Hide_SpellBook(  )
    call InitTrig_Settings(  )
    call InitTrig_Cast_Jupiter_Oak_Evolution(  )
    call InitTrig_Loop_Jupiter_Oak_Evolution(  )
    call InitTrig_Sparkling_Wide_Pressure(  )
    call InitTrig_Preload(  )
    call InitTrig_Supreme_Thunder_Dragon_Cast(  )
    call InitTrig_Supreme_Thunder_Dragon_Functions(  )
    call InitTrig_Burning_Mandala(  )
    call InitTrig_Tuxedo_Frenzy(  )
    call InitTrig_Tuxedo_Frenzy_End(  )
    call InitTrig_Luna_P_Attack(  )
    call InitTrig_Venus_Love_and_Beauty_Shock(  )
    call InitTrig_Rose_Attack(  )
    call InitTrig_Moon_Princess_Halation(  )
    call InitTrig_Moon_Princess_Halation_Add_Loop(  )
    call InitTrig_Moon_Princess_Halation_Lightning_Loop(  )
    call InitTrig_SSIExecute(  )
    call InitTrig_SSILoop(  )
    call InitTrig_Silence_Wall_Cast(  )
    call InitTrig_Silence_Wall(  )
    call InitTrig_Silence_Buster_Bolt_Cast(  )
    call InitTrig_Silence_Buster_Bolt_Loop(  )
    call InitTrig_Hashtable_Variables(  )
    call InitTrig_Star_Gentle_Uterus_Cast(  )
    call InitTrig_Star_Gentle_Uterus_Loop(  )
    call InitTrig_StarSeriousLaserIni(  )
    call InitTrig_StarSeriousLaserCast(  )
    call InitTrig_StarSeriousLaserLoop(  )
    call InitTrig_Mars_Flame_Sniper_Cast(  )
    call InitTrig_Mars_Flame_Sniper_Missile(  )
    call InitTrig_Ignite_Effects(  )
    call InitTrig_Mercury_Aqua_Mirage_Initialization(  )
    call InitTrig_Mercury_Aqua_Mirage_Execution(  )
    call InitTrig_Mercury_Aqua_Mirage(  )
    call InitTrig_DR_Setup(  )
    call InitTrig_DR_Cast(  )
    call InitTrig_DR_Loop(  )
    call InitTrig_Hide_SpellBook_Garnet_Ball_Damage_Aura(  )
    call InitTrig_Garnet_Ball_Protection_Cast(  )
    call InitTrig_Garnet_Ball_Protection_Finish(  )
    call InitTrig_Garnet_Ball_Protection_Stops(  )
    call InitTrig_Supreme_Thunder_Effect(  )
    call InitTrig_Supreme_Thunder_Dragon_Effect(  )
    call InitTrig_World_Shaking_Effect(  )
    call InitTrig_Deep_Submerge_Effect(  )
    call InitTrig_Moon_Gorgeous_Meditation_Effect(  )
    call InitTrig_Moon_Princess_Halation_Effect(  )
    call InitTrig_Silence_Glaive_Surprise_Effect(  )
    call InitTrig_Chronos_Typhoon_Effect(  )
    call InitTrig_Chronos_Typhoon_Effect_2(  )
    call InitTrig_Burning_Mandala_Effect(  )
    call InitTrig_Burning_Mandala_Effect_2(  )
    call InitTrig_Crescent_Beam_Effect(  )
    call InitTrig_Crescent_Beam_Effect_2(  )
    call InitTrig_Crescent_Beam_Shower_Effect(  )
    call InitTrig_Crescent_Beam_Shower_Effect_2(  )
    call InitTrig_Venus_Love_Me_Chain_Effect(  )
    call InitTrig_Venus_Love_Me_Chain_Effect_2(  )
    call InitTrig_Star_Spells_Effects(  )
    call InitTrig_Star_Spells_Effects_2(  )
    call InitTrig_Floating_Text(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Run_Abilities )
    call ConditionalTriggerExecute( gg_trg_SetHints )
    call ConditionalTriggerExecute( gg_trg_UpgBuildin )
    call ConditionalTriggerExecute( gg_trg_Start )
    call ConditionalTriggerExecute( gg_trg_ArchersHoldPosition )
    call ConditionalTriggerExecute( gg_trg_Melee_Initialization )
    call ConditionalTriggerExecute( gg_trg_Quests )
    call ConditionalTriggerExecute( gg_trg_Submarine_Violon_Tide_Configuration )
    call ConditionalTriggerExecute( gg_trg_Moon_Tiara_Action_Variables )
    call ConditionalTriggerExecute( gg_trg_Hide_SpellBook )
    call ConditionalTriggerExecute( gg_trg_Settings )
    call ConditionalTriggerExecute( gg_trg_Preload )
    call ConditionalTriggerExecute( gg_trg_Hashtable_Variables )
    call ConditionalTriggerExecute( gg_trg_StarSeriousLaserIni )
    call ConditionalTriggerExecute( gg_trg_Mercury_Aqua_Mirage_Initialization )
    call ConditionalTriggerExecute( gg_trg_DR_Setup )
    call ConditionalTriggerExecute( gg_trg_Hide_SpellBook_Garnet_Ball_Damage_Aura )
endfunction

//***************************************************************************
//*
//*  Upgrades
//*
//***************************************************************************

function InitUpgrades_Player0 takes nothing returns nothing
    call SetPlayerTechResearched( Player(0), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(0), 'Repb', 1 )
    call SetPlayerTechResearched( Player(0), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(0), 'Redt', 2 )
    call SetPlayerTechResearched( Player(0), 'Redc', 2 )
    call SetPlayerTechResearched( Player(0), 'Remg', 1 )
endfunction

function InitUpgrades_Player1 takes nothing returns nothing
    call SetPlayerTechResearched( Player(1), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(1), 'Repb', 1 )
    call SetPlayerTechResearched( Player(1), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(1), 'Redt', 2 )
    call SetPlayerTechResearched( Player(1), 'Redc', 2 )
    call SetPlayerTechResearched( Player(1), 'Remg', 1 )
endfunction

function InitUpgrades_Player2 takes nothing returns nothing
    call SetPlayerTechResearched( Player(2), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(2), 'Repb', 1 )
    call SetPlayerTechResearched( Player(2), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(2), 'Redt', 2 )
    call SetPlayerTechResearched( Player(2), 'Redc', 2 )
    call SetPlayerTechResearched( Player(2), 'Remg', 1 )
endfunction

function InitUpgrades_Player3 takes nothing returns nothing
    call SetPlayerTechResearched( Player(3), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(3), 'Repb', 1 )
    call SetPlayerTechResearched( Player(3), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(3), 'Redt', 2 )
    call SetPlayerTechResearched( Player(3), 'Redc', 2 )
    call SetPlayerTechResearched( Player(3), 'Remg', 1 )
endfunction

function InitUpgrades_Player4 takes nothing returns nothing
    call SetPlayerTechResearched( Player(4), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(4), 'Repb', 1 )
    call SetPlayerTechResearched( Player(4), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(4), 'Redt', 2 )
    call SetPlayerTechResearched( Player(4), 'Redc', 2 )
    call SetPlayerTechResearched( Player(4), 'Remg', 1 )
endfunction

function InitUpgrades_Player5 takes nothing returns nothing
    call SetPlayerTechResearched( Player(5), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(5), 'Repb', 1 )
    call SetPlayerTechResearched( Player(5), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(5), 'Redt', 2 )
    call SetPlayerTechResearched( Player(5), 'Redc', 2 )
    call SetPlayerTechResearched( Player(5), 'Remg', 1 )
endfunction

function InitUpgrades_Player6 takes nothing returns nothing
    call SetPlayerTechResearched( Player(6), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(6), 'Repb', 1 )
    call SetPlayerTechResearched( Player(6), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(6), 'Redt', 2 )
    call SetPlayerTechResearched( Player(6), 'Redc', 2 )
    call SetPlayerTechResearched( Player(6), 'Remg', 1 )
endfunction

function InitUpgrades_Player7 takes nothing returns nothing
    call SetPlayerTechResearched( Player(7), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(7), 'Repb', 1 )
    call SetPlayerTechResearched( Player(7), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(7), 'Redt', 2 )
    call SetPlayerTechResearched( Player(7), 'Redc', 2 )
    call SetPlayerTechResearched( Player(7), 'Remg', 1 )
endfunction

function InitUpgrades_Player9 takes nothing returns nothing
    call SetPlayerTechResearched( Player(9), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(9), 'Repb', 1 )
    call SetPlayerTechResearched( Player(9), 'Rema', 3 )
    call SetPlayerTechResearched( Player(9), 'Resm', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(9), 'Redt', 2 )
    call SetPlayerTechResearched( Player(9), 'Redc', 2 )
    call SetPlayerTechResearched( Player(9), 'Rome', 3 )
    call SetPlayerTechResearched( Player(9), 'Rora', 3 )
    call SetPlayerTechResearched( Player(9), 'Roar', 3 )
    call SetPlayerTechResearched( Player(9), 'Rume', 3 )
    call SetPlayerTechResearched( Player(9), 'Rura', 3 )
    call SetPlayerTechResearched( Player(9), 'Ruar', 3 )
    call SetPlayerTechResearched( Player(9), 'Resw', 3 )
    call SetPlayerTechResearched( Player(9), 'Rerh', 3 )
    call SetPlayerTechResearched( Player(9), 'Roch', 1 )
    call SetPlayerTechResearched( Player(9), 'Rwdm', 1 )
    call SetPlayerTechResearched( Player(9), 'Ropg', 1 )
    call SetPlayerTechResearched( Player(9), 'Robs', 1 )
    call SetPlayerTechResearched( Player(9), 'Rows', 1 )
    call SetPlayerTechResearched( Player(9), 'Rotr', 1 )
    call SetPlayerTechResearched( Player(9), 'Rosp', 3 )
    call SetPlayerTechResearched( Player(9), 'Rost', 2 )
    call SetPlayerTechResearched( Player(9), 'Rowd', 2 )
    call SetPlayerTechResearched( Player(9), 'Rovs', 1 )
    call SetPlayerTechResearched( Player(9), 'Roen', 1 )
    call SetPlayerTechResearched( Player(9), 'Remk', 1 )
    call SetPlayerTechResearched( Player(9), 'Reib', 1 )
    call SetPlayerTechResearched( Player(9), 'Remg', 1 )
    call SetPlayerTechResearched( Player(9), 'Rhme', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhra', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhhb', 1 )
    call SetPlayerTechResearched( Player(9), 'Rhar', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhgb', 1 )
    call SetPlayerTechResearched( Player(9), 'Rhac', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhde', 1 )
    call SetPlayerTechResearched( Player(9), 'Rhpt', 2 )
    call SetPlayerTechResearched( Player(9), 'Rhst', 2 )
    call SetPlayerTechResearched( Player(9), 'Rhla', 3 )
    call SetPlayerTechResearched( Player(9), 'Rhri', 1 )
endfunction

function InitUpgrades_Player10 takes nothing returns nothing
    call SetPlayerTechResearched( Player(10), 'Rhan', 1 )
    call SetPlayerTechResearched( Player(10), 'Repb', 1 )
    call SetPlayerTechResearched( Player(10), 'Rema', 3 )
    call SetPlayerTechResearched( Player(10), 'Resm', 3 )
    call SetPlayerTechResearched( Player(10), 'Rhlh', 2 )
    call SetPlayerTechResearched( Player(10), 'Redt', 2 )
    call SetPlayerTechResearched( Player(10), 'Redc', 2 )
    call SetPlayerTechResearched( Player(10), 'Rome', 3 )
    call SetPlayerTechResearched( Player(10), 'Rora', 3 )
    call SetPlayerTechResearched( Player(10), 'Roar', 3 )
    call SetPlayerTechResearched( Player(10), 'Rume', 3 )
    call SetPlayerTechResearched( Player(10), 'Rura', 3 )
    call SetPlayerTechResearched( Player(10), 'Ruar', 3 )
    call SetPlayerTechResearched( Player(10), 'Resw', 3 )
    call SetPlayerTechResearched( Player(10), 'Rerh', 3 )
    call SetPlayerTechResearched( Player(10), 'Roch', 1 )
    call SetPlayerTechResearched( Player(10), 'Rwdm', 1 )
    call SetPlayerTechResearched( Player(10), 'Ropg', 1 )
    call SetPlayerTechResearched( Player(10), 'Robs', 1 )
    call SetPlayerTechResearched( Player(10), 'Rows', 1 )
    call SetPlayerTechResearched( Player(10), 'Rotr', 1 )
    call SetPlayerTechResearched( Player(10), 'Rosp', 3 )
    call SetPlayerTechResearched( Player(10), 'Rost', 2 )
    call SetPlayerTechResearched( Player(10), 'Rowd', 2 )
    call SetPlayerTechResearched( Player(10), 'Rovs', 1 )
    call SetPlayerTechResearched( Player(10), 'Roen', 1 )
    call SetPlayerTechResearched( Player(10), 'Remk', 1 )
    call SetPlayerTechResearched( Player(10), 'Reib', 1 )
    call SetPlayerTechResearched( Player(10), 'Remg', 1 )
endfunction

function InitUpgrades takes nothing returns nothing
    call InitUpgrades_Player0(  )
    call InitUpgrades_Player1(  )
    call InitUpgrades_Player2(  )
    call InitUpgrades_Player3(  )
    call InitUpgrades_Player4(  )
    call InitUpgrades_Player5(  )
    call InitUpgrades_Player6(  )
    call InitUpgrades_Player7(  )
    call InitUpgrades_Player9(  )
    call InitUpgrades_Player10(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(1), false )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(2), false )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(3), false )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(4), false )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(5), false )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_USER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 7 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(7), false )
    call SetPlayerController( Player(7), MAP_CONTROL_USER )

    // Player 9
    call SetPlayerStartLocation( Player(9), 8 )
    call ForcePlayerStartLocation( Player(9), 8 )
    call SetPlayerColor( Player(9), ConvertPlayerColor(9) )
    call SetPlayerRacePreference( Player(9), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(9), false )
    call SetPlayerController( Player(9), MAP_CONTROL_COMPUTER )

    // Player 10
    call SetPlayerStartLocation( Player(10), 9 )
    call SetPlayerColor( Player(10), ConvertPlayerColor(10) )
    call SetPlayerRacePreference( Player(10), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(10), false )
    call SetPlayerController( Player(10), MAP_CONTROL_COMPUTER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_2471
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerState( Player(0), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerState( Player(1), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(2), 0 )
    call SetPlayerState( Player(2), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerState( Player(3), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerState( Player(4), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(5), 0 )
    call SetPlayerState( Player(5), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(6), 0 )
    call SetPlayerState( Player(6), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(7), 0 )
    call SetPlayerState( Player(7), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(9), 0 )
    call SetPlayerState( Player(9), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(7), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(7), true )

    // Force: TRIGSTR_1879
    call SetPlayerTeam( Player(10), 1 )
    call SetPlayerState( Player(10), PLAYER_STATE_ALLIED_VICTORY, 1 )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 1 )
    call SetStartLocPrio( 0, 0, 4, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 1, 1 )
    call SetStartLocPrio( 1, 0, 5, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 1 )
    call SetStartLocPrio( 2, 0, 6, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 3, 1 )
    call SetStartLocPrio( 3, 0, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 1 )
    call SetStartLocPrio( 4, 0, 0, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 5, 1 )
    call SetStartLocPrio( 5, 0, 1, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 6, 1 )
    call SetStartLocPrio( 6, 0, 2, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 7, 1 )
    call SetStartLocPrio( 7, 0, 3, MAP_LOC_PRIO_HIGH )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -3328.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -3712.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 11776.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 11392.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -3328.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 11392.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 11776.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -3712.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "CityScapeDay" )
    call SetAmbientNightSound( "CityScapeNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateCameras(  )
    call InitUpgrades(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_003" )
    call SetPlayers( 10 )
    call SetTeams( 10 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, 4096.0, 6208.0 )
    call DefineStartLocation( 1, 6272.0, 3008.0 )
    call DefineStartLocation( 2, 3072.0, 1088.0 )
    call DefineStartLocation( 3, 1088.0, 3008.0 )
    call DefineStartLocation( 4, 3072.0, 6208.0 )
    call DefineStartLocation( 5, 6272.0, 3968.0 )
    call DefineStartLocation( 6, 4032.0, 1088.0 )
    call DefineStartLocation( 7, 1088.0, 4096.0 )
    call DefineStartLocation( 8, 7616.0, -128.0 )
    call DefineStartLocation( 9, -256.0, 7488.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

